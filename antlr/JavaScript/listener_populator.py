from sys import argv

def main(file):
	init_string = ''

	# Get enter names
	enter_names = []
	with open(file, 'r') as f:
		for line in f:
			# Add rule count increment
			if '.prototype.enter' in line:
				# Get name of rule
				enter_name = (line.split('enter')[1]).split(' ')[0]
				enter_names.append(enter_name)

	with open(file, 'r') as f:
		for line in f:
			# Add line
			init_string += line

			# Initialize array and dictionary
			if "antlr4.tree.ParseTreeListener.call(this);" in line:
				init_string += '	this.arr = [];\n'
				init_string += '	this.dict = {};\n'
				# For each enter name, initialize value
				for enter_name in enter_names:
					name_string = '	this.dict["{}"] = 0;\n'.format(enter_name)
					init_string += name_string

			# Add rule count increment
			if '.prototype.enter' in line:
				# Get name of rule
				enter_name = (line.split('enter')[1]).split(' ')[0]
				# Generic incremental javascript code - Array
				increment_dict = """	this.arr.push(\"{}\");\n""".format(enter_name)
				init_string += increment_dict
				# Generic incremental javascript code - Dict
				increment_dict = """	this.dict["{}"] += 1;\n""".format(enter_name)
				init_string += increment_dict

	with open(file, 'w') as f:
		f.write(init_string)


if __name__ == "__main__":
	if len(argv) != 2:
		print("Usage: python3 listener_populator name_of_Listerner.js")
		exit()

	main(argv[1])