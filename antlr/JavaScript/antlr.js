// To Run:
// node antlr.js <File to Parse> <File to save token counts to> <File to save rule count rules to> <File to save rule order to>

// Antlr requirements
var antlr4 = require('antlr4');
var JavaScriptLexer = require('./JavaScriptLexer').JavaScriptLexer;
var JavaScriptParser = require('./JavaScriptParser').JavaScriptParser;
var JavaScriptParserListener = require('./JavaScriptParserListener').JavaScriptParserListener;
var ErrorListener = require('./error_listener/ErrorListener.js');

// Read in file specified by the first argument
var fs = require("fs");
var input = fs.readFileSync(process.argv[2]).toString();

var chars = new antlr4.InputStream(input);
var lexer = new JavaScriptLexer(chars);

var tokens  = new antlr4.CommonTokenStream(lexer);
var parser = new JavaScriptParser(tokens);
var listener = new ErrorListener();

/// NEW ERROR LISTENER ///
// Remove default ConsoleErrorListener
parser.removeErrorListeners();
// Add custom error listener
parser.addErrorListener(listener);
//////////////////////////

try {
   // Parse
   parser.buildParseTrees = true;
   var tree = parser.program(); // Starting rule

   // Listener
   var JSListener = new JavaScriptParserListener();
   // Walk abstract syntax tree
   antlr4.tree.ParseTreeWalker.DEFAULT.walk(JSListener, tree);
   // JSListener.dict contains rule usage counts

   // Token type to token name
   var token_type_to_name = {};
   var token_count = {}; // Count the number of times each token is used
   var token_array = []; // Get token order
   for(const name in JavaScriptLexer) {
      token_type_to_name[JavaScriptLexer[name]] = name;
      token_count[name] = 0;
   }
   // Get token counts
   for (const tok of tokens.tokens) {
      var token_name = token_type_to_name[tok.type];
      token_count[token_name] += 1;

      token_array.push(token_name);
   }

   // Save token, rule count, and rule order to json files
   var token_json = JSON.stringify(token_count);
   var token_count_json = JSON.stringify(token_array);
   var rule_count_json = JSON.stringify(JSListener.dict);
   var rule_order_json = JSON.stringify(JSListener.arr);
   fs.writeFile((process.argv[3]).toString(), token_json, 'utf8',function (err) {
      if (err) throw err;});
   fs.writeFile((process.argv[4]).toString(), rule_count_json, 'utf8', function (err) {
      if (err) throw err;});
   fs.writeFile((process.argv[5]).toString(), rule_order_json, 'utf8', function (err) {
      if (err) throw err;});
   fs.writeFile((process.argv[6]).toString(), token_count_json, 'utf8', function (err) {
      if (err) throw err;});
} catch (error) {
   // If fails at parsing, go here.
   //console.log(error);
}