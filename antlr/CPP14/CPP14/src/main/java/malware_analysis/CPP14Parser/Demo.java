package malware_analysis.CPP14Parser;
import java.io.PrintWriter;

import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.tree.*;
 
public class Demo 
{
    public static void main( String[] args )
    {
        ANTLRInputStream inputStream = new ANTLRInputStream(
            "#include <iostream> int main() {std::cout << \"test\" << std::endl; return 0;}");
        CPP14Lexer cpp14Lexer = new CPP14Lexer(inputStream);
        CommonTokenStream commonTokenStream = new CommonTokenStream(cpp14Lexer);
        CPP14Parser cpp14Parser = new CPP14Parser(commonTokenStream);
 
 		//*
        CPP14Parser.FileContext fileContext = cpp14Parser.file();                
        //CPP14Visitor visitor = new CPP14Visitor();   
        CPP14Visitor visitor = new CPP14Visitor(System.out);              
        visitor.visit(fileContext); 
        /*/
        /*
        parser = self.setup(path)
        tree = parser.file_input()
        listener = Python3Listener()
        walker = ParseTreeWalker()
        walker.walk(listener, tree)  
        */     
    }
}