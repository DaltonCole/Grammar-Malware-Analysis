digraph Tree {
node [shape=box] ;
0 [label="objectliteralexpression <= 0.5\ngini = 0.5\nsamples = 27000\nvalue = [13498, 13502]\nclass = Malicious"] ;
1 [label="memberindexexpression <= 0.5\ngini = 0.389\nsamples = 16258\nvalue = [4304, 11954]\nclass = Malicious"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="newexpression <= 0.5\ngini = 0.481\nsamples = 9685\nvalue = [3910, 5775]\nclass = Malicious"] ;
1 -> 2 ;
3 [label="statement <= 0.5\ngini = 0.498\nsamples = 7679\nvalue = [3614, 4065]\nclass = Malicious"] ;
2 -> 3 ;
4 [label="gini = 0.399\nsamples = 2575\nvalue = [709, 1866]\nclass = Malicious"] ;
3 -> 4 ;
5 [label="numericliteral <= 0.5\ngini = 0.49\nsamples = 5104\nvalue = [2905, 2199]\nclass = Benign"] ;
3 -> 5 ;
6 [label="expressionsequence <= 0.5\ngini = 0.37\nsamples = 2833\nvalue = [2138, 695]\nclass = Benign"] ;
5 -> 6 ;
7 [label="arguments <= 0.5\ngini = 0.498\nsamples = 900\nvalue = [425, 475]\nclass = Malicious"] ;
6 -> 7 ;
8 [label="gini = 0.0\nsamples = 408\nvalue = [408, 0]\nclass = Benign"] ;
7 -> 8 ;
9 [label="identifierexpression <= 0.5\ngini = 0.067\nsamples = 492\nvalue = [17, 475]\nclass = Malicious"] ;
7 -> 9 ;
10 [label="gini = 0.0\nsamples = 475\nvalue = [0, 475]\nclass = Malicious"] ;
9 -> 10 ;
11 [label="gini = 0.0\nsamples = 17\nvalue = [17, 0]\nclass = Benign"] ;
9 -> 11 ;
12 [label="assignmentexpression <= 0.5\ngini = 0.202\nsamples = 1933\nvalue = [1713, 220]\nclass = Benign"] ;
6 -> 12 ;
13 [label="functionbody <= 0.5\ngini = 0.276\nsamples = 1210\nvalue = [1010, 200]\nclass = Benign"] ;
12 -> 13 ;
14 [label="ifstatement <= 0.5\ngini = 0.377\nsamples = 741\nvalue = [554, 187]\nclass = Benign"] ;
13 -> 14 ;
15 [label="memberdotexpression <= 0.5\ngini = 0.404\nsamples = 666\nvalue = [479, 187]\nclass = Benign"] ;
14 -> 15 ;
16 [label="additiveexpression <= 0.5\ngini = 0.242\nsamples = 185\nvalue = [159, 26]\nclass = Benign"] ;
15 -> 16 ;
17 [label="assignmentoperatorexpression <= 0.5\ngini = 0.073\nsamples = 158\nvalue = [152, 6]\nclass = Benign"] ;
16 -> 17 ;
18 [label="gini = 0.0\nsamples = 152\nvalue = [152, 0]\nclass = Benign"] ;
17 -> 18 ;
19 [label="gini = 0.0\nsamples = 6\nvalue = [0, 6]\nclass = Malicious"] ;
17 -> 19 ;
20 [label="varmodifier <= 0.5\ngini = 0.384\nsamples = 27\nvalue = [7, 20]\nclass = Malicious"] ;
16 -> 20 ;
21 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
20 -> 21 ;
22 [label="gini = 0.0\nsamples = 20\nvalue = [0, 20]\nclass = Malicious"] ;
20 -> 22 ;
23 [label="arrayliteral <= 0.5\ngini = 0.445\nsamples = 481\nvalue = [320, 161]\nclass = Benign"] ;
15 -> 23 ;
24 [label="literal <= 0.5\ngini = 0.462\nsamples = 445\nvalue = [284, 161]\nclass = Benign"] ;
23 -> 24 ;
25 [label="gini = 0.0\nsamples = 18\nvalue = [18, 0]\nclass = Benign"] ;
24 -> 25 ;
26 [label="variabledeclarationlist <= 0.5\ngini = 0.47\nsamples = 427\nvalue = [266, 161]\nclass = Benign"] ;
24 -> 26 ;
27 [label="additiveexpression <= 0.5\ngini = 0.476\nsamples = 412\nvalue = [251, 161]\nclass = Benign"] ;
26 -> 27 ;
28 [label="logicalorexpression <= 0.5\ngini = 0.479\nsamples = 406\nvalue = [245, 161]\nclass = Benign"] ;
27 -> 28 ;
29 [label="ternaryexpression <= 0.5\ngini = 0.479\nsamples = 404\nvalue = [243, 161]\nclass = Benign"] ;
28 -> 29 ;
30 [label="logicalandexpression <= 0.5\ngini = 0.48\nsamples = 402\nvalue = [241, 161]\nclass = Benign"] ;
29 -> 30 ;
31 [label="assignmentoperator <= 0.5\ngini = 0.481\nsamples = 400\nvalue = [239, 161]\nclass = Benign"] ;
30 -> 31 ;
32 [label="trystatement <= 0.5\ngini = 0.481\nsamples = 399\nvalue = [238, 161]\nclass = Benign"] ;
31 -> 32 ;
33 [label="gini = 0.482\nsamples = 398\nvalue = [237, 161]\nclass = Benign"] ;
32 -> 33 ;
34 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
32 -> 34 ;
35 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
31 -> 35 ;
36 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
30 -> 36 ;
37 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
29 -> 37 ;
38 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
28 -> 38 ;
39 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
27 -> 39 ;
40 [label="gini = 0.0\nsamples = 15\nvalue = [15, 0]\nclass = Benign"] ;
26 -> 40 ;
41 [label="gini = 0.0\nsamples = 36\nvalue = [36, 0]\nclass = Benign"] ;
23 -> 41 ;
42 [label="gini = 0.0\nsamples = 75\nvalue = [75, 0]\nclass = Benign"] ;
14 -> 42 ;
43 [label="assignmentoperator <= 0.5\ngini = 0.054\nsamples = 469\nvalue = [456, 13]\nclass = Benign"] ;
13 -> 43 ;
44 [label="gini = 0.0\nsamples = 453\nvalue = [453, 0]\nclass = Benign"] ;
43 -> 44 ;
45 [label="returnstatement <= 0.5\ngini = 0.305\nsamples = 16\nvalue = [3, 13]\nclass = Malicious"] ;
43 -> 45 ;
46 [label="gini = 0.0\nsamples = 7\nvalue = [0, 7]\nclass = Malicious"] ;
45 -> 46 ;
47 [label="gini = 0.444\nsamples = 9\nvalue = [3, 6]\nclass = Malicious"] ;
45 -> 47 ;
48 [label="returnstatement <= 0.5\ngini = 0.054\nsamples = 723\nvalue = [703, 20]\nclass = Benign"] ;
12 -> 48 ;
49 [label="emptystatement <= 0.5\ngini = 0.025\nsamples = 697\nvalue = [688, 9]\nclass = Benign"] ;
48 -> 49 ;
50 [label="assignmentoperatorexpression <= 0.5\ngini = 0.017\nsamples = 692\nvalue = [686, 6]\nclass = Benign"] ;
49 -> 50 ;
51 [label="gini = 0.0\nsamples = 606\nvalue = [606, 0]\nclass = Benign"] ;
50 -> 51 ;
52 [label="identifiername <= 0.5\ngini = 0.13\nsamples = 86\nvalue = [80, 6]\nclass = Benign"] ;
50 -> 52 ;
53 [label="gini = 0.0\nsamples = 6\nvalue = [0, 6]\nclass = Malicious"] ;
52 -> 53 ;
54 [label="gini = 0.0\nsamples = 80\nvalue = [80, 0]\nclass = Benign"] ;
52 -> 54 ;
55 [label="formalparameterlist <= 0.5\ngini = 0.48\nsamples = 5\nvalue = [2, 3]\nclass = Malicious"] ;
49 -> 55 ;
56 [label="gini = 0.0\nsamples = 3\nvalue = [0, 3]\nclass = Malicious"] ;
55 -> 56 ;
57 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
55 -> 57 ;
58 [label="identifiername <= 0.5\ngini = 0.488\nsamples = 26\nvalue = [15, 11]\nclass = Benign"] ;
48 -> 58 ;
59 [label="gini = 0.0\nsamples = 11\nvalue = [0, 11]\nclass = Malicious"] ;
58 -> 59 ;
60 [label="gini = 0.0\nsamples = 15\nvalue = [15, 0]\nclass = Benign"] ;
58 -> 60 ;
61 [label="parenthesizedexpression <= 0.5\ngini = 0.447\nsamples = 2271\nvalue = [767, 1504]\nclass = Malicious"] ;
5 -> 61 ;
62 [label="argumentsexpression <= 0.5\ngini = 0.498\nsamples = 1337\nvalue = [711, 626]\nclass = Benign"] ;
61 -> 62 ;
63 [label="gini = 0.0\nsamples = 332\nvalue = [332, 0]\nclass = Benign"] ;
62 -> 63 ;
64 [label="functionbody <= 0.5\ngini = 0.47\nsamples = 1005\nvalue = [379, 626]\nclass = Malicious"] ;
62 -> 64 ;
65 [label="statementlist <= 0.5\ngini = 0.377\nsamples = 837\nvalue = [211, 626]\nclass = Malicious"] ;
64 -> 65 ;
66 [label="variablestatement <= 0.5\ngini = 0.336\nsamples = 796\nvalue = [170, 626]\nclass = Malicious"] ;
65 -> 66 ;
67 [label="equalityexpression <= 0.5\ngini = 0.462\nsamples = 397\nvalue = [144, 253]\nclass = Malicious"] ;
66 -> 67 ;
68 [label="identifiername <= 0.5\ngini = 0.497\nsamples = 266\nvalue = [144, 122]\nclass = Benign"] ;
67 -> 68 ;
69 [label="gini = 0.0\nsamples = 29\nvalue = [29, 0]\nclass = Benign"] ;
68 -> 69 ;
70 [label="additiveexpression <= 0.5\ngini = 0.5\nsamples = 237\nvalue = [115, 122]\nclass = Malicious"] ;
68 -> 70 ;
71 [label="logicalandexpression <= 0.5\ngini = 0.493\nsamples = 218\nvalue = [96, 122]\nclass = Malicious"] ;
70 -> 71 ;
72 [label="arrayliteral <= 0.5\ngini = 0.488\nsamples = 211\nvalue = [89, 122]\nclass = Malicious"] ;
71 -> 72 ;
73 [label="assignmentexpression <= 0.5\ngini = 0.482\nsamples = 205\nvalue = [83, 122]\nclass = Malicious"] ;
72 -> 73 ;
74 [label="gini = 0.477\nsamples = 201\nvalue = [79, 122]\nclass = Malicious"] ;
73 -> 74 ;
75 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
73 -> 75 ;
76 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
72 -> 76 ;
77 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
71 -> 77 ;
78 [label="gini = 0.0\nsamples = 19\nvalue = [19, 0]\nclass = Benign"] ;
70 -> 78 ;
79 [label="gini = 0.0\nsamples = 131\nvalue = [0, 131]\nclass = Malicious"] ;
67 -> 79 ;
80 [label="memberdotexpression <= 0.5\ngini = 0.122\nsamples = 399\nvalue = [26, 373]\nclass = Malicious"] ;
66 -> 80 ;
81 [label="gini = 0.0\nsamples = 10\nvalue = [10, 0]\nclass = Benign"] ;
80 -> 81 ;
82 [label="assignmentexpression <= 0.5\ngini = 0.079\nsamples = 389\nvalue = [16, 373]\nclass = Malicious"] ;
80 -> 82 ;
83 [label="multiplicativeexpression <= 0.5\ngini = 0.06\nsamples = 385\nvalue = [12, 373]\nclass = Malicious"] ;
82 -> 83 ;
84 [label="arrayliteralexpression <= 0.5\ngini = 0.041\nsamples = 381\nvalue = [8, 373]\nclass = Malicious"] ;
83 -> 84 ;
85 [label="thisexpression <= 0.5\ngini = 0.036\nsamples = 380\nvalue = [7, 373]\nclass = Malicious"] ;
84 -> 85 ;
86 [label="expressionstatement <= 0.5\ngini = 0.031\nsamples = 379\nvalue = [6, 373]\nclass = Malicious"] ;
85 -> 86 ;
87 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
86 -> 87 ;
88 [label="additiveexpression <= 0.5\ngini = 0.026\nsamples = 378\nvalue = [5, 373]\nclass = Malicious"] ;
86 -> 88 ;
89 [label="gini = 0.041\nsamples = 237\nvalue = [5, 232]\nclass = Malicious"] ;
88 -> 89 ;
90 [label="gini = 0.0\nsamples = 141\nvalue = [0, 141]\nclass = Malicious"] ;
88 -> 90 ;
91 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
85 -> 91 ;
92 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
84 -> 92 ;
93 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
83 -> 93 ;
94 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
82 -> 94 ;
95 [label="gini = 0.0\nsamples = 41\nvalue = [41, 0]\nclass = Benign"] ;
65 -> 95 ;
96 [label="gini = 0.0\nsamples = 168\nvalue = [168, 0]\nclass = Benign"] ;
64 -> 96 ;
97 [label="assignmentexpression <= 0.5\ngini = 0.113\nsamples = 934\nvalue = [56, 878]\nclass = Malicious"] ;
61 -> 97 ;
98 [label="gini = 0.0\nsamples = 42\nvalue = [42, 0]\nclass = Benign"] ;
97 -> 98 ;
99 [label="formalparameterarg <= 0.5\ngini = 0.031\nsamples = 892\nvalue = [14, 878]\nclass = Malicious"] ;
97 -> 99 ;
100 [label="logicalorexpression <= 0.5\ngini = 0.007\nsamples = 881\nvalue = [3, 878]\nclass = Malicious"] ;
99 -> 100 ;
101 [label="relationalexpression <= 0.5\ngini = 0.002\nsamples = 879\nvalue = [1, 878]\nclass = Malicious"] ;
100 -> 101 ;
102 [label="gini = 0.0\nsamples = 869\nvalue = [0, 869]\nclass = Malicious"] ;
101 -> 102 ;
103 [label="forvarstatement <= 0.5\ngini = 0.18\nsamples = 10\nvalue = [1, 9]\nclass = Malicious"] ;
101 -> 103 ;
104 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
103 -> 104 ;
105 [label="gini = 0.0\nsamples = 9\nvalue = [0, 9]\nclass = Malicious"] ;
103 -> 105 ;
106 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
100 -> 106 ;
107 [label="gini = 0.0\nsamples = 11\nvalue = [11, 0]\nclass = Benign"] ;
99 -> 107 ;
108 [label="assignmentexpression <= 0.5\ngini = 0.252\nsamples = 2006\nvalue = [296, 1710]\nclass = Malicious"] ;
2 -> 108 ;
109 [label="elementlist <= 0.5\ngini = 0.058\nsamples = 1762\nvalue = [53, 1709]\nclass = Malicious"] ;
108 -> 109 ;
110 [label="literalexpression <= 0.5\ngini = 0.041\nsamples = 1746\nvalue = [37, 1709]\nclass = Malicious"] ;
109 -> 110 ;
111 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
110 -> 111 ;
112 [label="expressionsequence <= 0.5\ngini = 0.026\nsamples = 1732\nvalue = [23, 1709]\nclass = Malicious"] ;
110 -> 112 ;
113 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
112 -> 113 ;
114 [label="variabledeclaration <= 0.5\ngini = 0.021\nsamples = 1727\nvalue = [18, 1709]\nclass = Malicious"] ;
112 -> 114 ;
115 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
114 -> 115 ;
116 [label="statementlist <= 0.5\ngini = 0.015\nsamples = 1722\nvalue = [13, 1709]\nclass = Malicious"] ;
114 -> 116 ;
117 [label="additiveexpression <= 0.5\ngini = 0.01\nsamples = 1717\nvalue = [9, 1708]\nclass = Malicious"] ;
116 -> 117 ;
118 [label="identifiername <= 0.5\ngini = 0.007\nsamples = 1711\nvalue = [6, 1705]\nclass = Malicious"] ;
117 -> 118 ;
119 [label="gini = 0.0\nsamples = 1094\nvalue = [0, 1094]\nclass = Malicious"] ;
118 -> 119 ;
120 [label="numericliteral <= 0.5\ngini = 0.019\nsamples = 617\nvalue = [6, 611]\nclass = Malicious"] ;
118 -> 120 ;
121 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
120 -> 121 ;
122 [label="equalityexpression <= 0.5\ngini = 0.01\nsamples = 614\nvalue = [3, 611]\nclass = Malicious"] ;
120 -> 122 ;
123 [label="gini = 0.42\nsamples = 10\nvalue = [3, 7]\nclass = Malicious"] ;
122 -> 123 ;
124 [label="gini = 0.0\nsamples = 604\nvalue = [0, 604]\nclass = Malicious"] ;
122 -> 124 ;
125 [label="numericliteral <= 0.5\ngini = 0.5\nsamples = 6\nvalue = [3, 3]\nclass = Benign"] ;
117 -> 125 ;
126 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
125 -> 126 ;
127 [label="gini = 0.0\nsamples = 3\nvalue = [0, 3]\nclass = Malicious"] ;
125 -> 127 ;
128 [label="parenthesizedexpression <= 0.5\ngini = 0.32\nsamples = 5\nvalue = [4, 1]\nclass = Benign"] ;
116 -> 128 ;
129 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
128 -> 129 ;
130 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
128 -> 130 ;
131 [label="gini = 0.0\nsamples = 16\nvalue = [16, 0]\nclass = Benign"] ;
109 -> 131 ;
132 [label="assignmentoperatorexpression <= 0.5\ngini = 0.008\nsamples = 244\nvalue = [243, 1]\nclass = Benign"] ;
108 -> 132 ;
133 [label="gini = 0.0\nsamples = 243\nvalue = [243, 0]\nclass = Benign"] ;
132 -> 133 ;
134 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
132 -> 134 ;
135 [label="arguments <= 0.5\ngini = 0.113\nsamples = 6573\nvalue = [394, 6179]\nclass = Malicious"] ;
1 -> 135 ;
136 [label="gini = 0.0\nsamples = 125\nvalue = [125, 0]\nclass = Benign"] ;
135 -> 136 ;
137 [label="logicalorexpression <= 0.5\ngini = 0.08\nsamples = 6448\nvalue = [269, 6179]\nclass = Malicious"] ;
135 -> 137 ;
138 [label="forvarinstatement <= 0.5\ngini = 0.063\nsamples = 6387\nvalue = [208, 6179]\nclass = Malicious"] ;
137 -> 138 ;
139 [label="deleteexpression <= 0.5\ngini = 0.046\nsamples = 6327\nvalue = [148, 6179]\nclass = Malicious"] ;
138 -> 139 ;
140 [label="ternaryexpression <= 0.5\ngini = 0.041\nsamples = 6312\nvalue = [133, 6179]\nclass = Malicious"] ;
139 -> 140 ;
141 [label="notexpression <= 0.5\ngini = 0.038\nsamples = 6301\nvalue = [122, 6179]\nclass = Malicious"] ;
140 -> 141 ;
142 [label="preincrementexpression <= 0.5\ngini = 0.035\nsamples = 6281\nvalue = [112, 6169]\nclass = Malicious"] ;
141 -> 142 ;
143 [label="elementlist <= 0.5\ngini = 0.034\nsamples = 6279\nvalue = [110, 6169]\nclass = Malicious"] ;
142 -> 143 ;
144 [label="assignmentexpression <= 0.5\ngini = 0.067\nsamples = 2750\nvalue = [96, 2654]\nclass = Malicious"] ;
143 -> 144 ;
145 [label="typeofexpression <= 0.5\ngini = 0.012\nsamples = 2307\nvalue = [14, 2293]\nclass = Malicious"] ;
144 -> 145 ;
146 [label="postincrementexpression <= 0.5\ngini = 0.011\nsamples = 2306\nvalue = [13, 2293]\nclass = Malicious"] ;
145 -> 146 ;
147 [label="multiplicativeexpression <= 0.5\ngini = 0.01\nsamples = 2285\nvalue = [11, 2274]\nclass = Malicious"] ;
146 -> 147 ;
148 [label="variabledeclarationlist <= 0.5\ngini = 0.009\nsamples = 2284\nvalue = [10, 2274]\nclass = Malicious"] ;
147 -> 148 ;
149 [label="newexpression <= 0.5\ngini = 0.034\nsamples = 466\nvalue = [8, 458]\nclass = Malicious"] ;
148 -> 149 ;
150 [label="functionexpression <= 0.5\ngini = 0.026\nsamples = 464\nvalue = [6, 458]\nclass = Malicious"] ;
149 -> 150 ;
151 [label="identifiername <= 0.5\ngini = 0.021\nsamples = 463\nvalue = [5, 458]\nclass = Malicious"] ;
150 -> 151 ;
152 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
151 -> 152 ;
153 [label="block <= 0.5\ngini = 0.017\nsamples = 462\nvalue = [4, 458]\nclass = Malicious"] ;
151 -> 153 ;
154 [label="numericliteral <= 0.5\ngini = 0.013\nsamples = 461\nvalue = [3, 458]\nclass = Malicious"] ;
153 -> 154 ;
155 [label="gini = 0.0\nsamples = 282\nvalue = [0, 282]\nclass = Malicious"] ;
154 -> 155 ;
156 [label="ifstatement <= 0.5\ngini = 0.033\nsamples = 179\nvalue = [3, 176]\nclass = Malicious"] ;
154 -> 156 ;
157 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
156 -> 157 ;
158 [label="gini = 0.0\nsamples = 176\nvalue = [0, 176]\nclass = Malicious"] ;
156 -> 158 ;
159 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
153 -> 159 ;
160 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
150 -> 160 ;
161 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
149 -> 161 ;
162 [label="returnstatement <= 0.5\ngini = 0.002\nsamples = 1818\nvalue = [2, 1816]\nclass = Malicious"] ;
148 -> 162 ;
163 [label="identifiername <= 0.5\ngini = 0.008\nsamples = 503\nvalue = [2, 501]\nclass = Malicious"] ;
162 -> 163 ;
164 [label="gini = 0.0\nsamples = 501\nvalue = [0, 501]\nclass = Malicious"] ;
163 -> 164 ;
165 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
163 -> 165 ;
166 [label="gini = 0.0\nsamples = 1315\nvalue = [0, 1315]\nclass = Malicious"] ;
162 -> 166 ;
167 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
147 -> 167 ;
168 [label="emptystatement <= 0.5\ngini = 0.172\nsamples = 21\nvalue = [2, 19]\nclass = Malicious"] ;
146 -> 168 ;
169 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
168 -> 169 ;
170 [label="gini = 0.0\nsamples = 19\nvalue = [0, 19]\nclass = Malicious"] ;
168 -> 170 ;
171 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
145 -> 171 ;
172 [label="relationalexpression <= 0.5\ngini = 0.302\nsamples = 443\nvalue = [82, 361]\nclass = Malicious"] ;
144 -> 172 ;
173 [label="thisexpression <= 0.5\ngini = 0.482\nsamples = 183\nvalue = [74, 109]\nclass = Malicious"] ;
172 -> 173 ;
174 [label="newexpression <= 0.5\ngini = 0.397\nsamples = 99\nvalue = [72, 27]\nclass = Benign"] ;
173 -> 174 ;
175 [label="gini = 0.0\nsamples = 64\nvalue = [64, 0]\nclass = Benign"] ;
174 -> 175 ;
176 [label="formalparameterlist <= 0.5\ngini = 0.353\nsamples = 35\nvalue = [8, 27]\nclass = Malicious"] ;
174 -> 176 ;
177 [label="assignmentoperator <= 0.5\ngini = 0.397\nsamples = 11\nvalue = [8, 3]\nclass = Benign"] ;
176 -> 177 ;
178 [label="parenthesizedexpression <= 0.5\ngini = 0.198\nsamples = 9\nvalue = [8, 1]\nclass = Benign"] ;
177 -> 178 ;
179 [label="memberdotexpression <= 0.5\ngini = 0.278\nsamples = 6\nvalue = [5, 1]\nclass = Benign"] ;
178 -> 179 ;
180 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
179 -> 180 ;
181 [label="variablestatement <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [2, 1]\nclass = Benign"] ;
179 -> 181 ;
182 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
181 -> 182 ;
183 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
181 -> 183 ;
184 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
178 -> 184 ;
185 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
177 -> 185 ;
186 [label="gini = 0.0\nsamples = 24\nvalue = [0, 24]\nclass = Malicious"] ;
176 -> 186 ;
187 [label="logicalandexpression <= 0.5\ngini = 0.046\nsamples = 84\nvalue = [2, 82]\nclass = Malicious"] ;
173 -> 187 ;
188 [label="formalparameterarg <= 0.5\ngini = 0.024\nsamples = 83\nvalue = [1, 82]\nclass = Malicious"] ;
187 -> 188 ;
189 [label="gini = 0.0\nsamples = 81\nvalue = [0, 81]\nclass = Malicious"] ;
188 -> 189 ;
190 [label="newexpression <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
188 -> 190 ;
191 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
190 -> 191 ;
192 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
190 -> 192 ;
193 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
187 -> 193 ;
194 [label="functionbody <= 0.5\ngini = 0.06\nsamples = 260\nvalue = [8, 252]\nclass = Malicious"] ;
172 -> 194 ;
195 [label="additiveexpression <= 0.5\ngini = 0.008\nsamples = 243\nvalue = [1, 242]\nclass = Malicious"] ;
194 -> 195 ;
196 [label="forstatement <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
195 -> 196 ;
197 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
196 -> 197 ;
198 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
196 -> 198 ;
199 [label="gini = 0.0\nsamples = 241\nvalue = [0, 241]\nclass = Malicious"] ;
195 -> 199 ;
200 [label="identifiername <= 0.5\ngini = 0.484\nsamples = 17\nvalue = [7, 10]\nclass = Malicious"] ;
194 -> 200 ;
201 [label="gini = 0.0\nsamples = 10\nvalue = [0, 10]\nclass = Malicious"] ;
200 -> 201 ;
202 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
200 -> 202 ;
203 [label="forstatement <= 0.5\ngini = 0.008\nsamples = 3529\nvalue = [14, 3515]\nclass = Malicious"] ;
143 -> 203 ;
204 [label="variabledeclaration <= 0.5\ngini = 0.007\nsamples = 3528\nvalue = [13, 3515]\nclass = Malicious"] ;
203 -> 204 ;
205 [label="memberdotexpression <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
204 -> 205 ;
206 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
205 -> 206 ;
207 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
205 -> 207 ;
208 [label="functionexpression <= 0.5\ngini = 0.007\nsamples = 3525\nvalue = [12, 3513]\nclass = Malicious"] ;
204 -> 208 ;
209 [label="gini = 0.0\nsamples = 2703\nvalue = [0, 2703]\nclass = Malicious"] ;
208 -> 209 ;
210 [label="returnstatement <= 0.5\ngini = 0.029\nsamples = 822\nvalue = [12, 810]\nclass = Malicious"] ;
208 -> 210 ;
211 [label="emptystatement <= 0.5\ngini = 0.209\nsamples = 101\nvalue = [12, 89]\nclass = Malicious"] ;
210 -> 211 ;
212 [label="gini = 0.0\nsamples = 12\nvalue = [12, 0]\nclass = Benign"] ;
211 -> 212 ;
213 [label="gini = 0.0\nsamples = 89\nvalue = [0, 89]\nclass = Malicious"] ;
211 -> 213 ;
214 [label="gini = 0.0\nsamples = 721\nvalue = [0, 721]\nclass = Malicious"] ;
210 -> 214 ;
215 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
203 -> 215 ;
216 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
142 -> 216 ;
217 [label="identifiername <= 0.5\ngini = 0.5\nsamples = 20\nvalue = [10, 10]\nclass = Benign"] ;
141 -> 217 ;
218 [label="gini = 0.0\nsamples = 10\nvalue = [0, 10]\nclass = Malicious"] ;
217 -> 218 ;
219 [label="gini = 0.0\nsamples = 10\nvalue = [10, 0]\nclass = Benign"] ;
217 -> 219 ;
220 [label="gini = 0.0\nsamples = 11\nvalue = [11, 0]\nclass = Benign"] ;
140 -> 220 ;
221 [label="gini = 0.0\nsamples = 15\nvalue = [15, 0]\nclass = Benign"] ;
139 -> 221 ;
222 [label="gini = 0.0\nsamples = 60\nvalue = [60, 0]\nclass = Benign"] ;
138 -> 222 ;
223 [label="gini = 0.0\nsamples = 61\nvalue = [61, 0]\nclass = Benign"] ;
137 -> 223 ;
224 [label="forstatement <= 0.5\ngini = 0.247\nsamples = 10742\nvalue = [9194, 1548]\nclass = Benign"] ;
0 -> 224 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
225 [label="bitshiftexpression <= 0.5\ngini = 0.012\nsamples = 9223\nvalue = [9166, 57]\nclass = Benign"] ;
224 -> 225 ;
226 [label="whilestatement <= 0.5\ngini = 0.001\nsamples = 9171\nvalue = [9166, 5]\nclass = Benign"] ;
225 -> 226 ;
227 [label="catchproduction <= 0.5\ngini = 0.001\nsamples = 9166\nvalue = [9163, 3]\nclass = Benign"] ;
226 -> 227 ;
228 [label="multiplicativeexpression <= 0.5\ngini = 0.0\nsamples = 9055\nvalue = [9054, 1]\nclass = Benign"] ;
227 -> 228 ;
229 [label="gini = 0.0\nsamples = 8969\nvalue = [8969, 0]\nclass = Benign"] ;
228 -> 229 ;
230 [label="propertyname <= 0.5\ngini = 0.023\nsamples = 86\nvalue = [85, 1]\nclass = Benign"] ;
228 -> 230 ;
231 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
230 -> 231 ;
232 [label="gini = 0.0\nsamples = 85\nvalue = [85, 0]\nclass = Benign"] ;
230 -> 232 ;
233 [label="memberdotexpression <= 0.5\ngini = 0.035\nsamples = 111\nvalue = [109, 2]\nclass = Benign"] ;
227 -> 233 ;
234 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
233 -> 234 ;
235 [label="gini = 0.0\nsamples = 109\nvalue = [109, 0]\nclass = Benign"] ;
233 -> 235 ;
236 [label="formalparameterlist <= 0.5\ngini = 0.48\nsamples = 5\nvalue = [3, 2]\nclass = Benign"] ;
226 -> 236 ;
237 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
236 -> 237 ;
238 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
236 -> 238 ;
239 [label="gini = 0.0\nsamples = 52\nvalue = [0, 52]\nclass = Malicious"] ;
225 -> 239 ;
240 [label="ifstatement <= 0.5\ngini = 0.036\nsamples = 1519\nvalue = [28, 1491]\nclass = Malicious"] ;
224 -> 240 ;
241 [label="gini = 0.0\nsamples = 1487\nvalue = [0, 1487]\nclass = Malicious"] ;
240 -> 241 ;
242 [label="bitshiftexpression <= 0.5\ngini = 0.219\nsamples = 32\nvalue = [28, 4]\nclass = Benign"] ;
240 -> 242 ;
243 [label="gini = 0.0\nsamples = 28\nvalue = [28, 0]\nclass = Benign"] ;
242 -> 243 ;
244 [label="gini = 0.0\nsamples = 4\nvalue = [0, 4]\nclass = Malicious"] ;
242 -> 244 ;
}
