digraph Tree {
node [shape=box] ;
0 [label="objectliteral <= 0.5\ngini = 0.5\nsamples = 27000\nvalue = [13537, 13463]\nclass = Benign"] ;
1 [label="numericliteral <= 0.5\ngini = 0.391\nsamples = 16270\nvalue = [4335, 11935]\nclass = Malicious"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="expressionstatement <= 0.5\ngini = 0.486\nsamples = 7328\nvalue = [3042, 4286]\nclass = Malicious"] ;
1 -> 2 ;
3 [label="arguments <= 0.5\ngini = 0.412\nsamples = 3982\nvalue = [1158, 2824]\nclass = Malicious"] ;
2 -> 3 ;
4 [label="expression_statement <= 0.5\ngini = 0.469\nsamples = 2990\nvalue = [1121, 1869]\nclass = Malicious"] ;
3 -> 4 ;
5 [label="gini = 0.398\nsamples = 2575\nvalue = [706, 1869]\nclass = Malicious"] ;
4 -> 5 ;
6 [label="gini = 0.0\nsamples = 415\nvalue = [415, 0]\nclass = Benign"] ;
4 -> 6 ;
7 [label="literal <= 0.5\ngini = 0.072\nsamples = 992\nvalue = [37, 955]\nclass = Malicious"] ;
3 -> 7 ;
8 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
7 -> 8 ;
9 [label="arrayliteral <= 0.5\ngini = 0.057\nsamples = 984\nvalue = [29, 955]\nclass = Malicious"] ;
7 -> 9 ;
10 [label="throwstatement <= 0.5\ngini = 0.05\nsamples = 980\nvalue = [25, 955]\nclass = Malicious"] ;
9 -> 10 ;
11 [label="expressionsequence <= 0.5\ngini = 0.048\nsamples = 979\nvalue = [24, 955]\nclass = Malicious"] ;
10 -> 11 ;
12 [label="identifiername <= 0.5\ngini = 0.093\nsamples = 492\nvalue = [24, 468]\nclass = Malicious"] ;
11 -> 12 ;
13 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
12 -> 13 ;
14 [label="gini = 0.089\nsamples = 491\nvalue = [23, 468]\nclass = Malicious"] ;
12 -> 14 ;
15 [label="gini = 0.0\nsamples = 487\nvalue = [0, 487]\nclass = Malicious"] ;
11 -> 15 ;
16 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
10 -> 16 ;
17 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
9 -> 17 ;
18 [label="varmodifier <= 0.5\ngini = 0.492\nsamples = 3346\nvalue = [1884, 1462]\nclass = Benign"] ;
2 -> 18 ;
19 [label="functionbody <= 0.5\ngini = 0.359\nsamples = 1877\nvalue = [1437, 440]\nclass = Benign"] ;
18 -> 19 ;
20 [label="identifiername <= 0.5\ngini = 0.427\nsamples = 1426\nvalue = [986, 440]\nclass = Benign"] ;
19 -> 20 ;
21 [label="gini = 0.0\nsamples = 347\nvalue = [347, 0]\nclass = Benign"] ;
20 -> 21 ;
22 [label="arguments <= 0.5\ngini = 0.483\nsamples = 1079\nvalue = [639, 440]\nclass = Benign"] ;
20 -> 22 ;
23 [label="gini = 0.0\nsamples = 162\nvalue = [162, 0]\nclass = Benign"] ;
22 -> 23 ;
24 [label="ifstatement <= 0.5\ngini = 0.499\nsamples = 917\nvalue = [477, 440]\nclass = Benign"] ;
22 -> 24 ;
25 [label="arrayliteral <= 0.5\ngini = 0.5\nsamples = 855\nvalue = [415, 440]\nclass = Malicious"] ;
24 -> 25 ;
26 [label="literal <= 0.5\ngini = 0.494\nsamples = 795\nvalue = [355, 440]\nclass = Malicious"] ;
25 -> 26 ;
27 [label="gini = 0.0\nsamples = 24\nvalue = [24, 0]\nclass = Benign"] ;
26 -> 27 ;
28 [label="block <= 0.5\ngini = 0.49\nsamples = 771\nvalue = [331, 440]\nclass = Malicious"] ;
26 -> 28 ;
29 [label="gini = 0.489\nsamples = 768\nvalue = [328, 440]\nclass = Malicious"] ;
28 -> 29 ;
30 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
28 -> 30 ;
31 [label="gini = 0.0\nsamples = 60\nvalue = [60, 0]\nclass = Benign"] ;
25 -> 31 ;
32 [label="gini = 0.0\nsamples = 62\nvalue = [62, 0]\nclass = Benign"] ;
24 -> 32 ;
33 [label="gini = 0.0\nsamples = 451\nvalue = [451, 0]\nclass = Benign"] ;
19 -> 33 ;
34 [label="identifiername <= 0.5\ngini = 0.423\nsamples = 1469\nvalue = [447, 1022]\nclass = Malicious"] ;
18 -> 34 ;
35 [label="arguments <= 0.5\ngini = 0.081\nsamples = 833\nvalue = [35, 798]\nclass = Malicious"] ;
34 -> 35 ;
36 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
35 -> 36 ;
37 [label="withstatement <= 0.5\ngini = 0.072\nsamples = 829\nvalue = [31, 798]\nclass = Malicious"] ;
35 -> 37 ;
38 [label="returnstatement <= 0.5\ngini = 0.07\nsamples = 828\nvalue = [30, 798]\nclass = Malicious"] ;
37 -> 38 ;
39 [label="assignmentoperator <= 0.5\ngini = 0.063\nsamples = 802\nvalue = [26, 776]\nclass = Malicious"] ;
38 -> 39 ;
40 [label="functionbody <= 0.5\ngini = 0.068\nsamples = 741\nvalue = [26, 715]\nclass = Malicious"] ;
39 -> 40 ;
41 [label="gini = 0.065\nsamples = 740\nvalue = [25, 715]\nclass = Malicious"] ;
40 -> 41 ;
42 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
40 -> 42 ;
43 [label="gini = 0.0\nsamples = 61\nvalue = [0, 61]\nclass = Malicious"] ;
39 -> 43 ;
44 [label="assignmentoperator <= 0.5\ngini = 0.26\nsamples = 26\nvalue = [4, 22]\nclass = Malicious"] ;
38 -> 44 ;
45 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
44 -> 45 ;
46 [label="gini = 0.153\nsamples = 24\nvalue = [2, 22]\nclass = Malicious"] ;
44 -> 46 ;
47 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
37 -> 47 ;
48 [label="returnstatement <= 0.5\ngini = 0.456\nsamples = 636\nvalue = [412, 224]\nclass = Benign"] ;
34 -> 48 ;
49 [label="elementlist <= 0.5\ngini = 0.015\nsamples = 397\nvalue = [394, 3]\nclass = Benign"] ;
48 -> 49 ;
50 [label="functionbody <= 0.5\ngini = 0.01\nsamples = 385\nvalue = [383, 2]\nclass = Benign"] ;
49 -> 50 ;
51 [label="assignmentoperator <= 0.5\ngini = 0.022\nsamples = 183\nvalue = [181, 2]\nclass = Benign"] ;
50 -> 51 ;
52 [label="arguments <= 0.5\ngini = 0.041\nsamples = 96\nvalue = [94, 2]\nclass = Benign"] ;
51 -> 52 ;
53 [label="gini = 0.0\nsamples = 27\nvalue = [27, 0]\nclass = Benign"] ;
52 -> 53 ;
54 [label="arrayliteral <= 0.5\ngini = 0.056\nsamples = 69\nvalue = [67, 2]\nclass = Benign"] ;
52 -> 54 ;
55 [label="catchproduction <= 0.5\ngini = 0.059\nsamples = 66\nvalue = [64, 2]\nclass = Benign"] ;
54 -> 55 ;
56 [label="ifstatement <= 0.5\ngini = 0.06\nsamples = 65\nvalue = [63, 2]\nclass = Benign"] ;
55 -> 56 ;
57 [label="gini = 0.064\nsamples = 30\nvalue = [29, 1]\nclass = Benign"] ;
56 -> 57 ;
58 [label="block <= 0.5\ngini = 0.056\nsamples = 35\nvalue = [34, 1]\nclass = Benign"] ;
56 -> 58 ;
59 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
58 -> 59 ;
60 [label="gini = 0.062\nsamples = 31\nvalue = [30, 1]\nclass = Benign"] ;
58 -> 60 ;
61 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
55 -> 61 ;
62 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
54 -> 62 ;
63 [label="gini = 0.0\nsamples = 87\nvalue = [87, 0]\nclass = Benign"] ;
51 -> 63 ;
64 [label="gini = 0.0\nsamples = 202\nvalue = [202, 0]\nclass = Benign"] ;
50 -> 64 ;
65 [label="statementlist <= 0.5\ngini = 0.153\nsamples = 12\nvalue = [11, 1]\nclass = Benign"] ;
49 -> 65 ;
66 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
65 -> 66 ;
67 [label="functionbody <= 0.5\ngini = 0.375\nsamples = 4\nvalue = [3, 1]\nclass = Benign"] ;
65 -> 67 ;
68 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
67 -> 68 ;
69 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
67 -> 69 ;
70 [label="ifstatement <= 0.5\ngini = 0.139\nsamples = 239\nvalue = [18, 221]\nclass = Malicious"] ;
48 -> 70 ;
71 [label="formalparameterlist <= 0.5\ngini = 0.083\nsamples = 231\nvalue = [10, 221]\nclass = Malicious"] ;
70 -> 71 ;
72 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
71 -> 72 ;
73 [label="gini = 0.067\nsamples = 229\nvalue = [8, 221]\nclass = Malicious"] ;
71 -> 73 ;
74 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
70 -> 74 ;
75 [label="expressionstatement <= 0.5\ngini = 0.247\nsamples = 8942\nvalue = [1293, 7649]\nclass = Malicious"] ;
1 -> 75 ;
76 [label="gini = 0.0\nsamples = 254\nvalue = [254, 0]\nclass = Benign"] ;
75 -> 76 ;
77 [label="variablestatement <= 0.5\ngini = 0.211\nsamples = 8688\nvalue = [1039, 7649]\nclass = Malicious"] ;
75 -> 77 ;
78 [label="returnstatement <= 0.5\ngini = 0.404\nsamples = 1424\nvalue = [400, 1024]\nclass = Malicious"] ;
77 -> 78 ;
79 [label="ifstatement <= 0.5\ngini = 0.488\nsamples = 928\nvalue = [392, 536]\nclass = Malicious"] ;
78 -> 79 ;
80 [label="arguments <= 0.5\ngini = 0.402\nsamples = 455\nvalue = [328, 127]\nclass = Benign"] ;
79 -> 80 ;
81 [label="gini = 0.0\nsamples = 98\nvalue = [98, 0]\nclass = Benign"] ;
80 -> 81 ;
82 [label="functionbody <= 0.5\ngini = 0.458\nsamples = 357\nvalue = [230, 127]\nclass = Benign"] ;
80 -> 82 ;
83 [label="identifiername <= 0.5\ngini = 0.499\nsamples = 265\nvalue = [138, 127]\nclass = Benign"] ;
82 -> 83 ;
84 [label="elementlist <= 0.5\ngini = 0.128\nsamples = 29\nvalue = [27, 2]\nclass = Benign"] ;
83 -> 84 ;
85 [label="gini = 0.0\nsamples = 27\nvalue = [27, 0]\nclass = Benign"] ;
84 -> 85 ;
86 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
84 -> 86 ;
87 [label="emptystatement <= 0.5\ngini = 0.498\nsamples = 236\nvalue = [111, 125]\nclass = Malicious"] ;
83 -> 87 ;
88 [label="arrayliteral <= 0.5\ngini = 0.49\nsamples = 219\nvalue = [94, 125]\nclass = Malicious"] ;
87 -> 88 ;
89 [label="assignmentoperator <= 0.5\ngini = 0.486\nsamples = 214\nvalue = [89, 125]\nclass = Malicious"] ;
88 -> 89 ;
90 [label="gini = 0.485\nsamples = 213\nvalue = [88, 125]\nclass = Malicious"] ;
89 -> 90 ;
91 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
89 -> 91 ;
92 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
88 -> 92 ;
93 [label="gini = 0.0\nsamples = 17\nvalue = [17, 0]\nclass = Benign"] ;
87 -> 93 ;
94 [label="gini = 0.0\nsamples = 92\nvalue = [92, 0]\nclass = Benign"] ;
82 -> 94 ;
95 [label="statementlist <= 0.5\ngini = 0.234\nsamples = 473\nvalue = [64, 409]\nclass = Malicious"] ;
79 -> 95 ;
96 [label="identifiername <= 0.5\ngini = 0.014\nsamples = 412\nvalue = [3, 409]\nclass = Malicious"] ;
95 -> 96 ;
97 [label="gini = 0.0\nsamples = 122\nvalue = [0, 122]\nclass = Malicious"] ;
96 -> 97 ;
98 [label="gini = 0.02\nsamples = 290\nvalue = [3, 287]\nclass = Malicious"] ;
96 -> 98 ;
99 [label="gini = 0.0\nsamples = 61\nvalue = [61, 0]\nclass = Benign"] ;
95 -> 99 ;
100 [label="identifiername <= 0.5\ngini = 0.032\nsamples = 496\nvalue = [8, 488]\nclass = Malicious"] ;
78 -> 100 ;
101 [label="gini = 0.0\nsamples = 488\nvalue = [0, 488]\nclass = Malicious"] ;
100 -> 101 ;
102 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
100 -> 102 ;
103 [label="arguments <= 0.5\ngini = 0.16\nsamples = 7264\nvalue = [639, 6625]\nclass = Malicious"] ;
77 -> 103 ;
104 [label="gini = 0.0\nsamples = 105\nvalue = [105, 0]\nclass = Benign"] ;
103 -> 104 ;
105 [label="elementlist <= 0.5\ngini = 0.138\nsamples = 7159\nvalue = [534, 6625]\nclass = Malicious"] ;
103 -> 105 ;
106 [label="returnstatement <= 0.5\ngini = 0.24\nsamples = 3372\nvalue = [471, 2901]\nclass = Malicious"] ;
105 -> 106 ;
107 [label="functionbody <= 0.5\ngini = 0.353\nsamples = 1516\nvalue = [347, 1169]\nclass = Malicious"] ;
106 -> 107 ;
108 [label="ifstatement <= 0.5\ngini = 0.212\nsamples = 1253\nvalue = [151, 1102]\nclass = Malicious"] ;
107 -> 108 ;
109 [label="emptystatement <= 0.5\ngini = 0.112\nsamples = 975\nvalue = [58, 917]\nclass = Malicious"] ;
108 -> 109 ;
110 [label="identifiername <= 0.5\ngini = 0.124\nsamples = 874\nvalue = [58, 816]\nclass = Malicious"] ;
109 -> 110 ;
111 [label="gini = 0.081\nsamples = 449\nvalue = [19, 430]\nclass = Malicious"] ;
110 -> 111 ;
112 [label="catchproduction <= 0.5\ngini = 0.167\nsamples = 425\nvalue = [39, 386]\nclass = Malicious"] ;
110 -> 112 ;
113 [label="statementlist <= 0.5\ngini = 0.164\nsamples = 422\nvalue = [38, 384]\nclass = Malicious"] ;
112 -> 113 ;
114 [label="assignmentoperator <= 0.5\ngini = 0.162\nsamples = 416\nvalue = [37, 379]\nclass = Malicious"] ;
113 -> 114 ;
115 [label="gini = 0.166\nsamples = 405\nvalue = [37, 368]\nclass = Malicious"] ;
114 -> 115 ;
116 [label="gini = 0.0\nsamples = 11\nvalue = [0, 11]\nclass = Malicious"] ;
114 -> 116 ;
117 [label="arrayliteral <= 0.5\ngini = 0.278\nsamples = 6\nvalue = [1, 5]\nclass = Malicious"] ;
113 -> 117 ;
118 [label="gini = 0.32\nsamples = 5\nvalue = [1, 4]\nclass = Malicious"] ;
117 -> 118 ;
119 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
117 -> 119 ;
120 [label="gini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
112 -> 120 ;
121 [label="gini = 0.0\nsamples = 101\nvalue = [0, 101]\nclass = Malicious"] ;
109 -> 121 ;
122 [label="do_for_while_statement <= 0.5\ngini = 0.445\nsamples = 278\nvalue = [93, 185]\nclass = Malicious"] ;
108 -> 122 ;
123 [label="block <= 0.5\ngini = 0.251\nsamples = 197\nvalue = [29, 168]\nclass = Malicious"] ;
122 -> 123 ;
124 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
123 -> 124 ;
125 [label="assignmentoperator <= 0.5\ngini = 0.219\nsamples = 192\nvalue = [24, 168]\nclass = Malicious"] ;
123 -> 125 ;
126 [label="catchproduction <= 0.5\ngini = 0.198\nsamples = 189\nvalue = [21, 168]\nclass = Malicious"] ;
125 -> 126 ;
127 [label="emptystatement <= 0.5\ngini = 0.19\nsamples = 188\nvalue = [20, 168]\nclass = Malicious"] ;
126 -> 127 ;
128 [label="gini = 0.183\nsamples = 187\nvalue = [19, 168]\nclass = Malicious"] ;
127 -> 128 ;
129 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
127 -> 129 ;
130 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
126 -> 130 ;
131 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
125 -> 131 ;
132 [label="emptystatement <= 0.5\ngini = 0.332\nsamples = 81\nvalue = [64, 17]\nclass = Benign"] ;
122 -> 132 ;
133 [label="gini = 0.0\nsamples = 64\nvalue = [64, 0]\nclass = Benign"] ;
132 -> 133 ;
134 [label="gini = 0.0\nsamples = 17\nvalue = [0, 17]\nclass = Malicious"] ;
132 -> 134 ;
135 [label="emptystatement <= 0.5\ngini = 0.38\nsamples = 263\nvalue = [196, 67]\nclass = Benign"] ;
107 -> 135 ;
136 [label="formalparameterarg <= 0.5\ngini = 0.093\nsamples = 205\nvalue = [195, 10]\nclass = Benign"] ;
135 -> 136 ;
137 [label="gini = 0.0\nsamples = 138\nvalue = [138, 0]\nclass = Benign"] ;
136 -> 137 ;
138 [label="block <= 0.5\ngini = 0.254\nsamples = 67\nvalue = [57, 10]\nclass = Benign"] ;
136 -> 138 ;
139 [label="arrayliteral <= 0.5\ngini = 0.494\nsamples = 18\nvalue = [8, 10]\nclass = Malicious"] ;
138 -> 139 ;
140 [label="gini = 0.484\nsamples = 17\nvalue = [7, 10]\nclass = Malicious"] ;
139 -> 140 ;
141 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
139 -> 141 ;
142 [label="gini = 0.0\nsamples = 49\nvalue = [49, 0]\nclass = Benign"] ;
138 -> 142 ;
143 [label="catchproduction <= 0.5\ngini = 0.034\nsamples = 58\nvalue = [1, 57]\nclass = Malicious"] ;
135 -> 143 ;
144 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
143 -> 144 ;
145 [label="gini = 0.0\nsamples = 57\nvalue = [0, 57]\nclass = Malicious"] ;
143 -> 145 ;
146 [label="statementlist <= 0.5\ngini = 0.125\nsamples = 1856\nvalue = [124, 1732]\nclass = Malicious"] ;
106 -> 146 ;
147 [label="formalparameterarg <= 0.5\ngini = 0.027\nsamples = 874\nvalue = [12, 862]\nclass = Malicious"] ;
146 -> 147 ;
148 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
147 -> 148 ;
149 [label="ifstatement <= 0.5\ngini = 0.025\nsamples = 873\nvalue = [11, 862]\nclass = Malicious"] ;
147 -> 149 ;
150 [label="gini = 0.0\nsamples = 10\nvalue = [0, 10]\nclass = Malicious"] ;
149 -> 150 ;
151 [label="gini = 0.025\nsamples = 863\nvalue = [11, 852]\nclass = Malicious"] ;
149 -> 151 ;
152 [label="identifiername <= 0.5\ngini = 0.202\nsamples = 982\nvalue = [112, 870]\nclass = Malicious"] ;
146 -> 152 ;
153 [label="gini = 0.0\nsamples = 251\nvalue = [0, 251]\nclass = Malicious"] ;
152 -> 153 ;
154 [label="do_for_while_statement <= 0.5\ngini = 0.259\nsamples = 731\nvalue = [112, 619]\nclass = Malicious"] ;
152 -> 154 ;
155 [label="formalparameterlist <= 0.5\ngini = 0.245\nsamples = 719\nvalue = [103, 616]\nclass = Malicious"] ;
154 -> 155 ;
156 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
155 -> 156 ;
157 [label="arrayliteral <= 0.5\ngini = 0.24\nsamples = 716\nvalue = [100, 616]\nclass = Malicious"] ;
155 -> 157 ;
158 [label="emptystatement <= 0.5\ngini = 0.239\nsamples = 715\nvalue = [99, 616]\nclass = Malicious"] ;
157 -> 158 ;
159 [label="gini = 0.237\nsamples = 713\nvalue = [98, 615]\nclass = Malicious"] ;
158 -> 159 ;
160 [label="trystatement <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
158 -> 160 ;
161 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
160 -> 161 ;
162 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
160 -> 162 ;
163 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
157 -> 163 ;
164 [label="catchproduction <= 0.5\ngini = 0.375\nsamples = 12\nvalue = [9, 3]\nclass = Benign"] ;
154 -> 164 ;
165 [label="assignmentoperator <= 0.5\ngini = 0.18\nsamples = 10\nvalue = [9, 1]\nclass = Benign"] ;
164 -> 165 ;
166 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
165 -> 166 ;
167 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
165 -> 167 ;
168 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
164 -> 168 ;
169 [label="functionbody <= 0.5\ngini = 0.033\nsamples = 3787\nvalue = [63, 3724]\nclass = Malicious"] ;
105 -> 169 ;
170 [label="do_for_while_statement <= 0.5\ngini = 0.001\nsamples = 2902\nvalue = [2, 2900]\nclass = Malicious"] ;
169 -> 170 ;
171 [label="ifstatement <= 0.5\ngini = 0.003\nsamples = 1290\nvalue = [2, 1288]\nclass = Malicious"] ;
170 -> 171 ;
172 [label="identifiername <= 0.5\ngini = 0.133\nsamples = 14\nvalue = [1, 13]\nclass = Malicious"] ;
171 -> 172 ;
173 [label="gini = 0.0\nsamples = 13\nvalue = [0, 13]\nclass = Malicious"] ;
172 -> 173 ;
174 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
172 -> 174 ;
175 [label="block <= 0.5\ngini = 0.002\nsamples = 1276\nvalue = [1, 1275]\nclass = Malicious"] ;
171 -> 175 ;
176 [label="gini = 0.0\nsamples = 760\nvalue = [0, 760]\nclass = Malicious"] ;
175 -> 176 ;
177 [label="emptystatement <= 0.5\ngini = 0.004\nsamples = 516\nvalue = [1, 515]\nclass = Malicious"] ;
175 -> 177 ;
178 [label="identifiername <= 0.5\ngini = 0.008\nsamples = 242\nvalue = [1, 241]\nclass = Malicious"] ;
177 -> 178 ;
179 [label="gini = 0.0\nsamples = 23\nvalue = [0, 23]\nclass = Malicious"] ;
178 -> 179 ;
180 [label="caseclauses <= 0.5\ngini = 0.009\nsamples = 219\nvalue = [1, 218]\nclass = Malicious"] ;
178 -> 180 ;
181 [label="gini = 0.009\nsamples = 215\nvalue = [1, 214]\nclass = Malicious"] ;
180 -> 181 ;
182 [label="gini = 0.0\nsamples = 4\nvalue = [0, 4]\nclass = Malicious"] ;
180 -> 182 ;
183 [label="gini = 0.0\nsamples = 274\nvalue = [0, 274]\nclass = Malicious"] ;
177 -> 183 ;
184 [label="gini = 0.0\nsamples = 1612\nvalue = [0, 1612]\nclass = Malicious"] ;
170 -> 184 ;
185 [label="returnstatement <= 0.5\ngini = 0.128\nsamples = 885\nvalue = [61, 824]\nclass = Malicious"] ;
169 -> 185 ;
186 [label="catchproduction <= 0.5\ngini = 0.477\nsamples = 145\nvalue = [57, 88]\nclass = Malicious"] ;
185 -> 186 ;
187 [label="gini = 0.0\nsamples = 57\nvalue = [57, 0]\nclass = Benign"] ;
186 -> 187 ;
188 [label="gini = 0.0\nsamples = 88\nvalue = [0, 88]\nclass = Malicious"] ;
186 -> 188 ;
189 [label="identifiername <= 0.5\ngini = 0.011\nsamples = 740\nvalue = [4, 736]\nclass = Malicious"] ;
185 -> 189 ;
190 [label="gini = 0.0\nsamples = 527\nvalue = [0, 527]\nclass = Malicious"] ;
189 -> 190 ;
191 [label="assignmentoperator <= 0.5\ngini = 0.037\nsamples = 213\nvalue = [4, 209]\nclass = Malicious"] ;
189 -> 191 ;
192 [label="formalparameterarg <= 0.5\ngini = 0.49\nsamples = 7\nvalue = [3, 4]\nclass = Malicious"] ;
191 -> 192 ;
193 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
192 -> 193 ;
194 [label="ifstatement <= 0.5\ngini = 0.32\nsamples = 5\nvalue = [1, 4]\nclass = Malicious"] ;
192 -> 194 ;
195 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
194 -> 195 ;
196 [label="gini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
194 -> 196 ;
197 [label="formalparameterlist <= 0.5\ngini = 0.01\nsamples = 206\nvalue = [1, 205]\nclass = Malicious"] ;
191 -> 197 ;
198 [label="gini = 0.0\nsamples = 205\nvalue = [0, 205]\nclass = Malicious"] ;
197 -> 198 ;
199 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
197 -> 199 ;
200 [label="do_for_while_statement <= 0.5\ngini = 0.244\nsamples = 10730\nvalue = [9202, 1528]\nclass = Benign"] ;
0 -> 200 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
201 [label="trystatement <= 0.5\ngini = 0.001\nsamples = 8977\nvalue = [8974, 3]\nclass = Benign"] ;
200 -> 201 ;
202 [label="gini = 0.0\nsamples = 8870\nvalue = [8870, 0]\nclass = Benign"] ;
201 -> 202 ;
203 [label="functionbody <= 0.5\ngini = 0.055\nsamples = 107\nvalue = [104, 3]\nclass = Benign"] ;
201 -> 203 ;
204 [label="arrayliteral <= 0.5\ngini = 0.1\nsamples = 57\nvalue = [54, 3]\nclass = Benign"] ;
203 -> 204 ;
205 [label="variablestatement <= 0.5\ngini = 0.278\nsamples = 12\nvalue = [10, 2]\nclass = Benign"] ;
204 -> 205 ;
206 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
205 -> 206 ;
207 [label="ifstatement <= 0.5\ngini = 0.48\nsamples = 5\nvalue = [3, 2]\nclass = Benign"] ;
205 -> 207 ;
208 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
207 -> 208 ;
209 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
207 -> 209 ;
210 [label="ifstatement <= 0.5\ngini = 0.043\nsamples = 45\nvalue = [44, 1]\nclass = Benign"] ;
204 -> 210 ;
211 [label="gini = 0.0\nsamples = 22\nvalue = [22, 0]\nclass = Benign"] ;
210 -> 211 ;
212 [label="variablestatement <= 0.5\ngini = 0.083\nsamples = 23\nvalue = [22, 1]\nclass = Benign"] ;
210 -> 212 ;
213 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
212 -> 213 ;
214 [label="elementlist <= 0.5\ngini = 0.124\nsamples = 15\nvalue = [14, 1]\nclass = Benign"] ;
212 -> 214 ;
215 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
214 -> 215 ;
216 [label="gini = 0.133\nsamples = 14\nvalue = [13, 1]\nclass = Benign"] ;
214 -> 216 ;
217 [label="gini = 0.0\nsamples = 50\nvalue = [50, 0]\nclass = Benign"] ;
203 -> 217 ;
218 [label="identifiername <= 0.5\ngini = 0.226\nsamples = 1753\nvalue = [228, 1525]\nclass = Malicious"] ;
200 -> 218 ;
219 [label="gini = 0.0\nsamples = 1469\nvalue = [0, 1469]\nclass = Malicious"] ;
218 -> 219 ;
220 [label="catchproduction <= 0.5\ngini = 0.317\nsamples = 284\nvalue = [228, 56]\nclass = Benign"] ;
218 -> 220 ;
221 [label="gini = 0.0\nsamples = 204\nvalue = [204, 0]\nclass = Benign"] ;
220 -> 221 ;
222 [label="assignmentoperator <= 0.5\ngini = 0.42\nsamples = 80\nvalue = [24, 56]\nclass = Malicious"] ;
220 -> 222 ;
223 [label="arrayliteral <= 0.5\ngini = 0.432\nsamples = 19\nvalue = [13, 6]\nclass = Benign"] ;
222 -> 223 ;
224 [label="gini = 0.0\nsamples = 6\nvalue = [0, 6]\nclass = Malicious"] ;
223 -> 224 ;
225 [label="gini = 0.0\nsamples = 13\nvalue = [13, 0]\nclass = Benign"] ;
223 -> 225 ;
226 [label="defaultclause <= 0.5\ngini = 0.296\nsamples = 61\nvalue = [11, 50]\nclass = Malicious"] ;
222 -> 226 ;
227 [label="breakstatement <= 0.5\ngini = 0.431\nsamples = 35\nvalue = [11, 24]\nclass = Malicious"] ;
226 -> 227 ;
228 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
227 -> 228 ;
229 [label="emptystatement <= 0.5\ngini = 0.198\nsamples = 27\nvalue = [3, 24]\nclass = Malicious"] ;
227 -> 229 ;
230 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
229 -> 230 ;
231 [label="gini = 0.0\nsamples = 24\nvalue = [0, 24]\nclass = Malicious"] ;
229 -> 231 ;
232 [label="gini = 0.0\nsamples = 26\nvalue = [0, 26]\nclass = Malicious"] ;
226 -> 232 ;
}
