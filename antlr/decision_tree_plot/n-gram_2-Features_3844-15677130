digraph Tree {
node [shape=box] ;
0 [label="expression_statement-objectliteral <= 0.5\ngini = 0.5\nsamples = 27000\nvalue = [13506, 13494]\nclass = Benign"] ;
1 [label="literal-arguments <= 0.5\ngini = 0.389\nsamples = 16241\nvalue = [4289, 11952]\nclass = Malicious"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="identifiername-identifiername <= 0.5\ngini = 0.472\nsamples = 11201\nvalue = [4285, 6916]\nclass = Malicious"] ;
1 -> 2 ;
3 [label="expression_statement-arguments <= 0.5\ngini = 0.435\nsamples = 10158\nvalue = [3249, 6909]\nclass = Malicious"] ;
2 -> 3 ;
4 [label="expression_statement-identifiername <= 0.5\ngini = 0.494\nsamples = 5513\nvalue = [2446, 3067]\nclass = Malicious"] ;
3 -> 4 ;
5 [label="statement-variablestatement <= 0.5\ngini = 0.464\nsamples = 4482\nvalue = [1640, 2842]\nclass = Malicious"] ;
4 -> 5 ;
6 [label="functionbody-sourceelements <= 0.5\ngini = 0.394\nsamples = 3249\nvalue = [878, 2371]\nclass = Malicious"] ;
5 -> 6 ;
7 [label="expressionsequence-expression_statement <= 0.5\ngini = 0.434\nsamples = 2758\nvalue = [878, 1880]\nclass = Malicious"] ;
6 -> 7 ;
8 [label="gini = 0.396\nsamples = 2579\nvalue = [700, 1879]\nclass = Malicious"] ;
7 -> 8 ;
9 [label="literal-expressionsequence <= 0.5\ngini = 0.011\nsamples = 179\nvalue = [178, 1]\nclass = Benign"] ;
7 -> 9 ;
10 [label="gini = 0.0\nsamples = 178\nvalue = [178, 0]\nclass = Benign"] ;
9 -> 10 ;
11 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
9 -> 11 ;
12 [label="gini = 0.0\nsamples = 491\nvalue = [0, 491]\nclass = Malicious"] ;
6 -> 12 ;
13 [label="arguments-expression_statement <= 0.5\ngini = 0.472\nsamples = 1233\nvalue = [762, 471]\nclass = Benign"] ;
5 -> 13 ;
14 [label="gini = 0.0\nsamples = 761\nvalue = [761, 0]\nclass = Benign"] ;
13 -> 14 ;
15 [label="literal-expression_statement <= 0.5\ngini = 0.004\nsamples = 472\nvalue = [1, 471]\nclass = Malicious"] ;
13 -> 15 ;
16 [label="gini = 0.0\nsamples = 465\nvalue = [0, 465]\nclass = Malicious"] ;
15 -> 16 ;
17 [label="statement-expressionstatement <= 0.5\ngini = 0.245\nsamples = 7\nvalue = [1, 6]\nclass = Malicious"] ;
15 -> 17 ;
18 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
17 -> 18 ;
19 [label="gini = 0.0\nsamples = 6\nvalue = [0, 6]\nclass = Malicious"] ;
17 -> 19 ;
20 [label="numericliteral-eos <= 0.5\ngini = 0.341\nsamples = 1031\nvalue = [806, 225]\nclass = Benign"] ;
4 -> 20 ;
21 [label="gini = 0.0\nsamples = 629\nvalue = [629, 0]\nclass = Benign"] ;
20 -> 21 ;
22 [label="varmodifier-variabledeclarationlist <= 0.5\ngini = 0.493\nsamples = 402\nvalue = [177, 225]\nclass = Malicious"] ;
20 -> 22 ;
23 [label="gini = 0.0\nsamples = 143\nvalue = [143, 0]\nclass = Benign"] ;
22 -> 23 ;
24 [label="identifiername-expression_statement <= 0.5\ngini = 0.228\nsamples = 259\nvalue = [34, 225]\nclass = Malicious"] ;
22 -> 24 ;
25 [label="literal-expression_statement <= 0.5\ngini = 0.131\nsamples = 242\nvalue = [17, 225]\nclass = Malicious"] ;
24 -> 25 ;
26 [label="statement-expressionstatement <= 0.5\ngini = 0.026\nsamples = 228\nvalue = [3, 225]\nclass = Malicious"] ;
25 -> 26 ;
27 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
26 -> 27 ;
28 [label="gini = 0.0\nsamples = 225\nvalue = [0, 225]\nclass = Malicious"] ;
26 -> 28 ;
29 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
25 -> 29 ;
30 [label="gini = 0.0\nsamples = 17\nvalue = [17, 0]\nclass = Benign"] ;
24 -> 30 ;
31 [label="variabledeclaration-expression_statement <= 0.5\ngini = 0.286\nsamples = 4645\nvalue = [803, 3842]\nclass = Malicious"] ;
3 -> 31 ;
32 [label="literal-expression_statement <= 0.5\ngini = 0.481\nsamples = 1053\nvalue = [629, 424]\nclass = Benign"] ;
31 -> 32 ;
33 [label="expression_statement-eos <= 0.5\ngini = 0.439\nsamples = 628\nvalue = [204, 424]\nclass = Malicious"] ;
32 -> 33 ;
34 [label="arguments-identifiername <= 0.5\ngini = 0.499\nsamples = 358\nvalue = [188, 170]\nclass = Benign"] ;
33 -> 34 ;
35 [label="gini = 0.0\nsamples = 178\nvalue = [178, 0]\nclass = Benign"] ;
34 -> 35 ;
36 [label="arguments-eos <= 0.5\ngini = 0.105\nsamples = 180\nvalue = [10, 170]\nclass = Malicious"] ;
34 -> 36 ;
37 [label="functionbody-sourceelements <= 0.5\ngini = 0.023\nsamples = 172\nvalue = [2, 170]\nclass = Malicious"] ;
36 -> 37 ;
38 [label="gini = 0.0\nsamples = 170\nvalue = [0, 170]\nclass = Malicious"] ;
37 -> 38 ;
39 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
37 -> 39 ;
40 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
36 -> 40 ;
41 [label="expression_statement-functionbody <= 0.5\ngini = 0.111\nsamples = 270\nvalue = [16, 254]\nclass = Malicious"] ;
33 -> 41 ;
42 [label="gini = 0.0\nsamples = 254\nvalue = [0, 254]\nclass = Malicious"] ;
41 -> 42 ;
43 [label="gini = 0.0\nsamples = 16\nvalue = [16, 0]\nclass = Benign"] ;
41 -> 43 ;
44 [label="gini = 0.0\nsamples = 425\nvalue = [425, 0]\nclass = Benign"] ;
32 -> 44 ;
45 [label="expression_statement-functionbody <= 0.5\ngini = 0.092\nsamples = 3592\nvalue = [174, 3418]\nclass = Malicious"] ;
31 -> 45 ;
46 [label="statement-expressionstatement <= 0.5\ngini = 0.051\nsamples = 3346\nvalue = [88, 3258]\nclass = Malicious"] ;
45 -> 46 ;
47 [label="literal-statement <= 0.5\ngini = 0.117\nsamples = 16\nvalue = [15, 1]\nclass = Benign"] ;
46 -> 47 ;
48 [label="gini = 0.0\nsamples = 15\nvalue = [15, 0]\nclass = Benign"] ;
47 -> 48 ;
49 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
47 -> 49 ;
50 [label="arguments-expression_statement <= 0.5\ngini = 0.043\nsamples = 3330\nvalue = [73, 3257]\nclass = Malicious"] ;
46 -> 50 ;
51 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
50 -> 51 ;
52 [label="eos-arguments <= 0.5\ngini = 0.038\nsamples = 3322\nvalue = [65, 3257]\nclass = Malicious"] ;
50 -> 52 ;
53 [label="literal-expression_statement <= 0.5\ngini = 0.036\nsamples = 3317\nvalue = [60, 3257]\nclass = Malicious"] ;
52 -> 53 ;
54 [label="expression_statement-identifiername <= 0.5\ngini = 0.237\nsamples = 291\nvalue = [40, 251]\nclass = Malicious"] ;
53 -> 54 ;
55 [label="expression_statement-assignmentoperator <= 0.5\ngini = 0.456\nsamples = 57\nvalue = [37, 20]\nclass = Benign"] ;
54 -> 55 ;
56 [label="arguments-identifiername <= 0.5\ngini = 0.051\nsamples = 38\nvalue = [37, 1]\nclass = Benign"] ;
55 -> 56 ;
57 [label="gini = 0.0\nsamples = 37\nvalue = [37, 0]\nclass = Benign"] ;
56 -> 57 ;
58 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
56 -> 58 ;
59 [label="gini = 0.0\nsamples = 19\nvalue = [0, 19]\nclass = Malicious"] ;
55 -> 59 ;
60 [label="literal-numericliteral <= 0.5\ngini = 0.025\nsamples = 234\nvalue = [3, 231]\nclass = Malicious"] ;
54 -> 60 ;
61 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
60 -> 61 ;
62 [label="variabledeclaration-eos <= 0.5\ngini = 0.009\nsamples = 232\nvalue = [1, 231]\nclass = Malicious"] ;
60 -> 62 ;
63 [label="gini = 0.0\nsamples = 231\nvalue = [0, 231]\nclass = Malicious"] ;
62 -> 63 ;
64 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
62 -> 64 ;
65 [label="returnstatement-eos <= 0.5\ngini = 0.013\nsamples = 3026\nvalue = [20, 3006]\nclass = Malicious"] ;
53 -> 65 ;
66 [label="withstatement-expressionsequence <= 0.5\ngini = 0.012\nsamples = 3025\nvalue = [19, 3006]\nclass = Malicious"] ;
65 -> 66 ;
67 [label="identifiername-expression_statement <= 0.5\ngini = 0.012\nsamples = 3024\nvalue = [18, 3006]\nclass = Malicious"] ;
66 -> 67 ;
68 [label="eos-catchproduction <= 0.5\ngini = 0.006\nsamples = 2895\nvalue = [8, 2887]\nclass = Malicious"] ;
67 -> 68 ;
69 [label="identifiername-eos <= 0.5\ngini = 0.005\nsamples = 2892\nvalue = [7, 2885]\nclass = Malicious"] ;
68 -> 69 ;
70 [label="expression_statement-assignmentoperator <= 0.5\ngini = 0.004\nsamples = 2889\nvalue = [6, 2883]\nclass = Malicious"] ;
69 -> 70 ;
71 [label="expression_statement-expressionsequence <= 0.5\ngini = 0.003\nsamples = 2886\nvalue = [5, 2881]\nclass = Malicious"] ;
70 -> 71 ;
72 [label="numericliteral-expression_statement <= 0.5\ngini = 0.008\nsamples = 1281\nvalue = [5, 1276]\nclass = Malicious"] ;
71 -> 72 ;
73 [label="block-statementlist <= 0.5\ngini = 0.005\nsamples = 1278\nvalue = [3, 1275]\nclass = Malicious"] ;
72 -> 73 ;
74 [label="expression_statement-identifiername <= 0.5\ngini = 0.003\nsamples = 1277\nvalue = [2, 1275]\nclass = Malicious"] ;
73 -> 74 ;
75 [label="literal-numericliteral <= 0.5\ngini = 0.002\nsamples = 1130\nvalue = [1, 1129]\nclass = Malicious"] ;
74 -> 75 ;
76 [label="expression_statement-eos <= 0.5\ngini = 0.003\nsamples = 696\nvalue = [1, 695]\nclass = Malicious"] ;
75 -> 76 ;
77 [label="gini = 0.003\nsamples = 677\nvalue = [1, 676]\nclass = Malicious"] ;
76 -> 77 ;
78 [label="gini = 0.0\nsamples = 19\nvalue = [0, 19]\nclass = Malicious"] ;
76 -> 78 ;
79 [label="gini = 0.0\nsamples = 434\nvalue = [0, 434]\nclass = Malicious"] ;
75 -> 79 ;
80 [label="literal-numericliteral <= 0.5\ngini = 0.014\nsamples = 147\nvalue = [1, 146]\nclass = Malicious"] ;
74 -> 80 ;
81 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
80 -> 81 ;
82 [label="gini = 0.0\nsamples = 146\nvalue = [0, 146]\nclass = Malicious"] ;
80 -> 82 ;
83 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
73 -> 83 ;
84 [label="expression_statement-identifiername <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [2, 1]\nclass = Benign"] ;
72 -> 84 ;
85 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
84 -> 85 ;
86 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
84 -> 86 ;
87 [label="gini = 0.0\nsamples = 1605\nvalue = [0, 1605]\nclass = Malicious"] ;
71 -> 87 ;
88 [label="statement-emptystatement <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
70 -> 88 ;
89 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
88 -> 89 ;
90 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
88 -> 90 ;
91 [label="formalparameterarg-functionbody <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
69 -> 91 ;
92 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
91 -> 92 ;
93 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
91 -> 93 ;
94 [label="returnstatement-expressionsequence <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
68 -> 94 ;
95 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
94 -> 95 ;
96 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
94 -> 96 ;
97 [label="expression_statement-expressionsequence <= 0.5\ngini = 0.143\nsamples = 129\nvalue = [10, 119]\nclass = Malicious"] ;
67 -> 97 ;
98 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
97 -> 98 ;
99 [label="literal-eos <= 0.5\ngini = 0.017\nsamples = 120\nvalue = [1, 119]\nclass = Malicious"] ;
97 -> 99 ;
100 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
99 -> 100 ;
101 [label="gini = 0.0\nsamples = 119\nvalue = [0, 119]\nclass = Malicious"] ;
99 -> 101 ;
102 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
66 -> 102 ;
103 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
65 -> 103 ;
104 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
52 -> 104 ;
105 [label="assignmentoperator-expression_statement <= 0.5\ngini = 0.455\nsamples = 246\nvalue = [86, 160]\nclass = Malicious"] ;
45 -> 105 ;
106 [label="gini = 0.0\nsamples = 83\nvalue = [83, 0]\nclass = Benign"] ;
105 -> 106 ;
107 [label="formalparameterarg-formalparameterarg <= 0.5\ngini = 0.036\nsamples = 163\nvalue = [3, 160]\nclass = Malicious"] ;
105 -> 107 ;
108 [label="literal-eos <= 0.5\ngini = 0.012\nsamples = 161\nvalue = [1, 160]\nclass = Malicious"] ;
107 -> 108 ;
109 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
108 -> 109 ;
110 [label="gini = 0.0\nsamples = 160\nvalue = [0, 160]\nclass = Malicious"] ;
108 -> 110 ;
111 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
107 -> 111 ;
112 [label="statement-breakstatement <= 0.5\ngini = 0.013\nsamples = 1043\nvalue = [1036, 7]\nclass = Benign"] ;
2 -> 112 ;
113 [label="expression_statement-assignmentoperator <= 0.5\ngini = 0.004\nsamples = 1038\nvalue = [1036, 2]\nclass = Benign"] ;
112 -> 113 ;
114 [label="numericliteral-expression_statement <= 0.5\ngini = 0.002\nsamples = 1035\nvalue = [1034, 1]\nclass = Benign"] ;
113 -> 114 ;
115 [label="gini = 0.0\nsamples = 929\nvalue = [929, 0]\nclass = Benign"] ;
114 -> 115 ;
116 [label="literal-expression_statement <= 0.5\ngini = 0.019\nsamples = 106\nvalue = [105, 1]\nclass = Benign"] ;
114 -> 116 ;
117 [label="eos-statement <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [2, 1]\nclass = Benign"] ;
116 -> 117 ;
118 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
117 -> 118 ;
119 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
117 -> 119 ;
120 [label="gini = 0.0\nsamples = 103\nvalue = [103, 0]\nclass = Benign"] ;
116 -> 120 ;
121 [label="formalparameterlist-formalparameterarg <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [2, 1]\nclass = Benign"] ;
113 -> 121 ;
122 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
121 -> 122 ;
123 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
121 -> 123 ;
124 [label="gini = 0.0\nsamples = 5\nvalue = [0, 5]\nclass = Malicious"] ;
112 -> 124 ;
125 [label="arguments-expression_statement <= 0.5\ngini = 0.002\nsamples = 5040\nvalue = [4, 5036]\nclass = Malicious"] ;
1 -> 125 ;
126 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
125 -> 126 ;
127 [label="eos-arguments <= 0.5\ngini = 0.001\nsamples = 5038\nvalue = [2, 5036]\nclass = Malicious"] ;
125 -> 127 ;
128 [label="literal-eos <= 0.5\ngini = 0.0\nsamples = 5037\nvalue = [1, 5036]\nclass = Malicious"] ;
127 -> 128 ;
129 [label="identifiername-arguments <= 0.5\ngini = 0.012\nsamples = 170\nvalue = [1, 169]\nclass = Malicious"] ;
128 -> 129 ;
130 [label="gini = 0.0\nsamples = 169\nvalue = [0, 169]\nclass = Malicious"] ;
129 -> 130 ;
131 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
129 -> 131 ;
132 [label="gini = 0.0\nsamples = 4867\nvalue = [0, 4867]\nclass = Malicious"] ;
128 -> 132 ;
133 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
127 -> 133 ;
134 [label="do_for_while_statement-expressionsequence <= 0.5\ngini = 0.246\nsamples = 10759\nvalue = [9217, 1542]\nclass = Benign"] ;
0 -> 134 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
135 [label="eos-finallyproduction <= 0.5\ngini = 0.006\nsamples = 9210\nvalue = [9180, 30]\nclass = Benign"] ;
134 -> 135 ;
136 [label="literal-arguments <= 0.5\ngini = 0.001\nsamples = 9184\nvalue = [9180, 4]\nclass = Benign"] ;
135 -> 136 ;
137 [label="gini = 0.0\nsamples = 9167\nvalue = [9167, 0]\nclass = Benign"] ;
136 -> 137 ;
138 [label="literal-expressionsequence <= 0.5\ngini = 0.36\nsamples = 17\nvalue = [13, 4]\nclass = Benign"] ;
136 -> 138 ;
139 [label="gini = 0.0\nsamples = 13\nvalue = [13, 0]\nclass = Benign"] ;
138 -> 139 ;
140 [label="gini = 0.0\nsamples = 4\nvalue = [0, 4]\nclass = Malicious"] ;
138 -> 140 ;
141 [label="gini = 0.0\nsamples = 26\nvalue = [0, 26]\nclass = Malicious"] ;
135 -> 141 ;
142 [label="objectliteral-eos <= 0.5\ngini = 0.047\nsamples = 1549\nvalue = [37, 1512]\nclass = Malicious"] ;
134 -> 142 ;
143 [label="literal-expressionsequence <= 0.5\ngini = 0.004\nsamples = 1515\nvalue = [3, 1512]\nclass = Malicious"] ;
142 -> 143 ;
144 [label="statement-emptystatement <= 0.5\ngini = 0.469\nsamples = 8\nvalue = [3, 5]\nclass = Malicious"] ;
143 -> 144 ;
145 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
144 -> 145 ;
146 [label="gini = 0.0\nsamples = 5\nvalue = [0, 5]\nclass = Malicious"] ;
144 -> 146 ;
147 [label="gini = 0.0\nsamples = 1507\nvalue = [0, 1507]\nclass = Malicious"] ;
143 -> 147 ;
148 [label="gini = 0.0\nsamples = 34\nvalue = [34, 0]\nclass = Benign"] ;
142 -> 148 ;
}
