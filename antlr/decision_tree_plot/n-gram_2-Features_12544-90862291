digraph Tree {
node [shape=box] ;
0 [label="objectliteralexpression-objectliteral <= 0.5\ngini = 0.5\nsamples = 27000\nvalue = [13500, 13500]\nclass = Benign"] ;
1 [label="argumentsexpression-memberindexexpression <= 0.5\ngini = 0.387\nsamples = 16195\nvalue = [4248, 11947]\nclass = Malicious"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="identifiername-identifiername <= 0.5\ngini = 0.474\nsamples = 10983\nvalue = [4238, 6745]\nclass = Malicious"] ;
1 -> 2 ;
3 [label="variabledeclaration-newexpression <= 0.5\ngini = 0.441\nsamples = 10028\nvalue = [3287, 6741]\nclass = Malicious"] ;
2 -> 3 ;
4 [label="literal-identifierexpression <= 0.5\ngini = 0.485\nsamples = 7772\nvalue = [3206, 4566]\nclass = Malicious"] ;
3 -> 4 ;
5 [label="expressionsequence-literalexpression <= 0.5\ngini = 0.469\nsamples = 7254\nvalue = [2726, 4528]\nclass = Malicious"] ;
4 -> 5 ;
6 [label="sourceelements-sourceelement <= 0.5\ngini = 0.495\nsamples = 5843\nvalue = [2626, 3217]\nclass = Malicious"] ;
5 -> 6 ;
7 [label="gini = 0.397\nsamples = 2592\nvalue = [709, 1883]\nclass = Malicious"] ;
6 -> 7 ;
8 [label="memberdotexpression-literalexpression <= 0.5\ngini = 0.484\nsamples = 3251\nvalue = [1917, 1334]\nclass = Benign"] ;
6 -> 8 ;
9 [label="identifierexpression-eos <= 0.5\ngini = 0.43\nsamples = 2787\nvalue = [1916, 871]\nclass = Benign"] ;
8 -> 9 ;
10 [label="arguments-identifiername <= 0.5\ngini = 0.292\nsamples = 2194\nvalue = [1805, 389]\nclass = Benign"] ;
9 -> 10 ;
11 [label="numericliteral-eos <= 0.5\ngini = 0.193\nsamples = 1998\nvalue = [1782, 216]\nclass = Benign"] ;
10 -> 11 ;
12 [label="gini = 0.0\nsamples = 1309\nvalue = [1309, 0]\nclass = Benign"] ;
11 -> 12 ;
13 [label="argumentsexpression-memberdotexpression <= 0.5\ngini = 0.43\nsamples = 689\nvalue = [473, 216]\nclass = Benign"] ;
11 -> 13 ;
14 [label="gini = 0.0\nsamples = 333\nvalue = [333, 0]\nclass = Benign"] ;
13 -> 14 ;
15 [label="variabledeclaration-literalexpression <= 0.5\ngini = 0.477\nsamples = 356\nvalue = [140, 216]\nclass = Malicious"] ;
13 -> 15 ;
16 [label="gini = 0.0\nsamples = 134\nvalue = [134, 0]\nclass = Benign"] ;
15 -> 16 ;
17 [label="functionbody-sourceelements <= 0.5\ngini = 0.053\nsamples = 222\nvalue = [6, 216]\nclass = Malicious"] ;
15 -> 17 ;
18 [label="additiveexpression-additiveexpression <= 0.5\ngini = 0.018\nsamples = 218\nvalue = [2, 216]\nclass = Malicious"] ;
17 -> 18 ;
19 [label="statement-expressionstatement <= 0.5\ngini = 0.009\nsamples = 217\nvalue = [1, 216]\nclass = Malicious"] ;
18 -> 19 ;
20 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
19 -> 20 ;
21 [label="gini = 0.0\nsamples = 216\nvalue = [0, 216]\nclass = Malicious"] ;
19 -> 21 ;
22 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
18 -> 22 ;
23 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
17 -> 23 ;
24 [label="arguments-argumentsexpression <= 0.5\ngini = 0.207\nsamples = 196\nvalue = [23, 173]\nclass = Malicious"] ;
10 -> 24 ;
25 [label="gini = 0.0\nsamples = 22\nvalue = [22, 0]\nclass = Benign"] ;
24 -> 25 ;
26 [label="relationalexpression-memberdotexpression <= 0.5\ngini = 0.011\nsamples = 174\nvalue = [1, 173]\nclass = Malicious"] ;
24 -> 26 ;
27 [label="gini = 0.0\nsamples = 173\nvalue = [0, 173]\nclass = Malicious"] ;
26 -> 27 ;
28 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
26 -> 28 ;
29 [label="memberdotexpression-argumentsexpression <= 0.5\ngini = 0.304\nsamples = 593\nvalue = [111, 482]\nclass = Malicious"] ;
9 -> 29 ;
30 [label="argumentsexpression-identifierexpression <= 0.5\ngini = 0.212\nsamples = 548\nvalue = [66, 482]\nclass = Malicious"] ;
29 -> 30 ;
31 [label="gini = 0.0\nsamples = 27\nvalue = [27, 0]\nclass = Benign"] ;
30 -> 31 ;
32 [label="variabledeclaration-eos <= 0.5\ngini = 0.139\nsamples = 521\nvalue = [39, 482]\nclass = Malicious"] ;
30 -> 32 ;
33 [label="assignmentexpression-memberdotexpression <= 0.5\ngini = 0.107\nsamples = 511\nvalue = [29, 482]\nclass = Malicious"] ;
32 -> 33 ;
34 [label="literal-numericliteral <= 0.5\ngini = 0.087\nsamples = 505\nvalue = [23, 482]\nclass = Malicious"] ;
33 -> 34 ;
35 [label="assignmentoperatorexpression-identifierexpression <= 0.5\ngini = 0.378\nsamples = 87\nvalue = [22, 65]\nclass = Malicious"] ;
34 -> 35 ;
36 [label="gini = 0.0\nsamples = 21\nvalue = [21, 0]\nclass = Benign"] ;
35 -> 36 ;
37 [label="expressionsequence-argumentsexpression <= 0.5\ngini = 0.03\nsamples = 66\nvalue = [1, 65]\nclass = Malicious"] ;
35 -> 37 ;
38 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
37 -> 38 ;
39 [label="gini = 0.0\nsamples = 65\nvalue = [0, 65]\nclass = Malicious"] ;
37 -> 39 ;
40 [label="expressionsequence-memberdotexpression <= 0.5\ngini = 0.005\nsamples = 418\nvalue = [1, 417]\nclass = Malicious"] ;
34 -> 40 ;
41 [label="gini = 0.0\nsamples = 417\nvalue = [0, 417]\nclass = Malicious"] ;
40 -> 41 ;
42 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
40 -> 42 ;
43 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
33 -> 43 ;
44 [label="gini = 0.0\nsamples = 10\nvalue = [10, 0]\nclass = Benign"] ;
32 -> 44 ;
45 [label="gini = 0.0\nsamples = 45\nvalue = [45, 0]\nclass = Benign"] ;
29 -> 45 ;
46 [label="literal-literalexpression <= 0.5\ngini = 0.004\nsamples = 464\nvalue = [1, 463]\nclass = Malicious"] ;
8 -> 46 ;
47 [label="gini = 0.0\nsamples = 463\nvalue = [0, 463]\nclass = Malicious"] ;
46 -> 47 ;
48 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
46 -> 48 ;
49 [label="memberindexexpression-memberdotexpression <= 0.5\ngini = 0.132\nsamples = 1411\nvalue = [100, 1311]\nclass = Malicious"] ;
5 -> 49 ;
50 [label="eos-sourceelement <= 0.5\ngini = 0.081\nsamples = 1369\nvalue = [58, 1311]\nclass = Malicious"] ;
49 -> 50 ;
51 [label="gini = 0.0\nsamples = 27\nvalue = [27, 0]\nclass = Benign"] ;
50 -> 51 ;
52 [label="literal-numericliteral <= 0.5\ngini = 0.045\nsamples = 1342\nvalue = [31, 1311]\nclass = Malicious"] ;
50 -> 52 ;
53 [label="variabledeclaration-literalexpression <= 0.5\ngini = 0.498\nsamples = 32\nvalue = [17, 15]\nclass = Benign"] ;
52 -> 53 ;
54 [label="gini = 0.0\nsamples = 17\nvalue = [17, 0]\nclass = Benign"] ;
53 -> 54 ;
55 [label="gini = 0.0\nsamples = 15\nvalue = [0, 15]\nclass = Malicious"] ;
53 -> 55 ;
56 [label="arrayliteral-variabledeclaration <= 0.5\ngini = 0.021\nsamples = 1310\nvalue = [14, 1296]\nclass = Malicious"] ;
52 -> 56 ;
57 [label="memberindexexpression-argumentsexpression <= 0.5\ngini = 0.012\nsamples = 1304\nvalue = [8, 1296]\nclass = Malicious"] ;
56 -> 57 ;
58 [label="literal-memberindexexpression <= 0.5\ngini = 0.006\nsamples = 1300\nvalue = [4, 1296]\nclass = Malicious"] ;
57 -> 58 ;
59 [label="arguments-eos <= 0.5\ngini = 0.003\nsamples = 1298\nvalue = [2, 1296]\nclass = Malicious"] ;
58 -> 59 ;
60 [label="expressionsequence-memberdotexpression <= 0.5\ngini = 0.002\nsamples = 1297\nvalue = [1, 1296]\nclass = Malicious"] ;
59 -> 60 ;
61 [label="gini = 0.0\nsamples = 1296\nvalue = [0, 1296]\nclass = Malicious"] ;
60 -> 61 ;
62 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
60 -> 62 ;
63 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
59 -> 63 ;
64 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
58 -> 64 ;
65 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
57 -> 65 ;
66 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
56 -> 66 ;
67 [label="gini = 0.0\nsamples = 42\nvalue = [42, 0]\nclass = Benign"] ;
49 -> 67 ;
68 [label="identifierexpression-variabledeclaration <= 0.5\ngini = 0.136\nsamples = 518\nvalue = [480, 38]\nclass = Benign"] ;
4 -> 68 ;
69 [label="block-statement <= 0.5\ngini = 0.024\nsamples = 486\nvalue = [480, 6]\nclass = Benign"] ;
68 -> 69 ;
70 [label="gini = 0.0\nsamples = 480\nvalue = [480, 0]\nclass = Benign"] ;
69 -> 70 ;
71 [label="gini = 0.0\nsamples = 6\nvalue = [0, 6]\nclass = Malicious"] ;
69 -> 71 ;
72 [label="gini = 0.0\nsamples = 32\nvalue = [0, 32]\nclass = Malicious"] ;
68 -> 72 ;
73 [label="identifierexpression-literalexpression <= 0.5\ngini = 0.069\nsamples = 2256\nvalue = [81, 2175]\nclass = Malicious"] ;
3 -> 73 ;
74 [label="assignmentexpression-memberdotexpression <= 0.5\ngini = 0.024\nsamples = 2183\nvalue = [26, 2157]\nclass = Malicious"] ;
73 -> 74 ;
75 [label="expressionsequence-argumentsexpression <= 0.5\ngini = 0.016\nsamples = 2174\nvalue = [17, 2157]\nclass = Malicious"] ;
74 -> 75 ;
76 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
75 -> 76 ;
77 [label="arguments-additiveexpression <= 0.5\ngini = 0.009\nsamples = 2167\nvalue = [10, 2157]\nclass = Malicious"] ;
75 -> 77 ;
78 [label="arguments-functionexpression <= 0.5\ngini = 0.006\nsamples = 2164\nvalue = [7, 2157]\nclass = Malicious"] ;
77 -> 78 ;
79 [label="literal-identifierexpression <= 0.5\ngini = 0.006\nsamples = 2163\nvalue = [6, 2157]\nclass = Malicious"] ;
78 -> 79 ;
80 [label="arguments-literalexpression <= 0.5\ngini = 0.005\nsamples = 2162\nvalue = [5, 2157]\nclass = Malicious"] ;
79 -> 80 ;
81 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
80 -> 81 ;
82 [label="identifierexpression-identifiername <= 0.5\ngini = 0.004\nsamples = 2161\nvalue = [4, 2157]\nclass = Malicious"] ;
80 -> 82 ;
83 [label="gini = 0.0\nsamples = 1106\nvalue = [0, 1106]\nclass = Malicious"] ;
82 -> 83 ;
84 [label="literal-numericliteral <= 0.5\ngini = 0.008\nsamples = 1055\nvalue = [4, 1051]\nclass = Malicious"] ;
82 -> 84 ;
85 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
84 -> 85 ;
86 [label="arguments-eos <= 0.5\ngini = 0.002\nsamples = 1052\nvalue = [1, 1051]\nclass = Malicious"] ;
84 -> 86 ;
87 [label="numericliteral-eos <= 0.5\ngini = 0.005\nsamples = 430\nvalue = [1, 429]\nclass = Malicious"] ;
86 -> 87 ;
88 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
87 -> 88 ;
89 [label="gini = 0.0\nsamples = 429\nvalue = [0, 429]\nclass = Malicious"] ;
87 -> 89 ;
90 [label="gini = 0.0\nsamples = 622\nvalue = [0, 622]\nclass = Malicious"] ;
86 -> 90 ;
91 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
79 -> 91 ;
92 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
78 -> 92 ;
93 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
77 -> 93 ;
94 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
74 -> 94 ;
95 [label="additiveexpression-additiveexpression <= 0.5\ngini = 0.372\nsamples = 73\nvalue = [55, 18]\nclass = Benign"] ;
73 -> 95 ;
96 [label="assignmentoperator-literalexpression <= 0.5\ngini = 0.071\nsamples = 54\nvalue = [52, 2]\nclass = Benign"] ;
95 -> 96 ;
97 [label="gini = 0.0\nsamples = 52\nvalue = [52, 0]\nclass = Benign"] ;
96 -> 97 ;
98 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
96 -> 98 ;
99 [label="literal-literalexpression <= 0.5\ngini = 0.266\nsamples = 19\nvalue = [3, 16]\nclass = Malicious"] ;
95 -> 99 ;
100 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
99 -> 100 ;
101 [label="ternaryexpression-parenthesizedexpression <= 0.5\ngini = 0.111\nsamples = 17\nvalue = [1, 16]\nclass = Malicious"] ;
99 -> 101 ;
102 [label="gini = 0.0\nsamples = 16\nvalue = [0, 16]\nclass = Malicious"] ;
101 -> 102 ;
103 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
101 -> 103 ;
104 [label="emptystatement-catchproduction <= 0.5\ngini = 0.008\nsamples = 955\nvalue = [951, 4]\nclass = Benign"] ;
2 -> 104 ;
105 [label="arguments-bitxorexpression <= 0.5\ngini = 0.002\nsamples = 952\nvalue = [951, 1]\nclass = Benign"] ;
104 -> 105 ;
106 [label="gini = 0.0\nsamples = 951\nvalue = [951, 0]\nclass = Benign"] ;
105 -> 106 ;
107 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
105 -> 107 ;
108 [label="gini = 0.0\nsamples = 3\nvalue = [0, 3]\nclass = Malicious"] ;
104 -> 108 ;
109 [label="eos-arguments <= 0.5\ngini = 0.004\nsamples = 5212\nvalue = [10, 5202]\nclass = Malicious"] ;
1 -> 109 ;
110 [label="literal-eos <= 0.5\ngini = 0.001\nsamples = 5204\nvalue = [2, 5202]\nclass = Malicious"] ;
109 -> 110 ;
111 [label="arguments-identifierexpression <= 0.5\ngini = 0.02\nsamples = 201\nvalue = [2, 199]\nclass = Malicious"] ;
110 -> 111 ;
112 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
111 -> 112 ;
113 [label="gini = 0.0\nsamples = 199\nvalue = [0, 199]\nclass = Malicious"] ;
111 -> 113 ;
114 [label="gini = 0.0\nsamples = 5003\nvalue = [0, 5003]\nclass = Malicious"] ;
110 -> 114 ;
115 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
109 -> 115 ;
116 [label="forstatement-expressionsequence <= 0.5\ngini = 0.246\nsamples = 10805\nvalue = [9252, 1553]\nclass = Benign"] ;
0 -> 116 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
117 [label="bitshiftexpression-identifierexpression <= 0.5\ngini = 0.012\nsamples = 9264\nvalue = [9209, 55]\nclass = Benign"] ;
116 -> 117 ;
118 [label="memberindexexpression-objectliteralexpression <= 0.5\ngini = 0.001\nsamples = 9215\nvalue = [9209, 6]\nclass = Benign"] ;
117 -> 118 ;
119 [label="memberdotexpression-objectliteralexpression <= 0.5\ngini = 0.001\nsamples = 9212\nvalue = [9209, 3]\nclass = Benign"] ;
118 -> 119 ;
120 [label="assignmentoperator-parenthesizedexpression <= 0.5\ngini = 0.0\nsamples = 9210\nvalue = [9209, 1]\nclass = Benign"] ;
119 -> 120 ;
121 [label="gini = 0.0\nsamples = 9209\nvalue = [9209, 0]\nclass = Benign"] ;
120 -> 121 ;
122 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
120 -> 122 ;
123 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
119 -> 123 ;
124 [label="gini = 0.0\nsamples = 3\nvalue = [0, 3]\nclass = Malicious"] ;
118 -> 124 ;
125 [label="gini = 0.0\nsamples = 49\nvalue = [0, 49]\nclass = Malicious"] ;
117 -> 125 ;
126 [label="eos-eos <= 0.5\ngini = 0.054\nsamples = 1541\nvalue = [43, 1498]\nclass = Malicious"] ;
116 -> 126 ;
127 [label="gini = 0.0\nsamples = 1498\nvalue = [0, 1498]\nclass = Malicious"] ;
126 -> 127 ;
128 [label="gini = 0.0\nsamples = 43\nvalue = [43, 0]\nclass = Benign"] ;
126 -> 128 ;
}
