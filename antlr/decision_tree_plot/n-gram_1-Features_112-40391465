digraph Tree {
node [shape=box] ;
0 [label="objectliteralexpression <= 0.5\ngini = 0.5\nsamples = 27000\nvalue = [13550, 13450]\nclass = Benign"] ;
1 [label="memberindexexpression <= 0.5\ngini = 0.392\nsamples = 16253\nvalue = [4349, 11904]\nclass = Malicious"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="newexpression <= 0.5\ngini = 0.482\nsamples = 9716\nvalue = [3935, 5781]\nclass = Malicious"] ;
1 -> 2 ;
3 [label="statement <= 0.5\ngini = 0.499\nsamples = 7687\nvalue = [3641, 4046]\nclass = Malicious"] ;
2 -> 3 ;
4 [label="gini = 0.402\nsamples = 2558\nvalue = [712, 1846]\nclass = Malicious"] ;
3 -> 4 ;
5 [label="parenthesizedexpression <= 0.5\ngini = 0.49\nsamples = 5129\nvalue = [2929, 2200]\nclass = Benign"] ;
3 -> 5 ;
6 [label="arguments <= 0.5\ngini = 0.439\nsamples = 4085\nvalue = [2757, 1328]\nclass = Benign"] ;
5 -> 6 ;
7 [label="gini = 0.0\nsamples = 1073\nvalue = [1073, 0]\nclass = Benign"] ;
6 -> 7 ;
8 [label="identifierexpression <= 0.5\ngini = 0.493\nsamples = 3012\nvalue = [1684, 1328]\nclass = Benign"] ;
6 -> 8 ;
9 [label="gini = 0.0\nsamples = 474\nvalue = [0, 474]\nclass = Malicious"] ;
8 -> 9 ;
10 [label="numericliteral <= 0.5\ngini = 0.447\nsamples = 2538\nvalue = [1684, 854]\nclass = Benign"] ;
8 -> 10 ;
11 [label="functionbody <= 0.5\ngini = 0.256\nsamples = 1542\nvalue = [1310, 232]\nclass = Benign"] ;
10 -> 11 ;
12 [label="assignmentexpression <= 0.5\ngini = 0.317\nsamples = 1049\nvalue = [842, 207]\nclass = Benign"] ;
11 -> 12 ;
13 [label="assignmentoperatorexpression <= 0.5\ngini = 0.394\nsamples = 739\nvalue = [540, 199]\nclass = Benign"] ;
12 -> 13 ;
14 [label="ifstatement <= 0.5\ngini = 0.384\nsamples = 729\nvalue = [540, 189]\nclass = Benign"] ;
13 -> 14 ;
15 [label="identifiername <= 0.5\ngini = 0.406\nsamples = 667\nvalue = [478, 189]\nclass = Benign"] ;
14 -> 15 ;
16 [label="additiveexpression <= 0.5\ngini = 0.206\nsamples = 154\nvalue = [136, 18]\nclass = Benign"] ;
15 -> 16 ;
17 [label="gini = 0.0\nsamples = 136\nvalue = [136, 0]\nclass = Benign"] ;
16 -> 17 ;
18 [label="gini = 0.0\nsamples = 18\nvalue = [0, 18]\nclass = Malicious"] ;
16 -> 18 ;
19 [label="arrayliteralexpression <= 0.5\ngini = 0.444\nsamples = 513\nvalue = [342, 171]\nclass = Benign"] ;
15 -> 19 ;
20 [label="variabledeclarationlist <= 0.5\ngini = 0.462\nsamples = 471\nvalue = [300, 171]\nclass = Benign"] ;
19 -> 20 ;
21 [label="literal <= 0.5\ngini = 0.477\nsamples = 434\nvalue = [264, 170]\nclass = Benign"] ;
20 -> 21 ;
22 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
21 -> 22 ;
23 [label="additiveexpression <= 0.5\ngini = 0.482\nsamples = 420\nvalue = [250, 170]\nclass = Benign"] ;
21 -> 23 ;
24 [label="logicalorexpression <= 0.5\ngini = 0.484\nsamples = 415\nvalue = [245, 170]\nclass = Benign"] ;
23 -> 24 ;
25 [label="logicalandexpression <= 0.5\ngini = 0.484\nsamples = 413\nvalue = [243, 170]\nclass = Benign"] ;
24 -> 25 ;
26 [label="statementlist <= 0.5\ngini = 0.485\nsamples = 411\nvalue = [241, 170]\nclass = Benign"] ;
25 -> 26 ;
27 [label="gini = 0.485\nsamples = 410\nvalue = [240, 170]\nclass = Benign"] ;
26 -> 27 ;
28 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
26 -> 28 ;
29 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
25 -> 29 ;
30 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
24 -> 30 ;
31 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
23 -> 31 ;
32 [label="expressionsequence <= 0.5\ngini = 0.053\nsamples = 37\nvalue = [36, 1]\nclass = Benign"] ;
20 -> 32 ;
33 [label="gini = 0.0\nsamples = 20\nvalue = [20, 0]\nclass = Benign"] ;
32 -> 33 ;
34 [label="additiveexpression <= 0.5\ngini = 0.111\nsamples = 17\nvalue = [16, 1]\nclass = Benign"] ;
32 -> 34 ;
35 [label="statementlist <= 0.5\ngini = 0.165\nsamples = 11\nvalue = [10, 1]\nclass = Benign"] ;
34 -> 35 ;
36 [label="literalexpression <= 0.5\ngini = 0.245\nsamples = 7\nvalue = [6, 1]\nclass = Benign"] ;
35 -> 36 ;
37 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
36 -> 37 ;
38 [label="gini = 0.278\nsamples = 6\nvalue = [5, 1]\nclass = Benign"] ;
36 -> 38 ;
39 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
35 -> 39 ;
40 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
34 -> 40 ;
41 [label="gini = 0.0\nsamples = 42\nvalue = [42, 0]\nclass = Benign"] ;
19 -> 41 ;
42 [label="gini = 0.0\nsamples = 62\nvalue = [62, 0]\nclass = Benign"] ;
14 -> 42 ;
43 [label="gini = 0.0\nsamples = 10\nvalue = [0, 10]\nclass = Malicious"] ;
13 -> 43 ;
44 [label="emptystatement <= 0.5\ngini = 0.05\nsamples = 310\nvalue = [302, 8]\nclass = Benign"] ;
12 -> 44 ;
45 [label="assignmentoperatorexpression <= 0.5\ngini = 0.026\nsamples = 306\nvalue = [302, 4]\nclass = Benign"] ;
44 -> 45 ;
46 [label="gini = 0.0\nsamples = 229\nvalue = [229, 0]\nclass = Benign"] ;
45 -> 46 ;
47 [label="identifiername <= 0.5\ngini = 0.098\nsamples = 77\nvalue = [73, 4]\nclass = Benign"] ;
45 -> 47 ;
48 [label="gini = 0.0\nsamples = 4\nvalue = [0, 4]\nclass = Malicious"] ;
47 -> 48 ;
49 [label="gini = 0.0\nsamples = 73\nvalue = [73, 0]\nclass = Benign"] ;
47 -> 49 ;
50 [label="gini = 0.0\nsamples = 4\nvalue = [0, 4]\nclass = Malicious"] ;
44 -> 50 ;
51 [label="assignmentoperatorexpression <= 0.5\ngini = 0.096\nsamples = 493\nvalue = [468, 25]\nclass = Benign"] ;
11 -> 51 ;
52 [label="gini = 0.0\nsamples = 464\nvalue = [464, 0]\nclass = Benign"] ;
51 -> 52 ;
53 [label="formalparameterlist <= 0.5\ngini = 0.238\nsamples = 29\nvalue = [4, 25]\nclass = Malicious"] ;
51 -> 53 ;
54 [label="assignmentexpression <= 0.5\ngini = 0.191\nsamples = 28\nvalue = [3, 25]\nclass = Malicious"] ;
53 -> 54 ;
55 [label="returnstatement <= 0.5\ngini = 0.291\nsamples = 17\nvalue = [3, 14]\nclass = Malicious"] ;
54 -> 55 ;
56 [label="gini = 0.0\nsamples = 7\nvalue = [0, 7]\nclass = Malicious"] ;
55 -> 56 ;
57 [label="gini = 0.42\nsamples = 10\nvalue = [3, 7]\nclass = Malicious"] ;
55 -> 57 ;
58 [label="gini = 0.0\nsamples = 11\nvalue = [0, 11]\nclass = Malicious"] ;
54 -> 58 ;
59 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
53 -> 59 ;
60 [label="functionbody <= 0.5\ngini = 0.469\nsamples = 996\nvalue = [374, 622]\nclass = Malicious"] ;
10 -> 60 ;
61 [label="block <= 0.5\ngini = 0.376\nsamples = 830\nvalue = [208, 622]\nclass = Malicious"] ;
60 -> 61 ;
62 [label="variabledeclarationlist <= 0.5\ngini = 0.336\nsamples = 791\nvalue = [169, 622]\nclass = Malicious"] ;
61 -> 62 ;
63 [label="equalityexpression <= 0.5\ngini = 0.453\nsamples = 407\nvalue = [141, 266]\nclass = Malicious"] ;
62 -> 63 ;
64 [label="memberdotexpression <= 0.5\ngini = 0.499\nsamples = 268\nvalue = [141, 127]\nclass = Benign"] ;
63 -> 64 ;
65 [label="gini = 0.0\nsamples = 31\nvalue = [31, 0]\nclass = Benign"] ;
64 -> 65 ;
66 [label="additiveexpression <= 0.5\ngini = 0.497\nsamples = 237\nvalue = [110, 127]\nclass = Malicious"] ;
64 -> 66 ;
67 [label="arrayliteralexpression <= 0.5\ngini = 0.485\nsamples = 217\nvalue = [90, 127]\nclass = Malicious"] ;
66 -> 67 ;
68 [label="logicalandexpression <= 0.5\ngini = 0.479\nsamples = 211\nvalue = [84, 127]\nclass = Malicious"] ;
67 -> 68 ;
69 [label="assignmentexpression <= 0.5\ngini = 0.471\nsamples = 205\nvalue = [78, 127]\nclass = Malicious"] ;
68 -> 69 ;
70 [label="gini = 0.465\nsamples = 201\nvalue = [74, 127]\nclass = Malicious"] ;
69 -> 70 ;
71 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
69 -> 71 ;
72 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
68 -> 72 ;
73 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
67 -> 73 ;
74 [label="gini = 0.0\nsamples = 20\nvalue = [20, 0]\nclass = Benign"] ;
66 -> 74 ;
75 [label="gini = 0.0\nsamples = 139\nvalue = [0, 139]\nclass = Malicious"] ;
63 -> 75 ;
76 [label="memberdotexpression <= 0.5\ngini = 0.135\nsamples = 384\nvalue = [28, 356]\nclass = Malicious"] ;
62 -> 76 ;
77 [label="gini = 0.0\nsamples = 10\nvalue = [10, 0]\nclass = Benign"] ;
76 -> 77 ;
78 [label="multiplicativeexpression <= 0.5\ngini = 0.092\nsamples = 374\nvalue = [18, 356]\nclass = Malicious"] ;
76 -> 78 ;
79 [label="assignmentexpression <= 0.5\ngini = 0.063\nsamples = 368\nvalue = [12, 356]\nclass = Malicious"] ;
78 -> 79 ;
80 [label="unaryminusexpression <= 0.5\ngini = 0.043\nsamples = 364\nvalue = [8, 356]\nclass = Malicious"] ;
79 -> 80 ;
81 [label="thisexpression <= 0.5\ngini = 0.038\nsamples = 363\nvalue = [7, 356]\nclass = Malicious"] ;
80 -> 81 ;
82 [label="arrayliteral <= 0.5\ngini = 0.033\nsamples = 362\nvalue = [6, 356]\nclass = Malicious"] ;
81 -> 82 ;
83 [label="additiveexpression <= 0.5\ngini = 0.027\nsamples = 361\nvalue = [5, 356]\nclass = Malicious"] ;
82 -> 83 ;
84 [label="gini = 0.044\nsamples = 224\nvalue = [5, 219]\nclass = Malicious"] ;
83 -> 84 ;
85 [label="gini = 0.0\nsamples = 137\nvalue = [0, 137]\nclass = Malicious"] ;
83 -> 85 ;
86 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
82 -> 86 ;
87 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
81 -> 87 ;
88 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
80 -> 88 ;
89 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
79 -> 89 ;
90 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
78 -> 90 ;
91 [label="gini = 0.0\nsamples = 39\nvalue = [39, 0]\nclass = Benign"] ;
61 -> 91 ;
92 [label="gini = 0.0\nsamples = 166\nvalue = [166, 0]\nclass = Benign"] ;
60 -> 92 ;
93 [label="numericliteral <= 0.5\ngini = 0.275\nsamples = 1044\nvalue = [172, 872]\nclass = Malicious"] ;
5 -> 93 ;
94 [label="gini = 0.0\nsamples = 114\nvalue = [114, 0]\nclass = Benign"] ;
93 -> 94 ;
95 [label="assignmentexpression <= 0.5\ngini = 0.117\nsamples = 930\nvalue = [58, 872]\nclass = Malicious"] ;
93 -> 95 ;
96 [label="forvarstatement <= 0.5\ngini = 0.046\nsamples = 42\nvalue = [41, 1]\nclass = Benign"] ;
95 -> 96 ;
97 [label="gini = 0.0\nsamples = 41\nvalue = [41, 0]\nclass = Benign"] ;
96 -> 97 ;
98 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
96 -> 98 ;
99 [label="formalparameterarg <= 0.5\ngini = 0.038\nsamples = 888\nvalue = [17, 871]\nclass = Malicious"] ;
95 -> 99 ;
100 [label="unaryminusexpression <= 0.5\ngini = 0.009\nsamples = 875\nvalue = [4, 871]\nclass = Malicious"] ;
99 -> 100 ;
101 [label="thisexpression <= 0.5\ngini = 0.005\nsamples = 873\nvalue = [2, 871]\nclass = Malicious"] ;
100 -> 101 ;
102 [label="relationalexpression <= 0.5\ngini = 0.002\nsamples = 872\nvalue = [1, 871]\nclass = Malicious"] ;
101 -> 102 ;
103 [label="gini = 0.0\nsamples = 861\nvalue = [0, 861]\nclass = Malicious"] ;
102 -> 103 ;
104 [label="assignmentoperatorexpression <= 0.5\ngini = 0.165\nsamples = 11\nvalue = [1, 10]\nclass = Malicious"] ;
102 -> 104 ;
105 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
104 -> 105 ;
106 [label="gini = 0.0\nsamples = 10\nvalue = [0, 10]\nclass = Malicious"] ;
104 -> 106 ;
107 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
101 -> 107 ;
108 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
100 -> 108 ;
109 [label="gini = 0.0\nsamples = 13\nvalue = [13, 0]\nclass = Benign"] ;
99 -> 109 ;
110 [label="assignmentexpression <= 0.5\ngini = 0.248\nsamples = 2029\nvalue = [294, 1735]\nclass = Malicious"] ;
2 -> 110 ;
111 [label="varmodifier <= 0.5\ngini = 0.061\nsamples = 1791\nvalue = [56, 1735]\nclass = Malicious"] ;
110 -> 111 ;
112 [label="gini = 0.0\nsamples = 18\nvalue = [18, 0]\nclass = Benign"] ;
111 -> 112 ;
113 [label="arrayliteralexpression <= 0.5\ngini = 0.042\nsamples = 1773\nvalue = [38, 1735]\nclass = Malicious"] ;
111 -> 113 ;
114 [label="expressionstatement <= 0.5\ngini = 0.029\nsamples = 1761\nvalue = [26, 1735]\nclass = Malicious"] ;
113 -> 114 ;
115 [label="statementlist <= 0.5\ngini = 0.198\nsamples = 9\nvalue = [8, 1]\nclass = Benign"] ;
114 -> 115 ;
116 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
115 -> 116 ;
117 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
115 -> 117 ;
118 [label="block <= 0.5\ngini = 0.02\nsamples = 1752\nvalue = [18, 1734]\nclass = Malicious"] ;
114 -> 118 ;
119 [label="literalexpression <= 0.5\ngini = 0.015\nsamples = 1746\nvalue = [13, 1733]\nclass = Malicious"] ;
118 -> 119 ;
120 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
119 -> 120 ;
121 [label="additiveexpression <= 0.5\ngini = 0.011\nsamples = 1743\nvalue = [10, 1733]\nclass = Malicious"] ;
119 -> 121 ;
122 [label="memberdotexpression <= 0.5\ngini = 0.008\nsamples = 1737\nvalue = [7, 1730]\nclass = Malicious"] ;
121 -> 122 ;
123 [label="gini = 0.0\nsamples = 1105\nvalue = [0, 1105]\nclass = Malicious"] ;
122 -> 123 ;
124 [label="numericliteral <= 0.5\ngini = 0.022\nsamples = 632\nvalue = [7, 625]\nclass = Malicious"] ;
122 -> 124 ;
125 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
124 -> 125 ;
126 [label="equalityexpression <= 0.5\ngini = 0.01\nsamples = 628\nvalue = [3, 625]\nclass = Malicious"] ;
124 -> 126 ;
127 [label="gini = 0.42\nsamples = 10\nvalue = [3, 7]\nclass = Malicious"] ;
126 -> 127 ;
128 [label="gini = 0.0\nsamples = 618\nvalue = [0, 618]\nclass = Malicious"] ;
126 -> 128 ;
129 [label="numericliteral <= 0.5\ngini = 0.5\nsamples = 6\nvalue = [3, 3]\nclass = Benign"] ;
121 -> 129 ;
130 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
129 -> 130 ;
131 [label="gini = 0.0\nsamples = 3\nvalue = [0, 3]\nclass = Malicious"] ;
129 -> 131 ;
132 [label="additiveexpression <= 0.5\ngini = 0.278\nsamples = 6\nvalue = [5, 1]\nclass = Benign"] ;
118 -> 132 ;
133 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
132 -> 133 ;
134 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
132 -> 134 ;
135 [label="gini = 0.0\nsamples = 12\nvalue = [12, 0]\nclass = Benign"] ;
113 -> 135 ;
136 [label="gini = 0.0\nsamples = 238\nvalue = [238, 0]\nclass = Benign"] ;
110 -> 136 ;
137 [label="argumentsexpression <= 0.5\ngini = 0.119\nsamples = 6537\nvalue = [414, 6123]\nclass = Malicious"] ;
1 -> 137 ;
138 [label="gini = 0.0\nsamples = 141\nvalue = [141, 0]\nclass = Benign"] ;
137 -> 138 ;
139 [label="forvarinstatement <= 0.5\ngini = 0.082\nsamples = 6396\nvalue = [273, 6123]\nclass = Malicious"] ;
137 -> 139 ;
140 [label="logicalorexpression <= 0.5\ngini = 0.064\nsamples = 6334\nvalue = [211, 6123]\nclass = Malicious"] ;
139 -> 140 ;
141 [label="deleteexpression <= 0.5\ngini = 0.048\nsamples = 6277\nvalue = [154, 6123]\nclass = Malicious"] ;
140 -> 141 ;
142 [label="ternaryexpression <= 0.5\ngini = 0.043\nsamples = 6261\nvalue = [138, 6123]\nclass = Malicious"] ;
141 -> 142 ;
143 [label="notexpression <= 0.5\ngini = 0.04\nsamples = 6250\nvalue = [127, 6123]\nclass = Malicious"] ;
142 -> 143 ;
144 [label="typeofexpression <= 0.5\ngini = 0.037\nsamples = 6228\nvalue = [116, 6112]\nclass = Malicious"] ;
143 -> 144 ;
145 [label="preincrementexpression <= 0.5\ngini = 0.035\nsamples = 6221\nvalue = [112, 6109]\nclass = Malicious"] ;
144 -> 145 ;
146 [label="newexpression <= 0.5\ngini = 0.035\nsamples = 6219\nvalue = [110, 6109]\nclass = Malicious"] ;
145 -> 146 ;
147 [label="functionbody <= 0.5\ngini = 0.065\nsamples = 2950\nvalue = [100, 2850]\nclass = Malicious"] ;
146 -> 147 ;
148 [label="block <= 0.5\ngini = 0.02\nsamples = 2214\nvalue = [22, 2192]\nclass = Malicious"] ;
147 -> 148 ;
149 [label="memberdotexpression <= 0.5\ngini = 0.011\nsamples = 1836\nvalue = [10, 1826]\nclass = Malicious"] ;
148 -> 149 ;
150 [label="variabledeclaration <= 0.5\ngini = 0.002\nsamples = 1128\nvalue = [1, 1127]\nclass = Malicious"] ;
149 -> 150 ;
151 [label="arrayliteralexpression <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
150 -> 151 ;
152 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
151 -> 152 ;
153 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
151 -> 153 ;
154 [label="gini = 0.0\nsamples = 1125\nvalue = [0, 1125]\nclass = Malicious"] ;
150 -> 154 ;
155 [label="variabledeclarationlist <= 0.5\ngini = 0.025\nsamples = 708\nvalue = [9, 699]\nclass = Malicious"] ;
149 -> 155 ;
156 [label="additiveexpression <= 0.5\ngini = 0.014\nsamples = 562\nvalue = [4, 558]\nclass = Malicious"] ;
155 -> 156 ;
157 [label="numericliteral <= 0.5\ngini = 0.029\nsamples = 275\nvalue = [4, 271]\nclass = Malicious"] ;
156 -> 157 ;
158 [label="gini = 0.0\nsamples = 271\nvalue = [0, 271]\nclass = Malicious"] ;
157 -> 158 ;
159 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
157 -> 159 ;
160 [label="gini = 0.0\nsamples = 287\nvalue = [0, 287]\nclass = Malicious"] ;
156 -> 160 ;
161 [label="elementlist <= 0.5\ngini = 0.066\nsamples = 146\nvalue = [5, 141]\nclass = Malicious"] ;
155 -> 161 ;
162 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
161 -> 162 ;
163 [label="gini = 0.0\nsamples = 141\nvalue = [0, 141]\nclass = Malicious"] ;
161 -> 163 ;
164 [label="varmodifier <= 0.5\ngini = 0.061\nsamples = 378\nvalue = [12, 366]\nclass = Malicious"] ;
148 -> 164 ;
165 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
164 -> 165 ;
166 [label="thisexpression <= 0.5\ngini = 0.016\nsamples = 369\nvalue = [3, 366]\nclass = Malicious"] ;
164 -> 166 ;
167 [label="additiveexpression <= 0.5\ngini = 0.266\nsamples = 19\nvalue = [3, 16]\nclass = Malicious"] ;
166 -> 167 ;
168 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
167 -> 168 ;
169 [label="gini = 0.0\nsamples = 16\nvalue = [0, 16]\nclass = Malicious"] ;
167 -> 169 ;
170 [label="gini = 0.0\nsamples = 350\nvalue = [0, 350]\nclass = Malicious"] ;
166 -> 170 ;
171 [label="relationalexpression <= 0.5\ngini = 0.189\nsamples = 736\nvalue = [78, 658]\nclass = Malicious"] ;
147 -> 171 ;
172 [label="identifiername <= 0.5\ngini = 0.463\nsamples = 107\nvalue = [68, 39]\nclass = Benign"] ;
171 -> 172 ;
173 [label="gini = 0.0\nsamples = 37\nvalue = [0, 37]\nclass = Malicious"] ;
172 -> 173 ;
174 [label="assignmentexpression <= 0.5\ngini = 0.056\nsamples = 70\nvalue = [68, 2]\nclass = Benign"] ;
172 -> 174 ;
175 [label="formalparameterlist <= 0.5\ngini = 0.48\nsamples = 5\nvalue = [3, 2]\nclass = Benign"] ;
174 -> 175 ;
176 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
175 -> 176 ;
177 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
175 -> 177 ;
178 [label="gini = 0.0\nsamples = 65\nvalue = [65, 0]\nclass = Benign"] ;
174 -> 178 ;
179 [label="returnstatement <= 0.5\ngini = 0.031\nsamples = 629\nvalue = [10, 619]\nclass = Malicious"] ;
171 -> 179 ;
180 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
179 -> 180 ;
181 [label="arrayliteralexpression <= 0.5\ngini = 0.003\nsamples = 620\nvalue = [1, 619]\nclass = Malicious"] ;
179 -> 181 ;
182 [label="additiveexpression <= 0.5\ngini = 0.08\nsamples = 24\nvalue = [1, 23]\nclass = Malicious"] ;
181 -> 182 ;
183 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
182 -> 183 ;
184 [label="gini = 0.0\nsamples = 23\nvalue = [0, 23]\nclass = Malicious"] ;
182 -> 184 ;
185 [label="gini = 0.0\nsamples = 596\nvalue = [0, 596]\nclass = Malicious"] ;
181 -> 185 ;
186 [label="varmodifier <= 0.5\ngini = 0.006\nsamples = 3269\nvalue = [10, 3259]\nclass = Malicious"] ;
146 -> 186 ;
187 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
186 -> 187 ;
188 [label="equalityexpression <= 0.5\ngini = 0.005\nsamples = 3267\nvalue = [8, 3259]\nclass = Malicious"] ;
186 -> 188 ;
189 [label="parenthesizedexpression <= 0.5\ngini = 0.02\nsamples = 697\nvalue = [7, 690]\nclass = Malicious"] ;
188 -> 189 ;
190 [label="memberdotexpression <= 0.5\ngini = 0.009\nsamples = 693\nvalue = [3, 690]\nclass = Malicious"] ;
189 -> 190 ;
191 [label="block <= 0.5\ngini = 0.231\nsamples = 15\nvalue = [2, 13]\nclass = Malicious"] ;
190 -> 191 ;
192 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
191 -> 192 ;
193 [label="gini = 0.0\nsamples = 13\nvalue = [0, 13]\nclass = Malicious"] ;
191 -> 193 ;
194 [label="thisexpression <= 0.5\ngini = 0.003\nsamples = 678\nvalue = [1, 677]\nclass = Malicious"] ;
190 -> 194 ;
195 [label="gini = 0.0\nsamples = 673\nvalue = [0, 673]\nclass = Malicious"] ;
194 -> 195 ;
196 [label="formalparameterlist <= 0.5\ngini = 0.32\nsamples = 5\nvalue = [1, 4]\nclass = Malicious"] ;
194 -> 196 ;
197 [label="gini = 0.0\nsamples = 4\nvalue = [0, 4]\nclass = Malicious"] ;
196 -> 197 ;
198 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
196 -> 198 ;
199 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
189 -> 199 ;
200 [label="assignmentoperatorexpression <= 0.5\ngini = 0.001\nsamples = 2570\nvalue = [1, 2569]\nclass = Malicious"] ;
188 -> 200 ;
201 [label="gini = 0.0\nsamples = 1687\nvalue = [0, 1687]\nclass = Malicious"] ;
200 -> 201 ;
202 [label="formalparameterarg <= 0.5\ngini = 0.002\nsamples = 883\nvalue = [1, 882]\nclass = Malicious"] ;
200 -> 202 ;
203 [label="gini = 0.0\nsamples = 882\nvalue = [0, 882]\nclass = Malicious"] ;
202 -> 203 ;
204 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
202 -> 204 ;
205 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
145 -> 205 ;
206 [label="arrayliteralexpression <= 0.5\ngini = 0.49\nsamples = 7\nvalue = [4, 3]\nclass = Benign"] ;
144 -> 206 ;
207 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
206 -> 207 ;
208 [label="gini = 0.0\nsamples = 3\nvalue = [0, 3]\nclass = Malicious"] ;
206 -> 208 ;
209 [label="trystatement <= 0.5\ngini = 0.5\nsamples = 22\nvalue = [11, 11]\nclass = Benign"] ;
143 -> 209 ;
210 [label="gini = 0.0\nsamples = 11\nvalue = [11, 0]\nclass = Benign"] ;
209 -> 210 ;
211 [label="gini = 0.0\nsamples = 11\nvalue = [0, 11]\nclass = Malicious"] ;
209 -> 211 ;
212 [label="gini = 0.0\nsamples = 11\nvalue = [11, 0]\nclass = Benign"] ;
142 -> 212 ;
213 [label="gini = 0.0\nsamples = 16\nvalue = [16, 0]\nclass = Benign"] ;
141 -> 213 ;
214 [label="gini = 0.0\nsamples = 57\nvalue = [57, 0]\nclass = Benign"] ;
140 -> 214 ;
215 [label="gini = 0.0\nsamples = 62\nvalue = [62, 0]\nclass = Benign"] ;
139 -> 215 ;
216 [label="forstatement <= 0.5\ngini = 0.246\nsamples = 10747\nvalue = [9201, 1546]\nclass = Benign"] ;
0 -> 216 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
217 [label="bitshiftexpression <= 0.5\ngini = 0.012\nsamples = 9227\nvalue = [9171, 56]\nclass = Benign"] ;
216 -> 217 ;
218 [label="whilestatement <= 0.5\ngini = 0.001\nsamples = 9176\nvalue = [9171, 5]\nclass = Benign"] ;
217 -> 218 ;
219 [label="catchproduction <= 0.5\ngini = 0.001\nsamples = 9170\nvalue = [9167, 3]\nclass = Benign"] ;
218 -> 219 ;
220 [label="forvarstatement <= 0.5\ngini = 0.0\nsamples = 9054\nvalue = [9053, 1]\nclass = Benign"] ;
219 -> 220 ;
221 [label="gini = 0.0\nsamples = 8970\nvalue = [8970, 0]\nclass = Benign"] ;
220 -> 221 ;
222 [label="postincrementexpression <= 0.5\ngini = 0.024\nsamples = 84\nvalue = [83, 1]\nclass = Benign"] ;
220 -> 222 ;
223 [label="elementlist <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
222 -> 223 ;
224 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
223 -> 224 ;
225 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
223 -> 225 ;
226 [label="gini = 0.0\nsamples = 82\nvalue = [82, 0]\nclass = Benign"] ;
222 -> 226 ;
227 [label="memberdotexpression <= 0.5\ngini = 0.034\nsamples = 116\nvalue = [114, 2]\nclass = Benign"] ;
219 -> 227 ;
228 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
227 -> 228 ;
229 [label="gini = 0.0\nsamples = 114\nvalue = [114, 0]\nclass = Benign"] ;
227 -> 229 ;
230 [label="functionbody <= 0.5\ngini = 0.444\nsamples = 6\nvalue = [4, 2]\nclass = Benign"] ;
218 -> 230 ;
231 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
230 -> 231 ;
232 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
230 -> 232 ;
233 [label="gini = 0.0\nsamples = 51\nvalue = [0, 51]\nclass = Malicious"] ;
217 -> 233 ;
234 [label="identifiername <= 0.5\ngini = 0.039\nsamples = 1520\nvalue = [30, 1490]\nclass = Malicious"] ;
216 -> 234 ;
235 [label="gini = 0.0\nsamples = 1487\nvalue = [0, 1487]\nclass = Malicious"] ;
234 -> 235 ;
236 [label="returnstatement <= 0.5\ngini = 0.165\nsamples = 33\nvalue = [30, 3]\nclass = Benign"] ;
234 -> 236 ;
237 [label="gini = 0.0\nsamples = 3\nvalue = [0, 3]\nclass = Malicious"] ;
236 -> 237 ;
238 [label="gini = 0.0\nsamples = 30\nvalue = [30, 0]\nclass = Benign"] ;
236 -> 238 ;
}
