digraph Tree {
node [shape=box] ;
0 [label="objectliteralexpression <= 0.5\ngini = 0.5\nsamples = 27000\nvalue = [13491, 13509]\nclass = Malicious"] ;
1 [label="memberindexexpression <= 0.5\ngini = 0.389\nsamples = 16271\nvalue = [4310, 11961]\nclass = Malicious"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="newexpression <= 0.5\ngini = 0.481\nsamples = 9706\nvalue = [3906, 5800]\nclass = Malicious"] ;
1 -> 2 ;
3 [label="sourceelement <= 0.5\ngini = 0.498\nsamples = 7689\nvalue = [3616, 4073]\nclass = Malicious"] ;
2 -> 3 ;
4 [label="gini = 0.392\nsamples = 2570\nvalue = [688, 1882]\nclass = Malicious"] ;
3 -> 4 ;
5 [label="numericliteral <= 0.5\ngini = 0.49\nsamples = 5119\nvalue = [2928, 2191]\nclass = Benign"] ;
3 -> 5 ;
6 [label="expressionsequence <= 0.5\ngini = 0.37\nsamples = 2853\nvalue = [2153, 700]\nclass = Benign"] ;
5 -> 6 ;
7 [label="identifiername <= 0.5\ngini = 0.499\nsamples = 908\nvalue = [438, 470]\nclass = Malicious"] ;
6 -> 7 ;
8 [label="gini = 0.0\nsamples = 419\nvalue = [419, 0]\nclass = Benign"] ;
7 -> 8 ;
9 [label="identifierexpression <= 0.5\ngini = 0.075\nsamples = 489\nvalue = [19, 470]\nclass = Malicious"] ;
7 -> 9 ;
10 [label="gini = 0.0\nsamples = 470\nvalue = [0, 470]\nclass = Malicious"] ;
9 -> 10 ;
11 [label="gini = 0.0\nsamples = 19\nvalue = [19, 0]\nclass = Benign"] ;
9 -> 11 ;
12 [label="assignmentexpression <= 0.5\ngini = 0.209\nsamples = 1945\nvalue = [1715, 230]\nclass = Benign"] ;
6 -> 12 ;
13 [label="functionbody <= 0.5\ngini = 0.282\nsamples = 1219\nvalue = [1012, 207]\nclass = Benign"] ;
12 -> 13 ;
14 [label="ifstatement <= 0.5\ngini = 0.378\nsamples = 762\nvalue = [569, 193]\nclass = Benign"] ;
13 -> 14 ;
15 [label="identifiername <= 0.5\ngini = 0.405\nsamples = 685\nvalue = [492, 193]\nclass = Benign"] ;
14 -> 15 ;
16 [label="additiveexpression <= 0.5\ngini = 0.247\nsamples = 187\nvalue = [160, 27]\nclass = Benign"] ;
15 -> 16 ;
17 [label="assignmentoperatorexpression <= 0.5\ngini = 0.105\nsamples = 162\nvalue = [153, 9]\nclass = Benign"] ;
16 -> 17 ;
18 [label="gini = 0.0\nsamples = 153\nvalue = [153, 0]\nclass = Benign"] ;
17 -> 18 ;
19 [label="gini = 0.0\nsamples = 9\nvalue = [0, 9]\nclass = Malicious"] ;
17 -> 19 ;
20 [label="literal <= 0.5\ngini = 0.403\nsamples = 25\nvalue = [7, 18]\nclass = Malicious"] ;
16 -> 20 ;
21 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
20 -> 21 ;
22 [label="gini = 0.0\nsamples = 18\nvalue = [0, 18]\nclass = Malicious"] ;
20 -> 22 ;
23 [label="arrayliteralexpression <= 0.5\ngini = 0.444\nsamples = 498\nvalue = [332, 166]\nclass = Benign"] ;
15 -> 23 ;
24 [label="literalexpression <= 0.5\ngini = 0.463\nsamples = 456\nvalue = [290, 166]\nclass = Benign"] ;
23 -> 24 ;
25 [label="gini = 0.0\nsamples = 19\nvalue = [19, 0]\nclass = Benign"] ;
24 -> 25 ;
26 [label="additiveexpression <= 0.5\ngini = 0.471\nsamples = 437\nvalue = [271, 166]\nclass = Benign"] ;
24 -> 26 ;
27 [label="variablestatement <= 0.5\ngini = 0.477\nsamples = 423\nvalue = [257, 166]\nclass = Benign"] ;
26 -> 27 ;
28 [label="logicalorexpression <= 0.5\ngini = 0.479\nsamples = 415\nvalue = [250, 165]\nclass = Benign"] ;
27 -> 28 ;
29 [label="parenthesizedexpression <= 0.5\ngini = 0.48\nsamples = 413\nvalue = [248, 165]\nclass = Benign"] ;
28 -> 29 ;
30 [label="logicalandexpression <= 0.5\ngini = 0.481\nsamples = 411\nvalue = [246, 165]\nclass = Benign"] ;
29 -> 30 ;
31 [label="statementlist <= 0.5\ngini = 0.481\nsamples = 409\nvalue = [244, 165]\nclass = Benign"] ;
30 -> 31 ;
32 [label="arguments <= 0.5\ngini = 0.482\nsamples = 408\nvalue = [243, 165]\nclass = Benign"] ;
31 -> 32 ;
33 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
32 -> 33 ;
34 [label="gini = 0.482\nsamples = 407\nvalue = [242, 165]\nclass = Benign"] ;
32 -> 34 ;
35 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
31 -> 35 ;
36 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
30 -> 36 ;
37 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
29 -> 37 ;
38 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
28 -> 38 ;
39 [label="statementlist <= 0.5\ngini = 0.219\nsamples = 8\nvalue = [7, 1]\nclass = Benign"] ;
27 -> 39 ;
40 [label="gini = 0.278\nsamples = 6\nvalue = [5, 1]\nclass = Benign"] ;
39 -> 40 ;
41 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
39 -> 41 ;
42 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
26 -> 42 ;
43 [label="gini = 0.0\nsamples = 42\nvalue = [42, 0]\nclass = Benign"] ;
23 -> 43 ;
44 [label="gini = 0.0\nsamples = 77\nvalue = [77, 0]\nclass = Benign"] ;
14 -> 44 ;
45 [label="assignmentoperator <= 0.5\ngini = 0.059\nsamples = 457\nvalue = [443, 14]\nclass = Benign"] ;
13 -> 45 ;
46 [label="gini = 0.0\nsamples = 441\nvalue = [441, 0]\nclass = Benign"] ;
45 -> 46 ;
47 [label="returnstatement <= 0.5\ngini = 0.219\nsamples = 16\nvalue = [2, 14]\nclass = Malicious"] ;
45 -> 47 ;
48 [label="gini = 0.0\nsamples = 6\nvalue = [0, 6]\nclass = Malicious"] ;
47 -> 48 ;
49 [label="gini = 0.32\nsamples = 10\nvalue = [2, 8]\nclass = Malicious"] ;
47 -> 49 ;
50 [label="returnstatement <= 0.5\ngini = 0.061\nsamples = 726\nvalue = [703, 23]\nclass = Benign"] ;
12 -> 50 ;
51 [label="emptystatement <= 0.5\ngini = 0.025\nsamples = 698\nvalue = [689, 9]\nclass = Benign"] ;
50 -> 51 ;
52 [label="assignmentoperator <= 0.5\ngini = 0.014\nsamples = 692\nvalue = [687, 5]\nclass = Benign"] ;
51 -> 52 ;
53 [label="gini = 0.0\nsamples = 613\nvalue = [613, 0]\nclass = Benign"] ;
52 -> 53 ;
54 [label="identifiername <= 0.5\ngini = 0.119\nsamples = 79\nvalue = [74, 5]\nclass = Benign"] ;
52 -> 54 ;
55 [label="gini = 0.0\nsamples = 5\nvalue = [0, 5]\nclass = Malicious"] ;
54 -> 55 ;
56 [label="gini = 0.0\nsamples = 74\nvalue = [74, 0]\nclass = Benign"] ;
54 -> 56 ;
57 [label="parenthesizedexpression <= 0.5\ngini = 0.444\nsamples = 6\nvalue = [2, 4]\nclass = Malicious"] ;
51 -> 57 ;
58 [label="gini = 0.0\nsamples = 4\nvalue = [0, 4]\nclass = Malicious"] ;
57 -> 58 ;
59 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
57 -> 59 ;
60 [label="assignmentoperator <= 0.5\ngini = 0.5\nsamples = 28\nvalue = [14, 14]\nclass = Benign"] ;
50 -> 60 ;
61 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
60 -> 61 ;
62 [label="gini = 0.0\nsamples = 14\nvalue = [0, 14]\nclass = Malicious"] ;
60 -> 62 ;
63 [label="parenthesizedexpression <= 0.5\ngini = 0.45\nsamples = 2266\nvalue = [775, 1491]\nclass = Malicious"] ;
5 -> 63 ;
64 [label="arguments <= 0.5\ngini = 0.498\nsamples = 1333\nvalue = [712, 621]\nclass = Benign"] ;
63 -> 64 ;
65 [label="gini = 0.0\nsamples = 338\nvalue = [338, 0]\nclass = Benign"] ;
64 -> 65 ;
66 [label="functionexpression <= 0.5\ngini = 0.469\nsamples = 995\nvalue = [374, 621]\nclass = Malicious"] ;
64 -> 66 ;
67 [label="block <= 0.5\ngini = 0.374\nsamples = 827\nvalue = [206, 621]\nclass = Malicious"] ;
66 -> 67 ;
68 [label="varmodifier <= 0.5\ngini = 0.332\nsamples = 786\nvalue = [165, 621]\nclass = Malicious"] ;
67 -> 68 ;
69 [label="equalityexpression <= 0.5\ngini = 0.456\nsamples = 396\nvalue = [139, 257]\nclass = Malicious"] ;
68 -> 69 ;
70 [label="identifiername <= 0.5\ngini = 0.498\nsamples = 261\nvalue = [139, 122]\nclass = Benign"] ;
69 -> 70 ;
71 [label="gini = 0.0\nsamples = 28\nvalue = [28, 0]\nclass = Benign"] ;
70 -> 71 ;
72 [label="additiveexpression <= 0.5\ngini = 0.499\nsamples = 233\nvalue = [111, 122]\nclass = Malicious"] ;
70 -> 72 ;
73 [label="logicalandexpression <= 0.5\ngini = 0.489\nsamples = 213\nvalue = [91, 122]\nclass = Malicious"] ;
72 -> 73 ;
74 [label="arrayliteralexpression <= 0.5\ngini = 0.483\nsamples = 206\nvalue = [84, 122]\nclass = Malicious"] ;
73 -> 74 ;
75 [label="assignmentexpression <= 0.5\ngini = 0.476\nsamples = 200\nvalue = [78, 122]\nclass = Malicious"] ;
74 -> 75 ;
76 [label="gini = 0.472\nsamples = 197\nvalue = [75, 122]\nclass = Malicious"] ;
75 -> 76 ;
77 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
75 -> 77 ;
78 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
74 -> 78 ;
79 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
73 -> 79 ;
80 [label="gini = 0.0\nsamples = 20\nvalue = [20, 0]\nclass = Benign"] ;
72 -> 80 ;
81 [label="gini = 0.0\nsamples = 135\nvalue = [0, 135]\nclass = Malicious"] ;
69 -> 81 ;
82 [label="memberdotexpression <= 0.5\ngini = 0.124\nsamples = 390\nvalue = [26, 364]\nclass = Malicious"] ;
68 -> 82 ;
83 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
82 -> 83 ;
84 [label="multiplicativeexpression <= 0.5\ngini = 0.085\nsamples = 381\nvalue = [17, 364]\nclass = Malicious"] ;
82 -> 84 ;
85 [label="assignmentexpression <= 0.5\ngini = 0.057\nsamples = 375\nvalue = [11, 364]\nclass = Malicious"] ;
84 -> 85 ;
86 [label="unaryminusexpression <= 0.5\ngini = 0.032\nsamples = 370\nvalue = [6, 364]\nclass = Malicious"] ;
85 -> 86 ;
87 [label="additiveexpression <= 0.5\ngini = 0.027\nsamples = 369\nvalue = [5, 364]\nclass = Malicious"] ;
86 -> 87 ;
88 [label="gini = 0.043\nsamples = 230\nvalue = [5, 225]\nclass = Malicious"] ;
87 -> 88 ;
89 [label="gini = 0.0\nsamples = 139\nvalue = [0, 139]\nclass = Malicious"] ;
87 -> 89 ;
90 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
86 -> 90 ;
91 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
85 -> 91 ;
92 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
84 -> 92 ;
93 [label="gini = 0.0\nsamples = 41\nvalue = [41, 0]\nclass = Benign"] ;
67 -> 93 ;
94 [label="gini = 0.0\nsamples = 168\nvalue = [168, 0]\nclass = Benign"] ;
66 -> 94 ;
95 [label="assignmentexpression <= 0.5\ngini = 0.126\nsamples = 933\nvalue = [63, 870]\nclass = Malicious"] ;
63 -> 95 ;
96 [label="returnstatement <= 0.5\ngini = 0.043\nsamples = 46\nvalue = [45, 1]\nclass = Benign"] ;
95 -> 96 ;
97 [label="gini = 0.0\nsamples = 45\nvalue = [45, 0]\nclass = Benign"] ;
96 -> 97 ;
98 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
96 -> 98 ;
99 [label="formalparameterarg <= 0.5\ngini = 0.04\nsamples = 887\nvalue = [18, 869]\nclass = Malicious"] ;
95 -> 99 ;
100 [label="unaryminusexpression <= 0.5\ngini = 0.009\nsamples = 873\nvalue = [4, 869]\nclass = Malicious"] ;
99 -> 100 ;
101 [label="thisexpression <= 0.5\ngini = 0.005\nsamples = 871\nvalue = [2, 869]\nclass = Malicious"] ;
100 -> 101 ;
102 [label="relationalexpression <= 0.5\ngini = 0.002\nsamples = 870\nvalue = [1, 869]\nclass = Malicious"] ;
101 -> 102 ;
103 [label="gini = 0.0\nsamples = 860\nvalue = [0, 860]\nclass = Malicious"] ;
102 -> 103 ;
104 [label="assignmentoperatorexpression <= 0.5\ngini = 0.18\nsamples = 10\nvalue = [1, 9]\nclass = Malicious"] ;
102 -> 104 ;
105 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
104 -> 105 ;
106 [label="gini = 0.0\nsamples = 9\nvalue = [0, 9]\nclass = Malicious"] ;
104 -> 106 ;
107 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
101 -> 107 ;
108 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
100 -> 108 ;
109 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
99 -> 109 ;
110 [label="assignmentexpression <= 0.5\ngini = 0.246\nsamples = 2017\nvalue = [290, 1727]\nclass = Malicious"] ;
2 -> 110 ;
111 [label="arrayliteralexpression <= 0.5\ngini = 0.057\nsamples = 1778\nvalue = [52, 1726]\nclass = Malicious"] ;
110 -> 111 ;
112 [label="literal <= 0.5\ngini = 0.037\nsamples = 1759\nvalue = [33, 1726]\nclass = Malicious"] ;
111 -> 112 ;
113 [label="gini = 0.0\nsamples = 12\nvalue = [12, 0]\nclass = Benign"] ;
112 -> 113 ;
114 [label="expressionsequence <= 0.5\ngini = 0.024\nsamples = 1747\nvalue = [21, 1726]\nclass = Malicious"] ;
112 -> 114 ;
115 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
114 -> 115 ;
116 [label="varmodifier <= 0.5\ngini = 0.018\nsamples = 1742\nvalue = [16, 1726]\nclass = Malicious"] ;
114 -> 116 ;
117 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
116 -> 117 ;
118 [label="statementlist <= 0.5\ngini = 0.014\nsamples = 1738\nvalue = [12, 1726]\nclass = Malicious"] ;
116 -> 118 ;
119 [label="additiveexpression <= 0.5\ngini = 0.009\nsamples = 1732\nvalue = [8, 1724]\nclass = Malicious"] ;
118 -> 119 ;
120 [label="memberdotexpression <= 0.5\ngini = 0.006\nsamples = 1726\nvalue = [5, 1721]\nclass = Malicious"] ;
119 -> 120 ;
121 [label="gini = 0.0\nsamples = 1106\nvalue = [0, 1106]\nclass = Malicious"] ;
120 -> 121 ;
122 [label="numericliteral <= 0.5\ngini = 0.016\nsamples = 620\nvalue = [5, 615]\nclass = Malicious"] ;
120 -> 122 ;
123 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
122 -> 123 ;
124 [label="formalparameterlist <= 0.5\ngini = 0.006\nsamples = 617\nvalue = [2, 615]\nclass = Malicious"] ;
122 -> 124 ;
125 [label="gini = 0.444\nsamples = 6\nvalue = [2, 4]\nclass = Malicious"] ;
124 -> 125 ;
126 [label="gini = 0.0\nsamples = 611\nvalue = [0, 611]\nclass = Malicious"] ;
124 -> 126 ;
127 [label="numericliteral <= 0.5\ngini = 0.5\nsamples = 6\nvalue = [3, 3]\nclass = Benign"] ;
119 -> 127 ;
128 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
127 -> 128 ;
129 [label="gini = 0.0\nsamples = 3\nvalue = [0, 3]\nclass = Malicious"] ;
127 -> 129 ;
130 [label="additiveexpression <= 0.5\ngini = 0.444\nsamples = 6\nvalue = [4, 2]\nclass = Benign"] ;
118 -> 130 ;
131 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
130 -> 131 ;
132 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
130 -> 132 ;
133 [label="gini = 0.0\nsamples = 19\nvalue = [19, 0]\nclass = Benign"] ;
111 -> 133 ;
134 [label="assignmentoperatorexpression <= 0.5\ngini = 0.008\nsamples = 239\nvalue = [238, 1]\nclass = Benign"] ;
110 -> 134 ;
135 [label="gini = 0.0\nsamples = 238\nvalue = [238, 0]\nclass = Benign"] ;
134 -> 135 ;
136 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
134 -> 136 ;
137 [label="arguments <= 0.5\ngini = 0.116\nsamples = 6565\nvalue = [404, 6161]\nclass = Malicious"] ;
1 -> 137 ;
138 [label="gini = 0.0\nsamples = 132\nvalue = [132, 0]\nclass = Benign"] ;
137 -> 138 ;
139 [label="forvarinstatement <= 0.5\ngini = 0.081\nsamples = 6433\nvalue = [272, 6161]\nclass = Malicious"] ;
137 -> 139 ;
140 [label="logicalorexpression <= 0.5\ngini = 0.064\nsamples = 6372\nvalue = [211, 6161]\nclass = Malicious"] ;
139 -> 140 ;
141 [label="deleteexpression <= 0.5\ngini = 0.046\nsamples = 6311\nvalue = [150, 6161]\nclass = Malicious"] ;
140 -> 141 ;
142 [label="notexpression <= 0.5\ngini = 0.041\nsamples = 6294\nvalue = [133, 6161]\nclass = Malicious"] ;
141 -> 142 ;
143 [label="ternaryexpression <= 0.5\ngini = 0.037\nsamples = 6270\nvalue = [118, 6152]\nclass = Malicious"] ;
142 -> 143 ;
144 [label="functionbody <= 0.5\ngini = 0.036\nsamples = 6266\nvalue = [114, 6152]\nclass = Malicious"] ;
143 -> 144 ;
145 [label="arrayliteral <= 0.5\ngini = 0.013\nsamples = 3921\nvalue = [25, 3896]\nclass = Malicious"] ;
144 -> 145 ;
146 [label="newexpression <= 0.5\ngini = 0.04\nsamples = 1217\nvalue = [25, 1192]\nclass = Malicious"] ;
145 -> 146 ;
147 [label="equalityexpression <= 0.5\ngini = 0.028\nsamples = 1196\nvalue = [17, 1179]\nclass = Malicious"] ;
146 -> 147 ;
148 [label="statementlist <= 0.5\ngini = 0.026\nsamples = 1195\nvalue = [16, 1179]\nclass = Malicious"] ;
147 -> 148 ;
149 [label="assignmentexpression <= 0.5\ngini = 0.013\nsamples = 1075\nvalue = [7, 1068]\nclass = Malicious"] ;
148 -> 149 ;
150 [label="numericliteral <= 0.5\ngini = 0.006\nsamples = 951\nvalue = [3, 948]\nclass = Malicious"] ;
149 -> 150 ;
151 [label="variabledeclaration <= 0.5\ngini = 0.003\nsamples = 780\nvalue = [1, 779]\nclass = Malicious"] ;
150 -> 151 ;
152 [label="memberdotexpression <= 0.5\ngini = 0.007\nsamples = 277\nvalue = [1, 276]\nclass = Malicious"] ;
151 -> 152 ;
153 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
152 -> 153 ;
154 [label="gini = 0.0\nsamples = 276\nvalue = [0, 276]\nclass = Malicious"] ;
152 -> 154 ;
155 [label="gini = 0.0\nsamples = 503\nvalue = [0, 503]\nclass = Malicious"] ;
151 -> 155 ;
156 [label="ifstatement <= 0.5\ngini = 0.023\nsamples = 171\nvalue = [2, 169]\nclass = Malicious"] ;
150 -> 156 ;
157 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
156 -> 157 ;
158 [label="gini = 0.0\nsamples = 169\nvalue = [0, 169]\nclass = Malicious"] ;
156 -> 158 ;
159 [label="relationalexpression <= 0.5\ngini = 0.062\nsamples = 124\nvalue = [4, 120]\nclass = Malicious"] ;
149 -> 159 ;
160 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
159 -> 160 ;
161 [label="gini = 0.0\nsamples = 120\nvalue = [0, 120]\nclass = Malicious"] ;
159 -> 161 ;
162 [label="relationalexpression <= 0.5\ngini = 0.139\nsamples = 120\nvalue = [9, 111]\nclass = Malicious"] ;
148 -> 162 ;
163 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
162 -> 163 ;
164 [label="additiveexpression <= 0.5\ngini = 0.018\nsamples = 112\nvalue = [1, 111]\nclass = Malicious"] ;
162 -> 164 ;
165 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
164 -> 165 ;
166 [label="gini = 0.0\nsamples = 111\nvalue = [0, 111]\nclass = Malicious"] ;
164 -> 166 ;
167 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
147 -> 167 ;
168 [label="relationalexpression <= 0.5\ngini = 0.472\nsamples = 21\nvalue = [8, 13]\nclass = Malicious"] ;
146 -> 168 ;
169 [label="unaryplusexpression <= 0.5\ngini = 0.444\nsamples = 12\nvalue = [8, 4]\nclass = Benign"] ;
168 -> 169 ;
170 [label="assignmentoperator <= 0.5\ngini = 0.32\nsamples = 10\nvalue = [8, 2]\nclass = Benign"] ;
169 -> 170 ;
171 [label="variablestatement <= 0.5\ngini = 0.198\nsamples = 9\nvalue = [8, 1]\nclass = Benign"] ;
170 -> 171 ;
172 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
171 -> 172 ;
173 [label="identifiername <= 0.5\ngini = 0.32\nsamples = 5\nvalue = [4, 1]\nclass = Benign"] ;
171 -> 173 ;
174 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
173 -> 174 ;
175 [label="additiveexpression <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
173 -> 175 ;
176 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
175 -> 176 ;
177 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
175 -> 177 ;
178 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
170 -> 178 ;
179 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
169 -> 179 ;
180 [label="gini = 0.0\nsamples = 9\nvalue = [0, 9]\nclass = Malicious"] ;
168 -> 180 ;
181 [label="gini = 0.0\nsamples = 2704\nvalue = [0, 2704]\nclass = Malicious"] ;
145 -> 181 ;
182 [label="returnstatement <= 0.5\ngini = 0.073\nsamples = 2345\nvalue = [89, 2256]\nclass = Malicious"] ;
144 -> 182 ;
183 [label="thisexpression <= 0.5\ngini = 0.404\nsamples = 249\nvalue = [70, 179]\nclass = Malicious"] ;
182 -> 183 ;
184 [label="newexpression <= 0.5\ngini = 0.229\nsamples = 76\nvalue = [66, 10]\nclass = Benign"] ;
183 -> 184 ;
185 [label="gini = 0.0\nsamples = 61\nvalue = [61, 0]\nclass = Benign"] ;
184 -> 185 ;
186 [label="formalparameterlist <= 0.5\ngini = 0.444\nsamples = 15\nvalue = [5, 10]\nclass = Malicious"] ;
184 -> 186 ;
187 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
186 -> 187 ;
188 [label="block <= 0.5\ngini = 0.165\nsamples = 11\nvalue = [1, 10]\nclass = Malicious"] ;
186 -> 188 ;
189 [label="gini = 0.0\nsamples = 10\nvalue = [0, 10]\nclass = Malicious"] ;
188 -> 189 ;
190 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
188 -> 190 ;
191 [label="relationalexpression <= 0.5\ngini = 0.045\nsamples = 173\nvalue = [4, 169]\nclass = Malicious"] ;
183 -> 191 ;
192 [label="formalparameterlist <= 0.5\ngini = 0.012\nsamples = 170\nvalue = [1, 169]\nclass = Malicious"] ;
191 -> 192 ;
193 [label="gini = 0.0\nsamples = 169\nvalue = [0, 169]\nclass = Malicious"] ;
192 -> 193 ;
194 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
192 -> 194 ;
195 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
191 -> 195 ;
196 [label="whilestatement <= 0.5\ngini = 0.018\nsamples = 2096\nvalue = [19, 2077]\nclass = Malicious"] ;
182 -> 196 ;
197 [label="typeofexpression <= 0.5\ngini = 0.015\nsamples = 2093\nvalue = [16, 2077]\nclass = Malicious"] ;
196 -> 197 ;
198 [label="preincrementexpression <= 0.5\ngini = 0.014\nsamples = 2092\nvalue = [15, 2077]\nclass = Malicious"] ;
197 -> 198 ;
199 [label="logicalandexpression <= 0.5\ngini = 0.013\nsamples = 2091\nvalue = [14, 2077]\nclass = Malicious"] ;
198 -> 199 ;
200 [label="assignmentexpression <= 0.5\ngini = 0.012\nsamples = 2088\nvalue = [13, 2075]\nclass = Malicious"] ;
199 -> 200 ;
201 [label="gini = 0.0\nsamples = 1472\nvalue = [0, 1472]\nclass = Malicious"] ;
200 -> 201 ;
202 [label="additiveexpression <= 0.5\ngini = 0.041\nsamples = 616\nvalue = [13, 603]\nclass = Malicious"] ;
200 -> 202 ;
203 [label="newexpression <= 0.5\ngini = 0.497\nsamples = 26\nvalue = [12, 14]\nclass = Malicious"] ;
202 -> 203 ;
204 [label="gini = 0.0\nsamples = 12\nvalue = [12, 0]\nclass = Benign"] ;
203 -> 204 ;
205 [label="gini = 0.0\nsamples = 14\nvalue = [0, 14]\nclass = Malicious"] ;
203 -> 205 ;
206 [label="parenthesizedexpression <= 0.5\ngini = 0.003\nsamples = 590\nvalue = [1, 589]\nclass = Malicious"] ;
202 -> 206 ;
207 [label="ifstatement <= 0.5\ngini = 0.198\nsamples = 9\nvalue = [1, 8]\nclass = Malicious"] ;
206 -> 207 ;
208 [label="gini = 0.0\nsamples = 8\nvalue = [0, 8]\nclass = Malicious"] ;
207 -> 208 ;
209 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
207 -> 209 ;
210 [label="gini = 0.0\nsamples = 581\nvalue = [0, 581]\nclass = Malicious"] ;
206 -> 210 ;
211 [label="emptystatement <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
199 -> 211 ;
212 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
211 -> 212 ;
213 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
211 -> 213 ;
214 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
198 -> 214 ;
215 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
197 -> 215 ;
216 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
196 -> 216 ;
217 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
143 -> 217 ;
218 [label="memberdotexpression <= 0.5\ngini = 0.469\nsamples = 24\nvalue = [15, 9]\nclass = Benign"] ;
142 -> 218 ;
219 [label="gini = 0.0\nsamples = 9\nvalue = [0, 9]\nclass = Malicious"] ;
218 -> 219 ;
220 [label="gini = 0.0\nsamples = 15\nvalue = [15, 0]\nclass = Benign"] ;
218 -> 220 ;
221 [label="gini = 0.0\nsamples = 17\nvalue = [17, 0]\nclass = Benign"] ;
141 -> 221 ;
222 [label="gini = 0.0\nsamples = 61\nvalue = [61, 0]\nclass = Benign"] ;
140 -> 222 ;
223 [label="gini = 0.0\nsamples = 61\nvalue = [61, 0]\nclass = Benign"] ;
139 -> 223 ;
224 [label="forstatement <= 0.5\ngini = 0.247\nsamples = 10729\nvalue = [9181, 1548]\nclass = Benign"] ;
0 -> 224 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
225 [label="bitshiftexpression <= 0.5\ngini = 0.013\nsamples = 9209\nvalue = [9147, 62]\nclass = Benign"] ;
224 -> 225 ;
226 [label="whilestatement <= 0.5\ngini = 0.001\nsamples = 9153\nvalue = [9147, 6]\nclass = Benign"] ;
225 -> 226 ;
227 [label="catchproduction <= 0.5\ngini = 0.001\nsamples = 9148\nvalue = [9144, 4]\nclass = Benign"] ;
226 -> 227 ;
228 [label="forvarstatement <= 0.5\ngini = 0.0\nsamples = 9038\nvalue = [9037, 1]\nclass = Benign"] ;
227 -> 228 ;
229 [label="gini = 0.0\nsamples = 8951\nvalue = [8951, 0]\nclass = Benign"] ;
228 -> 229 ;
230 [label="postincrementexpression <= 0.5\ngini = 0.023\nsamples = 87\nvalue = [86, 1]\nclass = Benign"] ;
228 -> 230 ;
231 [label="thisexpression <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
230 -> 231 ;
232 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
231 -> 232 ;
233 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
231 -> 233 ;
234 [label="gini = 0.0\nsamples = 85\nvalue = [85, 0]\nclass = Benign"] ;
230 -> 234 ;
235 [label="memberdotexpression <= 0.5\ngini = 0.053\nsamples = 110\nvalue = [107, 3]\nclass = Benign"] ;
227 -> 235 ;
236 [label="gini = 0.0\nsamples = 3\nvalue = [0, 3]\nclass = Malicious"] ;
235 -> 236 ;
237 [label="gini = 0.0\nsamples = 107\nvalue = [107, 0]\nclass = Benign"] ;
235 -> 237 ;
238 [label="returnstatement <= 0.5\ngini = 0.48\nsamples = 5\nvalue = [3, 2]\nclass = Benign"] ;
226 -> 238 ;
239 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
238 -> 239 ;
240 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
238 -> 240 ;
241 [label="gini = 0.0\nsamples = 56\nvalue = [0, 56]\nclass = Malicious"] ;
225 -> 241 ;
242 [label="ifstatement <= 0.5\ngini = 0.044\nsamples = 1520\nvalue = [34, 1486]\nclass = Malicious"] ;
224 -> 242 ;
243 [label="gini = 0.0\nsamples = 1483\nvalue = [0, 1483]\nclass = Malicious"] ;
242 -> 243 ;
244 [label="bitandexpression <= 0.5\ngini = 0.149\nsamples = 37\nvalue = [34, 3]\nclass = Benign"] ;
242 -> 244 ;
245 [label="gini = 0.0\nsamples = 34\nvalue = [34, 0]\nclass = Benign"] ;
244 -> 245 ;
246 [label="gini = 0.0\nsamples = 3\nvalue = [0, 3]\nclass = Malicious"] ;
244 -> 246 ;
}
