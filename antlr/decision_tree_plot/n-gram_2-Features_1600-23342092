igraph Tree {
node [shape=box] ;
0 [label="property_rules-propertyname <= 0.5\ngini = 0.5\nsamples = 27000\nvalue = [13489, 13511]\nclass = Malicious"] ;
1 [label="identifiername-identifiername <= 0.5\ngini = 0.404\nsamples = 16642\nvalue = [4673, 11969]\nclass = Malicious"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="expression_statement-expressionsequence <= 0.5\ngini = 0.35\nsamples = 15288\nvalue = [3454, 11834]\nclass = Malicious"] ;
1 -> 2 ;
3 [label="sourceElement_stuff-expressionstatement <= 0.5\ngini = 0.47\nsamples = 8056\nvalue = [3049, 5007]\nclass = Malicious"] ;
2 -> 3 ;
4 [label="argument_stuff-expression_statement <= 0.5\ngini = 0.406\nsamples = 5958\nvalue = [1689, 4269]\nclass = Malicious"] ;
3 -> 4 ;
5 [label="variable_stuff-variable_stuff <= 0.5\ngini = 0.49\nsamples = 3277\nvalue = [1410, 1867]\nclass = Malicious"] ;
4 -> 5 ;
6 [label="expressionsequence-expression_statement <= 0.5\ngini = 0.392\nsamples = 2549\nvalue = [682, 1867]\nclass = Malicious"] ;
5 -> 6 ;
7 [label="gini = 0.388\nsamples = 2536\nvalue = [669, 1867]\nclass = Malicious"] ;
6 -> 7 ;
8 [label="gini = 0.0\nsamples = 13\nvalue = [13, 0]\nclass = Benign"] ;
6 -> 8 ;
9 [label="gini = 0.0\nsamples = 728\nvalue = [728, 0]\nclass = Benign"] ;
5 -> 9 ;
10 [label="withstatement-expressionsequence <= 0.5\ngini = 0.186\nsamples = 2681\nvalue = [279, 2402]\nclass = Malicious"] ;
4 -> 10 ;
11 [label="expression_statement-identifiername <= 0.5\ngini = 0.123\nsamples = 2572\nvalue = [170, 2402]\nclass = Malicious"] ;
10 -> 11 ;
12 [label="trystatement-expressionstatement <= 0.5\ngini = 0.033\nsamples = 2295\nvalue = [38, 2257]\nclass = Malicious"] ;
11 -> 12 ;
13 [label="expression_statement-variable_stuff <= 0.5\ngini = 0.031\nsamples = 2293\nvalue = [36, 2257]\nclass = Malicious"] ;
12 -> 13 ;
14 [label="numericliteral-expression_statement <= 0.5\ngini = 0.023\nsamples = 2239\nvalue = [26, 2213]\nclass = Malicious"] ;
13 -> 14 ;
15 [label="expression_statement-sourceElement_stuff <= 0.5\ngini = 0.021\nsamples = 2237\nvalue = [24, 2213]\nclass = Malicious"] ;
14 -> 15 ;
16 [label="literal-variable_stuff <= 0.5\ngini = 0.019\nsamples = 2224\nvalue = [21, 2203]\nclass = Malicious"] ;
15 -> 16 ;
17 [label="literal-expressionstatement <= 0.5\ngini = 0.045\nsamples = 613\nvalue = [14, 599]\nclass = Malicious"] ;
16 -> 17 ;
18 [label="literal-expression_statement <= 0.5\ngini = 0.003\nsamples = 599\nvalue = [1, 598]\nclass = Malicious"] ;
17 -> 18 ;
19 [label="gini = 0.0\nsamples = 598\nvalue = [0, 598]\nclass = Malicious"] ;
18 -> 19 ;
20 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
18 -> 20 ;
21 [label="argument_stuff-identifiername <= 0.5\ngini = 0.133\nsamples = 14\nvalue = [13, 1]\nclass = Benign"] ;
17 -> 21 ;
22 [label="gini = 0.0\nsamples = 13\nvalue = [13, 0]\nclass = Benign"] ;
21 -> 22 ;
23 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
21 -> 23 ;
24 [label="literal-expression_statement <= 0.5\ngini = 0.009\nsamples = 1611\nvalue = [7, 1604]\nclass = Malicious"] ;
16 -> 24 ;
25 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.024\nsamples = 490\nvalue = [6, 484]\nclass = Malicious"] ;
24 -> 25 ;
26 [label="gini = 0.0\nsamples = 478\nvalue = [0, 478]\nclass = Malicious"] ;
25 -> 26 ;
27 [label="assignmentoperator-expression_statement <= 0.5\ngini = 0.5\nsamples = 12\nvalue = [6, 6]\nclass = Benign"] ;
25 -> 27 ;
28 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
27 -> 28 ;
29 [label="gini = 0.0\nsamples = 6\nvalue = [0, 6]\nclass = Malicious"] ;
27 -> 29 ;
30 [label="expressionstatement-expressionsequence <= 0.5\ngini = 0.002\nsamples = 1121\nvalue = [1, 1120]\nclass = Malicious"] ;
24 -> 30 ;
31 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
30 -> 31 ;
32 [label="gini = 0.0\nsamples = 1120\nvalue = [0, 1120]\nclass = Malicious"] ;
30 -> 32 ;
33 [label="argument_stuff-argument_stuff <= 0.5\ngini = 0.355\nsamples = 13\nvalue = [3, 10]\nclass = Malicious"] ;
15 -> 33 ;
34 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
33 -> 34 ;
35 [label="gini = 0.0\nsamples = 10\nvalue = [0, 10]\nclass = Malicious"] ;
33 -> 35 ;
36 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
14 -> 36 ;
37 [label="expressionstatement-expressionsequence <= 0.5\ngini = 0.302\nsamples = 54\nvalue = [10, 44]\nclass = Malicious"] ;
13 -> 37 ;
38 [label="gini = 0.0\nsamples = 10\nvalue = [10, 0]\nclass = Benign"] ;
37 -> 38 ;
39 [label="gini = 0.0\nsamples = 44\nvalue = [0, 44]\nclass = Malicious"] ;
37 -> 39 ;
40 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
12 -> 40 ;
41 [label="expression_statement-expressionstatement <= 0.5\ngini = 0.499\nsamples = 277\nvalue = [132, 145]\nclass = Malicious"] ;
11 -> 41 ;
42 [label="numericliteral-variable_stuff <= 0.5\ngini = 0.148\nsamples = 124\nvalue = [114, 10]\nclass = Benign"] ;
41 -> 42 ;
43 [label="gini = 0.0\nsamples = 110\nvalue = [110, 0]\nclass = Benign"] ;
42 -> 43 ;
44 [label="literal-expressionstatement <= 0.5\ngini = 0.408\nsamples = 14\nvalue = [4, 10]\nclass = Malicious"] ;
42 -> 44 ;
45 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
44 -> 45 ;
46 [label="sourceElement_stuff-ifstatement <= 0.5\ngini = 0.165\nsamples = 11\nvalue = [1, 10]\nclass = Malicious"] ;
44 -> 46 ;
47 [label="gini = 0.0\nsamples = 10\nvalue = [0, 10]\nclass = Malicious"] ;
46 -> 47 ;
48 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
46 -> 48 ;
49 [label="ifstatement-expressionsequence <= 0.5\ngini = 0.208\nsamples = 153\nvalue = [18, 135]\nclass = Malicious"] ;
41 -> 49 ;
50 [label="argument_stuff-expressionstatement <= 0.5\ngini = 0.069\nsamples = 140\nvalue = [5, 135]\nclass = Malicious"] ;
49 -> 50 ;
51 [label="literal-identifiername <= 0.5\ngini = 0.015\nsamples = 136\nvalue = [1, 135]\nclass = Malicious"] ;
50 -> 51 ;
52 [label="gini = 0.0\nsamples = 135\nvalue = [0, 135]\nclass = Malicious"] ;
51 -> 52 ;
53 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
51 -> 53 ;
54 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
50 -> 54 ;
55 [label="gini = 0.0\nsamples = 13\nvalue = [13, 0]\nclass = Benign"] ;
49 -> 55 ;
56 [label="gini = 0.0\nsamples = 109\nvalue = [109, 0]\nclass = Benign"] ;
10 -> 56 ;
57 [label="argument_stuff-identifiername <= 0.5\ngini = 0.456\nsamples = 2098\nvalue = [1360, 738]\nclass = Benign"] ;
3 -> 57 ;
58 [label="numericliteral-variable_stuff <= 0.5\ngini = 0.332\nsamples = 1698\nvalue = [1341, 357]\nclass = Benign"] ;
57 -> 58 ;
59 [label="numericliteral-expressionstatement <= 0.5\ngini = 0.166\nsamples = 1426\nvalue = [1296, 130]\nclass = Benign"] ;
58 -> 59 ;
60 [label="expression_statement-assignmentoperator <= 0.5\ngini = 0.018\nsamples = 1190\nvalue = [1179, 11]\nclass = Benign"] ;
59 -> 60 ;
61 [label="gini = 0.0\nsamples = 1176\nvalue = [1176, 0]\nclass = Benign"] ;
60 -> 61 ;
62 [label="returnstatement-expressionsequence <= 0.5\ngini = 0.337\nsamples = 14\nvalue = [3, 11]\nclass = Malicious"] ;
60 -> 62 ;
63 [label="literal-expression_statement <= 0.5\ngini = 0.153\nsamples = 12\nvalue = [1, 11]\nclass = Malicious"] ;
62 -> 63 ;
64 [label="gini = 0.0\nsamples = 11\nvalue = [0, 11]\nclass = Malicious"] ;
63 -> 64 ;
65 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
63 -> 65 ;
66 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
62 -> 66 ;
67 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.5\nsamples = 236\nvalue = [117, 119]\nclass = Malicious"] ;
59 -> 67 ;
68 [label="gini = 0.0\nsamples = 63\nvalue = [63, 0]\nclass = Benign"] ;
67 -> 68 ;
69 [label="literal-expressionstatement <= 0.5\ngini = 0.429\nsamples = 173\nvalue = [54, 119]\nclass = Malicious"] ;
67 -> 69 ;
70 [label="gini = 0.0\nsamples = 39\nvalue = [39, 0]\nclass = Benign"] ;
69 -> 70 ;
71 [label="sourceElement_stuff-sourceElement_stuff <= 0.5\ngini = 0.199\nsamples = 134\nvalue = [15, 119]\nclass = Malicious"] ;
69 -> 71 ;
72 [label="gini = 0.0\nsamples = 119\nvalue = [0, 119]\nclass = Malicious"] ;
71 -> 72 ;
73 [label="gini = 0.0\nsamples = 15\nvalue = [15, 0]\nclass = Benign"] ;
71 -> 73 ;
74 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.276\nsamples = 272\nvalue = [45, 227]\nclass = Malicious"] ;
58 -> 74 ;
75 [label="identifiername-expression_statement <= 0.5\ngini = 0.081\nsamples = 237\nvalue = [10, 227]\nclass = Malicious"] ;
74 -> 75 ;
76 [label="gini = 0.0\nsamples = 227\nvalue = [0, 227]\nclass = Malicious"] ;
75 -> 76 ;
77 [label="gini = 0.0\nsamples = 10\nvalue = [10, 0]\nclass = Benign"] ;
75 -> 77 ;
78 [label="gini = 0.0\nsamples = 35\nvalue = [35, 0]\nclass = Benign"] ;
74 -> 78 ;
79 [label="expression_statement-sourceElement_stuff <= 0.5\ngini = 0.09\nsamples = 400\nvalue = [19, 381]\nclass = Malicious"] ;
57 -> 79 ;
80 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.021\nsamples = 385\nvalue = [4, 381]\nclass = Malicious"] ;
79 -> 80 ;
81 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
80 -> 81 ;
82 [label="expression_statement-identifiername <= 0.5\ngini = 0.005\nsamples = 382\nvalue = [1, 381]\nclass = Malicious"] ;
80 -> 82 ;
83 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
82 -> 83 ;
84 [label="gini = 0.0\nsamples = 381\nvalue = [0, 381]\nclass = Malicious"] ;
82 -> 84 ;
85 [label="gini = 0.0\nsamples = 15\nvalue = [15, 0]\nclass = Benign"] ;
79 -> 85 ;
86 [label="withstatement-expressionsequence <= 0.5\ngini = 0.106\nsamples = 7232\nvalue = [405, 6827]\nclass = Malicious"] ;
2 -> 86 ;
87 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.093\nsamples = 7180\nvalue = [353, 6827]\nclass = Malicious"] ;
86 -> 87 ;
88 [label="literal-returnstatement <= 0.5\ngini = 0.41\nsamples = 699\nvalue = [201, 498]\nclass = Malicious"] ;
87 -> 88 ;
89 [label="argument_stuff-expressionstatement <= 0.5\ngini = 0.101\nsamples = 188\nvalue = [178, 10]\nclass = Benign"] ;
88 -> 89 ;
90 [label="gini = 0.0\nsamples = 178\nvalue = [178, 0]\nclass = Benign"] ;
89 -> 90 ;
91 [label="gini = 0.0\nsamples = 10\nvalue = [0, 10]\nclass = Malicious"] ;
89 -> 91 ;
92 [label="expression_statement-expressionstatement <= 0.5\ngini = 0.086\nsamples = 511\nvalue = [23, 488]\nclass = Malicious"] ;
88 -> 92 ;
93 [label="gini = 0.0\nsamples = 488\nvalue = [0, 488]\nclass = Malicious"] ;
92 -> 93 ;
94 [label="gini = 0.0\nsamples = 23\nvalue = [23, 0]\nclass = Benign"] ;
92 -> 94 ;
95 [label="litereral_stuff-expressionstatement <= 0.5\ngini = 0.046\nsamples = 6481\nvalue = [152, 6329]\nclass = Malicious"] ;
87 -> 95 ;
96 [label="argument_stuff-ifstatement <= 0.5\ngini = 0.035\nsamples = 6445\nvalue = [116, 6329]\nclass = Malicious"] ;
95 -> 96 ;
97 [label="variable_stuff-expressionsequence <= 0.5\ngini = 0.03\nsamples = 6427\nvalue = [98, 6329]\nclass = Malicious"] ;
96 -> 97 ;
98 [label="numericliteral-identifiername <= 0.5\ngini = 0.026\nsamples = 6413\nvalue = [84, 6329]\nclass = Malicious"] ;
97 -> 98 ;
99 [label="argument_stuff-expression_statement <= 0.5\ngini = 0.017\nsamples = 6306\nvalue = [55, 6251]\nclass = Malicious"] ;
98 -> 99 ;
100 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
99 -> 100 ;
101 [label="formalParameterArg_stuff-formalParameterArg_stuff <= 0.5\ngini = 0.015\nsamples = 6300\nvalue = [49, 6251]\nclass = Malicious"] ;
99 -> 101 ;
102 [label="numericliteral-ifstatement <= 0.5\ngini = 0.013\nsamples = 6272\nvalue = [40, 6232]\nclass = Malicious"] ;
101 -> 102 ;
103 [label="litereral_stuff-expressionsequence <= 0.5\ngini = 0.009\nsamples = 6230\nvalue = [29, 6201]\nclass = Malicious"] ;
102 -> 103 ;
104 [label="returnstatement-expressionstatement <= 0.5\ngini = 0.009\nsamples = 6228\nvalue = [27, 6201]\nclass = Malicious"] ;
103 -> 104 ;
105 [label="returnstatement-ifstatement <= 0.5\ngini = 0.008\nsamples = 6226\nvalue = [25, 6201]\nclass = Malicious"] ;
104 -> 105 ;
106 [label="litereral_stuff-identifiername <= 0.5\ngini = 0.008\nsamples = 6225\nvalue = [24, 6201]\nclass = Malicious"] ;
105 -> 106 ;
107 [label="expression_statement-sourceElement_stuff <= 0.5\ngini = 0.007\nsamples = 6224\nvalue = [23, 6201]\nclass = Malicious"] ;
106 -> 107 ;
108 [label="ifstatement-expressionsequence <= 0.5\ngini = 0.002\nsamples = 5637\nvalue = [7, 5630]\nclass = Malicious"] ;
107 -> 108 ;
109 [label="identifiername-expressionstatement <= 0.5\ngini = 0.011\nsamples = 1093\nvalue = [6, 1087]\nclass = Malicious"] ;
108 -> 109 ;
110 [label="argument_stuff-expressionstatement <= 0.5\ngini = 0.009\nsamples = 1091\nvalue = [5, 1086]\nclass = Malicious"] ;
109 -> 110 ;
111 [label="literal-expressionsequence <= 0.5\ngini = 0.006\nsamples = 1076\nvalue = [3, 1073]\nclass = Malicious"] ;
110 -> 111 ;
112 [label="identifiername-argument_stuff <= 0.5\ngini = 0.004\nsamples = 1072\nvalue = [2, 1070]\nclass = Malicious"] ;
111 -> 112 ;
113 [label="literal-variable_stuff <= 0.5\ngini = 0.105\nsamples = 18\nvalue = [1, 17]\nclass = Malicious"] ;
112 -> 113 ;
114 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
113 -> 114 ;
115 [label="gini = 0.0\nsamples = 17\nvalue = [0, 17]\nclass = Malicious"] ;
113 -> 115 ;
116 [label="identifiername-expression_statement <= 0.5\ngini = 0.002\nsamples = 1054\nvalue = [1, 1053]\nclass = Malicious"] ;
112 -> 116 ;
117 [label="gini = 0.0\nsamples = 946\nvalue = [0, 946]\nclass = Malicious"] ;
116 -> 117 ;
118 [label="literal-variable_stuff <= 0.5\ngini = 0.018\nsamples = 108\nvalue = [1, 107]\nclass = Malicious"] ;
116 -> 118 ;
119 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
118 -> 119 ;
120 [label="gini = 0.0\nsamples = 107\nvalue = [0, 107]\nclass = Malicious"] ;
118 -> 120 ;
121 [label="expression_statement-variable_stuff <= 0.5\ngini = 0.375\nsamples = 4\nvalue = [1, 3]\nclass = Malicious"] ;
111 -> 121 ;
122 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
121 -> 122 ;
123 [label="gini = 0.0\nsamples = 3\nvalue = [0, 3]\nclass = Malicious"] ;
121 -> 123 ;
124 [label="sourceElement_stuff-expressionstatement <= 0.5\ngini = 0.231\nsamples = 15\nvalue = [2, 13]\nclass = Malicious"] ;
110 -> 124 ;
125 [label="expression_statement-identifiername <= 0.5\ngini = 0.133\nsamples = 14\nvalue = [1, 13]\nclass = Malicious"] ;
124 -> 125 ;
126 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
125 -> 126 ;
127 [label="gini = 0.0\nsamples = 13\nvalue = [0, 13]\nclass = Malicious"] ;
125 -> 127 ;
128 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
124 -> 128 ;
129 [label="identifiername-argument_stuff <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
109 -> 129 ;
130 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
129 -> 130 ;
131 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
129 -> 131 ;
132 [label="expression_statement-variable_stuff <= 0.5\ngini = 0.0\nsamples = 4544\nvalue = [1, 4543]\nclass = Malicious"] ;
108 -> 132 ;
133 [label="gini = 0.0\nsamples = 4229\nvalue = [0, 4229]\nclass = Malicious"] ;
132 -> 133 ;
134 [label="element_stuff-expression_statement <= 0.5\ngini = 0.006\nsamples = 315\nvalue = [1, 314]\nclass = Malicious"] ;
132 -> 134 ;
135 [label="numericliteral-variable_stuff <= 0.5\ngini = 0.219\nsamples = 8\nvalue = [1, 7]\nclass = Malicious"] ;
134 -> 135 ;
136 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
135 -> 136 ;
137 [label="gini = 0.0\nsamples = 7\nvalue = [0, 7]\nclass = Malicious"] ;
135 -> 137 ;
138 [label="gini = 0.0\nsamples = 307\nvalue = [0, 307]\nclass = Malicious"] ;
134 -> 138 ;
139 [label="literal-variable_stuff <= 0.5\ngini = 0.053\nsamples = 587\nvalue = [16, 571]\nclass = Malicious"] ;
107 -> 139 ;
140 [label="numericliteral-variable_stuff <= 0.5\ngini = 0.124\nsamples = 15\nvalue = [14, 1]\nclass = Benign"] ;
139 -> 140 ;
141 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
140 -> 141 ;
142 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
140 -> 142 ;
143 [label="literal-expressionstatement <= 0.5\ngini = 0.007\nsamples = 572\nvalue = [2, 570]\nclass = Malicious"] ;
139 -> 143 ;
144 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
143 -> 144 ;
145 [label="expression_statement-ifstatement <= 0.5\ngini = 0.003\nsamples = 571\nvalue = [1, 570]\nclass = Malicious"] ;
143 -> 145 ;
146 [label="gini = 0.0\nsamples = 570\nvalue = [0, 570]\nclass = Malicious"] ;
145 -> 146 ;
147 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
145 -> 147 ;
148 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
106 -> 148 ;
149 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
105 -> 149 ;
150 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
104 -> 150 ;
151 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
103 -> 151 ;
152 [label="expression_statement-sourceElement_stuff <= 0.5\ngini = 0.387\nsamples = 42\nvalue = [11, 31]\nclass = Malicious"] ;
102 -> 152 ;
153 [label="gini = 0.0\nsamples = 31\nvalue = [0, 31]\nclass = Malicious"] ;
152 -> 153 ;
154 [label="gini = 0.0\nsamples = 11\nvalue = [11, 0]\nclass = Benign"] ;
152 -> 154 ;
155 [label="literal-numericliteral <= 0.5\ngini = 0.436\nsamples = 28\nvalue = [9, 19]\nclass = Malicious"] ;
101 -> 155 ;
156 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
155 -> 156 ;
157 [label="gini = 0.0\nsamples = 19\nvalue = [0, 19]\nclass = Malicious"] ;
155 -> 157 ;
158 [label="numericliteral-continue_break_statement <= 0.5\ngini = 0.395\nsamples = 107\nvalue = [29, 78]\nclass = Malicious"] ;
98 -> 158 ;
159 [label="continue_break_statement-catchproduction <= 0.5\ngini = 0.064\nsamples = 30\nvalue = [29, 1]\nclass = Benign"] ;
158 -> 159 ;
160 [label="gini = 0.0\nsamples = 29\nvalue = [29, 0]\nclass = Benign"] ;
159 -> 160 ;
161 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
159 -> 161 ;
162 [label="gini = 0.0\nsamples = 77\nvalue = [0, 77]\nclass = Malicious"] ;
158 -> 162 ;
163 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
97 -> 163 ;
164 [label="gini = 0.0\nsamples = 18\nvalue = [18, 0]\nclass = Benign"] ;
96 -> 164 ;
165 [label="gini = 0.0\nsamples = 36\nvalue = [36, 0]\nclass = Benign"] ;
95 -> 165 ;
166 [label="gini = 0.0\nsamples = 52\nvalue = [52, 0]\nclass = Benign"] ;
86 -> 166 ;
167 [label="literal-trystatement <= 0.5\ngini = 0.18\nsamples = 1354\nvalue = [1219, 135]\nclass = Benign"] ;
1 -> 167 ;
168 [label="continue_break_statement-catchproduction <= 0.5\ngini = 0.003\nsamples = 1220\nvalue = [1218, 2]\nclass = Benign"] ;
167 -> 168 ;
169 [label="argument_stuff-variable_stuff <= 0.5\ngini = 0.002\nsamples = 1219\nvalue = [1218, 1]\nclass = Benign"] ;
168 -> 169 ;
170 [label="gini = 0.0\nsamples = 1166\nvalue = [1166, 0]\nclass = Benign"] ;
169 -> 170 ;
171 [label="literal-expression_statement <= 0.5\ngini = 0.037\nsamples = 53\nvalue = [52, 1]\nclass = Benign"] ;
169 -> 171 ;
172 [label="ifstatement-expressionsequence <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
171 -> 172 ;
173 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
172 -> 173 ;
174 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
172 -> 174 ;
175 [label="gini = 0.0\nsamples = 51\nvalue = [51, 0]\nclass = Benign"] ;
171 -> 175 ;
176 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
168 -> 176 ;
177 [label="expression_statement-formalparameterlist <= 0.5\ngini = 0.015\nsamples = 134\nvalue = [1, 133]\nclass = Malicious"] ;
167 -> 177 ;
178 [label="gini = 0.0\nsamples = 133\nvalue = [0, 133]\nclass = Malicious"] ;
177 -> 178 ;
179 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
177 -> 179 ;
180 [label="do_for_while_statement-expressionsequence <= 0.5\ngini = 0.253\nsamples = 10358\nvalue = [8816, 1542]\nclass = Benign"] ;
0 -> 180 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
181 [label="finallyproduction-expressionstatement <= 0.5\ngini = 0.006\nsamples = 8806\nvalue = [8778, 28]\nclass = Benign"] ;
180 -> 181 ;
182 [label="expression_statement-catchproduction <= 0.5\ngini = 0.001\nsamples = 8781\nvalue = [8778, 3]\nclass = Benign"] ;
181 -> 182 ;
183 [label="gini = 0.0\nsamples = 8767\nvalue = [8767, 0]\nclass = Benign"] ;
182 -> 183 ;
184 [label="expression_statement-identifiername <= 0.5\ngini = 0.337\nsamples = 14\nvalue = [11, 3]\nclass = Benign"] ;
182 -> 184 ;
185 [label="gini = 0.0\nsamples = 3\nvalue = [0, 3]\nclass = Malicious"] ;
184 -> 185 ;
186 [label="gini = 0.0\nsamples = 11\nvalue = [11, 0]\nclass = Benign"] ;
184 -> 186 ;
187 [label="gini = 0.0\nsamples = 25\nvalue = [0, 25]\nclass = Malicious"] ;
181 -> 187 ;
188 [label="numericliteral-property_rules <= 0.5\ngini = 0.048\nsamples = 1552\nvalue = [38, 1514]\nclass = Malicious"] ;
180 -> 188 ;
189 [label="expression_statement-property_rules <= 0.5\ngini = 0.009\nsamples = 1521\nvalue = [7, 1514]\nclass = Malicious"] ;
188 -> 189 ;
190 [label="identifiername-returnstatement <= 0.5\ngini = 0.003\nsamples = 1516\nvalue = [2, 1514]\nclass = Malicious"] ;
189 -> 190 ;
191 [label="gini = 0.0\nsamples = 1514\nvalue = [0, 1514]\nclass = Malicious"] ;
190 -> 191 ;
192 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
190 -> 192 ;
193 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
189 -> 193 ;
194 [label="gini = 0.0\nsamples = 31\nvalue = [31, 0]\nclass = Benign"] ;
188 -> 194 ;
}
