digraph Tree {
node [shape=box] ;
0 [label="litereral_stuff-property_rules <= 0.5\ngini = 0.5\nsamples = 27000\nvalue = [13488, 13512]\nclass = Malicious"] ;
1 [label="identifiername-identifiername <= 0.5\ngini = 0.404\nsamples = 16639\nvalue = [4675, 11964]\nclass = Malicious"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="expression_statement-expressionsequence <= 0.5\ngini = 0.35\nsamples = 15284\nvalue = [3459, 11825]\nclass = Malicious"] ;
1 -> 2 ;
3 [label="sourceElement_stuff-expressionstatement <= 0.5\ngini = 0.471\nsamples = 8081\nvalue = [3068, 5013]\nclass = Malicious"] ;
2 -> 3 ;
4 [label="argument_stuff-expression_statement <= 0.5\ngini = 0.407\nsamples = 5971\nvalue = [1696, 4275]\nclass = Malicious"] ;
3 -> 4 ;
5 [label="varmodifier-variable_stuff <= 0.5\ngini = 0.489\nsamples = 3280\nvalue = [1402, 1878]\nclass = Malicious"] ;
4 -> 5 ;
6 [label="expressionsequence-expression_statement <= 0.5\ngini = 0.389\nsamples = 2552\nvalue = [674, 1878]\nclass = Malicious"] ;
5 -> 6 ;
7 [label="gini = 0.385\nsamples = 2538\nvalue = [660, 1878]\nclass = Malicious"] ;
6 -> 7 ;
8 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
6 -> 8 ;
9 [label="gini = 0.0\nsamples = 728\nvalue = [728, 0]\nclass = Benign"] ;
5 -> 9 ;
10 [label="withstatement-expressionsequence <= 0.5\ngini = 0.195\nsamples = 2691\nvalue = [294, 2397]\nclass = Malicious"] ;
4 -> 10 ;
11 [label="expression_statement-identifiername <= 0.5\ngini = 0.131\nsamples = 2578\nvalue = [181, 2397]\nclass = Malicious"] ;
10 -> 11 ;
12 [label="sourceElement_stuff-trystatement <= 0.5\ngini = 0.041\nsamples = 2297\nvalue = [48, 2249]\nclass = Malicious"] ;
11 -> 12 ;
13 [label="expression_statement-variable_stuff <= 0.5\ngini = 0.038\nsamples = 2294\nvalue = [45, 2249]\nclass = Malicious"] ;
12 -> 13 ;
14 [label="numericliteral-expression_statement <= 0.5\ngini = 0.031\nsamples = 2244\nvalue = [35, 2209]\nclass = Malicious"] ;
13 -> 14 ;
15 [label="sourceElement_stuff-sourceElement_stuff <= 0.5\ngini = 0.029\nsamples = 2242\nvalue = [33, 2209]\nclass = Malicious"] ;
14 -> 15 ;
16 [label="literal-expression_statement <= 0.5\ngini = 0.027\nsamples = 2231\nvalue = [30, 2201]\nclass = Malicious"] ;
15 -> 16 ;
17 [label="literal-expressionstatement <= 0.5\ngini = 0.047\nsamples = 1116\nvalue = [27, 1089]\nclass = Malicious"] ;
16 -> 17 ;
18 [label="gini = 0.0\nsamples = 1082\nvalue = [0, 1082]\nclass = Malicious"] ;
17 -> 18 ;
19 [label="expression_statement-assignmentoperator <= 0.5\ngini = 0.327\nsamples = 34\nvalue = [27, 7]\nclass = Benign"] ;
17 -> 19 ;
20 [label="identifiername-argument_stuff <= 0.5\ngini = 0.069\nsamples = 28\nvalue = [27, 1]\nclass = Benign"] ;
19 -> 20 ;
21 [label="gini = 0.0\nsamples = 27\nvalue = [27, 0]\nclass = Benign"] ;
20 -> 21 ;
22 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
20 -> 22 ;
23 [label="gini = 0.0\nsamples = 6\nvalue = [0, 6]\nclass = Malicious"] ;
19 -> 23 ;
24 [label="expressionsequence-expression_statement <= 0.5\ngini = 0.005\nsamples = 1115\nvalue = [3, 1112]\nclass = Malicious"] ;
16 -> 24 ;
25 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
24 -> 25 ;
26 [label="gini = 0.0\nsamples = 1112\nvalue = [0, 1112]\nclass = Malicious"] ;
24 -> 26 ;
27 [label="numericliteral-expressionstatement <= 0.5\ngini = 0.397\nsamples = 11\nvalue = [3, 8]\nclass = Malicious"] ;
15 -> 27 ;
28 [label="gini = 0.0\nsamples = 8\nvalue = [0, 8]\nclass = Malicious"] ;
27 -> 28 ;
29 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
27 -> 29 ;
30 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
14 -> 30 ;
31 [label="expressionstatement-expressionsequence <= 0.5\ngini = 0.32\nsamples = 50\nvalue = [10, 40]\nclass = Malicious"] ;
13 -> 31 ;
32 [label="gini = 0.0\nsamples = 10\nvalue = [10, 0]\nclass = Benign"] ;
31 -> 32 ;
33 [label="gini = 0.0\nsamples = 40\nvalue = [0, 40]\nclass = Malicious"] ;
31 -> 33 ;
34 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
12 -> 34 ;
35 [label="expression_statement-expressionstatement <= 0.5\ngini = 0.499\nsamples = 281\nvalue = [133, 148]\nclass = Malicious"] ;
11 -> 35 ;
36 [label="numericliteral-variable_stuff <= 0.5\ngini = 0.145\nsamples = 127\nvalue = [117, 10]\nclass = Benign"] ;
35 -> 36 ;
37 [label="gini = 0.0\nsamples = 113\nvalue = [113, 0]\nclass = Benign"] ;
36 -> 37 ;
38 [label="literal-expressionstatement <= 0.5\ngini = 0.408\nsamples = 14\nvalue = [4, 10]\nclass = Malicious"] ;
36 -> 38 ;
39 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
38 -> 39 ;
40 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.165\nsamples = 11\nvalue = [1, 10]\nclass = Malicious"] ;
38 -> 40 ;
41 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
40 -> 41 ;
42 [label="gini = 0.0\nsamples = 10\nvalue = [0, 10]\nclass = Malicious"] ;
40 -> 42 ;
43 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.186\nsamples = 154\nvalue = [16, 138]\nclass = Malicious"] ;
35 -> 43 ;
44 [label="gini = 0.0\nsamples = 12\nvalue = [12, 0]\nclass = Benign"] ;
43 -> 44 ;
45 [label="literal-variable_stuff <= 0.5\ngini = 0.055\nsamples = 142\nvalue = [4, 138]\nclass = Malicious"] ;
43 -> 45 ;
46 [label="literal-expressionstatement <= 0.5\ngini = 0.028\nsamples = 140\nvalue = [2, 138]\nclass = Malicious"] ;
45 -> 46 ;
47 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
46 -> 47 ;
48 [label="gini = 0.0\nsamples = 138\nvalue = [0, 138]\nclass = Malicious"] ;
46 -> 48 ;
49 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
45 -> 49 ;
50 [label="gini = 0.0\nsamples = 113\nvalue = [113, 0]\nclass = Benign"] ;
10 -> 50 ;
51 [label="argument_stuff-identifiername <= 0.5\ngini = 0.455\nsamples = 2110\nvalue = [1372, 738]\nclass = Benign"] ;
3 -> 51 ;
52 [label="numericliteral-variable_stuff <= 0.5\ngini = 0.333\nsamples = 1710\nvalue = [1349, 361]\nclass = Benign"] ;
51 -> 52 ;
53 [label="numericliteral-expressionstatement <= 0.5\ngini = 0.17\nsamples = 1441\nvalue = [1306, 135]\nclass = Benign"] ;
52 -> 53 ;
54 [label="expression_statement-assignmentoperator <= 0.5\ngini = 0.018\nsamples = 1194\nvalue = [1183, 11]\nclass = Benign"] ;
53 -> 54 ;
55 [label="gini = 0.0\nsamples = 1180\nvalue = [1180, 0]\nclass = Benign"] ;
54 -> 55 ;
56 [label="returnstatement-expressionsequence <= 0.5\ngini = 0.337\nsamples = 14\nvalue = [3, 11]\nclass = Malicious"] ;
54 -> 56 ;
57 [label="literal-identifiername <= 0.5\ngini = 0.153\nsamples = 12\nvalue = [1, 11]\nclass = Malicious"] ;
56 -> 57 ;
58 [label="gini = 0.0\nsamples = 11\nvalue = [0, 11]\nclass = Malicious"] ;
57 -> 58 ;
59 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
57 -> 59 ;
60 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
56 -> 60 ;
61 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.5\nsamples = 247\nvalue = [123, 124]\nclass = Malicious"] ;
53 -> 61 ;
62 [label="gini = 0.0\nsamples = 67\nvalue = [67, 0]\nclass = Benign"] ;
61 -> 62 ;
63 [label="literal-expressionstatement <= 0.5\ngini = 0.429\nsamples = 180\nvalue = [56, 124]\nclass = Malicious"] ;
61 -> 63 ;
64 [label="gini = 0.0\nsamples = 42\nvalue = [42, 0]\nclass = Benign"] ;
63 -> 64 ;
65 [label="sourceElement_stuff-sourceElement_stuff <= 0.5\ngini = 0.182\nsamples = 138\nvalue = [14, 124]\nclass = Malicious"] ;
63 -> 65 ;
66 [label="gini = 0.0\nsamples = 124\nvalue = [0, 124]\nclass = Malicious"] ;
65 -> 66 ;
67 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
65 -> 67 ;
68 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.269\nsamples = 269\nvalue = [43, 226]\nclass = Malicious"] ;
52 -> 68 ;
69 [label="identifiername-expression_statement <= 0.5\ngini = 0.066\nsamples = 234\nvalue = [8, 226]\nclass = Malicious"] ;
68 -> 69 ;
70 [label="gini = 0.0\nsamples = 226\nvalue = [0, 226]\nclass = Malicious"] ;
69 -> 70 ;
71 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
69 -> 71 ;
72 [label="gini = 0.0\nsamples = 35\nvalue = [35, 0]\nclass = Benign"] ;
68 -> 72 ;
73 [label="expression_statement-sourceElement_stuff <= 0.5\ngini = 0.108\nsamples = 400\nvalue = [23, 377]\nclass = Malicious"] ;
51 -> 73 ;
74 [label="literal-identifiername <= 0.5\ngini = 0.041\nsamples = 385\nvalue = [8, 377]\nclass = Malicious"] ;
73 -> 74 ;
75 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
74 -> 75 ;
76 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.01\nsamples = 379\nvalue = [2, 377]\nclass = Malicious"] ;
74 -> 76 ;
77 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
76 -> 77 ;
78 [label="gini = 0.0\nsamples = 377\nvalue = [0, 377]\nclass = Malicious"] ;
76 -> 78 ;
79 [label="gini = 0.0\nsamples = 15\nvalue = [15, 0]\nclass = Benign"] ;
73 -> 79 ;
80 [label="sourceElement_stuff-withstatement <= 0.5\ngini = 0.103\nsamples = 7203\nvalue = [391, 6812]\nclass = Malicious"] ;
2 -> 80 ;
81 [label="litereral_stuff-expressionstatement <= 0.5\ngini = 0.089\nsamples = 7145\nvalue = [333, 6812]\nclass = Malicious"] ;
80 -> 81 ;
82 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.077\nsamples = 7095\nvalue = [283, 6812]\nclass = Malicious"] ;
81 -> 82 ;
83 [label="literal-returnstatement <= 0.5\ngini = 0.388\nsamples = 690\nvalue = [182, 508]\nclass = Malicious"] ;
82 -> 83 ;
84 [label="literal-expressionsequence <= 0.5\ngini = 0.081\nsamples = 165\nvalue = [158, 7]\nclass = Benign"] ;
83 -> 84 ;
85 [label="gini = 0.0\nsamples = 158\nvalue = [158, 0]\nclass = Benign"] ;
84 -> 85 ;
86 [label="gini = 0.0\nsamples = 7\nvalue = [0, 7]\nclass = Malicious"] ;
84 -> 86 ;
87 [label="numericliteral-returnstatement <= 0.5\ngini = 0.087\nsamples = 525\nvalue = [24, 501]\nclass = Malicious"] ;
83 -> 87 ;
88 [label="gini = 0.0\nsamples = 501\nvalue = [0, 501]\nclass = Malicious"] ;
87 -> 88 ;
89 [label="gini = 0.0\nsamples = 24\nvalue = [24, 0]\nclass = Benign"] ;
87 -> 89 ;
90 [label="variable_stuff-expressionsequence <= 0.5\ngini = 0.031\nsamples = 6405\nvalue = [101, 6304]\nclass = Malicious"] ;
82 -> 90 ;
91 [label="argument_stuff-ifstatement <= 0.5\ngini = 0.027\nsamples = 6391\nvalue = [87, 6304]\nclass = Malicious"] ;
90 -> 91 ;
92 [label="argument_stuff-expression_statement <= 0.5\ngini = 0.024\nsamples = 6379\nvalue = [76, 6303]\nclass = Malicious"] ;
91 -> 92 ;
93 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
92 -> 93 ;
94 [label="numericliteral-identifiername <= 0.5\ngini = 0.022\nsamples = 6374\nvalue = [71, 6303]\nclass = Malicious"] ;
92 -> 94 ;
95 [label="numericliteral-ifstatement <= 0.5\ngini = 0.015\nsamples = 6276\nvalue = [49, 6227]\nclass = Malicious"] ;
94 -> 95 ;
96 [label="formalParameterArg_stuff-formalParameterArg_stuff <= 0.5\ngini = 0.012\nsamples = 6232\nvalue = [38, 6194]\nclass = Malicious"] ;
95 -> 96 ;
97 [label="returnstatement-expressionstatement <= 0.5\ngini = 0.01\nsamples = 6203\nvalue = [30, 6173]\nclass = Malicious"] ;
96 -> 97 ;
98 [label="returnstatement-ifstatement <= 0.5\ngini = 0.009\nsamples = 6201\nvalue = [28, 6173]\nclass = Malicious"] ;
97 -> 98 ;
99 [label="litereral_stuff-identifiername <= 0.5\ngini = 0.009\nsamples = 6200\nvalue = [27, 6173]\nclass = Malicious"] ;
98 -> 99 ;
100 [label="litereral_stuff-expressionsequence <= 0.5\ngini = 0.008\nsamples = 6199\nvalue = [26, 6173]\nclass = Malicious"] ;
99 -> 100 ;
101 [label="expression_statement-ifstatement <= 0.5\ngini = 0.008\nsamples = 6198\nvalue = [25, 6173]\nclass = Malicious"] ;
100 -> 101 ;
102 [label="expression_statement-sourceElement_stuff <= 0.5\ngini = 0.007\nsamples = 6190\nvalue = [23, 6167]\nclass = Malicious"] ;
101 -> 102 ;
103 [label="identifiername-variable_stuff <= 0.5\ngini = 0.002\nsamples = 5603\nvalue = [7, 5596]\nclass = Malicious"] ;
102 -> 103 ;
104 [label="ifstatement-expressionsequence <= 0.5\ngini = 0.002\nsamples = 5596\nvalue = [6, 5590]\nclass = Malicious"] ;
103 -> 104 ;
105 [label="identifiername-expressionstatement <= 0.5\ngini = 0.009\nsamples = 1070\nvalue = [5, 1065]\nclass = Malicious"] ;
104 -> 105 ;
106 [label="argument_stuff-expressionstatement <= 0.5\ngini = 0.007\nsamples = 1068\nvalue = [4, 1064]\nclass = Malicious"] ;
105 -> 106 ;
107 [label="literal-expressionsequence <= 0.5\ngini = 0.004\nsamples = 1054\nvalue = [2, 1052]\nclass = Malicious"] ;
106 -> 107 ;
108 [label="identifiername-expression_statement <= 0.5\ngini = 0.002\nsamples = 1051\nvalue = [1, 1050]\nclass = Malicious"] ;
107 -> 108 ;
109 [label="gini = 0.0\nsamples = 942\nvalue = [0, 942]\nclass = Malicious"] ;
108 -> 109 ;
110 [label="literal-variable_stuff <= 0.5\ngini = 0.018\nsamples = 109\nvalue = [1, 108]\nclass = Malicious"] ;
108 -> 110 ;
111 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
110 -> 111 ;
112 [label="gini = 0.0\nsamples = 108\nvalue = [0, 108]\nclass = Malicious"] ;
110 -> 112 ;
113 [label="numericliteral-expressionsequence <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
107 -> 113 ;
114 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
113 -> 114 ;
115 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
113 -> 115 ;
116 [label="expression_statement-identifiername <= 0.5\ngini = 0.245\nsamples = 14\nvalue = [2, 12]\nclass = Malicious"] ;
106 -> 116 ;
117 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
116 -> 117 ;
118 [label="expression_statement-litereral_stuff <= 0.5\ngini = 0.142\nsamples = 13\nvalue = [1, 12]\nclass = Malicious"] ;
116 -> 118 ;
119 [label="gini = 0.0\nsamples = 12\nvalue = [0, 12]\nclass = Malicious"] ;
118 -> 119 ;
120 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
118 -> 120 ;
121 [label="literal-trystatement <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
105 -> 121 ;
122 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
121 -> 122 ;
123 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
121 -> 123 ;
124 [label="expression_statement-variable_stuff <= 0.5\ngini = 0.0\nsamples = 4526\nvalue = [1, 4525]\nclass = Malicious"] ;
104 -> 124 ;
125 [label="gini = 0.0\nsamples = 4217\nvalue = [0, 4217]\nclass = Malicious"] ;
124 -> 125 ;
126 [label="element_stuff-expression_statement <= 0.5\ngini = 0.006\nsamples = 309\nvalue = [1, 308]\nclass = Malicious"] ;
124 -> 126 ;
127 [label="identifiername-expressionsequence <= 0.5\ngini = 0.32\nsamples = 5\nvalue = [1, 4]\nclass = Malicious"] ;
126 -> 127 ;
128 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
127 -> 128 ;
129 [label="gini = 0.0\nsamples = 4\nvalue = [0, 4]\nclass = Malicious"] ;
127 -> 129 ;
130 [label="gini = 0.0\nsamples = 304\nvalue = [0, 304]\nclass = Malicious"] ;
126 -> 130 ;
131 [label="argument_stuff-expressionstatement <= 0.5\ngini = 0.245\nsamples = 7\nvalue = [1, 6]\nclass = Malicious"] ;
103 -> 131 ;
132 [label="gini = 0.0\nsamples = 6\nvalue = [0, 6]\nclass = Malicious"] ;
131 -> 132 ;
133 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
131 -> 133 ;
134 [label="literal-variable_stuff <= 0.5\ngini = 0.053\nsamples = 587\nvalue = [16, 571]\nclass = Malicious"] ;
102 -> 134 ;
135 [label="trystatement-expressionstatement <= 0.5\ngini = 0.117\nsamples = 16\nvalue = [15, 1]\nclass = Benign"] ;
134 -> 135 ;
136 [label="gini = 0.0\nsamples = 15\nvalue = [15, 0]\nclass = Benign"] ;
135 -> 136 ;
137 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
135 -> 137 ;
138 [label="literal-expressionstatement <= 0.5\ngini = 0.003\nsamples = 571\nvalue = [1, 570]\nclass = Malicious"] ;
134 -> 138 ;
139 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
138 -> 139 ;
140 [label="gini = 0.0\nsamples = 570\nvalue = [0, 570]\nclass = Malicious"] ;
138 -> 140 ;
141 [label="sourceElement_stuff-sourceElement_stuff <= 0.5\ngini = 0.375\nsamples = 8\nvalue = [2, 6]\nclass = Malicious"] ;
101 -> 141 ;
142 [label="gini = 0.0\nsamples = 6\nvalue = [0, 6]\nclass = Malicious"] ;
141 -> 142 ;
143 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
141 -> 143 ;
144 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
100 -> 144 ;
145 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
99 -> 145 ;
146 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
98 -> 146 ;
147 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
97 -> 147 ;
148 [label="literal-numericliteral <= 0.5\ngini = 0.4\nsamples = 29\nvalue = [8, 21]\nclass = Malicious"] ;
96 -> 148 ;
149 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
148 -> 149 ;
150 [label="gini = 0.0\nsamples = 21\nvalue = [0, 21]\nclass = Malicious"] ;
148 -> 150 ;
151 [label="expression_statement-sourceElement_stuff <= 0.5\ngini = 0.375\nsamples = 44\nvalue = [11, 33]\nclass = Malicious"] ;
95 -> 151 ;
152 [label="gini = 0.0\nsamples = 33\nvalue = [0, 33]\nclass = Malicious"] ;
151 -> 152 ;
153 [label="gini = 0.0\nsamples = 11\nvalue = [11, 0]\nclass = Benign"] ;
151 -> 153 ;
154 [label="numericliteral-continue_break_statement <= 0.5\ngini = 0.348\nsamples = 98\nvalue = [22, 76]\nclass = Malicious"] ;
94 -> 154 ;
155 [label="identifiername-continue_break_statement <= 0.5\ngini = 0.083\nsamples = 23\nvalue = [22, 1]\nclass = Benign"] ;
154 -> 155 ;
156 [label="gini = 0.0\nsamples = 22\nvalue = [22, 0]\nclass = Benign"] ;
155 -> 156 ;
157 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
155 -> 157 ;
158 [label="gini = 0.0\nsamples = 75\nvalue = [0, 75]\nclass = Malicious"] ;
154 -> 158 ;
159 [label="formalparameterlist-formalParameterArg_stuff <= 0.5\ngini = 0.153\nsamples = 12\nvalue = [11, 1]\nclass = Benign"] ;
91 -> 159 ;
160 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
159 -> 160 ;
161 [label="gini = 0.0\nsamples = 11\nvalue = [11, 0]\nclass = Benign"] ;
159 -> 161 ;
162 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
90 -> 162 ;
163 [label="gini = 0.0\nsamples = 50\nvalue = [50, 0]\nclass = Benign"] ;
81 -> 163 ;
164 [label="gini = 0.0\nsamples = 58\nvalue = [58, 0]\nclass = Benign"] ;
80 -> 164 ;
165 [label="literal-trystatement <= 0.5\ngini = 0.184\nsamples = 1355\nvalue = [1216, 139]\nclass = Benign"] ;
1 -> 165 ;
166 [label="argument_stuff-switchstatement <= 0.5\ngini = 0.007\nsamples = 1219\nvalue = [1215, 4]\nclass = Benign"] ;
165 -> 166 ;
167 [label="continue_break_statement-catchproduction <= 0.5\ngini = 0.005\nsamples = 1218\nvalue = [1215, 3]\nclass = Benign"] ;
166 -> 167 ;
168 [label="expression_statement-assignmentoperator <= 0.5\ngini = 0.003\nsamples = 1217\nvalue = [1215, 2]\nclass = Benign"] ;
167 -> 168 ;
169 [label="argument_stuff-variable_stuff <= 0.5\ngini = 0.002\nsamples = 1212\nvalue = [1211, 1]\nclass = Benign"] ;
168 -> 169 ;
170 [label="gini = 0.0\nsamples = 1158\nvalue = [1158, 0]\nclass = Benign"] ;
169 -> 170 ;
171 [label="literal-expression_statement <= 0.5\ngini = 0.036\nsamples = 54\nvalue = [53, 1]\nclass = Benign"] ;
169 -> 171 ;
172 [label="ifstatement-expressionsequence <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
171 -> 172 ;
173 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
172 -> 173 ;
174 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
172 -> 174 ;
175 [label="gini = 0.0\nsamples = 52\nvalue = [52, 0]\nclass = Benign"] ;
171 -> 175 ;
176 [label="identifiername-expression_statement <= 0.5\ngini = 0.32\nsamples = 5\nvalue = [4, 1]\nclass = Benign"] ;
168 -> 176 ;
177 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
176 -> 177 ;
178 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
176 -> 178 ;
179 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
167 -> 179 ;
180 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
166 -> 180 ;
181 [label="returnstatement-expressionstatement <= 0.5\ngini = 0.015\nsamples = 136\nvalue = [1, 135]\nclass = Malicious"] ;
165 -> 181 ;
182 [label="gini = 0.0\nsamples = 135\nvalue = [0, 135]\nclass = Malicious"] ;
181 -> 182 ;
183 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
181 -> 183 ;
184 [label="do_for_while_statement-expressionsequence <= 0.5\ngini = 0.254\nsamples = 10361\nvalue = [8813, 1548]\nclass = Benign"] ;
0 -> 184 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
185 [label="literal-finallyproduction <= 0.5\ngini = 0.007\nsamples = 8805\nvalue = [8775, 30]\nclass = Benign"] ;
184 -> 185 ;
186 [label="expression_statement-catchproduction <= 0.5\ngini = 0.001\nsamples = 8778\nvalue = [8775, 3]\nclass = Benign"] ;
185 -> 186 ;
187 [label="gini = 0.0\nsamples = 8764\nvalue = [8764, 0]\nclass = Benign"] ;
186 -> 187 ;
188 [label="identifiername-identifiername <= 0.5\ngini = 0.337\nsamples = 14\nvalue = [11, 3]\nclass = Benign"] ;
186 -> 188 ;
189 [label="gini = 0.0\nsamples = 3\nvalue = [0, 3]\nclass = Malicious"] ;
188 -> 189 ;
190 [label="gini = 0.0\nsamples = 11\nvalue = [11, 0]\nclass = Benign"] ;
188 -> 190 ;
191 [label="gini = 0.0\nsamples = 27\nvalue = [0, 27]\nclass = Malicious"] ;
185 -> 191 ;
192 [label="numericliteral-property_rules <= 0.5\ngini = 0.048\nsamples = 1556\nvalue = [38, 1518]\nclass = Malicious"] ;
184 -> 192 ;
193 [label="expression_statement-property_rules <= 0.5\ngini = 0.008\nsamples = 1524\nvalue = [6, 1518]\nclass = Malicious"] ;
192 -> 193 ;
194 [label="identifiername-throwstatement <= 0.5\ngini = 0.001\nsamples = 1519\nvalue = [1, 1518]\nclass = Malicious"] ;
193 -> 194 ;
195 [label="gini = 0.0\nsamples = 1518\nvalue = [0, 1518]\nclass = Malicious"] ;
194 -> 195 ;
196 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
194 -> 196 ;
197 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
193 -> 197 ;
198 [label="gini = 0.0\nsamples = 32\nvalue = [32, 0]\nclass = Benign"] ;
192 -> 198 ;
}
