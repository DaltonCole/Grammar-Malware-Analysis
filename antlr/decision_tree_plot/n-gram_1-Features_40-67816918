digraph Tree {
node [shape=box] ;
0 [label="property_rules <= 0.5\ngini = 0.5\nsamples = 27000\nvalue = [13490, 13510]\nclass = Malicious"] ;
1 [label="numericliteral <= 0.5\ngini = 0.403\nsamples = 16595\nvalue = [4641, 11954]\nclass = Malicious"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="expressionstatement <= 0.5\ngini = 0.49\nsamples = 7523\nvalue = [3239, 4284]\nclass = Malicious"] ;
1 -> 2 ;
3 [label="argument_stuff <= 0.5\ngini = 0.411\nsamples = 3996\nvalue = [1157, 2839]\nclass = Malicious"] ;
2 -> 3 ;
4 [label="sourceElement_stuff <= 0.5\ngini = 0.468\nsamples = 3010\nvalue = [1127, 1883]\nclass = Malicious"] ;
3 -> 4 ;
5 [label="gini = 0.397\nsamples = 2589\nvalue = [706, 1883]\nclass = Malicious"] ;
4 -> 5 ;
6 [label="gini = 0.0\nsamples = 421\nvalue = [421, 0]\nclass = Benign"] ;
4 -> 6 ;
7 [label="literal <= 0.5\ngini = 0.059\nsamples = 986\nvalue = [30, 956]\nclass = Malicious"] ;
3 -> 7 ;
8 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
7 -> 8 ;
9 [label="litereral_stuff <= 0.5\ngini = 0.046\nsamples = 979\nvalue = [23, 956]\nclass = Malicious"] ;
7 -> 9 ;
10 [label="expressionsequence <= 0.5\ngini = 0.04\nsamples = 976\nvalue = [20, 956]\nclass = Malicious"] ;
9 -> 10 ;
11 [label="identifiername <= 0.5\ngini = 0.079\nsamples = 487\nvalue = [20, 467]\nclass = Malicious"] ;
10 -> 11 ;
12 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
11 -> 12 ;
13 [label="gini = 0.068\nsamples = 484\nvalue = [17, 467]\nclass = Malicious"] ;
11 -> 13 ;
14 [label="gini = 0.0\nsamples = 489\nvalue = [0, 489]\nclass = Malicious"] ;
10 -> 14 ;
15 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
9 -> 15 ;
16 [label="variable_stuff <= 0.5\ngini = 0.484\nsamples = 3527\nvalue = [2082, 1445]\nclass = Benign"] ;
2 -> 16 ;
17 [label="identifiername <= 0.5\ngini = 0.34\nsamples = 1994\nvalue = [1561, 433]\nclass = Benign"] ;
16 -> 17 ;
18 [label="gini = 0.0\nsamples = 350\nvalue = [350, 0]\nclass = Benign"] ;
17 -> 18 ;
19 [label="litereral_stuff <= 0.5\ngini = 0.388\nsamples = 1644\nvalue = [1211, 433]\nclass = Benign"] ;
17 -> 19 ;
20 [label="ifstatement <= 0.5\ngini = 0.442\nsamples = 1314\nvalue = [881, 433]\nclass = Benign"] ;
19 -> 20 ;
21 [label="argument_stuff <= 0.5\ngini = 0.461\nsamples = 1203\nvalue = [770, 433]\nclass = Benign"] ;
20 -> 21 ;
22 [label="gini = 0.0\nsamples = 78\nvalue = [78, 0]\nclass = Benign"] ;
21 -> 22 ;
23 [label="literal <= 0.5\ngini = 0.473\nsamples = 1125\nvalue = [692, 433]\nclass = Benign"] ;
21 -> 23 ;
24 [label="gini = 0.0\nsamples = 47\nvalue = [47, 0]\nclass = Benign"] ;
23 -> 24 ;
25 [label="formalparameterlist <= 0.5\ngini = 0.481\nsamples = 1078\nvalue = [645, 433]\nclass = Benign"] ;
23 -> 25 ;
26 [label="trystatement <= 0.5\ngini = 0.483\nsamples = 1059\nvalue = [626, 433]\nclass = Benign"] ;
25 -> 26 ;
27 [label="returnstatement <= 0.5\ngini = 0.484\nsamples = 1057\nvalue = [624, 433]\nclass = Benign"] ;
26 -> 27 ;
28 [label="gini = 0.484\nsamples = 1055\nvalue = [622, 433]\nclass = Benign"] ;
27 -> 28 ;
29 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
27 -> 29 ;
30 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
26 -> 30 ;
31 [label="gini = 0.0\nsamples = 19\nvalue = [19, 0]\nclass = Benign"] ;
25 -> 31 ;
32 [label="gini = 0.0\nsamples = 111\nvalue = [111, 0]\nclass = Benign"] ;
20 -> 32 ;
33 [label="gini = 0.0\nsamples = 330\nvalue = [330, 0]\nclass = Benign"] ;
19 -> 33 ;
34 [label="identifiername <= 0.5\ngini = 0.449\nsamples = 1533\nvalue = [521, 1012]\nclass = Malicious"] ;
16 -> 34 ;
35 [label="argument_stuff <= 0.5\ngini = 0.086\nsamples = 823\nvalue = [37, 786]\nclass = Malicious"] ;
34 -> 35 ;
36 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
35 -> 36 ;
37 [label="withstatement <= 0.5\ngini = 0.075\nsamples = 818\nvalue = [32, 786]\nclass = Malicious"] ;
35 -> 37 ;
38 [label="element_stuff <= 0.5\ngini = 0.073\nsamples = 817\nvalue = [31, 786]\nclass = Malicious"] ;
37 -> 38 ;
39 [label="assignmentoperator <= 0.5\ngini = 0.071\nsamples = 816\nvalue = [30, 786]\nclass = Malicious"] ;
38 -> 39 ;
40 [label="gini = 0.076\nsamples = 735\nvalue = [29, 706]\nclass = Malicious"] ;
39 -> 40 ;
41 [label="returnstatement <= 0.5\ngini = 0.024\nsamples = 81\nvalue = [1, 80]\nclass = Malicious"] ;
39 -> 41 ;
42 [label="gini = 0.0\nsamples = 61\nvalue = [0, 61]\nclass = Malicious"] ;
41 -> 42 ;
43 [label="gini = 0.095\nsamples = 20\nvalue = [1, 19]\nclass = Malicious"] ;
41 -> 43 ;
44 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
38 -> 44 ;
45 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
37 -> 45 ;
46 [label="returnstatement <= 0.5\ngini = 0.434\nsamples = 710\nvalue = [484, 226]\nclass = Benign"] ;
34 -> 46 ;
47 [label="element_stuff <= 0.5\ngini = 0.013\nsamples = 458\nvalue = [455, 3]\nclass = Benign"] ;
46 -> 47 ;
48 [label="ifstatement <= 0.5\ngini = 0.009\nsamples = 448\nvalue = [446, 2]\nclass = Benign"] ;
47 -> 48 ;
49 [label="assignmentoperator <= 0.5\ngini = 0.006\nsamples = 346\nvalue = [345, 1]\nclass = Benign"] ;
48 -> 49 ;
50 [label="argument_stuff <= 0.5\ngini = 0.008\nsamples = 257\nvalue = [256, 1]\nclass = Benign"] ;
49 -> 50 ;
51 [label="gini = 0.0\nsamples = 62\nvalue = [62, 0]\nclass = Benign"] ;
50 -> 51 ;
52 [label="formalparameterlist <= 0.5\ngini = 0.01\nsamples = 195\nvalue = [194, 1]\nclass = Benign"] ;
50 -> 52 ;
53 [label="litereral_stuff <= 0.5\ngini = 0.011\nsamples = 178\nvalue = [177, 1]\nclass = Benign"] ;
52 -> 53 ;
54 [label="literal <= 0.5\ngini = 0.012\nsamples = 169\nvalue = [168, 1]\nclass = Benign"] ;
53 -> 54 ;
55 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
54 -> 55 ;
56 [label="catchproduction <= 0.5\ngini = 0.012\nsamples = 166\nvalue = [165, 1]\nclass = Benign"] ;
54 -> 56 ;
57 [label="gini = 0.012\nsamples = 164\nvalue = [163, 1]\nclass = Benign"] ;
56 -> 57 ;
58 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
56 -> 58 ;
59 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
53 -> 59 ;
60 [label="gini = 0.0\nsamples = 17\nvalue = [17, 0]\nclass = Benign"] ;
52 -> 60 ;
61 [label="gini = 0.0\nsamples = 89\nvalue = [89, 0]\nclass = Benign"] ;
49 -> 61 ;
62 [label="formalParameterArg_stuff <= 0.5\ngini = 0.019\nsamples = 102\nvalue = [101, 1]\nclass = Benign"] ;
48 -> 62 ;
63 [label="litereral_stuff <= 0.5\ngini = 0.022\nsamples = 89\nvalue = [88, 1]\nclass = Benign"] ;
62 -> 63 ;
64 [label="assignmentoperator <= 0.5\ngini = 0.023\nsamples = 85\nvalue = [84, 1]\nclass = Benign"] ;
63 -> 64 ;
65 [label="argument_stuff <= 0.5\ngini = 0.024\nsamples = 82\nvalue = [81, 1]\nclass = Benign"] ;
64 -> 65 ;
66 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
65 -> 66 ;
67 [label="gini = 0.024\nsamples = 81\nvalue = [80, 1]\nclass = Benign"] ;
65 -> 67 ;
68 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
64 -> 68 ;
69 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
63 -> 69 ;
70 [label="gini = 0.0\nsamples = 13\nvalue = [13, 0]\nclass = Benign"] ;
62 -> 70 ;
71 [label="ifstatement <= 0.5\ngini = 0.18\nsamples = 10\nvalue = [9, 1]\nclass = Benign"] ;
47 -> 71 ;
72 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
71 -> 72 ;
73 [label="formalParameterArg_stuff <= 0.5\ngini = 0.375\nsamples = 4\nvalue = [3, 1]\nclass = Benign"] ;
71 -> 73 ;
74 [label="gini = 0.444\nsamples = 3\nvalue = [2, 1]\nclass = Benign"] ;
73 -> 74 ;
75 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
73 -> 75 ;
76 [label="ifstatement <= 0.5\ngini = 0.204\nsamples = 252\nvalue = [29, 223]\nclass = Malicious"] ;
46 -> 76 ;
77 [label="formalParameterArg_stuff <= 0.5\ngini = 0.145\nsamples = 242\nvalue = [19, 223]\nclass = Malicious"] ;
76 -> 77 ;
78 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
77 -> 78 ;
79 [label="litereral_stuff <= 0.5\ngini = 0.118\nsamples = 238\nvalue = [15, 223]\nclass = Malicious"] ;
77 -> 79 ;
80 [label="trystatement <= 0.5\ngini = 0.09\nsamples = 234\nvalue = [11, 223]\nclass = Malicious"] ;
79 -> 80 ;
81 [label="gini = 0.082\nsamples = 233\nvalue = [10, 223]\nclass = Malicious"] ;
80 -> 81 ;
82 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
80 -> 82 ;
83 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
79 -> 83 ;
84 [label="gini = 0.0\nsamples = 10\nvalue = [10, 0]\nclass = Benign"] ;
76 -> 84 ;
85 [label="expressionstatement <= 0.5\ngini = 0.261\nsamples = 9072\nvalue = [1402, 7670]\nclass = Malicious"] ;
1 -> 85 ;
86 [label="gini = 0.0\nsamples = 242\nvalue = [242, 0]\nclass = Benign"] ;
85 -> 86 ;
87 [label="element_stuff <= 0.5\ngini = 0.228\nsamples = 8830\nvalue = [1160, 7670]\nclass = Malicious"] ;
85 -> 87 ;
88 [label="litereral_stuff <= 0.5\ngini = 0.319\nsamples = 4923\nvalue = [980, 3943]\nclass = Malicious"] ;
87 -> 88 ;
89 [label="returnstatement <= 0.5\ngini = 0.284\nsamples = 4747\nvalue = [813, 3934]\nclass = Malicious"] ;
88 -> 89 ;
90 [label="argument_stuff <= 0.5\ngini = 0.409\nsamples = 2403\nvalue = [688, 1715]\nclass = Malicious"] ;
89 -> 90 ;
91 [label="gini = 0.0\nsamples = 120\nvalue = [120, 0]\nclass = Benign"] ;
90 -> 91 ;
92 [label="formalparameterlist <= 0.5\ngini = 0.374\nsamples = 2283\nvalue = [568, 1715]\nclass = Malicious"] ;
90 -> 92 ;
93 [label="identifiername <= 0.5\ngini = 0.344\nsamples = 2190\nvalue = [484, 1706]\nclass = Malicious"] ;
92 -> 93 ;
94 [label="variable_stuff <= 0.5\ngini = 0.153\nsamples = 660\nvalue = [55, 605]\nclass = Malicious"] ;
93 -> 94 ;
95 [label="ifstatement <= 0.5\ngini = 0.305\nsamples = 165\nvalue = [31, 134]\nclass = Malicious"] ;
94 -> 95 ;
96 [label="gini = 0.0\nsamples = 31\nvalue = [31, 0]\nclass = Benign"] ;
95 -> 96 ;
97 [label="gini = 0.0\nsamples = 134\nvalue = [0, 134]\nclass = Malicious"] ;
95 -> 97 ;
98 [label="trystatement <= 0.5\ngini = 0.092\nsamples = 495\nvalue = [24, 471]\nclass = Malicious"] ;
94 -> 98 ;
99 [label="do_for_while_statement <= 0.5\ngini = 0.1\nsamples = 453\nvalue = [24, 429]\nclass = Malicious"] ;
98 -> 99 ;
100 [label="gini = 0.101\nsamples = 452\nvalue = [24, 428]\nclass = Malicious"] ;
99 -> 100 ;
101 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
99 -> 101 ;
102 [label="gini = 0.0\nsamples = 42\nvalue = [0, 42]\nclass = Malicious"] ;
98 -> 102 ;
103 [label="trystatement <= 0.5\ngini = 0.404\nsamples = 1530\nvalue = [429, 1101]\nclass = Malicious"] ;
93 -> 103 ;
104 [label="do_for_while_statement <= 0.5\ngini = 0.421\nsamples = 1399\nvalue = [422, 977]\nclass = Malicious"] ;
103 -> 104 ;
105 [label="ifstatement <= 0.5\ngini = 0.395\nsamples = 1318\nvalue = [357, 961]\nclass = Malicious"] ;
104 -> 105 ;
106 [label="varmodifier <= 0.5\ngini = 0.442\nsamples = 737\nvalue = [243, 494]\nclass = Malicious"] ;
105 -> 106 ;
107 [label="gini = 0.493\nsamples = 286\nvalue = [160, 126]\nclass = Benign"] ;
106 -> 107 ;
108 [label="assignmentoperator <= 0.5\ngini = 0.3\nsamples = 451\nvalue = [83, 368]\nclass = Malicious"] ;
106 -> 108 ;
109 [label="gini = 0.299\nsamples = 448\nvalue = [82, 366]\nclass = Malicious"] ;
108 -> 109 ;
110 [label="gini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
108 -> 110 ;
111 [label="assignmentoperator <= 0.5\ngini = 0.315\nsamples = 581\nvalue = [114, 467]\nclass = Malicious"] ;
105 -> 111 ;
112 [label="variable_stuff <= 0.5\ngini = 0.305\nsamples = 575\nvalue = [108, 467]\nclass = Malicious"] ;
111 -> 112 ;
113 [label="gini = 0.245\nsamples = 349\nvalue = [50, 299]\nclass = Malicious"] ;
112 -> 113 ;
114 [label="clause_stuff <= 0.5\ngini = 0.382\nsamples = 226\nvalue = [58, 168]\nclass = Malicious"] ;
112 -> 114 ;
115 [label="gini = 0.378\nsamples = 225\nvalue = [57, 168]\nclass = Malicious"] ;
114 -> 115 ;
116 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
114 -> 116 ;
117 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
111 -> 117 ;
118 [label="assignmentoperator <= 0.5\ngini = 0.317\nsamples = 81\nvalue = [65, 16]\nclass = Benign"] ;
104 -> 118 ;
119 [label="gini = 0.0\nsamples = 65\nvalue = [65, 0]\nclass = Benign"] ;
118 -> 119 ;
120 [label="gini = 0.0\nsamples = 16\nvalue = [0, 16]\nclass = Malicious"] ;
118 -> 120 ;
121 [label="varmodifier <= 0.5\ngini = 0.101\nsamples = 131\nvalue = [7, 124]\nclass = Malicious"] ;
103 -> 121 ;
122 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
121 -> 122 ;
123 [label="do_for_while_statement <= 0.5\ngini = 0.061\nsamples = 128\nvalue = [4, 124]\nclass = Malicious"] ;
121 -> 123 ;
124 [label="ifstatement <= 0.5\ngini = 0.245\nsamples = 14\nvalue = [2, 12]\nclass = Malicious"] ;
123 -> 124 ;
125 [label="gini = 0.5\nsamples = 4\nvalue = [2, 2]\nclass = Benign"] ;
124 -> 125 ;
126 [label="gini = 0.0\nsamples = 10\nvalue = [0, 10]\nclass = Malicious"] ;
124 -> 126 ;
127 [label="ifstatement <= 0.5\ngini = 0.034\nsamples = 114\nvalue = [2, 112]\nclass = Malicious"] ;
123 -> 127 ;
128 [label="gini = 0.0\nsamples = 100\nvalue = [0, 100]\nclass = Malicious"] ;
127 -> 128 ;
129 [label="continue_break_statement <= 0.5\ngini = 0.245\nsamples = 14\nvalue = [2, 12]\nclass = Malicious"] ;
127 -> 129 ;
130 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
129 -> 130 ;
131 [label="gini = 0.0\nsamples = 12\nvalue = [0, 12]\nclass = Malicious"] ;
129 -> 131 ;
132 [label="ifstatement <= 0.5\ngini = 0.175\nsamples = 93\nvalue = [84, 9]\nclass = Benign"] ;
92 -> 132 ;
133 [label="variable_stuff <= 0.5\ngini = 0.42\nsamples = 30\nvalue = [21, 9]\nclass = Benign"] ;
132 -> 133 ;
134 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
133 -> 134 ;
135 [label="do_for_while_statement <= 0.5\ngini = 0.49\nsamples = 21\nvalue = [12, 9]\nclass = Benign"] ;
133 -> 135 ;
136 [label="gini = 0.495\nsamples = 20\nvalue = [11, 9]\nclass = Benign"] ;
135 -> 136 ;
137 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
135 -> 137 ;
138 [label="gini = 0.0\nsamples = 63\nvalue = [63, 0]\nclass = Benign"] ;
132 -> 138 ;
139 [label="identifiername <= 0.5\ngini = 0.101\nsamples = 2344\nvalue = [125, 2219]\nclass = Malicious"] ;
89 -> 139 ;
140 [label="gini = 0.0\nsamples = 747\nvalue = [0, 747]\nclass = Malicious"] ;
139 -> 140 ;
141 [label="do_for_while_statement <= 0.5\ngini = 0.144\nsamples = 1597\nvalue = [125, 1472]\nclass = Malicious"] ;
139 -> 141 ;
142 [label="formalParameterArg_stuff <= 0.5\ngini = 0.132\nsamples = 1581\nvalue = [112, 1469]\nclass = Malicious"] ;
141 -> 142 ;
143 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
142 -> 143 ;
144 [label="assignmentoperator <= 0.5\ngini = 0.126\nsamples = 1575\nvalue = [106, 1469]\nclass = Malicious"] ;
142 -> 144 ;
145 [label="ifstatement <= 0.5\ngini = 0.125\nsamples = 1574\nvalue = [105, 1469]\nclass = Malicious"] ;
144 -> 145 ;
146 [label="gini = 0.0\nsamples = 11\nvalue = [0, 11]\nclass = Malicious"] ;
145 -> 146 ;
147 [label="trystatement <= 0.5\ngini = 0.125\nsamples = 1563\nvalue = [105, 1458]\nclass = Malicious"] ;
145 -> 147 ;
148 [label="gini = 0.125\nsamples = 1562\nvalue = [105, 1457]\nclass = Malicious"] ;
147 -> 148 ;
149 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
147 -> 149 ;
150 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
144 -> 150 ;
151 [label="trystatement <= 0.5\ngini = 0.305\nsamples = 16\nvalue = [13, 3]\nclass = Benign"] ;
141 -> 151 ;
152 [label="assignmentoperator <= 0.5\ngini = 0.133\nsamples = 14\nvalue = [13, 1]\nclass = Benign"] ;
151 -> 152 ;
153 [label="gini = 0.0\nsamples = 10\nvalue = [10, 0]\nclass = Benign"] ;
152 -> 153 ;
154 [label="continue_break_statement <= 0.5\ngini = 0.375\nsamples = 4\nvalue = [3, 1]\nclass = Benign"] ;
152 -> 154 ;
155 [label="formalparameterlist <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [2, 1]\nclass = Benign"] ;
154 -> 155 ;
156 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
155 -> 156 ;
157 [label="gini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
155 -> 157 ;
158 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
154 -> 158 ;
159 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
151 -> 159 ;
160 [label="trystatement <= 0.5\ngini = 0.097\nsamples = 176\nvalue = [167, 9]\nclass = Benign"] ;
88 -> 160 ;
161 [label="assignmentoperator <= 0.5\ngini = 0.026\nsamples = 152\nvalue = [150, 2]\nclass = Benign"] ;
160 -> 161 ;
162 [label="gini = 0.0\nsamples = 148\nvalue = [148, 0]\nclass = Benign"] ;
161 -> 162 ;
163 [label="do_for_while_statement <= 0.5\ngini = 0.5\nsamples = 4\nvalue = [2, 2]\nclass = Benign"] ;
161 -> 163 ;
164 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
163 -> 164 ;
165 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
163 -> 165 ;
166 [label="identifiername <= 0.5\ngini = 0.413\nsamples = 24\nvalue = [17, 7]\nclass = Benign"] ;
160 -> 166 ;
167 [label="gini = 0.0\nsamples = 7\nvalue = [0, 7]\nclass = Malicious"] ;
166 -> 167 ;
168 [label="gini = 0.0\nsamples = 17\nvalue = [17, 0]\nclass = Benign"] ;
166 -> 168 ;
169 [label="argument_stuff <= 0.5\ngini = 0.088\nsamples = 3907\nvalue = [180, 3727]\nclass = Malicious"] ;
87 -> 169 ;
170 [label="gini = 0.0\nsamples = 88\nvalue = [88, 0]\nclass = Benign"] ;
169 -> 170 ;
171 [label="varmodifier <= 0.5\ngini = 0.047\nsamples = 3819\nvalue = [92, 3727]\nclass = Malicious"] ;
169 -> 171 ;
172 [label="identifiername <= 0.5\ngini = 0.153\nsamples = 24\nvalue = [22, 2]\nclass = Benign"] ;
171 -> 172 ;
173 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
172 -> 173 ;
174 [label="gini = 0.0\nsamples = 22\nvalue = [22, 0]\nclass = Benign"] ;
172 -> 174 ;
175 [label="do_for_while_statement <= 0.5\ngini = 0.036\nsamples = 3795\nvalue = [70, 3725]\nclass = Malicious"] ;
171 -> 175 ;
176 [label="ifstatement <= 0.5\ngini = 0.072\nsamples = 1729\nvalue = [65, 1664]\nclass = Malicious"] ;
175 -> 176 ;
177 [label="identifiername <= 0.5\ngini = 0.383\nsamples = 58\nvalue = [43, 15]\nclass = Benign"] ;
176 -> 177 ;
178 [label="gini = 0.133\nsamples = 14\nvalue = [1, 13]\nclass = Malicious"] ;
177 -> 178 ;
179 [label="formalParameterArg_stuff <= 0.5\ngini = 0.087\nsamples = 44\nvalue = [42, 2]\nclass = Benign"] ;
177 -> 179 ;
180 [label="gini = 0.0\nsamples = 42\nvalue = [42, 0]\nclass = Benign"] ;
179 -> 180 ;
181 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
179 -> 181 ;
182 [label="identifiername <= 0.5\ngini = 0.026\nsamples = 1671\nvalue = [22, 1649]\nclass = Malicious"] ;
176 -> 182 ;
183 [label="gini = 0.0\nsamples = 828\nvalue = [0, 828]\nclass = Malicious"] ;
182 -> 183 ;
184 [label="formalParameterArg_stuff <= 0.5\ngini = 0.051\nsamples = 843\nvalue = [22, 821]\nclass = Malicious"] ;
182 -> 184 ;
185 [label="assignmentoperator <= 0.5\ngini = 0.042\nsamples = 837\nvalue = [18, 819]\nclass = Malicious"] ;
184 -> 185 ;
186 [label="returnstatement <= 0.5\ngini = 0.05\nsamples = 708\nvalue = [18, 690]\nclass = Malicious"] ;
185 -> 186 ;
187 [label="clause_stuff <= 0.5\ngini = 0.044\nsamples = 706\nvalue = [16, 690]\nclass = Malicious"] ;
186 -> 187 ;
188 [label="trystatement <= 0.5\ngini = 0.045\nsamples = 701\nvalue = [16, 685]\nclass = Malicious"] ;
187 -> 188 ;
189 [label="gini = 0.045\nsamples = 649\nvalue = [15, 634]\nclass = Malicious"] ;
188 -> 189 ;
190 [label="gini = 0.038\nsamples = 52\nvalue = [1, 51]\nclass = Malicious"] ;
188 -> 190 ;
191 [label="gini = 0.0\nsamples = 5\nvalue = [0, 5]\nclass = Malicious"] ;
187 -> 191 ;
192 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
186 -> 192 ;
193 [label="gini = 0.0\nsamples = 129\nvalue = [0, 129]\nclass = Malicious"] ;
185 -> 193 ;
194 [label="returnstatement <= 0.5\ngini = 0.444\nsamples = 6\nvalue = [4, 2]\nclass = Benign"] ;
184 -> 194 ;
195 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
194 -> 195 ;
196 [label="gini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
194 -> 196 ;
197 [label="assignmentoperator <= 0.5\ngini = 0.005\nsamples = 2066\nvalue = [5, 2061]\nclass = Malicious"] ;
175 -> 197 ;
198 [label="ifstatement <= 0.5\ngini = 0.008\nsamples = 1239\nvalue = [5, 1234]\nclass = Malicious"] ;
197 -> 198 ;
199 [label="gini = 0.0\nsamples = 792\nvalue = [0, 792]\nclass = Malicious"] ;
198 -> 199 ;
200 [label="catchproduction <= 0.5\ngini = 0.022\nsamples = 447\nvalue = [5, 442]\nclass = Malicious"] ;
198 -> 200 ;
201 [label="gini = 0.033\nsamples = 298\nvalue = [5, 293]\nclass = Malicious"] ;
200 -> 201 ;
202 [label="gini = 0.0\nsamples = 149\nvalue = [0, 149]\nclass = Malicious"] ;
200 -> 202 ;
203 [label="gini = 0.0\nsamples = 827\nvalue = [0, 827]\nclass = Malicious"] ;
197 -> 203 ;
204 [label="do_for_while_statement <= 0.5\ngini = 0.254\nsamples = 10405\nvalue = [8849, 1556]\nclass = Benign"] ;
0 -> 204 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
205 [label="catchproduction <= 0.5\ngini = 0.001\nsamples = 8615\nvalue = [8612, 3]\nclass = Benign"] ;
204 -> 205 ;
206 [label="gini = 0.0\nsamples = 8518\nvalue = [8518, 0]\nclass = Benign"] ;
205 -> 206 ;
207 [label="ifstatement <= 0.5\ngini = 0.06\nsamples = 97\nvalue = [94, 3]\nclass = Benign"] ;
205 -> 207 ;
208 [label="gini = 0.0\nsamples = 43\nvalue = [43, 0]\nclass = Benign"] ;
207 -> 208 ;
209 [label="varmodifier <= 0.5\ngini = 0.105\nsamples = 54\nvalue = [51, 3]\nclass = Benign"] ;
207 -> 209 ;
210 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
209 -> 210 ;
211 [label="formalparameterlist <= 0.5\ngini = 0.139\nsamples = 40\nvalue = [37, 3]\nclass = Benign"] ;
209 -> 211 ;
212 [label="element_stuff <= 0.5\ngini = 0.17\nsamples = 32\nvalue = [29, 3]\nclass = Benign"] ;
211 -> 212 ;
213 [label="numericliteral <= 0.5\ngini = 0.245\nsamples = 14\nvalue = [12, 2]\nclass = Benign"] ;
212 -> 213 ;
214 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
213 -> 214 ;
215 [label="assignmentoperator <= 0.5\ngini = 0.26\nsamples = 13\nvalue = [11, 2]\nclass = Benign"] ;
213 -> 215 ;
216 [label="gini = 0.278\nsamples = 12\nvalue = [10, 2]\nclass = Benign"] ;
215 -> 216 ;
217 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
215 -> 217 ;
218 [label="numericliteral <= 0.5\ngini = 0.105\nsamples = 18\nvalue = [17, 1]\nclass = Benign"] ;
212 -> 218 ;
219 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
218 -> 219 ;
220 [label="gini = 0.124\nsamples = 15\nvalue = [14, 1]\nclass = Benign"] ;
218 -> 220 ;
221 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
211 -> 221 ;
222 [label="identifiername <= 0.5\ngini = 0.23\nsamples = 1790\nvalue = [237, 1553]\nclass = Malicious"] ;
204 -> 222 ;
223 [label="gini = 0.0\nsamples = 1493\nvalue = [0, 1493]\nclass = Malicious"] ;
222 -> 223 ;
224 [label="catchproduction <= 0.5\ngini = 0.322\nsamples = 297\nvalue = [237, 60]\nclass = Benign"] ;
222 -> 224 ;
225 [label="gini = 0.0\nsamples = 215\nvalue = [215, 0]\nclass = Benign"] ;
224 -> 225 ;
226 [label="assignmentoperator <= 0.5\ngini = 0.393\nsamples = 82\nvalue = [22, 60]\nclass = Malicious"] ;
224 -> 226 ;
227 [label="continue_break_statement <= 0.5\ngini = 0.415\nsamples = 17\nvalue = [12, 5]\nclass = Benign"] ;
226 -> 227 ;
228 [label="gini = 0.0\nsamples = 12\nvalue = [12, 0]\nclass = Benign"] ;
227 -> 228 ;
229 [label="gini = 0.0\nsamples = 5\nvalue = [0, 5]\nclass = Malicious"] ;
227 -> 229 ;
230 [label="returnstatement <= 0.5\ngini = 0.26\nsamples = 65\nvalue = [10, 55]\nclass = Malicious"] ;
226 -> 230 ;
231 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
230 -> 231 ;
232 [label="finallyproduction <= 0.5\ngini = 0.222\nsamples = 63\nvalue = [8, 55]\nclass = Malicious"] ;
230 -> 232 ;
233 [label="continue_break_statement <= 0.5\ngini = 0.346\nsamples = 36\nvalue = [8, 28]\nclass = Malicious"] ;
232 -> 233 ;
234 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
233 -> 234 ;
235 [label="clause_stuff <= 0.5\ngini = 0.175\nsamples = 31\nvalue = [3, 28]\nclass = Malicious"] ;
233 -> 235 ;
236 [label="gini = 0.124\nsamples = 30\nvalue = [2, 28]\nclass = Malicious"] ;
235 -> 236 ;
237 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
235 -> 237 ;
238 [label="gini = 0.0\nsamples = 27\nvalue = [0, 27]\nclass = Malicious"] ;
232 -> 238 ;
}
