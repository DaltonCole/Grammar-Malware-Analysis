digraph Tree {
node [shape=box] ;
0 [label="objectliteralexpression-objectliteral <= 0.5\ngini = 0.5\nsamples = 27000\nvalue = [13488, 13512]\nclass = Malicious"] ;
1 [label="argumentsexpression-memberindexexpression <= 0.5\ngini = 0.388\nsamples = 16246\nvalue = [4285, 11961]\nclass = Malicious"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="identifiername-identifiername <= 0.5\ngini = 0.475\nsamples = 11032\nvalue = [4275, 6757]\nclass = Malicious"] ;
1 -> 2 ;
3 [label="variabledeclaration-newexpression <= 0.5\ngini = 0.442\nsamples = 10071\nvalue = [3319, 6752]\nclass = Malicious"] ;
2 -> 3 ;
4 [label="literal-identifierexpression <= 0.5\ngini = 0.486\nsamples = 7789\nvalue = [3236, 4553]\nclass = Malicious"] ;
3 -> 4 ;
5 [label="expressionsequence-literalexpression <= 0.5\ngini = 0.471\nsamples = 7268\nvalue = [2754, 4514]\nclass = Malicious"] ;
4 -> 5 ;
6 [label="sourceelements-sourceelement <= 0.5\ngini = 0.496\nsamples = 5855\nvalue = [2654, 3201]\nclass = Malicious"] ;
5 -> 6 ;
7 [label="gini = 0.4\nsamples = 2577\nvalue = [711, 1866]\nclass = Malicious"] ;
6 -> 7 ;
8 [label="memberdotexpression-literalexpression <= 0.5\ngini = 0.483\nsamples = 3278\nvalue = [1943, 1335]\nclass = Benign"] ;
6 -> 8 ;
9 [label="identifierexpression-eos <= 0.5\ngini = 0.428\nsamples = 2813\nvalue = [1942, 871]\nclass = Benign"] ;
8 -> 9 ;
10 [label="arguments-identifiername <= 0.5\ngini = 0.289\nsamples = 2214\nvalue = [1826, 388]\nclass = Benign"] ;
9 -> 10 ;
11 [label="numericliteral-eos <= 0.5\ngini = 0.194\nsamples = 2025\nvalue = [1804, 221]\nclass = Benign"] ;
10 -> 11 ;
12 [label="gini = 0.0\nsamples = 1324\nvalue = [1324, 0]\nclass = Benign"] ;
11 -> 12 ;
13 [label="identifiername-arguments <= 0.5\ngini = 0.432\nsamples = 701\nvalue = [480, 221]\nclass = Benign"] ;
11 -> 13 ;
14 [label="gini = 0.0\nsamples = 333\nvalue = [333, 0]\nclass = Benign"] ;
13 -> 14 ;
15 [label="variabledeclaration-literalexpression <= 0.5\ngini = 0.48\nsamples = 368\nvalue = [147, 221]\nclass = Malicious"] ;
13 -> 15 ;
16 [label="gini = 0.0\nsamples = 141\nvalue = [141, 0]\nclass = Benign"] ;
15 -> 16 ;
17 [label="ifstatement-expressionsequence <= 0.5\ngini = 0.051\nsamples = 227\nvalue = [6, 221]\nclass = Malicious"] ;
15 -> 17 ;
18 [label="literal-eos <= 0.5\ngini = 0.018\nsamples = 223\nvalue = [2, 221]\nclass = Malicious"] ;
17 -> 18 ;
19 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
18 -> 19 ;
20 [label="numericliteral-variabledeclaration <= 0.5\ngini = 0.009\nsamples = 222\nvalue = [1, 221]\nclass = Malicious"] ;
18 -> 20 ;
21 [label="gini = 0.0\nsamples = 221\nvalue = [0, 221]\nclass = Malicious"] ;
20 -> 21 ;
22 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
20 -> 22 ;
23 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
17 -> 23 ;
24 [label="arguments-argumentsexpression <= 0.5\ngini = 0.206\nsamples = 189\nvalue = [22, 167]\nclass = Malicious"] ;
10 -> 24 ;
25 [label="gini = 0.0\nsamples = 21\nvalue = [21, 0]\nclass = Benign"] ;
24 -> 25 ;
26 [label="arguments-eos <= 0.5\ngini = 0.012\nsamples = 168\nvalue = [1, 167]\nclass = Malicious"] ;
24 -> 26 ;
27 [label="gini = 0.0\nsamples = 167\nvalue = [0, 167]\nclass = Malicious"] ;
26 -> 27 ;
28 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
26 -> 28 ;
29 [label="memberdotexpression-argumentsexpression <= 0.5\ngini = 0.312\nsamples = 599\nvalue = [116, 483]\nclass = Malicious"] ;
9 -> 29 ;
30 [label="arguments-identifierexpression <= 0.5\ngini = 0.223\nsamples = 554\nvalue = [71, 483]\nclass = Malicious"] ;
29 -> 30 ;
31 [label="gini = 0.0\nsamples = 26\nvalue = [26, 0]\nclass = Benign"] ;
30 -> 31 ;
32 [label="variabledeclaration-eos <= 0.5\ngini = 0.156\nsamples = 528\nvalue = [45, 483]\nclass = Malicious"] ;
30 -> 32 ;
33 [label="literal-numericliteral <= 0.5\ngini = 0.126\nsamples = 518\nvalue = [35, 483]\nclass = Malicious"] ;
32 -> 33 ;
34 [label="identifierexpression-assignmentoperator <= 0.5\ngini = 0.447\nsamples = 95\nvalue = [32, 63]\nclass = Malicious"] ;
33 -> 34 ;
35 [label="gini = 0.0\nsamples = 31\nvalue = [31, 0]\nclass = Benign"] ;
34 -> 35 ;
36 [label="assignmentoperator-argumentsexpression <= 0.5\ngini = 0.031\nsamples = 64\nvalue = [1, 63]\nclass = Malicious"] ;
34 -> 36 ;
37 [label="gini = 0.0\nsamples = 63\nvalue = [0, 63]\nclass = Malicious"] ;
36 -> 37 ;
38 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
36 -> 38 ;
39 [label="functionexpression-functionbody <= 0.5\ngini = 0.014\nsamples = 423\nvalue = [3, 420]\nclass = Malicious"] ;
33 -> 39 ;
40 [label="gini = 0.0\nsamples = 420\nvalue = [0, 420]\nclass = Malicious"] ;
39 -> 40 ;
41 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
39 -> 41 ;
42 [label="gini = 0.0\nsamples = 10\nvalue = [10, 0]\nclass = Benign"] ;
32 -> 42 ;
43 [label="gini = 0.0\nsamples = 45\nvalue = [45, 0]\nclass = Benign"] ;
29 -> 43 ;
44 [label="literal-literalexpression <= 0.5\ngini = 0.004\nsamples = 465\nvalue = [1, 464]\nclass = Malicious"] ;
8 -> 44 ;
45 [label="gini = 0.0\nsamples = 464\nvalue = [0, 464]\nclass = Malicious"] ;
44 -> 45 ;
46 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
44 -> 46 ;
47 [label="eos-sourceelement <= 0.5\ngini = 0.132\nsamples = 1413\nvalue = [100, 1313]\nclass = Malicious"] ;
5 -> 47 ;
48 [label="gini = 0.0\nsamples = 42\nvalue = [42, 0]\nclass = Benign"] ;
47 -> 48 ;
49 [label="memberindexexpression-memberdotexpression <= 0.5\ngini = 0.081\nsamples = 1371\nvalue = [58, 1313]\nclass = Malicious"] ;
47 -> 49 ;
50 [label="literal-numericliteral <= 0.5\ngini = 0.044\nsamples = 1343\nvalue = [30, 1313]\nclass = Malicious"] ;
49 -> 50 ;
51 [label="expressionsequence-identifierexpression <= 0.5\ngini = 0.5\nsamples = 30\nvalue = [15, 15]\nclass = Benign"] ;
50 -> 51 ;
52 [label="gini = 0.0\nsamples = 15\nvalue = [15, 0]\nclass = Benign"] ;
51 -> 52 ;
53 [label="gini = 0.0\nsamples = 15\nvalue = [0, 15]\nclass = Malicious"] ;
51 -> 53 ;
54 [label="arrayliteral-variabledeclaration <= 0.5\ngini = 0.023\nsamples = 1313\nvalue = [15, 1298]\nclass = Malicious"] ;
50 -> 54 ;
55 [label="assignmentexpression-memberdotexpression <= 0.5\ngini = 0.012\nsamples = 1306\nvalue = [8, 1298]\nclass = Malicious"] ;
54 -> 55 ;
56 [label="literal-memberindexexpression <= 0.5\ngini = 0.006\nsamples = 1302\nvalue = [4, 1298]\nclass = Malicious"] ;
55 -> 56 ;
57 [label="expressionsequence-memberdotexpression <= 0.5\ngini = 0.003\nsamples = 1300\nvalue = [2, 1298]\nclass = Malicious"] ;
56 -> 57 ;
58 [label="arguments-eos <= 0.5\ngini = 0.002\nsamples = 1299\nvalue = [1, 1298]\nclass = Malicious"] ;
57 -> 58 ;
59 [label="gini = 0.0\nsamples = 1298\nvalue = [0, 1298]\nclass = Malicious"] ;
58 -> 59 ;
60 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
58 -> 60 ;
61 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
57 -> 61 ;
62 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
56 -> 62 ;
63 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
55 -> 63 ;
64 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
54 -> 64 ;
65 [label="gini = 0.0\nsamples = 28\nvalue = [28, 0]\nclass = Benign"] ;
49 -> 65 ;
66 [label="identifierexpression-variabledeclaration <= 0.5\ngini = 0.139\nsamples = 521\nvalue = [482, 39]\nclass = Benign"] ;
4 -> 66 ;
67 [label="emptystatement-catchproduction <= 0.5\ngini = 0.028\nsamples = 489\nvalue = [482, 7]\nclass = Benign"] ;
66 -> 67 ;
68 [label="gini = 0.0\nsamples = 482\nvalue = [482, 0]\nclass = Benign"] ;
67 -> 68 ;
69 [label="gini = 0.0\nsamples = 7\nvalue = [0, 7]\nclass = Malicious"] ;
67 -> 69 ;
70 [label="gini = 0.0\nsamples = 32\nvalue = [0, 32]\nclass = Malicious"] ;
66 -> 70 ;
71 [label="identifierexpression-literalexpression <= 0.5\ngini = 0.07\nsamples = 2282\nvalue = [83, 2199]\nclass = Malicious"] ;
3 -> 71 ;
72 [label="assignmentexpression-memberdotexpression <= 0.5\ngini = 0.022\nsamples = 2208\nvalue = [25, 2183]\nclass = Malicious"] ;
71 -> 72 ;
73 [label="expressionsequence-argumentsexpression <= 0.5\ngini = 0.014\nsamples = 2199\nvalue = [16, 2183]\nclass = Malicious"] ;
72 -> 73 ;
74 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
73 -> 74 ;
75 [label="additiveexpression-additiveexpression <= 0.5\ngini = 0.007\nsamples = 2191\nvalue = [8, 2183]\nclass = Malicious"] ;
73 -> 75 ;
76 [label="arguments-literalexpression <= 0.5\ngini = 0.005\nsamples = 2188\nvalue = [5, 2183]\nclass = Malicious"] ;
75 -> 76 ;
77 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
76 -> 77 ;
78 [label="memberdotexpression-identifierexpression <= 0.5\ngini = 0.004\nsamples = 2187\nvalue = [4, 2183]\nclass = Malicious"] ;
76 -> 78 ;
79 [label="gini = 0.0\nsamples = 1105\nvalue = [0, 1105]\nclass = Malicious"] ;
78 -> 79 ;
80 [label="literal-numericliteral <= 0.5\ngini = 0.007\nsamples = 1082\nvalue = [4, 1078]\nclass = Malicious"] ;
78 -> 80 ;
81 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
80 -> 81 ;
82 [label="arguments-eos <= 0.5\ngini = 0.002\nsamples = 1079\nvalue = [1, 1078]\nclass = Malicious"] ;
80 -> 82 ;
83 [label="variabledeclaration-literalexpression <= 0.5\ngini = 0.005\nsamples = 435\nvalue = [1, 434]\nclass = Malicious"] ;
82 -> 83 ;
84 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
83 -> 84 ;
85 [label="gini = 0.0\nsamples = 434\nvalue = [0, 434]\nclass = Malicious"] ;
83 -> 85 ;
86 [label="gini = 0.0\nsamples = 644\nvalue = [0, 644]\nclass = Malicious"] ;
82 -> 86 ;
87 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
75 -> 87 ;
88 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
72 -> 88 ;
89 [label="additiveexpression-additiveexpression <= 0.5\ngini = 0.339\nsamples = 74\nvalue = [58, 16]\nclass = Benign"] ;
71 -> 89 ;
90 [label="unaryminusexpression-literalexpression <= 0.5\ngini = 0.068\nsamples = 57\nvalue = [55, 2]\nclass = Benign"] ;
89 -> 90 ;
91 [label="gini = 0.0\nsamples = 55\nvalue = [55, 0]\nclass = Benign"] ;
90 -> 91 ;
92 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
90 -> 92 ;
93 [label="variabledeclaration-literalexpression <= 0.5\ngini = 0.291\nsamples = 17\nvalue = [3, 14]\nclass = Malicious"] ;
89 -> 93 ;
94 [label="literal-statement <= 0.5\ngini = 0.375\nsamples = 4\nvalue = [3, 1]\nclass = Benign"] ;
93 -> 94 ;
95 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
94 -> 95 ;
96 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
94 -> 96 ;
97 [label="gini = 0.0\nsamples = 13\nvalue = [0, 13]\nclass = Malicious"] ;
93 -> 97 ;
98 [label="emptystatement-catchproduction <= 0.5\ngini = 0.01\nsamples = 961\nvalue = [956, 5]\nclass = Benign"] ;
2 -> 98 ;
99 [label="arguments-bitxorexpression <= 0.5\ngini = 0.002\nsamples = 957\nvalue = [956, 1]\nclass = Benign"] ;
98 -> 99 ;
100 [label="gini = 0.0\nsamples = 956\nvalue = [956, 0]\nclass = Benign"] ;
99 -> 100 ;
101 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
99 -> 101 ;
102 [label="gini = 0.0\nsamples = 4\nvalue = [0, 4]\nclass = Malicious"] ;
98 -> 102 ;
103 [label="eos-arguments <= 0.5\ngini = 0.004\nsamples = 5214\nvalue = [10, 5204]\nclass = Malicious"] ;
1 -> 103 ;
104 [label="literal-eos <= 0.5\ngini = 0.001\nsamples = 5206\nvalue = [2, 5204]\nclass = Malicious"] ;
103 -> 104 ;
105 [label="eos-sourceelement <= 0.5\ngini = 0.02\nsamples = 200\nvalue = [2, 198]\nclass = Malicious"] ;
104 -> 105 ;
106 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
105 -> 106 ;
107 [label="gini = 0.0\nsamples = 198\nvalue = [0, 198]\nclass = Malicious"] ;
105 -> 107 ;
108 [label="gini = 0.0\nsamples = 5006\nvalue = [0, 5006]\nclass = Malicious"] ;
104 -> 108 ;
109 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
103 -> 109 ;
110 [label="statement-forstatement <= 0.5\ngini = 0.247\nsamples = 10754\nvalue = [9203, 1551]\nclass = Benign"] ;
0 -> 110 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
111 [label="expressionsequence-bitandexpression <= 0.5\ngini = 0.012\nsamples = 9218\nvalue = [9161, 57]\nclass = Benign"] ;
110 -> 111 ;
112 [label="memberindexexpression-objectliteralexpression <= 0.5\ngini = 0.001\nsamples = 9165\nvalue = [9161, 4]\nclass = Benign"] ;
111 -> 112 ;
113 [label="assignmentoperator-parenthesizedexpression <= 0.5\ngini = 0.0\nsamples = 9163\nvalue = [9161, 2]\nclass = Benign"] ;
112 -> 113 ;
114 [label="memberdotexpression-objectliteralexpression <= 0.5\ngini = 0.0\nsamples = 9162\nvalue = [9161, 1]\nclass = Benign"] ;
113 -> 114 ;
115 [label="gini = 0.0\nsamples = 9161\nvalue = [9161, 0]\nclass = Benign"] ;
114 -> 115 ;
116 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
114 -> 116 ;
117 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
113 -> 117 ;
118 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
112 -> 118 ;
119 [label="gini = 0.0\nsamples = 53\nvalue = [0, 53]\nclass = Malicious"] ;
111 -> 119 ;
120 [label="eos-eos <= 0.5\ngini = 0.053\nsamples = 1536\nvalue = [42, 1494]\nclass = Malicious"] ;
110 -> 120 ;
121 [label="gini = 0.0\nsamples = 1494\nvalue = [0, 1494]\nclass = Malicious"] ;
120 -> 121 ;
122 [label="gini = 0.0\nsamples = 42\nvalue = [42, 0]\nclass = Benign"] ;
120 -> 122 ;
}
