digraph Tree {
node [shape=box] ;
0 [label="objectliteral <= 0.5\ngini = 0.5\nsamples = 27000\nvalue = [13479, 13521]\nclass = Malicious"] ;
1 [label="numericliteral <= 0.5\ngini = 0.39\nsamples = 16286\nvalue = [4318, 11968]\nclass = Malicious"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="expressionstatement <= 0.5\ngini = 0.485\nsamples = 7300\nvalue = [3026, 4274]\nclass = Malicious"] ;
1 -> 2 ;
3 [label="arguments <= 0.5\ngini = 0.407\nsamples = 3936\nvalue = [1120, 2816]\nclass = Malicious"] ;
2 -> 3 ;
4 [label="varmodifier <= 0.5\ngini = 0.465\nsamples = 2952\nvalue = [1083, 1869]\nclass = Malicious"] ;
3 -> 4 ;
5 [label="gini = 0.392\nsamples = 2552\nvalue = [683, 1869]\nclass = Malicious"] ;
4 -> 5 ;
6 [label="gini = 0.0\nsamples = 400\nvalue = [400, 0]\nclass = Benign"] ;
4 -> 6 ;
7 [label="literal <= 0.5\ngini = 0.072\nsamples = 984\nvalue = [37, 947]\nclass = Malicious"] ;
3 -> 7 ;
8 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
7 -> 8 ;
9 [label="elementlist <= 0.5\ngini = 0.058\nsamples = 976\nvalue = [29, 947]\nclass = Malicious"] ;
7 -> 9 ;
10 [label="varmodifier <= 0.5\ngini = 0.05\nsamples = 972\nvalue = [25, 947]\nclass = Malicious"] ;
9 -> 10 ;
11 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
10 -> 11 ;
12 [label="expressionsequence <= 0.5\ngini = 0.048\nsamples = 971\nvalue = [24, 947]\nclass = Malicious"] ;
10 -> 12 ;
13 [label="identifiername <= 0.5\ngini = 0.094\nsamples = 485\nvalue = [24, 461]\nclass = Malicious"] ;
12 -> 13 ;
14 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
13 -> 14 ;
15 [label="gini = 0.091\nsamples = 484\nvalue = [23, 461]\nclass = Malicious"] ;
13 -> 15 ;
16 [label="gini = 0.0\nsamples = 486\nvalue = [0, 486]\nclass = Malicious"] ;
12 -> 16 ;
17 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
9 -> 17 ;
18 [label="variabledeclarationlist <= 0.5\ngini = 0.491\nsamples = 3364\nvalue = [1906, 1458]\nclass = Benign"] ;
2 -> 18 ;
19 [label="functionbody <= 0.5\ngini = 0.357\nsamples = 1910\nvalue = [1465, 445]\nclass = Benign"] ;
18 -> 19 ;
20 [label="identifiername <= 0.5\ngini = 0.426\nsamples = 1447\nvalue = [1002, 445]\nclass = Benign"] ;
19 -> 20 ;
21 [label="gini = 0.0\nsamples = 363\nvalue = [363, 0]\nclass = Benign"] ;
20 -> 21 ;
22 [label="arguments <= 0.5\ngini = 0.484\nsamples = 1084\nvalue = [639, 445]\nclass = Benign"] ;
20 -> 22 ;
23 [label="gini = 0.0\nsamples = 164\nvalue = [164, 0]\nclass = Benign"] ;
22 -> 23 ;
24 [label="ifstatement <= 0.5\ngini = 0.499\nsamples = 920\nvalue = [475, 445]\nclass = Benign"] ;
22 -> 24 ;
25 [label="arrayliteral <= 0.5\ngini = 0.499\nsamples = 856\nvalue = [411, 445]\nclass = Malicious"] ;
24 -> 25 ;
26 [label="literal <= 0.5\ngini = 0.493\nsamples = 798\nvalue = [353, 445]\nclass = Malicious"] ;
25 -> 26 ;
27 [label="gini = 0.0\nsamples = 23\nvalue = [23, 0]\nclass = Benign"] ;
26 -> 27 ;
28 [label="catchproduction <= 0.5\ngini = 0.489\nsamples = 775\nvalue = [330, 445]\nclass = Malicious"] ;
26 -> 28 ;
29 [label="gini = 0.488\nsamples = 772\nvalue = [327, 445]\nclass = Malicious"] ;
28 -> 29 ;
30 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
28 -> 30 ;
31 [label="gini = 0.0\nsamples = 58\nvalue = [58, 0]\nclass = Benign"] ;
25 -> 31 ;
32 [label="gini = 0.0\nsamples = 64\nvalue = [64, 0]\nclass = Benign"] ;
24 -> 32 ;
33 [label="gini = 0.0\nsamples = 463\nvalue = [463, 0]\nclass = Benign"] ;
19 -> 33 ;
34 [label="identifiername <= 0.5\ngini = 0.423\nsamples = 1454\nvalue = [441, 1013]\nclass = Malicious"] ;
18 -> 34 ;
35 [label="arguments <= 0.5\ngini = 0.078\nsamples = 814\nvalue = [33, 781]\nclass = Malicious"] ;
34 -> 35 ;
36 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
35 -> 36 ;
37 [label="withstatement <= 0.5\ngini = 0.069\nsamples = 810\nvalue = [29, 781]\nclass = Malicious"] ;
35 -> 37 ;
38 [label="returnstatement <= 0.5\ngini = 0.067\nsamples = 809\nvalue = [28, 781]\nclass = Malicious"] ;
37 -> 38 ;
39 [label="assignmentoperator <= 0.5\ngini = 0.062\nsamples = 786\nvalue = [25, 761]\nclass = Malicious"] ;
38 -> 39 ;
40 [label="functionbody <= 0.5\ngini = 0.067\nsamples = 725\nvalue = [25, 700]\nclass = Malicious"] ;
39 -> 40 ;
41 [label="gini = 0.064\nsamples = 724\nvalue = [24, 700]\nclass = Malicious"] ;
40 -> 41 ;
42 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
40 -> 42 ;
43 [label="gini = 0.0\nsamples = 61\nvalue = [0, 61]\nclass = Malicious"] ;
39 -> 43 ;
44 [label="assignmentoperator <= 0.5\ngini = 0.227\nsamples = 23\nvalue = [3, 20]\nclass = Malicious"] ;
38 -> 44 ;
45 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
44 -> 45 ;
46 [label="gini = 0.091\nsamples = 21\nvalue = [1, 20]\nclass = Malicious"] ;
44 -> 46 ;
47 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
37 -> 47 ;
48 [label="returnstatement <= 0.5\ngini = 0.462\nsamples = 640\nvalue = [408, 232]\nclass = Benign"] ;
34 -> 48 ;
49 [label="elementlist <= 0.5\ngini = 0.015\nsamples = 395\nvalue = [392, 3]\nclass = Benign"] ;
48 -> 49 ;
50 [label="functionbody <= 0.5\ngini = 0.01\nsamples = 383\nvalue = [381, 2]\nclass = Benign"] ;
49 -> 50 ;
51 [label="assignmentoperator <= 0.5\ngini = 0.021\nsamples = 187\nvalue = [185, 2]\nclass = Benign"] ;
50 -> 51 ;
52 [label="arguments <= 0.5\ngini = 0.04\nsamples = 98\nvalue = [96, 2]\nclass = Benign"] ;
51 -> 52 ;
53 [label="gini = 0.0\nsamples = 28\nvalue = [28, 0]\nclass = Benign"] ;
52 -> 53 ;
54 [label="arrayliteral <= 0.5\ngini = 0.056\nsamples = 70\nvalue = [68, 2]\nclass = Benign"] ;
52 -> 54 ;
55 [label="catchproduction <= 0.5\ngini = 0.058\nsamples = 67\nvalue = [65, 2]\nclass = Benign"] ;
54 -> 55 ;
56 [label="ifstatement <= 0.5\ngini = 0.06\nsamples = 65\nvalue = [63, 2]\nclass = Benign"] ;
55 -> 56 ;
57 [label="gini = 0.069\nsamples = 28\nvalue = [27, 1]\nclass = Benign"] ;
56 -> 57 ;
58 [label="block <= 0.5\ngini = 0.053\nsamples = 37\nvalue = [36, 1]\nclass = Benign"] ;
56 -> 58 ;
59 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
58 -> 59 ;
60 [label="gini = 0.059\nsamples = 33\nvalue = [32, 1]\nclass = Benign"] ;
58 -> 60 ;
61 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
55 -> 61 ;
62 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
54 -> 62 ;
63 [label="gini = 0.0\nsamples = 89\nvalue = [89, 0]\nclass = Benign"] ;
51 -> 63 ;
64 [label="gini = 0.0\nsamples = 196\nvalue = [196, 0]\nclass = Benign"] ;
50 -> 64 ;
65 [label="functionbody <= 0.5\ngini = 0.153\nsamples = 12\nvalue = [11, 1]\nclass = Benign"] ;
49 -> 65 ;
66 [label="statementlist <= 0.5\ngini = 0.375\nsamples = 4\nvalue = [3, 1]\nclass = Benign"] ;
65 -> 66 ;
67 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
66 -> 67 ;
68 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
66 -> 68 ;
69 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
65 -> 69 ;
70 [label="ifstatement <= 0.5\ngini = 0.122\nsamples = 245\nvalue = [16, 229]\nclass = Malicious"] ;
48 -> 70 ;
71 [label="formalparameterarg <= 0.5\ngini = 0.08\nsamples = 239\nvalue = [10, 229]\nclass = Malicious"] ;
70 -> 71 ;
72 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
71 -> 72 ;
73 [label="gini = 0.065\nsamples = 237\nvalue = [8, 229]\nclass = Malicious"] ;
71 -> 73 ;
74 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
70 -> 74 ;
75 [label="expressionstatement <= 0.5\ngini = 0.246\nsamples = 8986\nvalue = [1292, 7694]\nclass = Malicious"] ;
1 -> 75 ;
76 [label="gini = 0.0\nsamples = 253\nvalue = [253, 0]\nclass = Benign"] ;
75 -> 76 ;
77 [label="variablestatement <= 0.5\ngini = 0.21\nsamples = 8733\nvalue = [1039, 7694]\nclass = Malicious"] ;
75 -> 77 ;
78 [label="returnstatement <= 0.5\ngini = 0.399\nsamples = 1454\nvalue = [400, 1054]\nclass = Malicious"] ;
77 -> 78 ;
79 [label="ifstatement <= 0.5\ngini = 0.485\nsamples = 948\nvalue = [393, 555]\nclass = Malicious"] ;
78 -> 79 ;
80 [label="arguments <= 0.5\ngini = 0.402\nsamples = 456\nvalue = [329, 127]\nclass = Benign"] ;
79 -> 80 ;
81 [label="gini = 0.0\nsamples = 98\nvalue = [98, 0]\nclass = Benign"] ;
80 -> 81 ;
82 [label="functionbody <= 0.5\ngini = 0.458\nsamples = 358\nvalue = [231, 127]\nclass = Benign"] ;
80 -> 82 ;
83 [label="identifiername <= 0.5\ngini = 0.499\nsamples = 266\nvalue = [139, 127]\nclass = Benign"] ;
82 -> 83 ;
84 [label="arrayliteral <= 0.5\ngini = 0.124\nsamples = 30\nvalue = [28, 2]\nclass = Benign"] ;
83 -> 84 ;
85 [label="gini = 0.0\nsamples = 28\nvalue = [28, 0]\nclass = Benign"] ;
84 -> 85 ;
86 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
84 -> 86 ;
87 [label="emptystatement <= 0.5\ngini = 0.498\nsamples = 236\nvalue = [111, 125]\nclass = Malicious"] ;
83 -> 87 ;
88 [label="elementlist <= 0.5\ngini = 0.491\nsamples = 221\nvalue = [96, 125]\nclass = Malicious"] ;
87 -> 88 ;
89 [label="catchproduction <= 0.5\ngini = 0.489\nsamples = 218\nvalue = [93, 125]\nclass = Malicious"] ;
88 -> 89 ;
90 [label="assignmentoperator <= 0.5\ngini = 0.488\nsamples = 217\nvalue = [92, 125]\nclass = Malicious"] ;
89 -> 90 ;
91 [label="gini = 0.488\nsamples = 216\nvalue = [91, 125]\nclass = Malicious"] ;
90 -> 91 ;
92 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
90 -> 92 ;
93 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
89 -> 93 ;
94 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
88 -> 94 ;
95 [label="gini = 0.0\nsamples = 15\nvalue = [15, 0]\nclass = Benign"] ;
87 -> 95 ;
96 [label="gini = 0.0\nsamples = 92\nvalue = [92, 0]\nclass = Benign"] ;
82 -> 96 ;
97 [label="statementlist <= 0.5\ngini = 0.226\nsamples = 492\nvalue = [64, 428]\nclass = Malicious"] ;
79 -> 97 ;
98 [label="identifiername <= 0.5\ngini = 0.014\nsamples = 431\nvalue = [3, 428]\nclass = Malicious"] ;
97 -> 98 ;
99 [label="gini = 0.0\nsamples = 135\nvalue = [0, 135]\nclass = Malicious"] ;
98 -> 99 ;
100 [label="gini = 0.02\nsamples = 296\nvalue = [3, 293]\nclass = Malicious"] ;
98 -> 100 ;
101 [label="gini = 0.0\nsamples = 61\nvalue = [61, 0]\nclass = Benign"] ;
97 -> 101 ;
102 [label="identifiername <= 0.5\ngini = 0.027\nsamples = 506\nvalue = [7, 499]\nclass = Malicious"] ;
78 -> 102 ;
103 [label="gini = 0.0\nsamples = 499\nvalue = [0, 499]\nclass = Malicious"] ;
102 -> 103 ;
104 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
102 -> 104 ;
105 [label="arguments <= 0.5\ngini = 0.16\nsamples = 7279\nvalue = [639, 6640]\nclass = Malicious"] ;
77 -> 105 ;
106 [label="gini = 0.0\nsamples = 108\nvalue = [108, 0]\nclass = Benign"] ;
105 -> 106 ;
107 [label="elementlist <= 0.5\ngini = 0.137\nsamples = 7171\nvalue = [531, 6640]\nclass = Malicious"] ;
105 -> 107 ;
108 [label="do_for_while_statement <= 0.5\ngini = 0.24\nsamples = 3359\nvalue = [469, 2890]\nclass = Malicious"] ;
107 -> 108 ;
109 [label="returnstatement <= 0.5\ngini = 0.207\nsamples = 3101\nvalue = [364, 2737]\nclass = Malicious"] ;
108 -> 109 ;
110 [label="functionbody <= 0.5\ngini = 0.302\nsamples = 1279\nvalue = [237, 1042]\nclass = Malicious"] ;
109 -> 110 ;
111 [label="emptystatement <= 0.5\ngini = 0.142\nsamples = 1056\nvalue = [81, 975]\nclass = Malicious"] ;
110 -> 111 ;
112 [label="identifiername <= 0.5\ngini = 0.137\nsamples = 1053\nvalue = [78, 975]\nclass = Malicious"] ;
111 -> 112 ;
113 [label="gini = 0.082\nsamples = 443\nvalue = [19, 424]\nclass = Malicious"] ;
112 -> 113 ;
114 [label="assignmentoperator <= 0.5\ngini = 0.175\nsamples = 610\nvalue = [59, 551]\nclass = Malicious"] ;
112 -> 114 ;
115 [label="trystatement <= 0.5\ngini = 0.173\nsamples = 608\nvalue = [58, 550]\nclass = Malicious"] ;
114 -> 115 ;
116 [label="statementlist <= 0.5\ngini = 0.171\nsamples = 605\nvalue = [57, 548]\nclass = Malicious"] ;
115 -> 116 ;
117 [label="ifstatement <= 0.5\ngini = 0.177\nsamples = 417\nvalue = [41, 376]\nclass = Malicious"] ;
116 -> 117 ;
118 [label="gini = 0.167\nsamples = 414\nvalue = [38, 376]\nclass = Malicious"] ;
117 -> 118 ;
119 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
117 -> 119 ;
120 [label="gini = 0.156\nsamples = 188\nvalue = [16, 172]\nclass = Malicious"] ;
116 -> 120 ;
121 [label="gini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
115 -> 121 ;
122 [label="ifstatement <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
114 -> 122 ;
123 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
122 -> 123 ;
124 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
122 -> 124 ;
125 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
111 -> 125 ;
126 [label="emptystatement <= 0.5\ngini = 0.42\nsamples = 223\nvalue = [156, 67]\nclass = Benign"] ;
110 -> 126 ;
127 [label="formalparameterlist <= 0.5\ngini = 0.104\nsamples = 164\nvalue = [155, 9]\nclass = Benign"] ;
126 -> 127 ;
128 [label="gini = 0.0\nsamples = 129\nvalue = [129, 0]\nclass = Benign"] ;
127 -> 128 ;
129 [label="ifstatement <= 0.5\ngini = 0.382\nsamples = 35\nvalue = [26, 9]\nclass = Benign"] ;
127 -> 129 ;
130 [label="arrayliteral <= 0.5\ngini = 0.48\nsamples = 15\nvalue = [6, 9]\nclass = Malicious"] ;
129 -> 130 ;
131 [label="gini = 0.459\nsamples = 14\nvalue = [5, 9]\nclass = Malicious"] ;
130 -> 131 ;
132 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
130 -> 132 ;
133 [label="gini = 0.0\nsamples = 20\nvalue = [20, 0]\nclass = Benign"] ;
129 -> 133 ;
134 [label="block <= 0.5\ngini = 0.033\nsamples = 59\nvalue = [1, 58]\nclass = Malicious"] ;
126 -> 134 ;
135 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
134 -> 135 ;
136 [label="gini = 0.0\nsamples = 58\nvalue = [0, 58]\nclass = Malicious"] ;
134 -> 136 ;
137 [label="block <= 0.5\ngini = 0.13\nsamples = 1822\nvalue = [127, 1695]\nclass = Malicious"] ;
109 -> 137 ;
138 [label="formalparameterarg <= 0.5\ngini = 0.037\nsamples = 891\nvalue = [17, 874]\nclass = Malicious"] ;
137 -> 138 ;
139 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
138 -> 139 ;
140 [label="ifstatement <= 0.5\ngini = 0.035\nsamples = 890\nvalue = [16, 874]\nclass = Malicious"] ;
138 -> 140 ;
141 [label="gini = 0.0\nsamples = 12\nvalue = [0, 12]\nclass = Malicious"] ;
140 -> 141 ;
142 [label="gini = 0.036\nsamples = 878\nvalue = [16, 862]\nclass = Malicious"] ;
140 -> 142 ;
143 [label="identifiername <= 0.5\ngini = 0.208\nsamples = 931\nvalue = [110, 821]\nclass = Malicious"] ;
137 -> 143 ;
144 [label="gini = 0.0\nsamples = 224\nvalue = [0, 224]\nclass = Malicious"] ;
143 -> 144 ;
145 [label="formalparameterlist <= 0.5\ngini = 0.263\nsamples = 707\nvalue = [110, 597]\nclass = Malicious"] ;
143 -> 145 ;
146 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
145 -> 146 ;
147 [label="arrayliteral <= 0.5\ngini = 0.258\nsamples = 704\nvalue = [107, 597]\nclass = Malicious"] ;
145 -> 147 ;
148 [label="emptystatement <= 0.5\ngini = 0.256\nsamples = 703\nvalue = [106, 597]\nclass = Malicious"] ;
147 -> 148 ;
149 [label="gini = 0.254\nsamples = 702\nvalue = [105, 597]\nclass = Malicious"] ;
148 -> 149 ;
150 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
148 -> 150 ;
151 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
147 -> 151 ;
152 [label="assignmentoperator <= 0.5\ngini = 0.483\nsamples = 258\nvalue = [105, 153]\nclass = Malicious"] ;
108 -> 152 ;
153 [label="emptystatement <= 0.5\ngini = 0.201\nsamples = 115\nvalue = [102, 13]\nclass = Benign"] ;
152 -> 153 ;
154 [label="gini = 0.0\nsamples = 102\nvalue = [102, 0]\nclass = Benign"] ;
153 -> 154 ;
155 [label="gini = 0.0\nsamples = 13\nvalue = [0, 13]\nclass = Malicious"] ;
153 -> 155 ;
156 [label="ifstatement <= 0.5\ngini = 0.041\nsamples = 143\nvalue = [3, 140]\nclass = Malicious"] ;
152 -> 156 ;
157 [label="emptystatement <= 0.5\ngini = 0.015\nsamples = 135\nvalue = [1, 134]\nclass = Malicious"] ;
156 -> 157 ;
158 [label="formalparameterarg <= 0.5\ngini = 0.074\nsamples = 26\nvalue = [1, 25]\nclass = Malicious"] ;
157 -> 158 ;
159 [label="block <= 0.5\ngini = 0.111\nsamples = 17\nvalue = [1, 16]\nclass = Malicious"] ;
158 -> 159 ;
160 [label="gini = 0.0\nsamples = 9\nvalue = [0, 9]\nclass = Malicious"] ;
159 -> 160 ;
161 [label="arrayliteral <= 0.5\ngini = 0.219\nsamples = 8\nvalue = [1, 7]\nclass = Malicious"] ;
159 -> 161 ;
162 [label="gini = 0.245\nsamples = 7\nvalue = [1, 6]\nclass = Malicious"] ;
161 -> 162 ;
163 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
161 -> 163 ;
164 [label="gini = 0.0\nsamples = 9\nvalue = [0, 9]\nclass = Malicious"] ;
158 -> 164 ;
165 [label="gini = 0.0\nsamples = 109\nvalue = [0, 109]\nclass = Malicious"] ;
157 -> 165 ;
166 [label="emptystatement <= 0.5\ngini = 0.375\nsamples = 8\nvalue = [2, 6]\nclass = Malicious"] ;
156 -> 166 ;
167 [label="formalparameterlist <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [2, 1]\nclass = Benign"] ;
166 -> 167 ;
168 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
167 -> 168 ;
169 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
167 -> 169 ;
170 [label="gini = 0.0\nsamples = 5\nvalue = [0, 5]\nclass = Malicious"] ;
166 -> 170 ;
171 [label="functionbody <= 0.5\ngini = 0.032\nsamples = 3812\nvalue = [62, 3750]\nclass = Malicious"] ;
107 -> 171 ;
172 [label="ifstatement <= 0.5\ngini = 0.001\nsamples = 2921\nvalue = [2, 2919]\nclass = Malicious"] ;
171 -> 172 ;
173 [label="do_for_while_statement <= 0.5\ngini = 0.009\nsamples = 437\nvalue = [2, 435]\nclass = Malicious"] ;
172 -> 173 ;
174 [label="identifiername <= 0.5\ngini = 0.219\nsamples = 16\nvalue = [2, 14]\nclass = Malicious"] ;
173 -> 174 ;
175 [label="gini = 0.0\nsamples = 14\nvalue = [0, 14]\nclass = Malicious"] ;
174 -> 175 ;
176 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
174 -> 176 ;
177 [label="gini = 0.0\nsamples = 421\nvalue = [0, 421]\nclass = Malicious"] ;
173 -> 177 ;
178 [label="gini = 0.0\nsamples = 2484\nvalue = [0, 2484]\nclass = Malicious"] ;
172 -> 178 ;
179 [label="returnstatement <= 0.5\ngini = 0.126\nsamples = 891\nvalue = [60, 831]\nclass = Malicious"] ;
171 -> 179 ;
180 [label="trystatement <= 0.5\ngini = 0.474\nsamples = 140\nvalue = [54, 86]\nclass = Malicious"] ;
179 -> 180 ;
181 [label="gini = 0.0\nsamples = 54\nvalue = [54, 0]\nclass = Benign"] ;
180 -> 181 ;
182 [label="gini = 0.0\nsamples = 86\nvalue = [0, 86]\nclass = Malicious"] ;
180 -> 182 ;
183 [label="breakstatement <= 0.5\ngini = 0.016\nsamples = 751\nvalue = [6, 745]\nclass = Malicious"] ;
179 -> 183 ;
184 [label="identifiername <= 0.5\ngini = 0.011\nsamples = 749\nvalue = [4, 745]\nclass = Malicious"] ;
183 -> 184 ;
185 [label="gini = 0.0\nsamples = 535\nvalue = [0, 535]\nclass = Malicious"] ;
184 -> 185 ;
186 [label="assignmentoperator <= 0.5\ngini = 0.037\nsamples = 214\nvalue = [4, 210]\nclass = Malicious"] ;
184 -> 186 ;
187 [label="formalparameterlist <= 0.5\ngini = 0.5\nsamples = 6\nvalue = [3, 3]\nclass = Benign"] ;
186 -> 187 ;
188 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
187 -> 188 ;
189 [label="block <= 0.5\ngini = 0.375\nsamples = 4\nvalue = [1, 3]\nclass = Malicious"] ;
187 -> 189 ;
190 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
189 -> 190 ;
191 [label="gini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
189 -> 191 ;
192 [label="formalparameterlist <= 0.5\ngini = 0.01\nsamples = 208\nvalue = [1, 207]\nclass = Malicious"] ;
186 -> 192 ;
193 [label="gini = 0.0\nsamples = 207\nvalue = [0, 207]\nclass = Malicious"] ;
192 -> 193 ;
194 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
192 -> 194 ;
195 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
183 -> 195 ;
196 [label="do_for_while_statement <= 0.5\ngini = 0.248\nsamples = 10714\nvalue = [9161, 1553]\nclass = Benign"] ;
0 -> 196 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
197 [label="catchproduction <= 0.5\ngini = 0.001\nsamples = 8943\nvalue = [8940, 3]\nclass = Benign"] ;
196 -> 197 ;
198 [label="gini = 0.0\nsamples = 8836\nvalue = [8836, 0]\nclass = Benign"] ;
197 -> 198 ;
199 [label="functionbody <= 0.5\ngini = 0.055\nsamples = 107\nvalue = [104, 3]\nclass = Benign"] ;
197 -> 199 ;
200 [label="arrayliteral <= 0.5\ngini = 0.101\nsamples = 56\nvalue = [53, 3]\nclass = Benign"] ;
199 -> 200 ;
201 [label="variablestatement <= 0.5\ngini = 0.278\nsamples = 12\nvalue = [10, 2]\nclass = Benign"] ;
200 -> 201 ;
202 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
201 -> 202 ;
203 [label="numericliteral <= 0.5\ngini = 0.48\nsamples = 5\nvalue = [3, 2]\nclass = Benign"] ;
201 -> 203 ;
204 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
203 -> 204 ;
205 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
203 -> 205 ;
206 [label="ifstatement <= 0.5\ngini = 0.044\nsamples = 44\nvalue = [43, 1]\nclass = Benign"] ;
200 -> 206 ;
207 [label="gini = 0.0\nsamples = 20\nvalue = [20, 0]\nclass = Benign"] ;
206 -> 207 ;
208 [label="variabledeclaration <= 0.5\ngini = 0.08\nsamples = 24\nvalue = [23, 1]\nclass = Benign"] ;
206 -> 208 ;
209 [label="gini = 0.0\nsamples = 10\nvalue = [10, 0]\nclass = Benign"] ;
208 -> 209 ;
210 [label="elementlist <= 0.5\ngini = 0.133\nsamples = 14\nvalue = [13, 1]\nclass = Benign"] ;
208 -> 210 ;
211 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
210 -> 211 ;
212 [label="gini = 0.142\nsamples = 13\nvalue = [12, 1]\nclass = Benign"] ;
210 -> 212 ;
213 [label="gini = 0.0\nsamples = 51\nvalue = [51, 0]\nclass = Benign"] ;
199 -> 213 ;
214 [label="identifiername <= 0.5\ngini = 0.218\nsamples = 1771\nvalue = [221, 1550]\nclass = Malicious"] ;
196 -> 214 ;
215 [label="gini = 0.0\nsamples = 1490\nvalue = [0, 1490]\nclass = Malicious"] ;
214 -> 215 ;
216 [label="catchproduction <= 0.5\ngini = 0.336\nsamples = 281\nvalue = [221, 60]\nclass = Benign"] ;
214 -> 216 ;
217 [label="propertyname <= 0.5\ngini = 0.01\nsamples = 200\nvalue = [199, 1]\nclass = Benign"] ;
216 -> 217 ;
218 [label="emptystatement <= 0.5\ngini = 0.124\nsamples = 15\nvalue = [14, 1]\nclass = Benign"] ;
217 -> 218 ;
219 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
218 -> 219 ;
220 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
218 -> 220 ;
221 [label="gini = 0.0\nsamples = 185\nvalue = [185, 0]\nclass = Benign"] ;
217 -> 221 ;
222 [label="assignmentoperator <= 0.5\ngini = 0.396\nsamples = 81\nvalue = [22, 59]\nclass = Malicious"] ;
216 -> 222 ;
223 [label="breakstatement <= 0.5\ngini = 0.444\nsamples = 18\nvalue = [12, 6]\nclass = Benign"] ;
222 -> 223 ;
224 [label="gini = 0.0\nsamples = 12\nvalue = [12, 0]\nclass = Benign"] ;
223 -> 224 ;
225 [label="gini = 0.0\nsamples = 6\nvalue = [0, 6]\nclass = Malicious"] ;
223 -> 225 ;
226 [label="finallyproduction <= 0.5\ngini = 0.267\nsamples = 63\nvalue = [10, 53]\nclass = Malicious"] ;
222 -> 226 ;
227 [label="breakstatement <= 0.5\ngini = 0.401\nsamples = 36\nvalue = [10, 26]\nclass = Malicious"] ;
226 -> 227 ;
228 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
227 -> 228 ;
229 [label="emptystatement <= 0.5\ngini = 0.133\nsamples = 28\nvalue = [2, 26]\nclass = Malicious"] ;
227 -> 229 ;
230 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
229 -> 230 ;
231 [label="gini = 0.0\nsamples = 26\nvalue = [0, 26]\nclass = Malicious"] ;
229 -> 231 ;
232 [label="gini = 0.0\nsamples = 27\nvalue = [0, 27]\nclass = Malicious"] ;
226 -> 232 ;
}
