digraph Tree {
node [shape=box] ;
0 [label="expression_statement-objectliteral <= 0.5\ngini = 0.5\nsamples = 27000\nvalue = [13538, 13462]\nclass = Benign"] ;
1 [label="literal-arguments <= 0.5\ngini = 0.39\nsamples = 16230\nvalue = [4307, 11923]\nclass = Malicious"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="identifiername-identifiername <= 0.5\ngini = 0.472\nsamples = 11243\nvalue = [4302, 6941]\nclass = Malicious"] ;
1 -> 2 ;
3 [label="expression_statement-arguments <= 0.5\ngini = 0.435\nsamples = 10203\nvalue = [3269, 6934]\nclass = Malicious"] ;
2 -> 3 ;
4 [label="sourceelement-statement <= 0.5\ngini = 0.494\nsamples = 5549\nvalue = [2463, 3086]\nclass = Malicious"] ;
3 -> 4 ;
5 [label="gini = 0.394\nsamples = 2605\nvalue = [702, 1903]\nclass = Malicious"] ;
4 -> 5 ;
6 [label="returnstatement-expressionsequence <= 0.5\ngini = 0.481\nsamples = 2944\nvalue = [1761, 1183]\nclass = Benign"] ;
4 -> 6 ;
7 [label="literal-identifiername <= 0.5\ngini = 0.405\nsamples = 2451\nvalue = [1760, 691]\nclass = Benign"] ;
6 -> 7 ;
8 [label="arguments-expression_statement <= 0.5\ngini = 0.217\nsamples = 1857\nvalue = [1627, 230]\nclass = Benign"] ;
7 -> 8 ;
9 [label="gini = 0.0\nsamples = 1162\nvalue = [1162, 0]\nclass = Benign"] ;
8 -> 9 ;
10 [label="variablestatement-varmodifier <= 0.5\ngini = 0.443\nsamples = 695\nvalue = [465, 230]\nclass = Benign"] ;
8 -> 10 ;
11 [label="identifiername-arguments <= 0.5\ngini = 0.011\nsamples = 371\nvalue = [369, 2]\nclass = Benign"] ;
10 -> 11 ;
12 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
11 -> 12 ;
13 [label="gini = 0.0\nsamples = 369\nvalue = [369, 0]\nclass = Benign"] ;
11 -> 13 ;
14 [label="numericliteral-eos <= 0.5\ngini = 0.417\nsamples = 324\nvalue = [96, 228]\nclass = Malicious"] ;
10 -> 14 ;
15 [label="gini = 0.0\nsamples = 82\nvalue = [82, 0]\nclass = Benign"] ;
14 -> 15 ;
16 [label="literal-expression_statement <= 0.5\ngini = 0.109\nsamples = 242\nvalue = [14, 228]\nclass = Malicious"] ;
14 -> 16 ;
17 [label="identifiername-expression_statement <= 0.5\ngini = 0.018\nsamples = 222\nvalue = [2, 220]\nclass = Malicious"] ;
16 -> 17 ;
18 [label="gini = 0.0\nsamples = 220\nvalue = [0, 220]\nclass = Malicious"] ;
17 -> 18 ;
19 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
17 -> 19 ;
20 [label="expression_statement-identifiername <= 0.5\ngini = 0.48\nsamples = 20\nvalue = [12, 8]\nclass = Benign"] ;
16 -> 20 ;
21 [label="gini = 0.0\nsamples = 8\nvalue = [0, 8]\nclass = Malicious"] ;
20 -> 21 ;
22 [label="gini = 0.0\nsamples = 12\nvalue = [12, 0]\nclass = Benign"] ;
20 -> 22 ;
23 [label="expression_statement-identifiername <= 0.5\ngini = 0.348\nsamples = 594\nvalue = [133, 461]\nclass = Malicious"] ;
7 -> 23 ;
24 [label="literal-expression_statement <= 0.5\ngini = 0.004\nsamples = 462\nvalue = [1, 461]\nclass = Malicious"] ;
23 -> 24 ;
25 [label="gini = 0.0\nsamples = 461\nvalue = [0, 461]\nclass = Malicious"] ;
24 -> 25 ;
26 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
24 -> 26 ;
27 [label="gini = 0.0\nsamples = 132\nvalue = [132, 0]\nclass = Benign"] ;
23 -> 27 ;
28 [label="numericliteral-eos <= 0.5\ngini = 0.004\nsamples = 493\nvalue = [1, 492]\nclass = Malicious"] ;
6 -> 28 ;
29 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
28 -> 29 ;
30 [label="gini = 0.0\nsamples = 492\nvalue = [0, 492]\nclass = Malicious"] ;
28 -> 30 ;
31 [label="variabledeclaration-expression_statement <= 0.5\ngini = 0.286\nsamples = 4654\nvalue = [806, 3848]\nclass = Malicious"] ;
3 -> 31 ;
32 [label="literal-expression_statement <= 0.5\ngini = 0.478\nsamples = 1042\nvalue = [631, 411]\nclass = Benign"] ;
31 -> 32 ;
33 [label="expression_statement-eos <= 0.5\ngini = 0.438\nsamples = 608\nvalue = [197, 411]\nclass = Malicious"] ;
32 -> 33 ;
34 [label="arguments-identifiername <= 0.5\ngini = 0.499\nsamples = 341\nvalue = [179, 162]\nclass = Benign"] ;
33 -> 34 ;
35 [label="gini = 0.0\nsamples = 170\nvalue = [170, 0]\nclass = Benign"] ;
34 -> 35 ;
36 [label="arguments-eos <= 0.5\ngini = 0.1\nsamples = 171\nvalue = [9, 162]\nclass = Malicious"] ;
34 -> 36 ;
37 [label="eos-eos <= 0.5\ngini = 0.036\nsamples = 165\nvalue = [3, 162]\nclass = Malicious"] ;
36 -> 37 ;
38 [label="gini = 0.0\nsamples = 162\nvalue = [0, 162]\nclass = Malicious"] ;
37 -> 38 ;
39 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
37 -> 39 ;
40 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
36 -> 40 ;
41 [label="eos-eos <= 0.5\ngini = 0.126\nsamples = 267\nvalue = [18, 249]\nclass = Malicious"] ;
33 -> 41 ;
42 [label="gini = 0.0\nsamples = 249\nvalue = [0, 249]\nclass = Malicious"] ;
41 -> 42 ;
43 [label="gini = 0.0\nsamples = 18\nvalue = [18, 0]\nclass = Benign"] ;
41 -> 43 ;
44 [label="gini = 0.0\nsamples = 434\nvalue = [434, 0]\nclass = Benign"] ;
32 -> 44 ;
45 [label="expression_statement-functionbody <= 0.5\ngini = 0.092\nsamples = 3612\nvalue = [175, 3437]\nclass = Malicious"] ;
31 -> 45 ;
46 [label="expressionstatement-expressionsequence <= 0.5\ngini = 0.051\nsamples = 3360\nvalue = [88, 3272]\nclass = Malicious"] ;
45 -> 46 ;
47 [label="statement-ifstatement <= 0.5\ngini = 0.124\nsamples = 15\nvalue = [14, 1]\nclass = Benign"] ;
46 -> 47 ;
48 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
47 -> 48 ;
49 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
47 -> 49 ;
50 [label="arguments-expression_statement <= 0.5\ngini = 0.043\nsamples = 3345\nvalue = [74, 3271]\nclass = Malicious"] ;
46 -> 50 ;
51 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
50 -> 51 ;
52 [label="eos-arguments <= 0.5\ngini = 0.039\nsamples = 3338\nvalue = [67, 3271]\nclass = Malicious"] ;
50 -> 52 ;
53 [label="literal-expression_statement <= 0.5\ngini = 0.037\nsamples = 3332\nvalue = [62, 3270]\nclass = Malicious"] ;
52 -> 53 ;
54 [label="expression_statement-identifiername <= 0.5\ngini = 0.21\nsamples = 293\nvalue = [35, 258]\nclass = Malicious"] ;
53 -> 54 ;
55 [label="assignmentoperator-expression_statement <= 0.5\ngini = 0.473\nsamples = 52\nvalue = [32, 20]\nclass = Benign"] ;
54 -> 55 ;
56 [label="arguments-identifiername <= 0.5\ngini = 0.059\nsamples = 33\nvalue = [32, 1]\nclass = Benign"] ;
55 -> 56 ;
57 [label="gini = 0.0\nsamples = 32\nvalue = [32, 0]\nclass = Benign"] ;
56 -> 57 ;
58 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
56 -> 58 ;
59 [label="gini = 0.0\nsamples = 19\nvalue = [0, 19]\nclass = Malicious"] ;
55 -> 59 ;
60 [label="literal-numericliteral <= 0.5\ngini = 0.025\nsamples = 241\nvalue = [3, 238]\nclass = Malicious"] ;
54 -> 60 ;
61 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
60 -> 61 ;
62 [label="variabledeclaration-eos <= 0.5\ngini = 0.008\nsamples = 239\nvalue = [1, 238]\nclass = Malicious"] ;
60 -> 62 ;
63 [label="gini = 0.0\nsamples = 238\nvalue = [0, 238]\nclass = Malicious"] ;
62 -> 63 ;
64 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
62 -> 64 ;
65 [label="identifiername-eos <= 0.5\ngini = 0.018\nsamples = 3039\nvalue = [27, 3012]\nclass = Malicious"] ;
53 -> 65 ;
66 [label="withstatement-expressionsequence <= 0.5\ngini = 0.014\nsamples = 3012\nvalue = [21, 2991]\nclass = Malicious"] ;
65 -> 66 ;
67 [label="identifiername-expression_statement <= 0.5\ngini = 0.013\nsamples = 3011\nvalue = [20, 2991]\nclass = Malicious"] ;
66 -> 67 ;
68 [label="assignmentoperator-expression_statement <= 0.5\ngini = 0.008\nsamples = 2908\nvalue = [12, 2896]\nclass = Malicious"] ;
67 -> 68 ;
69 [label="numericliteral-eos <= 0.5\ngini = 0.008\nsamples = 2903\nvalue = [11, 2892]\nclass = Malicious"] ;
68 -> 69 ;
70 [label="block-statementlist <= 0.5\ngini = 0.015\nsamples = 1460\nvalue = [11, 1449]\nclass = Malicious"] ;
69 -> 70 ;
71 [label="expression_statement-identifiername <= 0.5\ngini = 0.01\nsamples = 1455\nvalue = [7, 1448]\nclass = Malicious"] ;
70 -> 71 ;
72 [label="expression_statement-eos <= 0.5\ngini = 0.002\nsamples = 1054\nvalue = [1, 1053]\nclass = Malicious"] ;
71 -> 72 ;
73 [label="gini = 0.003\nsamples = 672\nvalue = [1, 671]\nclass = Malicious"] ;
72 -> 73 ;
74 [label="gini = 0.0\nsamples = 382\nvalue = [0, 382]\nclass = Malicious"] ;
72 -> 74 ;
75 [label="literal-identifiername <= 0.5\ngini = 0.029\nsamples = 401\nvalue = [6, 395]\nclass = Malicious"] ;
71 -> 75 ;
76 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
75 -> 76 ;
77 [label="gini = 0.0\nsamples = 395\nvalue = [0, 395]\nclass = Malicious"] ;
75 -> 77 ;
78 [label="arguments-eos <= 0.5\ngini = 0.32\nsamples = 5\nvalue = [4, 1]\nclass = Benign"] ;
70 -> 78 ;
79 [label="formalparameterarg-functionbody <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
78 -> 79 ;
80 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
79 -> 80 ;
81 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
79 -> 81 ;
82 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
78 -> 82 ;
83 [label="gini = 0.0\nsamples = 1443\nvalue = [0, 1443]\nclass = Malicious"] ;
69 -> 83 ;
84 [label="arguments-identifiername <= 0.5\ngini = 0.32\nsamples = 5\nvalue = [1, 4]\nclass = Malicious"] ;
68 -> 84 ;
85 [label="gini = 0.0\nsamples = 4\nvalue = [0, 4]\nclass = Malicious"] ;
84 -> 85 ;
86 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
84 -> 86 ;
87 [label="expression_statement-expressionsequence <= 0.5\ngini = 0.143\nsamples = 103\nvalue = [8, 95]\nclass = Malicious"] ;
67 -> 87 ;
88 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
87 -> 88 ;
89 [label="gini = 0.0\nsamples = 95\nvalue = [0, 95]\nclass = Malicious"] ;
87 -> 89 ;
90 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
66 -> 90 ;
91 [label="eos-statement <= 0.5\ngini = 0.346\nsamples = 27\nvalue = [6, 21]\nclass = Malicious"] ;
65 -> 91 ;
92 [label="elementlist-expression_statement <= 0.5\ngini = 0.278\nsamples = 6\nvalue = [5, 1]\nclass = Benign"] ;
91 -> 92 ;
93 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
92 -> 93 ;
94 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
92 -> 94 ;
95 [label="literal-numericliteral <= 0.5\ngini = 0.091\nsamples = 21\nvalue = [1, 20]\nclass = Malicious"] ;
91 -> 95 ;
96 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
95 -> 96 ;
97 [label="gini = 0.0\nsamples = 20\nvalue = [0, 20]\nclass = Malicious"] ;
95 -> 97 ;
98 [label="block-statementlist <= 0.5\ngini = 0.278\nsamples = 6\nvalue = [5, 1]\nclass = Benign"] ;
52 -> 98 ;
99 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
98 -> 99 ;
100 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
98 -> 100 ;
101 [label="expression_statement-assignmentoperator <= 0.5\ngini = 0.452\nsamples = 252\nvalue = [87, 165]\nclass = Malicious"] ;
45 -> 101 ;
102 [label="statement-emptystatement <= 0.5\ngini = 0.023\nsamples = 86\nvalue = [85, 1]\nclass = Benign"] ;
101 -> 102 ;
103 [label="gini = 0.0\nsamples = 85\nvalue = [85, 0]\nclass = Benign"] ;
102 -> 103 ;
104 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
102 -> 104 ;
105 [label="formalparameterarg-formalparameterarg <= 0.5\ngini = 0.024\nsamples = 166\nvalue = [2, 164]\nclass = Malicious"] ;
101 -> 105 ;
106 [label="gini = 0.0\nsamples = 163\nvalue = [0, 163]\nclass = Malicious"] ;
105 -> 106 ;
107 [label="literal-identifiername <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [2, 1]\nclass = Benign"] ;
105 -> 107 ;
108 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
107 -> 108 ;
109 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
107 -> 109 ;
110 [label="breakstatement-eos <= 0.5\ngini = 0.013\nsamples = 1040\nvalue = [1033, 7]\nclass = Benign"] ;
2 -> 110 ;
111 [label="expression_statement-assignmentoperator <= 0.5\ngini = 0.004\nsamples = 1035\nvalue = [1033, 2]\nclass = Benign"] ;
110 -> 111 ;
112 [label="numericliteral-expression_statement <= 0.5\ngini = 0.002\nsamples = 1032\nvalue = [1031, 1]\nclass = Benign"] ;
111 -> 112 ;
113 [label="gini = 0.0\nsamples = 916\nvalue = [916, 0]\nclass = Benign"] ;
112 -> 113 ;
114 [label="literal-expression_statement <= 0.5\ngini = 0.017\nsamples = 116\nvalue = [115, 1]\nclass = Benign"] ;
112 -> 114 ;
115 [label="statementlist-statement <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [2, 1]\nclass = Benign"] ;
114 -> 115 ;
116 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
115 -> 116 ;
117 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
115 -> 117 ;
118 [label="gini = 0.0\nsamples = 113\nvalue = [113, 0]\nclass = Benign"] ;
114 -> 118 ;
119 [label="statement-emptystatement <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [2, 1]\nclass = Benign"] ;
111 -> 119 ;
120 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
119 -> 120 ;
121 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
119 -> 121 ;
122 [label="gini = 0.0\nsamples = 5\nvalue = [0, 5]\nclass = Malicious"] ;
110 -> 122 ;
123 [label="eos-arguments <= 0.5\ngini = 0.002\nsamples = 4987\nvalue = [5, 4982]\nclass = Malicious"] ;
1 -> 123 ;
124 [label="arguments-expression_statement <= 0.5\ngini = 0.001\nsamples = 4984\nvalue = [2, 4982]\nclass = Malicious"] ;
123 -> 124 ;
125 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
124 -> 125 ;
126 [label="literal-eos <= 0.5\ngini = 0.0\nsamples = 4983\nvalue = [1, 4982]\nclass = Malicious"] ;
124 -> 126 ;
127 [label="formalparameterarg-functionbody <= 0.5\ngini = 0.012\nsamples = 169\nvalue = [1, 168]\nclass = Malicious"] ;
126 -> 127 ;
128 [label="gini = 0.0\nsamples = 168\nvalue = [0, 168]\nclass = Malicious"] ;
127 -> 128 ;
129 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
127 -> 129 ;
130 [label="gini = 0.0\nsamples = 4814\nvalue = [0, 4814]\nclass = Malicious"] ;
126 -> 130 ;
131 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
123 -> 131 ;
132 [label="do_for_while_statement-expressionsequence <= 0.5\ngini = 0.245\nsamples = 10770\nvalue = [9231, 1539]\nclass = Benign"] ;
0 -> 132 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
133 [label="eos-finallyproduction <= 0.5\ngini = 0.006\nsamples = 9226\nvalue = [9196, 30]\nclass = Benign"] ;
132 -> 133 ;
134 [label="literal-arguments <= 0.5\ngini = 0.001\nsamples = 9200\nvalue = [9196, 4]\nclass = Benign"] ;
133 -> 134 ;
135 [label="gini = 0.0\nsamples = 9183\nvalue = [9183, 0]\nclass = Benign"] ;
134 -> 135 ;
136 [label="literal-expressionsequence <= 0.5\ngini = 0.36\nsamples = 17\nvalue = [13, 4]\nclass = Benign"] ;
134 -> 136 ;
137 [label="gini = 0.0\nsamples = 13\nvalue = [13, 0]\nclass = Benign"] ;
136 -> 137 ;
138 [label="gini = 0.0\nsamples = 4\nvalue = [0, 4]\nclass = Malicious"] ;
136 -> 138 ;
139 [label="gini = 0.0\nsamples = 26\nvalue = [0, 26]\nclass = Malicious"] ;
133 -> 139 ;
140 [label="objectliteral-eos <= 0.5\ngini = 0.044\nsamples = 1544\nvalue = [35, 1509]\nclass = Malicious"] ;
132 -> 140 ;
141 [label="literal-expressionsequence <= 0.5\ngini = 0.005\nsamples = 1512\nvalue = [4, 1508]\nclass = Malicious"] ;
140 -> 141 ;
142 [label="statement-trystatement <= 0.5\ngini = 0.494\nsamples = 9\nvalue = [4, 5]\nclass = Malicious"] ;
141 -> 142 ;
143 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
142 -> 143 ;
144 [label="gini = 0.0\nsamples = 5\nvalue = [0, 5]\nclass = Malicious"] ;
142 -> 144 ;
145 [label="gini = 0.0\nsamples = 1503\nvalue = [0, 1503]\nclass = Malicious"] ;
141 -> 145 ;
146 [label="functionbody-sourceelements <= 0.5\ngini = 0.061\nsamples = 32\nvalue = [31, 1]\nclass = Benign"] ;
140 -> 146 ;
147 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
146 -> 147 ;
148 [label="gini = 0.0\nsamples = 31\nvalue = [31, 0]\nclass = Benign"] ;
146 -> 148 ;
}
