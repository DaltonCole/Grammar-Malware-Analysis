digraph Tree {
node [shape=box] ;
0 [label="objectliteral <= 0.5\ngini = 0.5\nsamples = 27000\nvalue = [13465, 13535]\nclass = Malicious"] ;
1 [label="numericliteral <= 0.5\ngini = 0.39\nsamples = 16316\nvalue = [4327, 11989]\nclass = Malicious"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="expressionstatement <= 0.5\ngini = 0.485\nsamples = 7342\nvalue = [3034, 4308]\nclass = Malicious"] ;
1 -> 2 ;
3 [label="arguments <= 0.5\ngini = 0.408\nsamples = 3978\nvalue = [1134, 2844]\nclass = Malicious"] ;
2 -> 3 ;
4 [label="sourceelement <= 0.5\ngini = 0.465\nsamples = 2991\nvalue = [1099, 1892]\nclass = Malicious"] ;
3 -> 4 ;
5 [label="gini = 0.392\nsamples = 2582\nvalue = [690, 1892]\nclass = Malicious"] ;
4 -> 5 ;
6 [label="gini = 0.0\nsamples = 409\nvalue = [409, 0]\nclass = Benign"] ;
4 -> 6 ;
7 [label="literal <= 0.5\ngini = 0.068\nsamples = 987\nvalue = [35, 952]\nclass = Malicious"] ;
3 -> 7 ;
8 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
7 -> 8 ;
9 [label="arrayliteral <= 0.5\ngini = 0.056\nsamples = 980\nvalue = [28, 952]\nclass = Malicious"] ;
7 -> 9 ;
10 [label="variabledeclaration <= 0.5\ngini = 0.048\nsamples = 976\nvalue = [24, 952]\nclass = Malicious"] ;
9 -> 10 ;
11 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
10 -> 11 ;
12 [label="expressionsequence <= 0.5\ngini = 0.046\nsamples = 975\nvalue = [23, 952]\nclass = Malicious"] ;
10 -> 12 ;
13 [label="identifiername <= 0.5\ngini = 0.092\nsamples = 477\nvalue = [23, 454]\nclass = Malicious"] ;
12 -> 13 ;
14 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
13 -> 14 ;
15 [label="gini = 0.088\nsamples = 476\nvalue = [22, 454]\nclass = Malicious"] ;
13 -> 15 ;
16 [label="gini = 0.0\nsamples = 498\nvalue = [0, 498]\nclass = Malicious"] ;
12 -> 16 ;
17 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
9 -> 17 ;
18 [label="varmodifier <= 0.5\ngini = 0.492\nsamples = 3364\nvalue = [1900, 1464]\nclass = Benign"] ;
2 -> 18 ;
19 [label="functionbody <= 0.5\ngini = 0.358\nsamples = 1907\nvalue = [1462, 445]\nclass = Benign"] ;
18 -> 19 ;
20 [label="identifiername <= 0.5\ngini = 0.427\nsamples = 1442\nvalue = [997, 445]\nclass = Benign"] ;
19 -> 20 ;
21 [label="gini = 0.0\nsamples = 359\nvalue = [359, 0]\nclass = Benign"] ;
20 -> 21 ;
22 [label="arguments <= 0.5\ngini = 0.484\nsamples = 1083\nvalue = [638, 445]\nclass = Benign"] ;
20 -> 22 ;
23 [label="gini = 0.0\nsamples = 163\nvalue = [163, 0]\nclass = Benign"] ;
22 -> 23 ;
24 [label="ifstatement <= 0.5\ngini = 0.499\nsamples = 920\nvalue = [475, 445]\nclass = Benign"] ;
22 -> 24 ;
25 [label="arrayliteral <= 0.5\ngini = 0.499\nsamples = 861\nvalue = [416, 445]\nclass = Malicious"] ;
24 -> 25 ;
26 [label="literal <= 0.5\ngini = 0.494\nsamples = 804\nvalue = [359, 445]\nclass = Malicious"] ;
25 -> 26 ;
27 [label="gini = 0.0\nsamples = 25\nvalue = [25, 0]\nclass = Benign"] ;
26 -> 27 ;
28 [label="block <= 0.5\ngini = 0.49\nsamples = 779\nvalue = [334, 445]\nclass = Malicious"] ;
26 -> 28 ;
29 [label="gini = 0.489\nsamples = 777\nvalue = [332, 445]\nclass = Malicious"] ;
28 -> 29 ;
30 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
28 -> 30 ;
31 [label="gini = 0.0\nsamples = 57\nvalue = [57, 0]\nclass = Benign"] ;
25 -> 31 ;
32 [label="gini = 0.0\nsamples = 59\nvalue = [59, 0]\nclass = Benign"] ;
24 -> 32 ;
33 [label="gini = 0.0\nsamples = 465\nvalue = [465, 0]\nclass = Benign"] ;
19 -> 33 ;
34 [label="identifiername <= 0.5\ngini = 0.42\nsamples = 1457\nvalue = [438, 1019]\nclass = Malicious"] ;
18 -> 34 ;
35 [label="arguments <= 0.5\ngini = 0.079\nsamples = 828\nvalue = [34, 794]\nclass = Malicious"] ;
34 -> 35 ;
36 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
35 -> 36 ;
37 [label="withstatement <= 0.5\ngini = 0.074\nsamples = 826\nvalue = [32, 794]\nclass = Malicious"] ;
35 -> 37 ;
38 [label="returnstatement <= 0.5\ngini = 0.07\nsamples = 824\nvalue = [30, 794]\nclass = Malicious"] ;
37 -> 38 ;
39 [label="assignmentoperator <= 0.5\ngini = 0.063\nsamples = 797\nvalue = [26, 771]\nclass = Malicious"] ;
38 -> 39 ;
40 [label="functionbody <= 0.5\ngini = 0.068\nsamples = 735\nvalue = [26, 709]\nclass = Malicious"] ;
39 -> 40 ;
41 [label="gini = 0.066\nsamples = 734\nvalue = [25, 709]\nclass = Malicious"] ;
40 -> 41 ;
42 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
40 -> 42 ;
43 [label="gini = 0.0\nsamples = 62\nvalue = [0, 62]\nclass = Malicious"] ;
39 -> 43 ;
44 [label="assignmentoperator <= 0.5\ngini = 0.252\nsamples = 27\nvalue = [4, 23]\nclass = Malicious"] ;
38 -> 44 ;
45 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
44 -> 45 ;
46 [label="gini = 0.147\nsamples = 25\nvalue = [2, 23]\nclass = Malicious"] ;
44 -> 46 ;
47 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
37 -> 47 ;
48 [label="returnstatement <= 0.5\ngini = 0.46\nsamples = 629\nvalue = [404, 225]\nclass = Benign"] ;
34 -> 48 ;
49 [label="elementlist <= 0.5\ngini = 0.01\nsamples = 389\nvalue = [387, 2]\nclass = Benign"] ;
48 -> 49 ;
50 [label="block <= 0.5\ngini = 0.005\nsamples = 377\nvalue = [376, 1]\nclass = Benign"] ;
49 -> 50 ;
51 [label="gini = 0.0\nsamples = 282\nvalue = [282, 0]\nclass = Benign"] ;
50 -> 51 ;
52 [label="functionbody <= 0.5\ngini = 0.021\nsamples = 95\nvalue = [94, 1]\nclass = Benign"] ;
50 -> 52 ;
53 [label="trystatement <= 0.5\ngini = 0.05\nsamples = 39\nvalue = [38, 1]\nclass = Benign"] ;
52 -> 53 ;
54 [label="assignmentoperator <= 0.5\ngini = 0.057\nsamples = 34\nvalue = [33, 1]\nclass = Benign"] ;
53 -> 54 ;
55 [label="arguments <= 0.5\ngini = 0.059\nsamples = 33\nvalue = [32, 1]\nclass = Benign"] ;
54 -> 55 ;
56 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
55 -> 56 ;
57 [label="gini = 0.061\nsamples = 32\nvalue = [31, 1]\nclass = Benign"] ;
55 -> 57 ;
58 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
54 -> 58 ;
59 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
53 -> 59 ;
60 [label="gini = 0.0\nsamples = 56\nvalue = [56, 0]\nclass = Benign"] ;
52 -> 60 ;
61 [label="statementlist <= 0.5\ngini = 0.153\nsamples = 12\nvalue = [11, 1]\nclass = Benign"] ;
49 -> 61 ;
62 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
61 -> 62 ;
63 [label="functionbody <= 0.5\ngini = 0.375\nsamples = 4\nvalue = [3, 1]\nclass = Benign"] ;
61 -> 63 ;
64 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
63 -> 64 ;
65 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
63 -> 65 ;
66 [label="ifstatement <= 0.5\ngini = 0.132\nsamples = 240\nvalue = [17, 223]\nclass = Malicious"] ;
48 -> 66 ;
67 [label="formalparameterarg <= 0.5\ngini = 0.082\nsamples = 233\nvalue = [10, 223]\nclass = Malicious"] ;
66 -> 67 ;
68 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
67 -> 68 ;
69 [label="gini = 0.067\nsamples = 231\nvalue = [8, 223]\nclass = Malicious"] ;
67 -> 69 ;
70 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
66 -> 70 ;
71 [label="expressionstatement <= 0.5\ngini = 0.247\nsamples = 8974\nvalue = [1293, 7681]\nclass = Malicious"] ;
1 -> 71 ;
72 [label="gini = 0.0\nsamples = 257\nvalue = [257, 0]\nclass = Benign"] ;
71 -> 72 ;
73 [label="elementlist <= 0.5\ngini = 0.209\nsamples = 8717\nvalue = [1036, 7681]\nclass = Malicious"] ;
71 -> 73 ;
74 [label="returnstatement <= 0.5\ngini = 0.293\nsamples = 4845\nvalue = [862, 3983]\nclass = Malicious"] ;
73 -> 74 ;
75 [label="functionbody <= 0.5\ngini = 0.415\nsamples = 2471\nvalue = [727, 1744]\nclass = Malicious"] ;
74 -> 75 ;
76 [label="arguments <= 0.5\ngini = 0.322\nsamples = 2099\nvalue = [423, 1676]\nclass = Malicious"] ;
75 -> 76 ;
77 [label="gini = 0.0\nsamples = 118\nvalue = [118, 0]\nclass = Benign"] ;
76 -> 77 ;
78 [label="do_for_while_statement <= 0.5\ngini = 0.261\nsamples = 1981\nvalue = [305, 1676]\nclass = Malicious"] ;
76 -> 78 ;
79 [label="emptystatement <= 0.5\ngini = 0.231\nsamples = 1783\nvalue = [238, 1545]\nclass = Malicious"] ;
78 -> 79 ;
80 [label="variablestatement <= 0.5\ngini = 0.22\nsamples = 1767\nvalue = [222, 1545]\nclass = Malicious"] ;
79 -> 80 ;
81 [label="ifstatement <= 0.5\ngini = 0.322\nsamples = 700\nvalue = [141, 559]\nclass = Malicious"] ;
80 -> 81 ;
82 [label="identifiername <= 0.5\ngini = 0.5\nsamples = 248\nvalue = [121, 127]\nclass = Malicious"] ;
81 -> 82 ;
83 [label="gini = 0.0\nsamples = 30\nvalue = [30, 0]\nclass = Benign"] ;
82 -> 83 ;
84 [label="catchproduction <= 0.5\ngini = 0.486\nsamples = 218\nvalue = [91, 127]\nclass = Malicious"] ;
82 -> 84 ;
85 [label="arrayliteral <= 0.5\ngini = 0.485\nsamples = 217\nvalue = [90, 127]\nclass = Malicious"] ;
84 -> 85 ;
86 [label="assignmentoperator <= 0.5\ngini = 0.485\nsamples = 216\nvalue = [89, 127]\nclass = Malicious"] ;
85 -> 86 ;
87 [label="gini = 0.484\nsamples = 215\nvalue = [88, 127]\nclass = Malicious"] ;
86 -> 87 ;
88 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
86 -> 88 ;
89 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
85 -> 89 ;
90 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
84 -> 90 ;
91 [label="statementlist <= 0.5\ngini = 0.085\nsamples = 452\nvalue = [20, 432]\nclass = Malicious"] ;
81 -> 91 ;
92 [label="identifiername <= 0.5\ngini = 0.014\nsamples = 435\nvalue = [3, 432]\nclass = Malicious"] ;
91 -> 92 ;
93 [label="gini = 0.0\nsamples = 134\nvalue = [0, 134]\nclass = Malicious"] ;
92 -> 93 ;
94 [label="gini = 0.02\nsamples = 301\nvalue = [3, 298]\nclass = Malicious"] ;
92 -> 94 ;
95 [label="gini = 0.0\nsamples = 17\nvalue = [17, 0]\nclass = Benign"] ;
91 -> 95 ;
96 [label="trystatement <= 0.5\ngini = 0.14\nsamples = 1067\nvalue = [81, 986]\nclass = Malicious"] ;
80 -> 96 ;
97 [label="identifiername <= 0.5\ngini = 0.137\nsamples = 1064\nvalue = [79, 985]\nclass = Malicious"] ;
96 -> 97 ;
98 [label="gini = 0.085\nsamples = 448\nvalue = [20, 428]\nclass = Malicious"] ;
97 -> 98 ;
99 [label="statementlist <= 0.5\ngini = 0.173\nsamples = 616\nvalue = [59, 557]\nclass = Malicious"] ;
97 -> 99 ;
100 [label="ifstatement <= 0.5\ngini = 0.185\nsamples = 426\nvalue = [44, 382]\nclass = Malicious"] ;
99 -> 100 ;
101 [label="assignmentoperator <= 0.5\ngini = 0.168\nsamples = 421\nvalue = [39, 382]\nclass = Malicious"] ;
100 -> 101 ;
102 [label="gini = 0.168\nsamples = 420\nvalue = [39, 381]\nclass = Malicious"] ;
101 -> 102 ;
103 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
101 -> 103 ;
104 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
100 -> 104 ;
105 [label="gini = 0.145\nsamples = 190\nvalue = [15, 175]\nclass = Malicious"] ;
99 -> 105 ;
106 [label="ifstatement <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [2, 1]\nclass = Benign"] ;
96 -> 106 ;
107 [label="gini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
106 -> 107 ;
108 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
106 -> 108 ;
109 [label="gini = 0.0\nsamples = 16\nvalue = [16, 0]\nclass = Benign"] ;
79 -> 109 ;
110 [label="assignmentoperator <= 0.5\ngini = 0.448\nsamples = 198\nvalue = [67, 131]\nclass = Malicious"] ;
78 -> 110 ;
111 [label="catchproduction <= 0.5\ngini = 0.292\nsamples = 79\nvalue = [65, 14]\nclass = Benign"] ;
110 -> 111 ;
112 [label="gini = 0.0\nsamples = 65\nvalue = [65, 0]\nclass = Benign"] ;
111 -> 112 ;
113 [label="gini = 0.0\nsamples = 14\nvalue = [0, 14]\nclass = Malicious"] ;
111 -> 113 ;
114 [label="ifstatement <= 0.5\ngini = 0.033\nsamples = 119\nvalue = [2, 117]\nclass = Malicious"] ;
110 -> 114 ;
115 [label="emptystatement <= 0.5\ngini = 0.017\nsamples = 116\nvalue = [1, 115]\nclass = Malicious"] ;
114 -> 115 ;
116 [label="statementlist <= 0.5\ngini = 0.105\nsamples = 18\nvalue = [1, 17]\nclass = Malicious"] ;
115 -> 116 ;
117 [label="gini = 0.0\nsamples = 9\nvalue = [0, 9]\nclass = Malicious"] ;
116 -> 117 ;
118 [label="arrayliteral <= 0.5\ngini = 0.198\nsamples = 9\nvalue = [1, 8]\nclass = Malicious"] ;
116 -> 118 ;
119 [label="gini = 0.219\nsamples = 8\nvalue = [1, 7]\nclass = Malicious"] ;
118 -> 119 ;
120 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
118 -> 120 ;
121 [label="gini = 0.0\nsamples = 98\nvalue = [0, 98]\nclass = Malicious"] ;
115 -> 121 ;
122 [label="emptystatement <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
114 -> 122 ;
123 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
122 -> 123 ;
124 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
122 -> 124 ;
125 [label="emptystatement <= 0.5\ngini = 0.299\nsamples = 372\nvalue = [304, 68]\nclass = Benign"] ;
75 -> 125 ;
126 [label="formalparameterarg <= 0.5\ngini = 0.059\nsamples = 294\nvalue = [285, 9]\nclass = Benign"] ;
125 -> 126 ;
127 [label="gini = 0.0\nsamples = 202\nvalue = [202, 0]\nclass = Benign"] ;
126 -> 127 ;
128 [label="block <= 0.5\ngini = 0.177\nsamples = 92\nvalue = [83, 9]\nclass = Benign"] ;
126 -> 128 ;
129 [label="varmodifier <= 0.5\ngini = 0.444\nsamples = 27\nvalue = [18, 9]\nclass = Benign"] ;
128 -> 129 ;
130 [label="gini = 0.0\nsamples = 10\nvalue = [10, 0]\nclass = Benign"] ;
129 -> 130 ;
131 [label="arrayliteral <= 0.5\ngini = 0.498\nsamples = 17\nvalue = [8, 9]\nclass = Malicious"] ;
129 -> 131 ;
132 [label="gini = 0.492\nsamples = 16\nvalue = [7, 9]\nclass = Malicious"] ;
131 -> 132 ;
133 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
131 -> 133 ;
134 [label="gini = 0.0\nsamples = 65\nvalue = [65, 0]\nclass = Benign"] ;
128 -> 134 ;
135 [label="trystatement <= 0.5\ngini = 0.369\nsamples = 78\nvalue = [19, 59]\nclass = Malicious"] ;
125 -> 135 ;
136 [label="gini = 0.0\nsamples = 19\nvalue = [19, 0]\nclass = Benign"] ;
135 -> 136 ;
137 [label="gini = 0.0\nsamples = 59\nvalue = [0, 59]\nclass = Malicious"] ;
135 -> 137 ;
138 [label="statementlist <= 0.5\ngini = 0.107\nsamples = 2374\nvalue = [135, 2239]\nclass = Malicious"] ;
74 -> 138 ;
139 [label="identifiername <= 0.5\ngini = 0.025\nsamples = 1394\nvalue = [18, 1376]\nclass = Malicious"] ;
138 -> 139 ;
140 [label="gini = 0.0\nsamples = 501\nvalue = [0, 501]\nclass = Malicious"] ;
139 -> 140 ;
141 [label="variabledeclaration <= 0.5\ngini = 0.04\nsamples = 893\nvalue = [18, 875]\nclass = Malicious"] ;
139 -> 141 ;
142 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
141 -> 142 ;
143 [label="formalparameterlist <= 0.5\ngini = 0.035\nsamples = 891\nvalue = [16, 875]\nclass = Malicious"] ;
141 -> 143 ;
144 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
143 -> 144 ;
145 [label="ifstatement <= 0.5\ngini = 0.033\nsamples = 890\nvalue = [15, 875]\nclass = Malicious"] ;
143 -> 145 ;
146 [label="gini = 0.0\nsamples = 13\nvalue = [0, 13]\nclass = Malicious"] ;
145 -> 146 ;
147 [label="gini = 0.034\nsamples = 877\nvalue = [15, 862]\nclass = Malicious"] ;
145 -> 147 ;
148 [label="identifiername <= 0.5\ngini = 0.21\nsamples = 980\nvalue = [117, 863]\nclass = Malicious"] ;
138 -> 148 ;
149 [label="gini = 0.0\nsamples = 245\nvalue = [0, 245]\nclass = Malicious"] ;
148 -> 149 ;
150 [label="do_for_while_statement <= 0.5\ngini = 0.268\nsamples = 735\nvalue = [117, 618]\nclass = Malicious"] ;
148 -> 150 ;
151 [label="formalparameterlist <= 0.5\ngini = 0.257\nsamples = 725\nvalue = [110, 615]\nclass = Malicious"] ;
150 -> 151 ;
152 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
151 -> 152 ;
153 [label="variablestatement <= 0.5\ngini = 0.252\nsamples = 722\nvalue = [107, 615]\nclass = Malicious"] ;
151 -> 153 ;
154 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
153 -> 154 ;
155 [label="arrayliteral <= 0.5\ngini = 0.249\nsamples = 720\nvalue = [105, 615]\nclass = Malicious"] ;
153 -> 155 ;
156 [label="trystatement <= 0.5\ngini = 0.247\nsamples = 719\nvalue = [104, 615]\nclass = Malicious"] ;
155 -> 156 ;
157 [label="gini = 0.248\nsamples = 718\nvalue = [104, 614]\nclass = Malicious"] ;
156 -> 157 ;
158 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
156 -> 158 ;
159 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
155 -> 159 ;
160 [label="formalparameterarg <= 0.5\ngini = 0.42\nsamples = 10\nvalue = [7, 3]\nclass = Benign"] ;
150 -> 160 ;
161 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
160 -> 161 ;
162 [label="assignmentoperator <= 0.5\ngini = 0.219\nsamples = 8\nvalue = [7, 1]\nclass = Benign"] ;
160 -> 162 ;
163 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
162 -> 163 ;
164 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
162 -> 164 ;
165 [label="arguments <= 0.5\ngini = 0.086\nsamples = 3872\nvalue = [174, 3698]\nclass = Malicious"] ;
73 -> 165 ;
166 [label="gini = 0.0\nsamples = 81\nvalue = [81, 0]\nclass = Benign"] ;
165 -> 166 ;
167 [label="variabledeclarationlist <= 0.5\ngini = 0.048\nsamples = 3791\nvalue = [93, 3698]\nclass = Malicious"] ;
165 -> 167 ;
168 [label="identifiername <= 0.5\ngini = 0.114\nsamples = 33\nvalue = [31, 2]\nclass = Benign"] ;
167 -> 168 ;
169 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
168 -> 169 ;
170 [label="gini = 0.0\nsamples = 31\nvalue = [31, 0]\nclass = Benign"] ;
168 -> 170 ;
171 [label="functionbody <= 0.5\ngini = 0.032\nsamples = 3758\nvalue = [62, 3696]\nclass = Malicious"] ;
167 -> 171 ;
172 [label="ifstatement <= 0.5\ngini = 0.002\nsamples = 2880\nvalue = [3, 2877]\nclass = Malicious"] ;
171 -> 172 ;
173 [label="block <= 0.5\ngini = 0.009\nsamples = 435\nvalue = [2, 433]\nclass = Malicious"] ;
172 -> 173 ;
174 [label="identifiername <= 0.5\ngini = 0.231\nsamples = 15\nvalue = [2, 13]\nclass = Malicious"] ;
173 -> 174 ;
175 [label="gini = 0.0\nsamples = 13\nvalue = [0, 13]\nclass = Malicious"] ;
174 -> 175 ;
176 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
174 -> 176 ;
177 [label="gini = 0.0\nsamples = 420\nvalue = [0, 420]\nclass = Malicious"] ;
173 -> 177 ;
178 [label="emptystatement <= 0.5\ngini = 0.001\nsamples = 2445\nvalue = [1, 2444]\nclass = Malicious"] ;
172 -> 178 ;
179 [label="block <= 0.5\ngini = 0.002\nsamples = 1012\nvalue = [1, 1011]\nclass = Malicious"] ;
178 -> 179 ;
180 [label="gini = 0.0\nsamples = 773\nvalue = [0, 773]\nclass = Malicious"] ;
179 -> 180 ;
181 [label="identifiername <= 0.5\ngini = 0.008\nsamples = 239\nvalue = [1, 238]\nclass = Malicious"] ;
179 -> 181 ;
182 [label="gini = 0.0\nsamples = 24\nvalue = [0, 24]\nclass = Malicious"] ;
181 -> 182 ;
183 [label="caseclause <= 0.5\ngini = 0.009\nsamples = 215\nvalue = [1, 214]\nclass = Malicious"] ;
181 -> 183 ;
184 [label="gini = 0.009\nsamples = 213\nvalue = [1, 212]\nclass = Malicious"] ;
183 -> 184 ;
185 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
183 -> 185 ;
186 [label="gini = 0.0\nsamples = 1433\nvalue = [0, 1433]\nclass = Malicious"] ;
178 -> 186 ;
187 [label="returnstatement <= 0.5\ngini = 0.125\nsamples = 878\nvalue = [59, 819]\nclass = Malicious"] ;
171 -> 187 ;
188 [label="emptystatement <= 0.5\ngini = 0.471\nsamples = 142\nvalue = [54, 88]\nclass = Malicious"] ;
187 -> 188 ;
189 [label="gini = 0.0\nsamples = 54\nvalue = [54, 0]\nclass = Benign"] ;
188 -> 189 ;
190 [label="gini = 0.0\nsamples = 88\nvalue = [0, 88]\nclass = Malicious"] ;
188 -> 190 ;
191 [label="breakstatement <= 0.5\ngini = 0.013\nsamples = 736\nvalue = [5, 731]\nclass = Malicious"] ;
187 -> 191 ;
192 [label="identifiername <= 0.5\ngini = 0.008\nsamples = 734\nvalue = [3, 731]\nclass = Malicious"] ;
191 -> 192 ;
193 [label="gini = 0.0\nsamples = 515\nvalue = [0, 515]\nclass = Malicious"] ;
192 -> 193 ;
194 [label="assignmentoperator <= 0.5\ngini = 0.027\nsamples = 219\nvalue = [3, 216]\nclass = Malicious"] ;
192 -> 194 ;
195 [label="formalparameterarg <= 0.5\ngini = 0.444\nsamples = 6\nvalue = [2, 4]\nclass = Malicious"] ;
194 -> 195 ;
196 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
195 -> 196 ;
197 [label="gini = 0.0\nsamples = 4\nvalue = [0, 4]\nclass = Malicious"] ;
195 -> 197 ;
198 [label="formalparameterarg <= 0.5\ngini = 0.009\nsamples = 213\nvalue = [1, 212]\nclass = Malicious"] ;
194 -> 198 ;
199 [label="gini = 0.0\nsamples = 212\nvalue = [0, 212]\nclass = Malicious"] ;
198 -> 199 ;
200 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
198 -> 200 ;
201 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
191 -> 201 ;
202 [label="do_for_while_statement <= 0.5\ngini = 0.248\nsamples = 10684\nvalue = [9138, 1546]\nclass = Benign"] ;
0 -> 202 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
203 [label="trystatement <= 0.5\ngini = 0.0\nsamples = 8923\nvalue = [8921, 2]\nclass = Benign"] ;
202 -> 203 ;
204 [label="gini = 0.0\nsamples = 8820\nvalue = [8820, 0]\nclass = Benign"] ;
203 -> 204 ;
205 [label="functionbody <= 0.5\ngini = 0.038\nsamples = 103\nvalue = [101, 2]\nclass = Benign"] ;
203 -> 205 ;
206 [label="ifstatement <= 0.5\ngini = 0.069\nsamples = 56\nvalue = [54, 2]\nclass = Benign"] ;
205 -> 206 ;
207 [label="gini = 0.0\nsamples = 25\nvalue = [25, 0]\nclass = Benign"] ;
206 -> 207 ;
208 [label="variabledeclaration <= 0.5\ngini = 0.121\nsamples = 31\nvalue = [29, 2]\nclass = Benign"] ;
206 -> 208 ;
209 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
208 -> 209 ;
210 [label="arrayliteral <= 0.5\ngini = 0.208\nsamples = 17\nvalue = [15, 2]\nclass = Benign"] ;
208 -> 210 ;
211 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
210 -> 211 ;
212 [label="gini = 0.117\nsamples = 16\nvalue = [15, 1]\nclass = Benign"] ;
210 -> 212 ;
213 [label="gini = 0.0\nsamples = 47\nvalue = [47, 0]\nclass = Benign"] ;
205 -> 213 ;
214 [label="identifiername <= 0.5\ngini = 0.216\nsamples = 1761\nvalue = [217, 1544]\nclass = Malicious"] ;
202 -> 214 ;
215 [label="gini = 0.0\nsamples = 1487\nvalue = [0, 1487]\nclass = Malicious"] ;
214 -> 215 ;
216 [label="trystatement <= 0.5\ngini = 0.33\nsamples = 274\nvalue = [217, 57]\nclass = Benign"] ;
214 -> 216 ;
217 [label="propertyname <= 0.5\ngini = 0.01\nsamples = 194\nvalue = [193, 1]\nclass = Benign"] ;
216 -> 217 ;
218 [label="emptystatement <= 0.5\ngini = 0.117\nsamples = 16\nvalue = [15, 1]\nclass = Benign"] ;
217 -> 218 ;
219 [label="gini = 0.0\nsamples = 15\nvalue = [15, 0]\nclass = Benign"] ;
218 -> 219 ;
220 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
218 -> 220 ;
221 [label="gini = 0.0\nsamples = 178\nvalue = [178, 0]\nclass = Benign"] ;
217 -> 221 ;
222 [label="defaultclause <= 0.5\ngini = 0.42\nsamples = 80\nvalue = [24, 56]\nclass = Malicious"] ;
216 -> 222 ;
223 [label="breakstatement <= 0.5\ngini = 0.494\nsamples = 54\nvalue = [24, 30]\nclass = Malicious"] ;
222 -> 223 ;
224 [label="gini = 0.0\nsamples = 21\nvalue = [21, 0]\nclass = Benign"] ;
223 -> 224 ;
225 [label="emptystatement <= 0.5\ngini = 0.165\nsamples = 33\nvalue = [3, 30]\nclass = Malicious"] ;
223 -> 225 ;
226 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
225 -> 226 ;
227 [label="gini = 0.0\nsamples = 30\nvalue = [0, 30]\nclass = Malicious"] ;
225 -> 227 ;
228 [label="gini = 0.0\nsamples = 26\nvalue = [0, 26]\nclass = Malicious"] ;
222 -> 228 ;
}
