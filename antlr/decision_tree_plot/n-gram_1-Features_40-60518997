digraph Tree {
node [shape=box] ;
0 [label="propertyname <= 0.5\ngini = 0.5\nsamples = 27000\nvalue = [13470, 13530]\nclass = Malicious"] ;
1 [label="numericliteral <= 0.5\ngini = 0.402\nsamples = 16620\nvalue = [4638, 11982]\nclass = Malicious"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="expressionstatement <= 0.5\ngini = 0.49\nsamples = 7474\nvalue = [3206, 4268]\nclass = Malicious"] ;
1 -> 2 ;
3 [label="argument_stuff <= 0.5\ngini = 0.41\nsamples = 3939\nvalue = [1132, 2807]\nclass = Malicious"] ;
2 -> 3 ;
4 [label="expression_statement <= 0.5\ngini = 0.468\nsamples = 2964\nvalue = [1107, 1857]\nclass = Malicious"] ;
3 -> 4 ;
5 [label="gini = 0.397\nsamples = 2553\nvalue = [696, 1857]\nclass = Malicious"] ;
4 -> 5 ;
6 [label="gini = 0.0\nsamples = 411\nvalue = [411, 0]\nclass = Benign"] ;
4 -> 6 ;
7 [label="literal <= 0.5\ngini = 0.05\nsamples = 975\nvalue = [25, 950]\nclass = Malicious"] ;
3 -> 7 ;
8 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
7 -> 8 ;
9 [label="litereral_stuff <= 0.5\ngini = 0.035\nsamples = 967\nvalue = [17, 950]\nclass = Malicious"] ;
7 -> 9 ;
10 [label="expressionsequence <= 0.5\ngini = 0.029\nsamples = 964\nvalue = [14, 950]\nclass = Malicious"] ;
9 -> 10 ;
11 [label="identifiername <= 0.5\ngini = 0.057\nsamples = 478\nvalue = [14, 464]\nclass = Malicious"] ;
10 -> 11 ;
12 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
11 -> 12 ;
13 [label="gini = 0.045\nsamples = 475\nvalue = [11, 464]\nclass = Malicious"] ;
11 -> 13 ;
14 [label="gini = 0.0\nsamples = 486\nvalue = [0, 486]\nclass = Malicious"] ;
10 -> 14 ;
15 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
9 -> 15 ;
16 [label="varmodifier <= 0.5\ngini = 0.485\nsamples = 3535\nvalue = [2074, 1461]\nclass = Benign"] ;
2 -> 16 ;
17 [label="identifiername <= 0.5\ngini = 0.343\nsamples = 1992\nvalue = [1554, 438]\nclass = Benign"] ;
16 -> 17 ;
18 [label="gini = 0.0\nsamples = 353\nvalue = [353, 0]\nclass = Benign"] ;
17 -> 18 ;
19 [label="litereral_stuff <= 0.5\ngini = 0.392\nsamples = 1639\nvalue = [1201, 438]\nclass = Benign"] ;
17 -> 19 ;
20 [label="ifstatement <= 0.5\ngini = 0.446\nsamples = 1305\nvalue = [867, 438]\nclass = Benign"] ;
19 -> 20 ;
21 [label="argument_stuff <= 0.5\ngini = 0.465\nsamples = 1194\nvalue = [756, 438]\nclass = Benign"] ;
20 -> 21 ;
22 [label="gini = 0.0\nsamples = 79\nvalue = [79, 0]\nclass = Benign"] ;
21 -> 22 ;
23 [label="literal <= 0.5\ngini = 0.477\nsamples = 1115\nvalue = [677, 438]\nclass = Benign"] ;
21 -> 23 ;
24 [label="gini = 0.0\nsamples = 45\nvalue = [45, 0]\nclass = Benign"] ;
23 -> 24 ;
25 [label="formalparameterlist <= 0.5\ngini = 0.484\nsamples = 1070\nvalue = [632, 438]\nclass = Benign"] ;
23 -> 25 ;
26 [label="returnstatement <= 0.5\ngini = 0.486\nsamples = 1053\nvalue = [615, 438]\nclass = Benign"] ;
25 -> 26 ;
27 [label="assignmentoperator <= 0.5\ngini = 0.486\nsamples = 1051\nvalue = [613, 438]\nclass = Benign"] ;
26 -> 27 ;
28 [label="catchproduction <= 0.5\ngini = 0.486\nsamples = 1050\nvalue = [612, 438]\nclass = Benign"] ;
27 -> 28 ;
29 [label="gini = 0.486\nsamples = 1049\nvalue = [611, 438]\nclass = Benign"] ;
28 -> 29 ;
30 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
28 -> 30 ;
31 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
27 -> 31 ;
32 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
26 -> 32 ;
33 [label="gini = 0.0\nsamples = 17\nvalue = [17, 0]\nclass = Benign"] ;
25 -> 33 ;
34 [label="gini = 0.0\nsamples = 111\nvalue = [111, 0]\nclass = Benign"] ;
20 -> 34 ;
35 [label="gini = 0.0\nsamples = 334\nvalue = [334, 0]\nclass = Benign"] ;
19 -> 35 ;
36 [label="identifiername <= 0.5\ngini = 0.447\nsamples = 1543\nvalue = [520, 1023]\nclass = Malicious"] ;
16 -> 36 ;
37 [label="argument_stuff <= 0.5\ngini = 0.088\nsamples = 828\nvalue = [38, 790]\nclass = Malicious"] ;
36 -> 37 ;
38 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
37 -> 38 ;
39 [label="withstatement <= 0.5\ngini = 0.079\nsamples = 824\nvalue = [34, 790]\nclass = Malicious"] ;
37 -> 39 ;
40 [label="litereral_stuff <= 0.5\ngini = 0.075\nsamples = 822\nvalue = [32, 790]\nclass = Malicious"] ;
39 -> 40 ;
41 [label="returnstatement <= 0.5\ngini = 0.073\nsamples = 821\nvalue = [31, 790]\nclass = Malicious"] ;
40 -> 41 ;
42 [label="assignmentoperator <= 0.5\ngini = 0.07\nsamples = 796\nvalue = [29, 767]\nclass = Malicious"] ;
41 -> 42 ;
43 [label="gini = 0.076\nsamples = 734\nvalue = [29, 705]\nclass = Malicious"] ;
42 -> 43 ;
44 [label="gini = 0.0\nsamples = 62\nvalue = [0, 62]\nclass = Malicious"] ;
42 -> 44 ;
45 [label="gini = 0.147\nsamples = 25\nvalue = [2, 23]\nclass = Malicious"] ;
41 -> 45 ;
46 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
40 -> 46 ;
47 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
39 -> 47 ;
48 [label="returnstatement <= 0.5\ngini = 0.439\nsamples = 715\nvalue = [482, 233]\nclass = Benign"] ;
36 -> 48 ;
49 [label="element_stuff <= 0.5\ngini = 0.013\nsamples = 457\nvalue = [454, 3]\nclass = Benign"] ;
48 -> 49 ;
50 [label="ifstatement <= 0.5\ngini = 0.009\nsamples = 445\nvalue = [443, 2]\nclass = Benign"] ;
49 -> 50 ;
51 [label="assignmentoperator <= 0.5\ngini = 0.006\nsamples = 348\nvalue = [347, 1]\nclass = Benign"] ;
50 -> 51 ;
52 [label="argument_stuff <= 0.5\ngini = 0.008\nsamples = 258\nvalue = [257, 1]\nclass = Benign"] ;
51 -> 52 ;
53 [label="gini = 0.0\nsamples = 65\nvalue = [65, 0]\nclass = Benign"] ;
52 -> 53 ;
54 [label="formalparameterlist <= 0.5\ngini = 0.01\nsamples = 193\nvalue = [192, 1]\nclass = Benign"] ;
52 -> 54 ;
55 [label="litereral_stuff <= 0.5\ngini = 0.011\nsamples = 175\nvalue = [174, 1]\nclass = Benign"] ;
54 -> 55 ;
56 [label="literal <= 0.5\ngini = 0.012\nsamples = 165\nvalue = [164, 1]\nclass = Benign"] ;
55 -> 56 ;
57 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
56 -> 57 ;
58 [label="catchproduction <= 0.5\ngini = 0.012\nsamples = 162\nvalue = [161, 1]\nclass = Benign"] ;
56 -> 58 ;
59 [label="gini = 0.012\nsamples = 161\nvalue = [160, 1]\nclass = Benign"] ;
58 -> 59 ;
60 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
58 -> 60 ;
61 [label="gini = 0.0\nsamples = 10\nvalue = [10, 0]\nclass = Benign"] ;
55 -> 61 ;
62 [label="gini = 0.0\nsamples = 18\nvalue = [18, 0]\nclass = Benign"] ;
54 -> 62 ;
63 [label="gini = 0.0\nsamples = 90\nvalue = [90, 0]\nclass = Benign"] ;
51 -> 63 ;
64 [label="formalParameterArg_stuff <= 0.5\ngini = 0.02\nsamples = 97\nvalue = [96, 1]\nclass = Benign"] ;
50 -> 64 ;
65 [label="litereral_stuff <= 0.5\ngini = 0.023\nsamples = 85\nvalue = [84, 1]\nclass = Benign"] ;
64 -> 65 ;
66 [label="assignmentoperator <= 0.5\ngini = 0.024\nsamples = 81\nvalue = [80, 1]\nclass = Benign"] ;
65 -> 66 ;
67 [label="argument_stuff <= 0.5\ngini = 0.025\nsamples = 79\nvalue = [78, 1]\nclass = Benign"] ;
66 -> 67 ;
68 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
67 -> 68 ;
69 [label="gini = 0.025\nsamples = 78\nvalue = [77, 1]\nclass = Benign"] ;
67 -> 69 ;
70 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
66 -> 70 ;
71 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
65 -> 71 ;
72 [label="gini = 0.0\nsamples = 12\nvalue = [12, 0]\nclass = Benign"] ;
64 -> 72 ;
73 [label="ifstatement <= 0.5\ngini = 0.153\nsamples = 12\nvalue = [11, 1]\nclass = Benign"] ;
49 -> 73 ;
74 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
73 -> 74 ;
75 [label="formalparameterlist <= 0.5\ngini = 0.32\nsamples = 5\nvalue = [4, 1]\nclass = Benign"] ;
73 -> 75 ;
76 [label="gini = 0.444\nsamples = 3\nvalue = [2, 1]\nclass = Benign"] ;
75 -> 76 ;
77 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
75 -> 77 ;
78 [label="ifstatement <= 0.5\ngini = 0.193\nsamples = 258\nvalue = [28, 230]\nclass = Malicious"] ;
48 -> 78 ;
79 [label="formalparameterlist <= 0.5\ngini = 0.141\nsamples = 249\nvalue = [19, 230]\nclass = Malicious"] ;
78 -> 79 ;
80 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
79 -> 80 ;
81 [label="litereral_stuff <= 0.5\ngini = 0.115\nsamples = 245\nvalue = [15, 230]\nclass = Malicious"] ;
79 -> 81 ;
82 [label="trystatement <= 0.5\ngini = 0.087\nsamples = 241\nvalue = [11, 230]\nclass = Malicious"] ;
81 -> 82 ;
83 [label="gini = 0.08\nsamples = 240\nvalue = [10, 230]\nclass = Malicious"] ;
82 -> 83 ;
84 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
82 -> 84 ;
85 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
81 -> 85 ;
86 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
78 -> 86 ;
87 [label="expressionstatement <= 0.5\ngini = 0.264\nsamples = 9146\nvalue = [1432, 7714]\nclass = Malicious"] ;
1 -> 87 ;
88 [label="gini = 0.0\nsamples = 250\nvalue = [250, 0]\nclass = Benign"] ;
87 -> 88 ;
89 [label="element_stuff <= 0.5\ngini = 0.23\nsamples = 8896\nvalue = [1182, 7714]\nclass = Malicious"] ;
87 -> 89 ;
90 [label="litereral_stuff <= 0.5\ngini = 0.325\nsamples = 4957\nvalue = [1012, 3945]\nclass = Malicious"] ;
89 -> 90 ;
91 [label="returnstatement <= 0.5\ngini = 0.291\nsamples = 4778\nvalue = [843, 3935]\nclass = Malicious"] ;
90 -> 91 ;
92 [label="argument_stuff <= 0.5\ngini = 0.415\nsamples = 2407\nvalue = [707, 1700]\nclass = Malicious"] ;
91 -> 92 ;
93 [label="gini = 0.0\nsamples = 116\nvalue = [116, 0]\nclass = Benign"] ;
92 -> 93 ;
94 [label="formalparameterlist <= 0.5\ngini = 0.383\nsamples = 2291\nvalue = [591, 1700]\nclass = Malicious"] ;
92 -> 94 ;
95 [label="identifiername <= 0.5\ngini = 0.355\nsamples = 2195\nvalue = [506, 1689]\nclass = Malicious"] ;
94 -> 95 ;
96 [label="varmodifier <= 0.5\ngini = 0.16\nsamples = 661\nvalue = [58, 603]\nclass = Malicious"] ;
95 -> 96 ;
97 [label="ifstatement <= 0.5\ngini = 0.297\nsamples = 171\nvalue = [31, 140]\nclass = Malicious"] ;
96 -> 97 ;
98 [label="gini = 0.0\nsamples = 31\nvalue = [31, 0]\nclass = Benign"] ;
97 -> 98 ;
99 [label="gini = 0.0\nsamples = 140\nvalue = [0, 140]\nclass = Malicious"] ;
97 -> 99 ;
100 [label="trystatement <= 0.5\ngini = 0.104\nsamples = 490\nvalue = [27, 463]\nclass = Malicious"] ;
96 -> 100 ;
101 [label="ifstatement <= 0.5\ngini = 0.113\nsamples = 451\nvalue = [27, 424]\nclass = Malicious"] ;
100 -> 101 ;
102 [label="do_for_while_statement <= 0.5\ngini = 0.109\nsamples = 450\nvalue = [26, 424]\nclass = Malicious"] ;
101 -> 102 ;
103 [label="gini = 0.109\nsamples = 449\nvalue = [26, 423]\nclass = Malicious"] ;
102 -> 103 ;
104 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
102 -> 104 ;
105 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
101 -> 105 ;
106 [label="gini = 0.0\nsamples = 39\nvalue = [0, 39]\nclass = Malicious"] ;
100 -> 106 ;
107 [label="trystatement <= 0.5\ngini = 0.414\nsamples = 1534\nvalue = [448, 1086]\nclass = Malicious"] ;
95 -> 107 ;
108 [label="do_for_while_statement <= 0.5\ngini = 0.43\nsamples = 1414\nvalue = [443, 971]\nclass = Malicious"] ;
107 -> 108 ;
109 [label="ifstatement <= 0.5\ngini = 0.407\nsamples = 1334\nvalue = [380, 954]\nclass = Malicious"] ;
108 -> 109 ;
110 [label="variable_stuff <= 0.5\ngini = 0.449\nsamples = 750\nvalue = [255, 495]\nclass = Malicious"] ;
109 -> 110 ;
111 [label="gini = 0.49\nsamples = 293\nvalue = [167, 126]\nclass = Benign"] ;
110 -> 111 ;
112 [label="assignmentoperator <= 0.5\ngini = 0.311\nsamples = 457\nvalue = [88, 369]\nclass = Malicious"] ;
110 -> 112 ;
113 [label="gini = 0.31\nsamples = 454\nvalue = [87, 367]\nclass = Malicious"] ;
112 -> 113 ;
114 [label="gini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
112 -> 114 ;
115 [label="assignmentoperator <= 0.5\ngini = 0.336\nsamples = 584\nvalue = [125, 459]\nclass = Malicious"] ;
109 -> 115 ;
116 [label="variable_stuff <= 0.5\ngini = 0.325\nsamples = 577\nvalue = [118, 459]\nclass = Malicious"] ;
115 -> 116 ;
117 [label="gini = 0.263\nsamples = 347\nvalue = [54, 293]\nclass = Malicious"] ;
116 -> 117 ;
118 [label="gini = 0.402\nsamples = 230\nvalue = [64, 166]\nclass = Malicious"] ;
116 -> 118 ;
119 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
115 -> 119 ;
120 [label="assignmentoperator <= 0.5\ngini = 0.335\nsamples = 80\nvalue = [63, 17]\nclass = Benign"] ;
108 -> 120 ;
121 [label="gini = 0.0\nsamples = 63\nvalue = [63, 0]\nclass = Benign"] ;
120 -> 121 ;
122 [label="gini = 0.0\nsamples = 17\nvalue = [0, 17]\nclass = Malicious"] ;
120 -> 122 ;
123 [label="varmodifier <= 0.5\ngini = 0.08\nsamples = 120\nvalue = [5, 115]\nclass = Malicious"] ;
107 -> 123 ;
124 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
123 -> 124 ;
125 [label="ifstatement <= 0.5\ngini = 0.034\nsamples = 117\nvalue = [2, 115]\nclass = Malicious"] ;
123 -> 125 ;
126 [label="gini = 0.0\nsamples = 95\nvalue = [0, 95]\nclass = Malicious"] ;
125 -> 126 ;
127 [label="assignmentoperator <= 0.5\ngini = 0.165\nsamples = 22\nvalue = [2, 20]\nclass = Malicious"] ;
125 -> 127 ;
128 [label="gini = 0.0\nsamples = 20\nvalue = [0, 20]\nclass = Malicious"] ;
127 -> 128 ;
129 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
127 -> 129 ;
130 [label="ifstatement <= 0.5\ngini = 0.203\nsamples = 96\nvalue = [85, 11]\nclass = Benign"] ;
94 -> 130 ;
131 [label="varmodifier <= 0.5\ngini = 0.451\nsamples = 32\nvalue = [21, 11]\nclass = Benign"] ;
130 -> 131 ;
132 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
131 -> 132 ;
133 [label="do_for_while_statement <= 0.5\ngini = 0.499\nsamples = 23\nvalue = [12, 11]\nclass = Benign"] ;
131 -> 133 ;
134 [label="gini = 0.5\nsamples = 22\nvalue = [11, 11]\nclass = Benign"] ;
133 -> 134 ;
135 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
133 -> 135 ;
136 [label="gini = 0.0\nsamples = 64\nvalue = [64, 0]\nclass = Benign"] ;
130 -> 136 ;
137 [label="identifiername <= 0.5\ngini = 0.108\nsamples = 2371\nvalue = [136, 2235]\nclass = Malicious"] ;
91 -> 137 ;
138 [label="gini = 0.0\nsamples = 754\nvalue = [0, 754]\nclass = Malicious"] ;
137 -> 138 ;
139 [label="do_for_while_statement <= 0.5\ngini = 0.154\nsamples = 1617\nvalue = [136, 1481]\nclass = Malicious"] ;
137 -> 139 ;
140 [label="formalParameterArg_stuff <= 0.5\ngini = 0.142\nsamples = 1601\nvalue = [123, 1478]\nclass = Malicious"] ;
139 -> 140 ;
141 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
140 -> 141 ;
142 [label="switchstatement <= 0.5\ngini = 0.136\nsamples = 1595\nvalue = [117, 1478]\nclass = Malicious"] ;
140 -> 142 ;
143 [label="variable_stuff <= 0.5\ngini = 0.135\nsamples = 1594\nvalue = [116, 1478]\nclass = Malicious"] ;
142 -> 143 ;
144 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
143 -> 144 ;
145 [label="assignmentoperator <= 0.5\ngini = 0.134\nsamples = 1593\nvalue = [115, 1478]\nclass = Malicious"] ;
143 -> 145 ;
146 [label="ifstatement <= 0.5\ngini = 0.133\nsamples = 1592\nvalue = [114, 1478]\nclass = Malicious"] ;
145 -> 146 ;
147 [label="gini = 0.0\nsamples = 13\nvalue = [0, 13]\nclass = Malicious"] ;
146 -> 147 ;
148 [label="catchproduction <= 0.5\ngini = 0.134\nsamples = 1579\nvalue = [114, 1465]\nclass = Malicious"] ;
146 -> 148 ;
149 [label="gini = 0.134\nsamples = 1578\nvalue = [114, 1464]\nclass = Malicious"] ;
148 -> 149 ;
150 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
148 -> 150 ;
151 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
145 -> 151 ;
152 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
142 -> 152 ;
153 [label="trystatement <= 0.5\ngini = 0.305\nsamples = 16\nvalue = [13, 3]\nclass = Benign"] ;
139 -> 153 ;
154 [label="assignmentoperator <= 0.5\ngini = 0.133\nsamples = 14\nvalue = [13, 1]\nclass = Benign"] ;
153 -> 154 ;
155 [label="gini = 0.0\nsamples = 10\nvalue = [10, 0]\nclass = Benign"] ;
154 -> 155 ;
156 [label="formalParameterArg_stuff <= 0.5\ngini = 0.375\nsamples = 4\nvalue = [3, 1]\nclass = Benign"] ;
154 -> 156 ;
157 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
156 -> 157 ;
158 [label="continue_break_statement <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [2, 1]\nclass = Benign"] ;
156 -> 158 ;
159 [label="gini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
158 -> 159 ;
160 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
158 -> 160 ;
161 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
153 -> 161 ;
162 [label="trystatement <= 0.5\ngini = 0.105\nsamples = 179\nvalue = [169, 10]\nclass = Benign"] ;
90 -> 162 ;
163 [label="assignmentoperator <= 0.5\ngini = 0.026\nsamples = 153\nvalue = [151, 2]\nclass = Benign"] ;
162 -> 163 ;
164 [label="gini = 0.0\nsamples = 149\nvalue = [149, 0]\nclass = Benign"] ;
163 -> 164 ;
165 [label="ifstatement <= 0.5\ngini = 0.5\nsamples = 4\nvalue = [2, 2]\nclass = Benign"] ;
163 -> 165 ;
166 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
165 -> 166 ;
167 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
165 -> 167 ;
168 [label="identifiername <= 0.5\ngini = 0.426\nsamples = 26\nvalue = [18, 8]\nclass = Benign"] ;
162 -> 168 ;
169 [label="gini = 0.0\nsamples = 8\nvalue = [0, 8]\nclass = Malicious"] ;
168 -> 169 ;
170 [label="gini = 0.0\nsamples = 18\nvalue = [18, 0]\nclass = Benign"] ;
168 -> 170 ;
171 [label="argument_stuff <= 0.5\ngini = 0.083\nsamples = 3939\nvalue = [170, 3769]\nclass = Malicious"] ;
89 -> 171 ;
172 [label="gini = 0.0\nsamples = 75\nvalue = [75, 0]\nclass = Benign"] ;
171 -> 172 ;
173 [label="varmodifier <= 0.5\ngini = 0.048\nsamples = 3864\nvalue = [95, 3769]\nclass = Malicious"] ;
171 -> 173 ;
174 [label="identifiername <= 0.5\ngini = 0.159\nsamples = 23\nvalue = [21, 2]\nclass = Benign"] ;
173 -> 174 ;
175 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
174 -> 175 ;
176 [label="gini = 0.0\nsamples = 21\nvalue = [21, 0]\nclass = Benign"] ;
174 -> 176 ;
177 [label="do_for_while_statement <= 0.5\ngini = 0.038\nsamples = 3841\nvalue = [74, 3767]\nclass = Malicious"] ;
173 -> 177 ;
178 [label="ifstatement <= 0.5\ngini = 0.075\nsamples = 1749\nvalue = [68, 1681]\nclass = Malicious"] ;
177 -> 178 ;
179 [label="identifiername <= 0.5\ngini = 0.379\nsamples = 59\nvalue = [44, 15]\nclass = Benign"] ;
178 -> 179 ;
180 [label="gini = 0.133\nsamples = 14\nvalue = [1, 13]\nclass = Malicious"] ;
179 -> 180 ;
181 [label="formalparameterlist <= 0.5\ngini = 0.085\nsamples = 45\nvalue = [43, 2]\nclass = Benign"] ;
179 -> 181 ;
182 [label="gini = 0.0\nsamples = 43\nvalue = [43, 0]\nclass = Benign"] ;
181 -> 182 ;
183 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
181 -> 183 ;
184 [label="identifiername <= 0.5\ngini = 0.028\nsamples = 1690\nvalue = [24, 1666]\nclass = Malicious"] ;
178 -> 184 ;
185 [label="gini = 0.0\nsamples = 836\nvalue = [0, 836]\nclass = Malicious"] ;
184 -> 185 ;
186 [label="formalparameterlist <= 0.5\ngini = 0.055\nsamples = 854\nvalue = [24, 830]\nclass = Malicious"] ;
184 -> 186 ;
187 [label="assignmentoperator <= 0.5\ngini = 0.046\nsamples = 848\nvalue = [20, 828]\nclass = Malicious"] ;
186 -> 187 ;
188 [label="returnstatement <= 0.5\ngini = 0.054\nsamples = 715\nvalue = [20, 695]\nclass = Malicious"] ;
187 -> 188 ;
189 [label="switchstatement <= 0.5\ngini = 0.049\nsamples = 713\nvalue = [18, 695]\nclass = Malicious"] ;
188 -> 189 ;
190 [label="trystatement <= 0.5\ngini = 0.05\nsamples = 708\nvalue = [18, 690]\nclass = Malicious"] ;
189 -> 190 ;
191 [label="gini = 0.051\nsamples = 654\nvalue = [17, 637]\nclass = Malicious"] ;
190 -> 191 ;
192 [label="gini = 0.036\nsamples = 54\nvalue = [1, 53]\nclass = Malicious"] ;
190 -> 192 ;
193 [label="gini = 0.0\nsamples = 5\nvalue = [0, 5]\nclass = Malicious"] ;
189 -> 193 ;
194 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
188 -> 194 ;
195 [label="gini = 0.0\nsamples = 133\nvalue = [0, 133]\nclass = Malicious"] ;
187 -> 195 ;
196 [label="returnstatement <= 0.5\ngini = 0.444\nsamples = 6\nvalue = [4, 2]\nclass = Benign"] ;
186 -> 196 ;
197 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
196 -> 197 ;
198 [label="gini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
196 -> 198 ;
199 [label="formalParameterArg_stuff <= 0.5\ngini = 0.006\nsamples = 2092\nvalue = [6, 2086]\nclass = Malicious"] ;
177 -> 199 ;
200 [label="assignmentoperator <= 0.5\ngini = 0.005\nsamples = 2090\nvalue = [5, 2085]\nclass = Malicious"] ;
199 -> 200 ;
201 [label="ifstatement <= 0.5\ngini = 0.008\nsamples = 1266\nvalue = [5, 1261]\nclass = Malicious"] ;
200 -> 201 ;
202 [label="gini = 0.0\nsamples = 810\nvalue = [0, 810]\nclass = Malicious"] ;
201 -> 202 ;
203 [label="continue_break_statement <= 0.5\ngini = 0.022\nsamples = 456\nvalue = [5, 451]\nclass = Malicious"] ;
201 -> 203 ;
204 [label="gini = 0.032\nsamples = 309\nvalue = [5, 304]\nclass = Malicious"] ;
203 -> 204 ;
205 [label="gini = 0.0\nsamples = 147\nvalue = [0, 147]\nclass = Malicious"] ;
203 -> 205 ;
206 [label="gini = 0.0\nsamples = 824\nvalue = [0, 824]\nclass = Malicious"] ;
200 -> 206 ;
207 [label="trystatement <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
199 -> 207 ;
208 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
207 -> 208 ;
209 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
207 -> 209 ;
210 [label="do_for_while_statement <= 0.5\ngini = 0.254\nsamples = 10380\nvalue = [8832, 1548]\nclass = Benign"] ;
0 -> 210 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
211 [label="catchproduction <= 0.5\ngini = 0.0\nsamples = 8600\nvalue = [8598, 2]\nclass = Benign"] ;
210 -> 211 ;
212 [label="gini = 0.0\nsamples = 8514\nvalue = [8514, 0]\nclass = Benign"] ;
211 -> 212 ;
213 [label="ifstatement <= 0.5\ngini = 0.045\nsamples = 86\nvalue = [84, 2]\nclass = Benign"] ;
211 -> 213 ;
214 [label="gini = 0.0\nsamples = 39\nvalue = [39, 0]\nclass = Benign"] ;
213 -> 214 ;
215 [label="element_stuff <= 0.5\ngini = 0.081\nsamples = 47\nvalue = [45, 2]\nclass = Benign"] ;
213 -> 215 ;
216 [label="formalparameterlist <= 0.5\ngini = 0.153\nsamples = 24\nvalue = [22, 2]\nclass = Benign"] ;
215 -> 216 ;
217 [label="varmodifier <= 0.5\ngini = 0.208\nsamples = 17\nvalue = [15, 2]\nclass = Benign"] ;
216 -> 217 ;
218 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
217 -> 218 ;
219 [label="numericliteral <= 0.5\ngini = 0.245\nsamples = 14\nvalue = [12, 2]\nclass = Benign"] ;
217 -> 219 ;
220 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
219 -> 220 ;
221 [label="assignmentoperator <= 0.5\ngini = 0.26\nsamples = 13\nvalue = [11, 2]\nclass = Benign"] ;
219 -> 221 ;
222 [label="gini = 0.278\nsamples = 12\nvalue = [10, 2]\nclass = Benign"] ;
221 -> 222 ;
223 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
221 -> 223 ;
224 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
216 -> 224 ;
225 [label="gini = 0.0\nsamples = 23\nvalue = [23, 0]\nclass = Benign"] ;
215 -> 225 ;
226 [label="identifiername <= 0.5\ngini = 0.228\nsamples = 1780\nvalue = [234, 1546]\nclass = Malicious"] ;
210 -> 226 ;
227 [label="gini = 0.0\nsamples = 1489\nvalue = [0, 1489]\nclass = Malicious"] ;
226 -> 227 ;
228 [label="trystatement <= 0.5\ngini = 0.315\nsamples = 291\nvalue = [234, 57]\nclass = Benign"] ;
226 -> 228 ;
229 [label="gini = 0.0\nsamples = 211\nvalue = [211, 0]\nclass = Benign"] ;
228 -> 229 ;
230 [label="assignmentoperator <= 0.5\ngini = 0.41\nsamples = 80\nvalue = [23, 57]\nclass = Malicious"] ;
228 -> 230 ;
231 [label="continue_break_statement <= 0.5\ngini = 0.444\nsamples = 18\nvalue = [12, 6]\nclass = Benign"] ;
230 -> 231 ;
232 [label="gini = 0.0\nsamples = 11\nvalue = [11, 0]\nclass = Benign"] ;
231 -> 232 ;
233 [label="formalparameterlist <= 0.5\ngini = 0.245\nsamples = 7\nvalue = [1, 6]\nclass = Malicious"] ;
231 -> 233 ;
234 [label="gini = 0.0\nsamples = 6\nvalue = [0, 6]\nclass = Malicious"] ;
233 -> 234 ;
235 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
233 -> 235 ;
236 [label="returnstatement <= 0.5\ngini = 0.292\nsamples = 62\nvalue = [11, 51]\nclass = Malicious"] ;
230 -> 236 ;
237 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
236 -> 237 ;
238 [label="finallyproduction <= 0.5\ngini = 0.255\nsamples = 60\nvalue = [9, 51]\nclass = Malicious"] ;
236 -> 238 ;
239 [label="continue_break_statement <= 0.5\ngini = 0.382\nsamples = 35\nvalue = [9, 26]\nclass = Malicious"] ;
238 -> 239 ;
240 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
239 -> 240 ;
241 [label="clause_stuff <= 0.5\ngini = 0.231\nsamples = 30\nvalue = [4, 26]\nclass = Malicious"] ;
239 -> 241 ;
242 [label="throwstatement <= 0.5\ngini = 0.185\nsamples = 29\nvalue = [3, 26]\nclass = Malicious"] ;
241 -> 242 ;
243 [label="gini = 0.133\nsamples = 28\nvalue = [2, 26]\nclass = Malicious"] ;
242 -> 243 ;
244 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
242 -> 244 ;
245 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
241 -> 245 ;
246 [label="gini = 0.0\nsamples = 25\nvalue = [0, 25]\nclass = Malicious"] ;
238 -> 246 ;
}
