digraph Tree {
node [shape=box] ;
0 [label="litereral_stuff-property_rules <= 0.5\ngini = 0.5\nsamples = 27000\nvalue = [13512, 13488]\nclass = Benign"] ;
1 [label="identifiername-identifiername <= 0.5\ngini = 0.405\nsamples = 16658\nvalue = [4706, 11952]\nclass = Malicious"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="expression_statement-expressionsequence <= 0.5\ngini = 0.352\nsamples = 15313\nvalue = [3493, 11820]\nclass = Malicious"] ;
1 -> 2 ;
3 [label="sourceElement_stuff-expressionstatement <= 0.5\ngini = 0.473\nsamples = 8062\nvalue = [3098, 4964]\nclass = Malicious"] ;
2 -> 3 ;
4 [label="argument_stuff-expression_statement <= 0.5\ngini = 0.41\nsamples = 5935\nvalue = [1709, 4226]\nclass = Malicious"] ;
3 -> 4 ;
5 [label="variable_stuff-varmodifier <= 0.5\ngini = 0.491\nsamples = 3279\nvalue = [1417, 1862]\nclass = Malicious"] ;
4 -> 5 ;
6 [label="expressionstatement-expressionsequence <= 0.5\ngini = 0.39\nsamples = 2535\nvalue = [673, 1862]\nclass = Malicious"] ;
5 -> 6 ;
7 [label="gini = 0.387\nsamples = 2525\nvalue = [663, 1862]\nclass = Malicious"] ;
6 -> 7 ;
8 [label="gini = 0.0\nsamples = 10\nvalue = [10, 0]\nclass = Benign"] ;
6 -> 8 ;
9 [label="gini = 0.0\nsamples = 744\nvalue = [744, 0]\nclass = Benign"] ;
5 -> 9 ;
10 [label="withstatement-expressionsequence <= 0.5\ngini = 0.196\nsamples = 2656\nvalue = [292, 2364]\nclass = Malicious"] ;
4 -> 10 ;
11 [label="expression_statement-identifiername <= 0.5\ngini = 0.13\nsamples = 2541\nvalue = [177, 2364]\nclass = Malicious"] ;
10 -> 11 ;
12 [label="sourceElement_stuff-trystatement <= 0.5\ngini = 0.038\nsamples = 2274\nvalue = [44, 2230]\nclass = Malicious"] ;
11 -> 12 ;
13 [label="expression_statement-variable_stuff <= 0.5\ngini = 0.035\nsamples = 2271\nvalue = [41, 2230]\nclass = Malicious"] ;
12 -> 13 ;
14 [label="numericliteral-expression_statement <= 0.5\ngini = 0.03\nsamples = 2221\nvalue = [34, 2187]\nclass = Malicious"] ;
13 -> 14 ;
15 [label="sourceElement_stuff-sourceElement_stuff <= 0.5\ngini = 0.029\nsamples = 2220\nvalue = [33, 2187]\nclass = Malicious"] ;
14 -> 15 ;
16 [label="literal-expression_statement <= 0.5\ngini = 0.028\nsamples = 2209\nvalue = [31, 2178]\nclass = Malicious"] ;
15 -> 16 ;
17 [label="literal-expressionstatement <= 0.5\ngini = 0.049\nsamples = 1106\nvalue = [28, 1078]\nclass = Malicious"] ;
16 -> 17 ;
18 [label="gini = 0.0\nsamples = 1072\nvalue = [0, 1072]\nclass = Malicious"] ;
17 -> 18 ;
19 [label="expression_statement-assignmentoperator <= 0.5\ngini = 0.291\nsamples = 34\nvalue = [28, 6]\nclass = Benign"] ;
17 -> 19 ;
20 [label="gini = 0.0\nsamples = 28\nvalue = [28, 0]\nclass = Benign"] ;
19 -> 20 ;
21 [label="gini = 0.0\nsamples = 6\nvalue = [0, 6]\nclass = Malicious"] ;
19 -> 21 ;
22 [label="literal-expressionstatement <= 0.5\ngini = 0.005\nsamples = 1103\nvalue = [3, 1100]\nclass = Malicious"] ;
16 -> 22 ;
23 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
22 -> 23 ;
24 [label="gini = 0.0\nsamples = 1100\nvalue = [0, 1100]\nclass = Malicious"] ;
22 -> 24 ;
25 [label="expression_statement-assignmentoperator <= 0.5\ngini = 0.298\nsamples = 11\nvalue = [2, 9]\nclass = Malicious"] ;
15 -> 25 ;
26 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
25 -> 26 ;
27 [label="gini = 0.0\nsamples = 9\nvalue = [0, 9]\nclass = Malicious"] ;
25 -> 27 ;
28 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
14 -> 28 ;
29 [label="expressionsequence-expression_statement <= 0.5\ngini = 0.241\nsamples = 50\nvalue = [7, 43]\nclass = Malicious"] ;
13 -> 29 ;
30 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
29 -> 30 ;
31 [label="gini = 0.0\nsamples = 43\nvalue = [0, 43]\nclass = Malicious"] ;
29 -> 31 ;
32 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
12 -> 32 ;
33 [label="expression_statement-expressionstatement <= 0.5\ngini = 0.5\nsamples = 267\nvalue = [133, 134]\nclass = Malicious"] ;
11 -> 33 ;
34 [label="numericliteral-variable_stuff <= 0.5\ngini = 0.145\nsamples = 127\nvalue = [117, 10]\nclass = Benign"] ;
33 -> 34 ;
35 [label="gini = 0.0\nsamples = 113\nvalue = [113, 0]\nclass = Benign"] ;
34 -> 35 ;
36 [label="literal-expressionstatement <= 0.5\ngini = 0.408\nsamples = 14\nvalue = [4, 10]\nclass = Malicious"] ;
34 -> 36 ;
37 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
36 -> 37 ;
38 [label="numericliteral-ifstatement <= 0.5\ngini = 0.165\nsamples = 11\nvalue = [1, 10]\nclass = Malicious"] ;
36 -> 38 ;
39 [label="gini = 0.0\nsamples = 10\nvalue = [0, 10]\nclass = Malicious"] ;
38 -> 39 ;
40 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
38 -> 40 ;
41 [label="ifstatement-expressionsequence <= 0.5\ngini = 0.202\nsamples = 140\nvalue = [16, 124]\nclass = Malicious"] ;
33 -> 41 ;
42 [label="argument_stuff-expressionstatement <= 0.5\ngini = 0.061\nsamples = 128\nvalue = [4, 124]\nclass = Malicious"] ;
41 -> 42 ;
43 [label="gini = 0.0\nsamples = 124\nvalue = [0, 124]\nclass = Malicious"] ;
42 -> 43 ;
44 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
42 -> 44 ;
45 [label="gini = 0.0\nsamples = 12\nvalue = [12, 0]\nclass = Benign"] ;
41 -> 45 ;
46 [label="gini = 0.0\nsamples = 115\nvalue = [115, 0]\nclass = Benign"] ;
10 -> 46 ;
47 [label="argument_stuff-identifiername <= 0.5\ngini = 0.453\nsamples = 2127\nvalue = [1389, 738]\nclass = Benign"] ;
3 -> 47 ;
48 [label="numericliteral-variable_stuff <= 0.5\ngini = 0.327\nsamples = 1722\nvalue = [1367, 355]\nclass = Benign"] ;
47 -> 48 ;
49 [label="numericliteral-expressionstatement <= 0.5\ngini = 0.172\nsamples = 1466\nvalue = [1327, 139]\nclass = Benign"] ;
48 -> 49 ;
50 [label="expression_statement-assignmentoperator <= 0.5\ngini = 0.021\nsamples = 1223\nvalue = [1210, 13]\nclass = Benign"] ;
49 -> 50 ;
51 [label="gini = 0.0\nsamples = 1207\nvalue = [1207, 0]\nclass = Benign"] ;
50 -> 51 ;
52 [label="returnstatement-expressionsequence <= 0.5\ngini = 0.305\nsamples = 16\nvalue = [3, 13]\nclass = Malicious"] ;
50 -> 52 ;
53 [label="identifiername-argument_stuff <= 0.5\ngini = 0.133\nsamples = 14\nvalue = [1, 13]\nclass = Malicious"] ;
52 -> 53 ;
54 [label="gini = 0.0\nsamples = 13\nvalue = [0, 13]\nclass = Malicious"] ;
53 -> 54 ;
55 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
53 -> 55 ;
56 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
52 -> 56 ;
57 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.499\nsamples = 243\nvalue = [117, 126]\nclass = Malicious"] ;
49 -> 57 ;
58 [label="gini = 0.0\nsamples = 63\nvalue = [63, 0]\nclass = Benign"] ;
57 -> 58 ;
59 [label="sourceElement_stuff-sourceElement_stuff <= 0.5\ngini = 0.42\nsamples = 180\nvalue = [54, 126]\nclass = Malicious"] ;
57 -> 59 ;
60 [label="literal-expressionstatement <= 0.5\ngini = 0.19\nsamples = 141\nvalue = [15, 126]\nclass = Malicious"] ;
59 -> 60 ;
61 [label="gini = 0.0\nsamples = 15\nvalue = [15, 0]\nclass = Benign"] ;
60 -> 61 ;
62 [label="gini = 0.0\nsamples = 126\nvalue = [0, 126]\nclass = Malicious"] ;
60 -> 62 ;
63 [label="gini = 0.0\nsamples = 39\nvalue = [39, 0]\nclass = Benign"] ;
59 -> 63 ;
64 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.264\nsamples = 256\nvalue = [40, 216]\nclass = Malicious"] ;
48 -> 64 ;
65 [label="identifiername-expression_statement <= 0.5\ngini = 0.069\nsamples = 224\nvalue = [8, 216]\nclass = Malicious"] ;
64 -> 65 ;
66 [label="gini = 0.0\nsamples = 216\nvalue = [0, 216]\nclass = Malicious"] ;
65 -> 66 ;
67 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
65 -> 67 ;
68 [label="gini = 0.0\nsamples = 32\nvalue = [32, 0]\nclass = Benign"] ;
64 -> 68 ;
69 [label="expression_statement-sourceElement_stuff <= 0.5\ngini = 0.103\nsamples = 405\nvalue = [22, 383]\nclass = Malicious"] ;
47 -> 69 ;
70 [label="literal-identifiername <= 0.5\ngini = 0.035\nsamples = 390\nvalue = [7, 383]\nclass = Malicious"] ;
69 -> 70 ;
71 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
70 -> 71 ;
72 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.01\nsamples = 385\nvalue = [2, 383]\nclass = Malicious"] ;
70 -> 72 ;
73 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
72 -> 73 ;
74 [label="gini = 0.0\nsamples = 383\nvalue = [0, 383]\nclass = Malicious"] ;
72 -> 74 ;
75 [label="gini = 0.0\nsamples = 15\nvalue = [15, 0]\nclass = Benign"] ;
69 -> 75 ;
76 [label="litereral_stuff-expressionstatement <= 0.5\ngini = 0.103\nsamples = 7251\nvalue = [395, 6856]\nclass = Malicious"] ;
2 -> 76 ;
77 [label="sourceElement_stuff-withstatement <= 0.5\ngini = 0.09\nsamples = 7196\nvalue = [340, 6856]\nclass = Malicious"] ;
76 -> 77 ;
78 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.078\nsamples = 7148\nvalue = [292, 6856]\nclass = Malicious"] ;
77 -> 78 ;
79 [label="literal-returnstatement <= 0.5\ngini = 0.397\nsamples = 695\nvalue = [190, 505]\nclass = Malicious"] ;
78 -> 79 ;
80 [label="argument_stuff-expressionstatement <= 0.5\ngini = 0.108\nsamples = 175\nvalue = [165, 10]\nclass = Benign"] ;
79 -> 80 ;
81 [label="gini = 0.0\nsamples = 165\nvalue = [165, 0]\nclass = Benign"] ;
80 -> 81 ;
82 [label="gini = 0.0\nsamples = 10\nvalue = [0, 10]\nclass = Malicious"] ;
80 -> 82 ;
83 [label="varmodifier-variable_stuff <= 0.5\ngini = 0.092\nsamples = 520\nvalue = [25, 495]\nclass = Malicious"] ;
79 -> 83 ;
84 [label="gini = 0.0\nsamples = 495\nvalue = [0, 495]\nclass = Malicious"] ;
83 -> 84 ;
85 [label="gini = 0.0\nsamples = 25\nvalue = [25, 0]\nclass = Benign"] ;
83 -> 85 ;
86 [label="formalParameterArg_stuff-formalParameterArg_stuff <= 0.5\ngini = 0.031\nsamples = 6453\nvalue = [102, 6351]\nclass = Malicious"] ;
78 -> 86 ;
87 [label="argument_stuff-ifstatement <= 0.5\ngini = 0.023\nsamples = 6407\nvalue = [75, 6332]\nclass = Malicious"] ;
86 -> 87 ;
88 [label="numericliteral-identifiername <= 0.5\ngini = 0.019\nsamples = 6393\nvalue = [62, 6331]\nclass = Malicious"] ;
87 -> 88 ;
89 [label="argument_stuff-expression_statement <= 0.5\ngini = 0.012\nsamples = 6295\nvalue = [39, 6256]\nclass = Malicious"] ;
88 -> 89 ;
90 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
89 -> 90 ;
91 [label="litereral_stuff-expressionsequence <= 0.5\ngini = 0.011\nsamples = 6291\nvalue = [35, 6256]\nclass = Malicious"] ;
89 -> 91 ;
92 [label="numericliteral-ifstatement <= 0.5\ngini = 0.01\nsamples = 6289\nvalue = [33, 6256]\nclass = Malicious"] ;
91 -> 92 ;
93 [label="expression_statement-ifstatement <= 0.5\ngini = 0.008\nsamples = 6247\nvalue = [26, 6221]\nclass = Malicious"] ;
92 -> 93 ;
94 [label="returnstatement-ifstatement <= 0.5\ngini = 0.007\nsamples = 6239\nvalue = [23, 6216]\nclass = Malicious"] ;
93 -> 94 ;
95 [label="expression_statement-sourceElement_stuff <= 0.5\ngini = 0.007\nsamples = 6238\nvalue = [22, 6216]\nclass = Malicious"] ;
94 -> 95 ;
96 [label="identifiername-variable_stuff <= 0.5\ngini = 0.003\nsamples = 5662\nvalue = [8, 5654]\nclass = Malicious"] ;
95 -> 96 ;
97 [label="ifstatement-expressionsequence <= 0.5\ngini = 0.002\nsamples = 5655\nvalue = [7, 5648]\nclass = Malicious"] ;
96 -> 97 ;
98 [label="identifiername-argument_stuff <= 0.5\ngini = 0.011\nsamples = 1082\nvalue = [6, 1076]\nclass = Malicious"] ;
97 -> 98 ;
99 [label="literal-variable_stuff <= 0.5\ngini = 0.337\nsamples = 14\nvalue = [3, 11]\nclass = Malicious"] ;
98 -> 99 ;
100 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
99 -> 100 ;
101 [label="gini = 0.0\nsamples = 11\nvalue = [0, 11]\nclass = Malicious"] ;
99 -> 101 ;
102 [label="literal-expressionsequence <= 0.5\ngini = 0.006\nsamples = 1068\nvalue = [3, 1065]\nclass = Malicious"] ;
98 -> 102 ;
103 [label="argument_stuff-expressionstatement <= 0.5\ngini = 0.004\nsamples = 1065\nvalue = [2, 1063]\nclass = Malicious"] ;
102 -> 103 ;
104 [label="identifiername-expression_statement <= 0.5\ngini = 0.002\nsamples = 1053\nvalue = [1, 1052]\nclass = Malicious"] ;
103 -> 104 ;
105 [label="gini = 0.0\nsamples = 946\nvalue = [0, 946]\nclass = Malicious"] ;
104 -> 105 ;
106 [label="numericliteral-expression_statement <= 0.5\ngini = 0.019\nsamples = 107\nvalue = [1, 106]\nclass = Malicious"] ;
104 -> 106 ;
107 [label="gini = 0.0\nsamples = 106\nvalue = [0, 106]\nclass = Malicious"] ;
106 -> 107 ;
108 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
106 -> 108 ;
109 [label="litereral_stuff-element_stuff <= 0.5\ngini = 0.153\nsamples = 12\nvalue = [1, 11]\nclass = Malicious"] ;
103 -> 109 ;
110 [label="gini = 0.0\nsamples = 11\nvalue = [0, 11]\nclass = Malicious"] ;
109 -> 110 ;
111 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
109 -> 111 ;
112 [label="sourceElement_stuff-expressionstatement <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
102 -> 112 ;
113 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
112 -> 113 ;
114 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
112 -> 114 ;
115 [label="expression_statement-variable_stuff <= 0.5\ngini = 0.0\nsamples = 4573\nvalue = [1, 4572]\nclass = Malicious"] ;
97 -> 115 ;
116 [label="gini = 0.0\nsamples = 4258\nvalue = [0, 4258]\nclass = Malicious"] ;
115 -> 116 ;
117 [label="expression_statement-litereral_stuff <= 0.5\ngini = 0.006\nsamples = 315\nvalue = [1, 314]\nclass = Malicious"] ;
115 -> 117 ;
118 [label="identifiername-expressionsequence <= 0.5\ngini = 0.278\nsamples = 6\nvalue = [1, 5]\nclass = Malicious"] ;
117 -> 118 ;
119 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
118 -> 119 ;
120 [label="gini = 0.0\nsamples = 5\nvalue = [0, 5]\nclass = Malicious"] ;
118 -> 120 ;
121 [label="gini = 0.0\nsamples = 309\nvalue = [0, 309]\nclass = Malicious"] ;
117 -> 121 ;
122 [label="argument_stuff-expressionstatement <= 0.5\ngini = 0.245\nsamples = 7\nvalue = [1, 6]\nclass = Malicious"] ;
96 -> 122 ;
123 [label="gini = 0.0\nsamples = 6\nvalue = [0, 6]\nclass = Malicious"] ;
122 -> 123 ;
124 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
122 -> 124 ;
125 [label="literal-variable_stuff <= 0.5\ngini = 0.047\nsamples = 576\nvalue = [14, 562]\nclass = Malicious"] ;
95 -> 125 ;
126 [label="trystatement-expressionstatement <= 0.5\ngini = 0.133\nsamples = 14\nvalue = [13, 1]\nclass = Benign"] ;
125 -> 126 ;
127 [label="gini = 0.0\nsamples = 13\nvalue = [13, 0]\nclass = Benign"] ;
126 -> 127 ;
128 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
126 -> 128 ;
129 [label="literal-ifstatement <= 0.5\ngini = 0.004\nsamples = 562\nvalue = [1, 561]\nclass = Malicious"] ;
125 -> 129 ;
130 [label="gini = 0.0\nsamples = 561\nvalue = [0, 561]\nclass = Malicious"] ;
129 -> 130 ;
131 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
129 -> 131 ;
132 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
94 -> 132 ;
133 [label="numericliteral-variable_stuff <= 0.5\ngini = 0.469\nsamples = 8\nvalue = [3, 5]\nclass = Malicious"] ;
93 -> 133 ;
134 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
133 -> 134 ;
135 [label="gini = 0.0\nsamples = 5\nvalue = [0, 5]\nclass = Malicious"] ;
133 -> 135 ;
136 [label="expression_statement-sourceElement_stuff <= 0.5\ngini = 0.278\nsamples = 42\nvalue = [7, 35]\nclass = Malicious"] ;
92 -> 136 ;
137 [label="gini = 0.0\nsamples = 35\nvalue = [0, 35]\nclass = Malicious"] ;
136 -> 137 ;
138 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
136 -> 138 ;
139 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
91 -> 139 ;
140 [label="expression_statement-variable_stuff <= 0.5\ngini = 0.359\nsamples = 98\nvalue = [23, 75]\nclass = Malicious"] ;
88 -> 140 ;
141 [label="gini = 0.0\nsamples = 23\nvalue = [23, 0]\nclass = Benign"] ;
140 -> 141 ;
142 [label="gini = 0.0\nsamples = 75\nvalue = [0, 75]\nclass = Malicious"] ;
140 -> 142 ;
143 [label="continue_break_statement-catchproduction <= 0.5\ngini = 0.133\nsamples = 14\nvalue = [13, 1]\nclass = Benign"] ;
87 -> 143 ;
144 [label="gini = 0.0\nsamples = 13\nvalue = [13, 0]\nclass = Benign"] ;
143 -> 144 ;
145 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
143 -> 145 ;
146 [label="numericliteral-expressionstatement <= 0.5\ngini = 0.485\nsamples = 46\nvalue = [27, 19]\nclass = Benign"] ;
86 -> 146 ;
147 [label="literal-expression_statement <= 0.5\ngini = 0.298\nsamples = 33\nvalue = [27, 6]\nclass = Benign"] ;
146 -> 147 ;
148 [label="numericliteral-identifiername <= 0.5\ngini = 0.245\nsamples = 7\nvalue = [1, 6]\nclass = Malicious"] ;
147 -> 148 ;
149 [label="gini = 0.0\nsamples = 6\nvalue = [0, 6]\nclass = Malicious"] ;
148 -> 149 ;
150 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
148 -> 150 ;
151 [label="gini = 0.0\nsamples = 26\nvalue = [26, 0]\nclass = Benign"] ;
147 -> 151 ;
152 [label="gini = 0.0\nsamples = 13\nvalue = [0, 13]\nclass = Malicious"] ;
146 -> 152 ;
153 [label="gini = 0.0\nsamples = 48\nvalue = [48, 0]\nclass = Benign"] ;
77 -> 153 ;
154 [label="gini = 0.0\nsamples = 55\nvalue = [55, 0]\nclass = Benign"] ;
76 -> 154 ;
155 [label="literal-trystatement <= 0.5\ngini = 0.177\nsamples = 1345\nvalue = [1213, 132]\nclass = Benign"] ;
1 -> 155 ;
156 [label="continue_break_statement-catchproduction <= 0.5\ngini = 0.008\nsamples = 1217\nvalue = [1212, 5]\nclass = Benign"] ;
155 -> 156 ;
157 [label="numericliteral-clause_stuff <= 0.5\ngini = 0.005\nsamples = 1215\nvalue = [1212, 3]\nclass = Benign"] ;
156 -> 157 ;
158 [label="expression_statement-assignmentoperator <= 0.5\ngini = 0.003\nsamples = 1214\nvalue = [1212, 2]\nclass = Benign"] ;
157 -> 158 ;
159 [label="argument_stuff-variable_stuff <= 0.5\ngini = 0.002\nsamples = 1209\nvalue = [1208, 1]\nclass = Benign"] ;
158 -> 159 ;
160 [label="gini = 0.0\nsamples = 1154\nvalue = [1154, 0]\nclass = Benign"] ;
159 -> 160 ;
161 [label="literal-expression_statement <= 0.5\ngini = 0.036\nsamples = 55\nvalue = [54, 1]\nclass = Benign"] ;
159 -> 161 ;
162 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
161 -> 162 ;
163 [label="gini = 0.0\nsamples = 54\nvalue = [54, 0]\nclass = Benign"] ;
161 -> 163 ;
164 [label="literal-expressionstatement <= 0.5\ngini = 0.32\nsamples = 5\nvalue = [4, 1]\nclass = Benign"] ;
158 -> 164 ;
165 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
164 -> 165 ;
166 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
164 -> 166 ;
167 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
157 -> 167 ;
168 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
156 -> 168 ;
169 [label="formalParameterArg_stuff-sourceElement_stuff <= 0.5\ngini = 0.016\nsamples = 128\nvalue = [1, 127]\nclass = Malicious"] ;
155 -> 169 ;
170 [label="gini = 0.0\nsamples = 127\nvalue = [0, 127]\nclass = Malicious"] ;
169 -> 170 ;
171 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
169 -> 171 ;
172 [label="do_for_while_statement-expressionsequence <= 0.5\ngini = 0.253\nsamples = 10342\nvalue = [8806, 1536]\nclass = Benign"] ;
0 -> 172 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
173 [label="finallyproduction-expressionstatement <= 0.5\ngini = 0.007\nsamples = 8797\nvalue = [8768, 29]\nclass = Benign"] ;
172 -> 173 ;
174 [label="expression_statement-catchproduction <= 0.5\ngini = 0.0\nsamples = 8770\nvalue = [8768, 2]\nclass = Benign"] ;
173 -> 174 ;
175 [label="gini = 0.0\nsamples = 8757\nvalue = [8757, 0]\nclass = Benign"] ;
174 -> 175 ;
176 [label="literal-argument_stuff <= 0.5\ngini = 0.26\nsamples = 13\nvalue = [11, 2]\nclass = Benign"] ;
174 -> 176 ;
177 [label="gini = 0.0\nsamples = 11\nvalue = [11, 0]\nclass = Benign"] ;
176 -> 177 ;
178 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
176 -> 178 ;
179 [label="gini = 0.0\nsamples = 27\nvalue = [0, 27]\nclass = Malicious"] ;
173 -> 179 ;
180 [label="identifiername-returnstatement <= 0.5\ngini = 0.048\nsamples = 1545\nvalue = [38, 1507]\nclass = Malicious"] ;
172 -> 180 ;
181 [label="expression_statement-property_rules <= 0.5\ngini = 0.008\nsamples = 1513\nvalue = [6, 1507]\nclass = Malicious"] ;
180 -> 181 ;
182 [label="numericliteral-property_rules <= 0.5\ngini = 0.001\nsamples = 1508\nvalue = [1, 1507]\nclass = Malicious"] ;
181 -> 182 ;
183 [label="gini = 0.0\nsamples = 1507\nvalue = [0, 1507]\nclass = Malicious"] ;
182 -> 183 ;
184 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
182 -> 184 ;
185 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
181 -> 185 ;
186 [label="gini = 0.0\nsamples = 32\nvalue = [32, 0]\nclass = Benign"] ;
180 -> 186 ;
}
