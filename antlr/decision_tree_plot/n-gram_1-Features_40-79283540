digraph Tree {
node [shape=box] ;
0 [label="propertyname <= 0.5\ngini = 0.5\nsamples = 27000\nvalue = [13491, 13509]\nclass = Malicious"] ;
1 [label="numericliteral <= 0.5\ngini = 0.403\nsamples = 16606\nvalue = [4648, 11958]\nclass = Malicious"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="expressionstatement <= 0.5\ngini = 0.491\nsamples = 7493\nvalue = [3233, 4260]\nclass = Malicious"] ;
1 -> 2 ;
3 [label="argument_stuff <= 0.5\ngini = 0.412\nsamples = 3942\nvalue = [1146, 2796]\nclass = Malicious"] ;
2 -> 3 ;
4 [label="sourceElement_stuff <= 0.5\ngini = 0.468\nsamples = 2978\nvalue = [1115, 1863]\nclass = Malicious"] ;
3 -> 4 ;
5 [label="gini = 0.397\nsamples = 2562\nvalue = [699, 1863]\nclass = Malicious"] ;
4 -> 5 ;
6 [label="gini = 0.0\nsamples = 416\nvalue = [416, 0]\nclass = Benign"] ;
4 -> 6 ;
7 [label="literal <= 0.5\ngini = 0.062\nsamples = 964\nvalue = [31, 933]\nclass = Malicious"] ;
3 -> 7 ;
8 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
7 -> 8 ;
9 [label="element_stuff <= 0.5\ngini = 0.047\nsamples = 956\nvalue = [23, 933]\nclass = Malicious"] ;
7 -> 9 ;
10 [label="expressionsequence <= 0.5\ngini = 0.041\nsamples = 953\nvalue = [20, 933]\nclass = Malicious"] ;
9 -> 10 ;
11 [label="identifiername <= 0.5\ngini = 0.079\nsamples = 486\nvalue = [20, 466]\nclass = Malicious"] ;
10 -> 11 ;
12 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
11 -> 12 ;
13 [label="gini = 0.064\nsamples = 482\nvalue = [16, 466]\nclass = Malicious"] ;
11 -> 13 ;
14 [label="gini = 0.0\nsamples = 467\nvalue = [0, 467]\nclass = Malicious"] ;
10 -> 14 ;
15 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
9 -> 15 ;
16 [label="variable_stuff <= 0.5\ngini = 0.485\nsamples = 3551\nvalue = [2087, 1464]\nclass = Benign"] ;
2 -> 16 ;
17 [label="identifiername <= 0.5\ngini = 0.347\nsamples = 2003\nvalue = [1556, 447]\nclass = Benign"] ;
16 -> 17 ;
18 [label="gini = 0.0\nsamples = 352\nvalue = [352, 0]\nclass = Benign"] ;
17 -> 18 ;
19 [label="litereral_stuff <= 0.5\ngini = 0.395\nsamples = 1651\nvalue = [1204, 447]\nclass = Benign"] ;
17 -> 19 ;
20 [label="ifstatement <= 0.5\ngini = 0.447\nsamples = 1325\nvalue = [878, 447]\nclass = Benign"] ;
19 -> 20 ;
21 [label="argument_stuff <= 0.5\ngini = 0.464\nsamples = 1224\nvalue = [777, 447]\nclass = Benign"] ;
20 -> 21 ;
22 [label="gini = 0.0\nsamples = 83\nvalue = [83, 0]\nclass = Benign"] ;
21 -> 22 ;
23 [label="literal <= 0.5\ngini = 0.477\nsamples = 1141\nvalue = [694, 447]\nclass = Benign"] ;
21 -> 23 ;
24 [label="gini = 0.0\nsamples = 48\nvalue = [48, 0]\nclass = Benign"] ;
23 -> 24 ;
25 [label="formalparameterlist <= 0.5\ngini = 0.483\nsamples = 1093\nvalue = [646, 447]\nclass = Benign"] ;
23 -> 25 ;
26 [label="trystatement <= 0.5\ngini = 0.486\nsamples = 1077\nvalue = [630, 447]\nclass = Benign"] ;
25 -> 26 ;
27 [label="returnstatement <= 0.5\ngini = 0.486\nsamples = 1075\nvalue = [628, 447]\nclass = Benign"] ;
26 -> 27 ;
28 [label="assignmentoperator <= 0.5\ngini = 0.486\nsamples = 1073\nvalue = [626, 447]\nclass = Benign"] ;
27 -> 28 ;
29 [label="gini = 0.486\nsamples = 1072\nvalue = [625, 447]\nclass = Benign"] ;
28 -> 29 ;
30 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
28 -> 30 ;
31 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
27 -> 31 ;
32 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
26 -> 32 ;
33 [label="gini = 0.0\nsamples = 16\nvalue = [16, 0]\nclass = Benign"] ;
25 -> 33 ;
34 [label="gini = 0.0\nsamples = 101\nvalue = [101, 0]\nclass = Benign"] ;
20 -> 34 ;
35 [label="gini = 0.0\nsamples = 326\nvalue = [326, 0]\nclass = Benign"] ;
19 -> 35 ;
36 [label="identifiername <= 0.5\ngini = 0.451\nsamples = 1548\nvalue = [531, 1017]\nclass = Malicious"] ;
16 -> 36 ;
37 [label="argument_stuff <= 0.5\ngini = 0.091\nsamples = 833\nvalue = [40, 793]\nclass = Malicious"] ;
36 -> 37 ;
38 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
37 -> 38 ;
39 [label="withstatement <= 0.5\ngini = 0.081\nsamples = 828\nvalue = [35, 793]\nclass = Malicious"] ;
37 -> 39 ;
40 [label="litereral_stuff <= 0.5\ngini = 0.077\nsamples = 826\nvalue = [33, 793]\nclass = Malicious"] ;
39 -> 40 ;
41 [label="returnstatement <= 0.5\ngini = 0.075\nsamples = 825\nvalue = [32, 793]\nclass = Malicious"] ;
40 -> 41 ;
42 [label="assignmentoperator <= 0.5\ngini = 0.072\nsamples = 800\nvalue = [30, 770]\nclass = Malicious"] ;
41 -> 42 ;
43 [label="gini = 0.078\nsamples = 736\nvalue = [30, 706]\nclass = Malicious"] ;
42 -> 43 ;
44 [label="gini = 0.0\nsamples = 64\nvalue = [0, 64]\nclass = Malicious"] ;
42 -> 44 ;
45 [label="gini = 0.147\nsamples = 25\nvalue = [2, 23]\nclass = Malicious"] ;
41 -> 45 ;
46 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
40 -> 46 ;
47 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
39 -> 47 ;
48 [label="returnstatement <= 0.5\ngini = 0.43\nsamples = 715\nvalue = [491, 224]\nclass = Benign"] ;
36 -> 48 ;
49 [label="element_stuff <= 0.5\ngini = 0.013\nsamples = 466\nvalue = [463, 3]\nclass = Benign"] ;
48 -> 49 ;
50 [label="ifstatement <= 0.5\ngini = 0.009\nsamples = 454\nvalue = [452, 2]\nclass = Benign"] ;
49 -> 50 ;
51 [label="assignmentoperator <= 0.5\ngini = 0.006\nsamples = 355\nvalue = [354, 1]\nclass = Benign"] ;
50 -> 51 ;
52 [label="argument_stuff <= 0.5\ngini = 0.008\nsamples = 263\nvalue = [262, 1]\nclass = Benign"] ;
51 -> 52 ;
53 [label="gini = 0.0\nsamples = 69\nvalue = [69, 0]\nclass = Benign"] ;
52 -> 53 ;
54 [label="formalparameterlist <= 0.5\ngini = 0.01\nsamples = 194\nvalue = [193, 1]\nclass = Benign"] ;
52 -> 54 ;
55 [label="litereral_stuff <= 0.5\ngini = 0.011\nsamples = 178\nvalue = [177, 1]\nclass = Benign"] ;
54 -> 55 ;
56 [label="literal <= 0.5\ngini = 0.012\nsamples = 168\nvalue = [167, 1]\nclass = Benign"] ;
55 -> 56 ;
57 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
56 -> 57 ;
58 [label="catchproduction <= 0.5\ngini = 0.012\nsamples = 165\nvalue = [164, 1]\nclass = Benign"] ;
56 -> 58 ;
59 [label="gini = 0.012\nsamples = 163\nvalue = [162, 1]\nclass = Benign"] ;
58 -> 59 ;
60 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
58 -> 60 ;
61 [label="gini = 0.0\nsamples = 10\nvalue = [10, 0]\nclass = Benign"] ;
55 -> 61 ;
62 [label="gini = 0.0\nsamples = 16\nvalue = [16, 0]\nclass = Benign"] ;
54 -> 62 ;
63 [label="gini = 0.0\nsamples = 92\nvalue = [92, 0]\nclass = Benign"] ;
51 -> 63 ;
64 [label="formalParameterArg_stuff <= 0.5\ngini = 0.02\nsamples = 99\nvalue = [98, 1]\nclass = Benign"] ;
50 -> 64 ;
65 [label="litereral_stuff <= 0.5\ngini = 0.023\nsamples = 85\nvalue = [84, 1]\nclass = Benign"] ;
64 -> 65 ;
66 [label="assignmentoperator <= 0.5\ngini = 0.024\nsamples = 82\nvalue = [81, 1]\nclass = Benign"] ;
65 -> 66 ;
67 [label="argument_stuff <= 0.5\ngini = 0.025\nsamples = 79\nvalue = [78, 1]\nclass = Benign"] ;
66 -> 67 ;
68 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
67 -> 68 ;
69 [label="gini = 0.025\nsamples = 78\nvalue = [77, 1]\nclass = Benign"] ;
67 -> 69 ;
70 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
66 -> 70 ;
71 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
65 -> 71 ;
72 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
64 -> 72 ;
73 [label="ifstatement <= 0.5\ngini = 0.153\nsamples = 12\nvalue = [11, 1]\nclass = Benign"] ;
49 -> 73 ;
74 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
73 -> 74 ;
75 [label="formalparameterlist <= 0.5\ngini = 0.32\nsamples = 5\nvalue = [4, 1]\nclass = Benign"] ;
73 -> 75 ;
76 [label="gini = 0.444\nsamples = 3\nvalue = [2, 1]\nclass = Benign"] ;
75 -> 76 ;
77 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
75 -> 77 ;
78 [label="ifstatement <= 0.5\ngini = 0.2\nsamples = 249\nvalue = [28, 221]\nclass = Malicious"] ;
48 -> 78 ;
79 [label="litereral_stuff <= 0.5\ngini = 0.139\nsamples = 239\nvalue = [18, 221]\nclass = Malicious"] ;
78 -> 79 ;
80 [label="formalParameterArg_stuff <= 0.5\ngini = 0.105\nsamples = 234\nvalue = [13, 221]\nclass = Malicious"] ;
79 -> 80 ;
81 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
80 -> 81 ;
82 [label="trystatement <= 0.5\ngini = 0.067\nsamples = 229\nvalue = [8, 221]\nclass = Malicious"] ;
80 -> 82 ;
83 [label="gini = 0.06\nsamples = 228\nvalue = [7, 221]\nclass = Malicious"] ;
82 -> 83 ;
84 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
82 -> 84 ;
85 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
79 -> 85 ;
86 [label="gini = 0.0\nsamples = 10\nvalue = [10, 0]\nclass = Benign"] ;
78 -> 86 ;
87 [label="expressionstatement <= 0.5\ngini = 0.262\nsamples = 9113\nvalue = [1415, 7698]\nclass = Malicious"] ;
1 -> 87 ;
88 [label="gini = 0.0\nsamples = 248\nvalue = [248, 0]\nclass = Benign"] ;
87 -> 88 ;
89 [label="element_stuff <= 0.5\ngini = 0.229\nsamples = 8865\nvalue = [1167, 7698]\nclass = Malicious"] ;
87 -> 89 ;
90 [label="litereral_stuff <= 0.5\ngini = 0.32\nsamples = 4937\nvalue = [989, 3948]\nclass = Malicious"] ;
89 -> 90 ;
91 [label="returnstatement <= 0.5\ngini = 0.286\nsamples = 4762\nvalue = [822, 3940]\nclass = Malicious"] ;
90 -> 91 ;
92 [label="argument_stuff <= 0.5\ngini = 0.41\nsamples = 2416\nvalue = [695, 1721]\nclass = Malicious"] ;
91 -> 92 ;
93 [label="gini = 0.0\nsamples = 126\nvalue = [126, 0]\nclass = Benign"] ;
92 -> 93 ;
94 [label="formalParameterArg_stuff <= 0.5\ngini = 0.373\nsamples = 2290\nvalue = [569, 1721]\nclass = Malicious"] ;
92 -> 94 ;
95 [label="identifiername <= 0.5\ngini = 0.348\nsamples = 2202\nvalue = [493, 1709]\nclass = Malicious"] ;
94 -> 95 ;
96 [label="varmodifier <= 0.5\ngini = 0.158\nsamples = 658\nvalue = [57, 601]\nclass = Malicious"] ;
95 -> 96 ;
97 [label="ifstatement <= 0.5\ngini = 0.293\nsamples = 168\nvalue = [30, 138]\nclass = Malicious"] ;
96 -> 97 ;
98 [label="gini = 0.0\nsamples = 30\nvalue = [30, 0]\nclass = Benign"] ;
97 -> 98 ;
99 [label="gini = 0.0\nsamples = 138\nvalue = [0, 138]\nclass = Malicious"] ;
97 -> 99 ;
100 [label="trystatement <= 0.5\ngini = 0.104\nsamples = 490\nvalue = [27, 463]\nclass = Malicious"] ;
96 -> 100 ;
101 [label="ifstatement <= 0.5\ngini = 0.112\nsamples = 453\nvalue = [27, 426]\nclass = Malicious"] ;
100 -> 101 ;
102 [label="assignmentoperator <= 0.5\ngini = 0.108\nsamples = 452\nvalue = [26, 426]\nclass = Malicious"] ;
101 -> 102 ;
103 [label="gini = 0.109\nsamples = 451\nvalue = [26, 425]\nclass = Malicious"] ;
102 -> 103 ;
104 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
102 -> 104 ;
105 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
101 -> 105 ;
106 [label="gini = 0.0\nsamples = 37\nvalue = [0, 37]\nclass = Malicious"] ;
100 -> 106 ;
107 [label="catchproduction <= 0.5\ngini = 0.405\nsamples = 1544\nvalue = [436, 1108]\nclass = Malicious"] ;
95 -> 107 ;
108 [label="do_for_while_statement <= 0.5\ngini = 0.424\nsamples = 1407\nvalue = [429, 978]\nclass = Malicious"] ;
107 -> 108 ;
109 [label="variable_stuff <= 0.5\ngini = 0.397\nsamples = 1321\nvalue = [361, 960]\nclass = Malicious"] ;
108 -> 109 ;
110 [label="ifstatement <= 0.5\ngini = 0.452\nsamples = 631\nvalue = [218, 413]\nclass = Malicious"] ;
109 -> 110 ;
111 [label="gini = 0.49\nsamples = 283\nvalue = [162, 121]\nclass = Benign"] ;
110 -> 111 ;
112 [label="assignmentoperator <= 0.5\ngini = 0.27\nsamples = 348\nvalue = [56, 292]\nclass = Malicious"] ;
110 -> 112 ;
113 [label="gini = 0.267\nsamples = 347\nvalue = [55, 292]\nclass = Malicious"] ;
112 -> 113 ;
114 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
112 -> 114 ;
115 [label="assignmentoperator <= 0.5\ngini = 0.329\nsamples = 690\nvalue = [143, 547]\nclass = Malicious"] ;
109 -> 115 ;
116 [label="ifstatement <= 0.5\ngini = 0.321\nsamples = 682\nvalue = [137, 545]\nclass = Malicious"] ;
115 -> 116 ;
117 [label="gini = 0.287\nsamples = 455\nvalue = [79, 376]\nclass = Malicious"] ;
116 -> 117 ;
118 [label="switchstatement <= 0.5\ngini = 0.38\nsamples = 227\nvalue = [58, 169]\nclass = Malicious"] ;
116 -> 118 ;
119 [label="gini = 0.377\nsamples = 226\nvalue = [57, 169]\nclass = Malicious"] ;
118 -> 119 ;
120 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
118 -> 120 ;
121 [label="ifstatement <= 0.5\ngini = 0.375\nsamples = 8\nvalue = [6, 2]\nclass = Benign"] ;
115 -> 121 ;
122 [label="gini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
121 -> 122 ;
123 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
121 -> 123 ;
124 [label="assignmentoperator <= 0.5\ngini = 0.331\nsamples = 86\nvalue = [68, 18]\nclass = Benign"] ;
108 -> 124 ;
125 [label="gini = 0.0\nsamples = 68\nvalue = [68, 0]\nclass = Benign"] ;
124 -> 125 ;
126 [label="gini = 0.0\nsamples = 18\nvalue = [0, 18]\nclass = Malicious"] ;
124 -> 126 ;
127 [label="varmodifier <= 0.5\ngini = 0.097\nsamples = 137\nvalue = [7, 130]\nclass = Malicious"] ;
107 -> 127 ;
128 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
127 -> 128 ;
129 [label="do_for_while_statement <= 0.5\ngini = 0.058\nsamples = 134\nvalue = [4, 130]\nclass = Malicious"] ;
127 -> 129 ;
130 [label="ifstatement <= 0.5\ngini = 0.245\nsamples = 14\nvalue = [2, 12]\nclass = Malicious"] ;
129 -> 130 ;
131 [label="gini = 0.5\nsamples = 4\nvalue = [2, 2]\nclass = Benign"] ;
130 -> 131 ;
132 [label="gini = 0.0\nsamples = 10\nvalue = [0, 10]\nclass = Malicious"] ;
130 -> 132 ;
133 [label="ifstatement <= 0.5\ngini = 0.033\nsamples = 120\nvalue = [2, 118]\nclass = Malicious"] ;
129 -> 133 ;
134 [label="gini = 0.0\nsamples = 102\nvalue = [0, 102]\nclass = Malicious"] ;
133 -> 134 ;
135 [label="assignmentoperator <= 0.5\ngini = 0.198\nsamples = 18\nvalue = [2, 16]\nclass = Malicious"] ;
133 -> 135 ;
136 [label="gini = 0.0\nsamples = 16\nvalue = [0, 16]\nclass = Malicious"] ;
135 -> 136 ;
137 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
135 -> 137 ;
138 [label="ifstatement <= 0.5\ngini = 0.236\nsamples = 88\nvalue = [76, 12]\nclass = Benign"] ;
94 -> 138 ;
139 [label="variable_stuff <= 0.5\ngini = 0.48\nsamples = 30\nvalue = [18, 12]\nclass = Benign"] ;
138 -> 139 ;
140 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
139 -> 140 ;
141 [label="do_for_while_statement <= 0.5\ngini = 0.499\nsamples = 23\nvalue = [11, 12]\nclass = Malicious"] ;
139 -> 141 ;
142 [label="gini = 0.496\nsamples = 22\nvalue = [10, 12]\nclass = Malicious"] ;
141 -> 142 ;
143 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
141 -> 143 ;
144 [label="gini = 0.0\nsamples = 58\nvalue = [58, 0]\nclass = Benign"] ;
138 -> 144 ;
145 [label="identifiername <= 0.5\ngini = 0.102\nsamples = 2346\nvalue = [127, 2219]\nclass = Malicious"] ;
91 -> 145 ;
146 [label="gini = 0.0\nsamples = 750\nvalue = [0, 750]\nclass = Malicious"] ;
145 -> 146 ;
147 [label="do_for_while_statement <= 0.5\ngini = 0.146\nsamples = 1596\nvalue = [127, 1469]\nclass = Malicious"] ;
145 -> 147 ;
148 [label="formalparameterlist <= 0.5\ngini = 0.135\nsamples = 1583\nvalue = [115, 1468]\nclass = Malicious"] ;
147 -> 148 ;
149 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
148 -> 149 ;
150 [label="switchstatement <= 0.5\ngini = 0.13\nsamples = 1578\nvalue = [110, 1468]\nclass = Malicious"] ;
148 -> 150 ;
151 [label="variable_stuff <= 0.5\ngini = 0.129\nsamples = 1577\nvalue = [109, 1468]\nclass = Malicious"] ;
150 -> 151 ;
152 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
151 -> 152 ;
153 [label="assignmentoperator <= 0.5\ngini = 0.128\nsamples = 1576\nvalue = [108, 1468]\nclass = Malicious"] ;
151 -> 153 ;
154 [label="ifstatement <= 0.5\ngini = 0.127\nsamples = 1575\nvalue = [107, 1468]\nclass = Malicious"] ;
153 -> 154 ;
155 [label="gini = 0.0\nsamples = 10\nvalue = [0, 10]\nclass = Malicious"] ;
154 -> 155 ;
156 [label="catchproduction <= 0.5\ngini = 0.127\nsamples = 1565\nvalue = [107, 1458]\nclass = Malicious"] ;
154 -> 156 ;
157 [label="gini = 0.127\nsamples = 1564\nvalue = [107, 1457]\nclass = Malicious"] ;
156 -> 157 ;
158 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
156 -> 158 ;
159 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
153 -> 159 ;
160 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
150 -> 160 ;
161 [label="catchproduction <= 0.5\ngini = 0.142\nsamples = 13\nvalue = [12, 1]\nclass = Benign"] ;
147 -> 161 ;
162 [label="gini = 0.0\nsamples = 12\nvalue = [12, 0]\nclass = Benign"] ;
161 -> 162 ;
163 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
161 -> 163 ;
164 [label="trystatement <= 0.5\ngini = 0.087\nsamples = 175\nvalue = [167, 8]\nclass = Benign"] ;
90 -> 164 ;
165 [label="assignmentoperator <= 0.5\ngini = 0.013\nsamples = 154\nvalue = [153, 1]\nclass = Benign"] ;
164 -> 165 ;
166 [label="gini = 0.0\nsamples = 152\nvalue = [152, 0]\nclass = Benign"] ;
165 -> 166 ;
167 [label="formalparameterlist <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
165 -> 167 ;
168 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
167 -> 168 ;
169 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
167 -> 169 ;
170 [label="returnstatement <= 0.5\ngini = 0.444\nsamples = 21\nvalue = [14, 7]\nclass = Benign"] ;
164 -> 170 ;
171 [label="gini = 0.0\nsamples = 7\nvalue = [0, 7]\nclass = Malicious"] ;
170 -> 171 ;
172 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
170 -> 172 ;
173 [label="argument_stuff <= 0.5\ngini = 0.087\nsamples = 3928\nvalue = [178, 3750]\nclass = Malicious"] ;
89 -> 173 ;
174 [label="gini = 0.0\nsamples = 80\nvalue = [80, 0]\nclass = Benign"] ;
173 -> 174 ;
175 [label="variable_stuff <= 0.5\ngini = 0.05\nsamples = 3848\nvalue = [98, 3750]\nclass = Malicious"] ;
173 -> 175 ;
176 [label="identifiername <= 0.5\ngini = 0.159\nsamples = 23\nvalue = [21, 2]\nclass = Benign"] ;
175 -> 176 ;
177 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
176 -> 177 ;
178 [label="gini = 0.0\nsamples = 21\nvalue = [21, 0]\nclass = Benign"] ;
176 -> 178 ;
179 [label="do_for_while_statement <= 0.5\ngini = 0.039\nsamples = 3825\nvalue = [77, 3748]\nclass = Malicious"] ;
175 -> 179 ;
180 [label="ifstatement <= 0.5\ngini = 0.078\nsamples = 1765\nvalue = [72, 1693]\nclass = Malicious"] ;
179 -> 180 ;
181 [label="identifiername <= 0.5\ngini = 0.367\nsamples = 62\nvalue = [47, 15]\nclass = Benign"] ;
180 -> 181 ;
182 [label="gini = 0.0\nsamples = 13\nvalue = [0, 13]\nclass = Malicious"] ;
181 -> 182 ;
183 [label="formalParameterArg_stuff <= 0.5\ngini = 0.078\nsamples = 49\nvalue = [47, 2]\nclass = Benign"] ;
181 -> 183 ;
184 [label="gini = 0.0\nsamples = 47\nvalue = [47, 0]\nclass = Benign"] ;
183 -> 184 ;
185 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
183 -> 185 ;
186 [label="identifiername <= 0.5\ngini = 0.029\nsamples = 1703\nvalue = [25, 1678]\nclass = Malicious"] ;
180 -> 186 ;
187 [label="gini = 0.0\nsamples = 844\nvalue = [0, 844]\nclass = Malicious"] ;
186 -> 187 ;
188 [label="formalParameterArg_stuff <= 0.5\ngini = 0.057\nsamples = 859\nvalue = [25, 834]\nclass = Malicious"] ;
186 -> 188 ;
189 [label="assignmentoperator <= 0.5\ngini = 0.05\nsamples = 855\nvalue = [22, 833]\nclass = Malicious"] ;
188 -> 189 ;
190 [label="returnstatement <= 0.5\ngini = 0.059\nsamples = 725\nvalue = [22, 703]\nclass = Malicious"] ;
189 -> 190 ;
191 [label="catchproduction <= 0.5\ngini = 0.054\nsamples = 723\nvalue = [20, 703]\nclass = Malicious"] ;
190 -> 191 ;
192 [label="continue_break_statement <= 0.5\ngini = 0.055\nsamples = 667\nvalue = [19, 648]\nclass = Malicious"] ;
191 -> 192 ;
193 [label="gini = 0.056\nsamples = 662\nvalue = [19, 643]\nclass = Malicious"] ;
192 -> 193 ;
194 [label="gini = 0.0\nsamples = 5\nvalue = [0, 5]\nclass = Malicious"] ;
192 -> 194 ;
195 [label="gini = 0.035\nsamples = 56\nvalue = [1, 55]\nclass = Malicious"] ;
191 -> 195 ;
196 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
190 -> 196 ;
197 [label="gini = 0.0\nsamples = 130\nvalue = [0, 130]\nclass = Malicious"] ;
189 -> 197 ;
198 [label="returnstatement <= 0.5\ngini = 0.375\nsamples = 4\nvalue = [3, 1]\nclass = Benign"] ;
188 -> 198 ;
199 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
198 -> 199 ;
200 [label="gini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
198 -> 200 ;
201 [label="formalparameterlist <= 0.5\ngini = 0.005\nsamples = 2060\nvalue = [5, 2055]\nclass = Malicious"] ;
179 -> 201 ;
202 [label="assignmentoperator <= 0.5\ngini = 0.004\nsamples = 2058\nvalue = [4, 2054]\nclass = Malicious"] ;
201 -> 202 ;
203 [label="ifstatement <= 0.5\ngini = 0.006\nsamples = 1235\nvalue = [4, 1231]\nclass = Malicious"] ;
202 -> 203 ;
204 [label="gini = 0.0\nsamples = 792\nvalue = [0, 792]\nclass = Malicious"] ;
203 -> 204 ;
205 [label="catchproduction <= 0.5\ngini = 0.018\nsamples = 443\nvalue = [4, 439]\nclass = Malicious"] ;
203 -> 205 ;
206 [label="gini = 0.027\nsamples = 290\nvalue = [4, 286]\nclass = Malicious"] ;
205 -> 206 ;
207 [label="gini = 0.0\nsamples = 153\nvalue = [0, 153]\nclass = Malicious"] ;
205 -> 207 ;
208 [label="gini = 0.0\nsamples = 823\nvalue = [0, 823]\nclass = Malicious"] ;
202 -> 208 ;
209 [label="catchproduction <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
201 -> 209 ;
210 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
209 -> 210 ;
211 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
209 -> 211 ;
212 [label="do_for_while_statement <= 0.5\ngini = 0.254\nsamples = 10394\nvalue = [8843, 1551]\nclass = Benign"] ;
0 -> 212 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
213 [label="catchproduction <= 0.5\ngini = 0.001\nsamples = 8612\nvalue = [8609, 3]\nclass = Benign"] ;
212 -> 213 ;
214 [label="gini = 0.0\nsamples = 8521\nvalue = [8521, 0]\nclass = Benign"] ;
213 -> 214 ;
215 [label="ifstatement <= 0.5\ngini = 0.064\nsamples = 91\nvalue = [88, 3]\nclass = Benign"] ;
213 -> 215 ;
216 [label="gini = 0.0\nsamples = 38\nvalue = [38, 0]\nclass = Benign"] ;
215 -> 216 ;
217 [label="variable_stuff <= 0.5\ngini = 0.107\nsamples = 53\nvalue = [50, 3]\nclass = Benign"] ;
215 -> 217 ;
218 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
217 -> 218 ;
219 [label="formalParameterArg_stuff <= 0.5\ngini = 0.142\nsamples = 39\nvalue = [36, 3]\nclass = Benign"] ;
217 -> 219 ;
220 [label="element_stuff <= 0.5\ngini = 0.17\nsamples = 32\nvalue = [29, 3]\nclass = Benign"] ;
219 -> 220 ;
221 [label="numericliteral <= 0.5\ngini = 0.231\nsamples = 15\nvalue = [13, 2]\nclass = Benign"] ;
220 -> 221 ;
222 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
221 -> 222 ;
223 [label="assignmentoperator <= 0.5\ngini = 0.245\nsamples = 14\nvalue = [12, 2]\nclass = Benign"] ;
221 -> 223 ;
224 [label="gini = 0.26\nsamples = 13\nvalue = [11, 2]\nclass = Benign"] ;
223 -> 224 ;
225 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
223 -> 225 ;
226 [label="numericliteral <= 0.5\ngini = 0.111\nsamples = 17\nvalue = [16, 1]\nclass = Benign"] ;
220 -> 226 ;
227 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
226 -> 227 ;
228 [label="gini = 0.133\nsamples = 14\nvalue = [13, 1]\nclass = Benign"] ;
226 -> 228 ;
229 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
219 -> 229 ;
230 [label="identifiername <= 0.5\ngini = 0.228\nsamples = 1782\nvalue = [234, 1548]\nclass = Malicious"] ;
212 -> 230 ;
231 [label="gini = 0.0\nsamples = 1491\nvalue = [0, 1491]\nclass = Malicious"] ;
230 -> 231 ;
232 [label="catchproduction <= 0.5\ngini = 0.315\nsamples = 291\nvalue = [234, 57]\nclass = Benign"] ;
230 -> 232 ;
233 [label="gini = 0.0\nsamples = 212\nvalue = [212, 0]\nclass = Benign"] ;
232 -> 233 ;
234 [label="assignmentoperator <= 0.5\ngini = 0.402\nsamples = 79\nvalue = [22, 57]\nclass = Malicious"] ;
232 -> 234 ;
235 [label="continue_break_statement <= 0.5\ngini = 0.432\nsamples = 19\nvalue = [13, 6]\nclass = Benign"] ;
234 -> 235 ;
236 [label="gini = 0.0\nsamples = 12\nvalue = [12, 0]\nclass = Benign"] ;
235 -> 236 ;
237 [label="formalparameterlist <= 0.5\ngini = 0.245\nsamples = 7\nvalue = [1, 6]\nclass = Malicious"] ;
235 -> 237 ;
238 [label="gini = 0.0\nsamples = 6\nvalue = [0, 6]\nclass = Malicious"] ;
237 -> 238 ;
239 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
237 -> 239 ;
240 [label="returnstatement <= 0.5\ngini = 0.255\nsamples = 60\nvalue = [9, 51]\nclass = Malicious"] ;
234 -> 240 ;
241 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
240 -> 241 ;
242 [label="throwstatement <= 0.5\ngini = 0.212\nsamples = 58\nvalue = [7, 51]\nclass = Malicious"] ;
240 -> 242 ;
243 [label="element_stuff <= 0.5\ngini = 0.188\nsamples = 57\nvalue = [6, 51]\nclass = Malicious"] ;
242 -> 243 ;
244 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
243 -> 244 ;
245 [label="finallyproduction <= 0.5\ngini = 0.163\nsamples = 56\nvalue = [5, 51]\nclass = Malicious"] ;
243 -> 245 ;
246 [label="continue_break_statement <= 0.5\ngini = 0.278\nsamples = 30\nvalue = [5, 25]\nclass = Malicious"] ;
245 -> 246 ;
247 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
246 -> 247 ;
248 [label="switchstatement <= 0.5\ngini = 0.137\nsamples = 27\nvalue = [2, 25]\nclass = Malicious"] ;
246 -> 248 ;
249 [label="gini = 0.074\nsamples = 26\nvalue = [1, 25]\nclass = Malicious"] ;
248 -> 249 ;
250 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
248 -> 250 ;
251 [label="gini = 0.0\nsamples = 26\nvalue = [0, 26]\nclass = Malicious"] ;
245 -> 251 ;
252 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
242 -> 252 ;
}
