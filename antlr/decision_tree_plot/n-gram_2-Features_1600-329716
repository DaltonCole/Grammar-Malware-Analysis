digraph Tree {
node [shape=box] ;
0 [label="litereral_stuff-property_rules <= 0.5\ngini = 0.5\nsamples = 27000\nvalue = [13498, 13502]\nclass = Malicious"] ;
1 [label="identifiername-identifiername <= 0.5\ngini = 0.405\nsamples = 16633\nvalue = [4694, 11939]\nclass = Malicious"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="expression_statement-expressionsequence <= 0.5\ngini = 0.351\nsamples = 15266\nvalue = [3470, 11796]\nclass = Malicious"] ;
1 -> 2 ;
3 [label="sourceElement_stuff-expressionstatement <= 0.5\ngini = 0.471\nsamples = 8052\nvalue = [3061, 4991]\nclass = Malicious"] ;
2 -> 3 ;
4 [label="argument_stuff-expression_statement <= 0.5\ngini = 0.407\nsamples = 5954\nvalue = [1695, 4259]\nclass = Malicious"] ;
3 -> 4 ;
5 [label="variable_stuff-variable_stuff <= 0.5\ngini = 0.49\nsamples = 3292\nvalue = [1413, 1879]\nclass = Malicious"] ;
4 -> 5 ;
6 [label="expressionsequence-expression_statement <= 0.5\ngini = 0.391\nsamples = 2561\nvalue = [682, 1879]\nclass = Malicious"] ;
5 -> 6 ;
7 [label="gini = 0.388\nsamples = 2551\nvalue = [672, 1879]\nclass = Malicious"] ;
6 -> 7 ;
8 [label="gini = 0.0\nsamples = 10\nvalue = [10, 0]\nclass = Benign"] ;
6 -> 8 ;
9 [label="gini = 0.0\nsamples = 731\nvalue = [731, 0]\nclass = Benign"] ;
5 -> 9 ;
10 [label="expression_statement-withstatement <= 0.5\ngini = 0.189\nsamples = 2662\nvalue = [282, 2380]\nclass = Malicious"] ;
4 -> 10 ;
11 [label="expression_statement-identifiername <= 0.5\ngini = 0.128\nsamples = 2555\nvalue = [175, 2380]\nclass = Malicious"] ;
10 -> 11 ;
12 [label="numericliteral-expression_statement <= 0.5\ngini = 0.038\nsamples = 2288\nvalue = [44, 2244]\nclass = Malicious"] ;
11 -> 12 ;
13 [label="sourceElement_stuff-trystatement <= 0.5\ngini = 0.035\nsamples = 2284\nvalue = [41, 2243]\nclass = Malicious"] ;
12 -> 13 ;
14 [label="expression_statement-variable_stuff <= 0.5\ngini = 0.034\nsamples = 2283\nvalue = [40, 2243]\nclass = Malicious"] ;
13 -> 14 ;
15 [label="expression_statement-sourceElement_stuff <= 0.5\ngini = 0.028\nsamples = 2230\nvalue = [32, 2198]\nclass = Malicious"] ;
14 -> 15 ;
16 [label="literal-variable_stuff <= 0.5\ngini = 0.026\nsamples = 2217\nvalue = [29, 2188]\nclass = Malicious"] ;
15 -> 16 ;
17 [label="literal-expressionstatement <= 0.5\ngini = 0.061\nsamples = 607\nvalue = [19, 588]\nclass = Malicious"] ;
16 -> 17 ;
18 [label="literal-expression_statement <= 0.5\ngini = 0.007\nsamples = 589\nvalue = [2, 587]\nclass = Malicious"] ;
17 -> 18 ;
19 [label="gini = 0.0\nsamples = 587\nvalue = [0, 587]\nclass = Malicious"] ;
18 -> 19 ;
20 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
18 -> 20 ;
21 [label="argument_stuff-identifiername <= 0.5\ngini = 0.105\nsamples = 18\nvalue = [17, 1]\nclass = Benign"] ;
17 -> 21 ;
22 [label="gini = 0.0\nsamples = 17\nvalue = [17, 0]\nclass = Benign"] ;
21 -> 22 ;
23 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
21 -> 23 ;
24 [label="literal-expression_statement <= 0.5\ngini = 0.012\nsamples = 1610\nvalue = [10, 1600]\nclass = Malicious"] ;
16 -> 24 ;
25 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.035\nsamples = 507\nvalue = [9, 498]\nclass = Malicious"] ;
24 -> 25 ;
26 [label="gini = 0.0\nsamples = 492\nvalue = [0, 492]\nclass = Malicious"] ;
25 -> 26 ;
27 [label="expression_statement-assignmentoperator <= 0.5\ngini = 0.48\nsamples = 15\nvalue = [9, 6]\nclass = Benign"] ;
25 -> 27 ;
28 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
27 -> 28 ;
29 [label="gini = 0.0\nsamples = 6\nvalue = [0, 6]\nclass = Malicious"] ;
27 -> 29 ;
30 [label="expressionstatement-expressionsequence <= 0.5\ngini = 0.002\nsamples = 1103\nvalue = [1, 1102]\nclass = Malicious"] ;
24 -> 30 ;
31 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
30 -> 31 ;
32 [label="gini = 0.0\nsamples = 1102\nvalue = [0, 1102]\nclass = Malicious"] ;
30 -> 32 ;
33 [label="literal-expression_statement <= 0.5\ngini = 0.355\nsamples = 13\nvalue = [3, 10]\nclass = Malicious"] ;
15 -> 33 ;
34 [label="gini = 0.0\nsamples = 10\nvalue = [0, 10]\nclass = Malicious"] ;
33 -> 34 ;
35 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
33 -> 35 ;
36 [label="expressionstatement-expressionsequence <= 0.5\ngini = 0.256\nsamples = 53\nvalue = [8, 45]\nclass = Malicious"] ;
14 -> 36 ;
37 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
36 -> 37 ;
38 [label="gini = 0.0\nsamples = 45\nvalue = [0, 45]\nclass = Malicious"] ;
36 -> 38 ;
39 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
13 -> 39 ;
40 [label="numericliteral-variable_stuff <= 0.5\ngini = 0.375\nsamples = 4\nvalue = [3, 1]\nclass = Benign"] ;
12 -> 40 ;
41 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
40 -> 41 ;
42 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
40 -> 42 ;
43 [label="expression_statement-expressionstatement <= 0.5\ngini = 0.5\nsamples = 267\nvalue = [131, 136]\nclass = Malicious"] ;
11 -> 43 ;
44 [label="numericliteral-variable_stuff <= 0.5\ngini = 0.147\nsamples = 125\nvalue = [115, 10]\nclass = Benign"] ;
43 -> 44 ;
45 [label="gini = 0.0\nsamples = 111\nvalue = [111, 0]\nclass = Benign"] ;
44 -> 45 ;
46 [label="literal-expressionstatement <= 0.5\ngini = 0.408\nsamples = 14\nvalue = [4, 10]\nclass = Malicious"] ;
44 -> 46 ;
47 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
46 -> 47 ;
48 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.165\nsamples = 11\nvalue = [1, 10]\nclass = Malicious"] ;
46 -> 48 ;
49 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
48 -> 49 ;
50 [label="gini = 0.0\nsamples = 10\nvalue = [0, 10]\nclass = Malicious"] ;
48 -> 50 ;
51 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.2\nsamples = 142\nvalue = [16, 126]\nclass = Malicious"] ;
43 -> 51 ;
52 [label="gini = 0.0\nsamples = 12\nvalue = [12, 0]\nclass = Benign"] ;
51 -> 52 ;
53 [label="sourceElement_stuff-ifstatement <= 0.5\ngini = 0.06\nsamples = 130\nvalue = [4, 126]\nclass = Malicious"] ;
51 -> 53 ;
54 [label="identifiername-expression_statement <= 0.5\ngini = 0.016\nsamples = 127\nvalue = [1, 126]\nclass = Malicious"] ;
53 -> 54 ;
55 [label="gini = 0.0\nsamples = 126\nvalue = [0, 126]\nclass = Malicious"] ;
54 -> 55 ;
56 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
54 -> 56 ;
57 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
53 -> 57 ;
58 [label="gini = 0.0\nsamples = 107\nvalue = [107, 0]\nclass = Benign"] ;
10 -> 58 ;
59 [label="argument_stuff-identifiername <= 0.5\ngini = 0.454\nsamples = 2098\nvalue = [1366, 732]\nclass = Benign"] ;
3 -> 59 ;
60 [label="numericliteral-variable_stuff <= 0.5\ngini = 0.333\nsamples = 1700\nvalue = [1341, 359]\nclass = Benign"] ;
59 -> 60 ;
61 [label="numericliteral-expressionstatement <= 0.5\ngini = 0.158\nsamples = 1422\nvalue = [1299, 123]\nclass = Benign"] ;
60 -> 61 ;
62 [label="expression_statement-assignmentoperator <= 0.5\ngini = 0.02\nsamples = 1192\nvalue = [1180, 12]\nclass = Benign"] ;
61 -> 62 ;
63 [label="gini = 0.0\nsamples = 1177\nvalue = [1177, 0]\nclass = Benign"] ;
62 -> 63 ;
64 [label="literal-returnstatement <= 0.5\ngini = 0.32\nsamples = 15\nvalue = [3, 12]\nclass = Malicious"] ;
62 -> 64 ;
65 [label="literal-identifiername <= 0.5\ngini = 0.142\nsamples = 13\nvalue = [1, 12]\nclass = Malicious"] ;
64 -> 65 ;
66 [label="gini = 0.0\nsamples = 12\nvalue = [0, 12]\nclass = Malicious"] ;
65 -> 66 ;
67 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
65 -> 67 ;
68 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
64 -> 68 ;
69 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.499\nsamples = 230\nvalue = [119, 111]\nclass = Benign"] ;
61 -> 69 ;
70 [label="gini = 0.0\nsamples = 64\nvalue = [64, 0]\nclass = Benign"] ;
69 -> 70 ;
71 [label="literal-expressionstatement <= 0.5\ngini = 0.443\nsamples = 166\nvalue = [55, 111]\nclass = Malicious"] ;
69 -> 71 ;
72 [label="gini = 0.0\nsamples = 41\nvalue = [41, 0]\nclass = Benign"] ;
71 -> 72 ;
73 [label="sourceElement_stuff-sourceElement_stuff <= 0.5\ngini = 0.199\nsamples = 125\nvalue = [14, 111]\nclass = Malicious"] ;
71 -> 73 ;
74 [label="gini = 0.0\nsamples = 111\nvalue = [0, 111]\nclass = Malicious"] ;
73 -> 74 ;
75 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
73 -> 75 ;
76 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.257\nsamples = 278\nvalue = [42, 236]\nclass = Malicious"] ;
60 -> 76 ;
77 [label="identifiername-expression_statement <= 0.5\ngini = 0.071\nsamples = 245\nvalue = [9, 236]\nclass = Malicious"] ;
76 -> 77 ;
78 [label="gini = 0.0\nsamples = 236\nvalue = [0, 236]\nclass = Malicious"] ;
77 -> 78 ;
79 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
77 -> 79 ;
80 [label="gini = 0.0\nsamples = 33\nvalue = [33, 0]\nclass = Benign"] ;
76 -> 80 ;
81 [label="expression_statement-sourceElement_stuff <= 0.5\ngini = 0.118\nsamples = 398\nvalue = [25, 373]\nclass = Malicious"] ;
59 -> 81 ;
82 [label="literal-identifiername <= 0.5\ngini = 0.041\nsamples = 381\nvalue = [8, 373]\nclass = Malicious"] ;
81 -> 82 ;
83 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
82 -> 83 ;
84 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.011\nsamples = 375\nvalue = [2, 373]\nclass = Malicious"] ;
82 -> 84 ;
85 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
84 -> 85 ;
86 [label="gini = 0.0\nsamples = 373\nvalue = [0, 373]\nclass = Malicious"] ;
84 -> 86 ;
87 [label="gini = 0.0\nsamples = 17\nvalue = [17, 0]\nclass = Benign"] ;
81 -> 87 ;
88 [label="litereral_stuff-expressionstatement <= 0.5\ngini = 0.107\nsamples = 7214\nvalue = [409, 6805]\nclass = Malicious"] ;
2 -> 88 ;
89 [label="sourceElement_stuff-withstatement <= 0.5\ngini = 0.095\nsamples = 7163\nvalue = [358, 6805]\nclass = Malicious"] ;
88 -> 89 ;
90 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.083\nsamples = 7115\nvalue = [310, 6805]\nclass = Malicious"] ;
89 -> 90 ;
91 [label="literal-returnstatement <= 0.5\ngini = 0.404\nsamples = 700\nvalue = [197, 503]\nclass = Malicious"] ;
90 -> 91 ;
92 [label="literal-expressionsequence <= 0.5\ngini = 0.104\nsamples = 181\nvalue = [171, 10]\nclass = Benign"] ;
91 -> 92 ;
93 [label="gini = 0.0\nsamples = 171\nvalue = [171, 0]\nclass = Benign"] ;
92 -> 93 ;
94 [label="gini = 0.0\nsamples = 10\nvalue = [0, 10]\nclass = Malicious"] ;
92 -> 94 ;
95 [label="argument_stuff-expressionstatement <= 0.5\ngini = 0.095\nsamples = 519\nvalue = [26, 493]\nclass = Malicious"] ;
91 -> 95 ;
96 [label="gini = 0.0\nsamples = 493\nvalue = [0, 493]\nclass = Malicious"] ;
95 -> 96 ;
97 [label="gini = 0.0\nsamples = 26\nvalue = [26, 0]\nclass = Benign"] ;
95 -> 97 ;
98 [label="formalParameterArg_stuff-formalParameterArg_stuff <= 0.5\ngini = 0.035\nsamples = 6415\nvalue = [113, 6302]\nclass = Malicious"] ;
90 -> 98 ;
99 [label="argument_stuff-ifstatement <= 0.5\ngini = 0.026\nsamples = 6366\nvalue = [84, 6282]\nclass = Malicious"] ;
98 -> 99 ;
100 [label="argument_stuff-expression_statement <= 0.5\ngini = 0.021\nsamples = 6350\nvalue = [69, 6281]\nclass = Malicious"] ;
99 -> 100 ;
101 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
100 -> 101 ;
102 [label="numericliteral-identifiername <= 0.5\ngini = 0.02\nsamples = 6344\nvalue = [63, 6281]\nclass = Malicious"] ;
100 -> 102 ;
103 [label="numericliteral-ifstatement <= 0.5\ngini = 0.012\nsamples = 6236\nvalue = [39, 6197]\nclass = Malicious"] ;
102 -> 103 ;
104 [label="litereral_stuff-expressionsequence <= 0.5\ngini = 0.009\nsamples = 6192\nvalue = [29, 6163]\nclass = Malicious"] ;
103 -> 104 ;
105 [label="returnstatement-expressionstatement <= 0.5\ngini = 0.009\nsamples = 6190\nvalue = [27, 6163]\nclass = Malicious"] ;
104 -> 105 ;
106 [label="returnstatement-ifstatement <= 0.5\ngini = 0.008\nsamples = 6188\nvalue = [25, 6163]\nclass = Malicious"] ;
105 -> 106 ;
107 [label="litereral_stuff-identifiername <= 0.5\ngini = 0.008\nsamples = 6187\nvalue = [24, 6163]\nclass = Malicious"] ;
106 -> 107 ;
108 [label="expression_statement-ifstatement <= 0.5\ngini = 0.007\nsamples = 6186\nvalue = [23, 6163]\nclass = Malicious"] ;
107 -> 108 ;
109 [label="expression_statement-sourceElement_stuff <= 0.5\ngini = 0.007\nsamples = 6179\nvalue = [21, 6158]\nclass = Malicious"] ;
108 -> 109 ;
110 [label="identifiername-variable_stuff <= 0.5\ngini = 0.002\nsamples = 5590\nvalue = [6, 5584]\nclass = Malicious"] ;
109 -> 110 ;
111 [label="ifstatement-expressionsequence <= 0.5\ngini = 0.002\nsamples = 5586\nvalue = [5, 5581]\nclass = Malicious"] ;
110 -> 111 ;
112 [label="identifiername-expressionstatement <= 0.5\ngini = 0.01\nsamples = 1035\nvalue = [5, 1030]\nclass = Malicious"] ;
111 -> 112 ;
113 [label="argument_stuff-expressionstatement <= 0.5\ngini = 0.008\nsamples = 1033\nvalue = [4, 1029]\nclass = Malicious"] ;
112 -> 113 ;
114 [label="identifiername-argument_stuff <= 0.5\ngini = 0.004\nsamples = 1022\nvalue = [2, 1020]\nclass = Malicious"] ;
113 -> 114 ;
115 [label="sourceElement_stuff-variable_stuff <= 0.5\ngini = 0.111\nsamples = 17\nvalue = [1, 16]\nclass = Malicious"] ;
114 -> 115 ;
116 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
115 -> 116 ;
117 [label="gini = 0.0\nsamples = 16\nvalue = [0, 16]\nclass = Malicious"] ;
115 -> 117 ;
118 [label="identifiername-expression_statement <= 0.5\ngini = 0.002\nsamples = 1005\nvalue = [1, 1004]\nclass = Malicious"] ;
114 -> 118 ;
119 [label="gini = 0.0\nsamples = 906\nvalue = [0, 906]\nclass = Malicious"] ;
118 -> 119 ;
120 [label="assignmentoperator-expression_statement <= 0.5\ngini = 0.02\nsamples = 99\nvalue = [1, 98]\nclass = Malicious"] ;
118 -> 120 ;
121 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
120 -> 121 ;
122 [label="gini = 0.0\nsamples = 98\nvalue = [0, 98]\nclass = Malicious"] ;
120 -> 122 ;
123 [label="identifiername-argument_stuff <= 0.5\ngini = 0.298\nsamples = 11\nvalue = [2, 9]\nclass = Malicious"] ;
113 -> 123 ;
124 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
123 -> 124 ;
125 [label="sourceElement_stuff-expressionstatement <= 0.5\ngini = 0.18\nsamples = 10\nvalue = [1, 9]\nclass = Malicious"] ;
123 -> 125 ;
126 [label="gini = 0.0\nsamples = 9\nvalue = [0, 9]\nclass = Malicious"] ;
125 -> 126 ;
127 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
125 -> 127 ;
128 [label="literal-catchproduction <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
112 -> 128 ;
129 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
128 -> 129 ;
130 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
128 -> 130 ;
131 [label="gini = 0.0\nsamples = 4551\nvalue = [0, 4551]\nclass = Malicious"] ;
111 -> 131 ;
132 [label="argument_stuff-expressionstatement <= 0.5\ngini = 0.375\nsamples = 4\nvalue = [1, 3]\nclass = Malicious"] ;
110 -> 132 ;
133 [label="gini = 0.0\nsamples = 3\nvalue = [0, 3]\nclass = Malicious"] ;
132 -> 133 ;
134 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
132 -> 134 ;
135 [label="literal-variable_stuff <= 0.5\ngini = 0.05\nsamples = 589\nvalue = [15, 574]\nclass = Malicious"] ;
109 -> 135 ;
136 [label="argument_stuff-expressionstatement <= 0.5\ngini = 0.124\nsamples = 15\nvalue = [14, 1]\nclass = Benign"] ;
135 -> 136 ;
137 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
136 -> 137 ;
138 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
136 -> 138 ;
139 [label="literal-ifstatement <= 0.5\ngini = 0.003\nsamples = 574\nvalue = [1, 573]\nclass = Malicious"] ;
135 -> 139 ;
140 [label="gini = 0.0\nsamples = 573\nvalue = [0, 573]\nclass = Malicious"] ;
139 -> 140 ;
141 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
139 -> 141 ;
142 [label="sourceElement_stuff-expressionstatement <= 0.5\ngini = 0.408\nsamples = 7\nvalue = [2, 5]\nclass = Malicious"] ;
108 -> 142 ;
143 [label="gini = 0.0\nsamples = 5\nvalue = [0, 5]\nclass = Malicious"] ;
142 -> 143 ;
144 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
142 -> 144 ;
145 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
107 -> 145 ;
146 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
106 -> 146 ;
147 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
105 -> 147 ;
148 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
104 -> 148 ;
149 [label="expression_statement-sourceElement_stuff <= 0.5\ngini = 0.351\nsamples = 44\nvalue = [10, 34]\nclass = Malicious"] ;
103 -> 149 ;
150 [label="gini = 0.0\nsamples = 34\nvalue = [0, 34]\nclass = Malicious"] ;
149 -> 150 ;
151 [label="gini = 0.0\nsamples = 10\nvalue = [10, 0]\nclass = Benign"] ;
149 -> 151 ;
152 [label="numericliteral-continue_break_statement <= 0.5\ngini = 0.346\nsamples = 108\nvalue = [24, 84]\nclass = Malicious"] ;
102 -> 152 ;
153 [label="gini = 0.0\nsamples = 24\nvalue = [24, 0]\nclass = Benign"] ;
152 -> 153 ;
154 [label="gini = 0.0\nsamples = 84\nvalue = [0, 84]\nclass = Malicious"] ;
152 -> 154 ;
155 [label="expression_statement-sourceElement_stuff <= 0.5\ngini = 0.117\nsamples = 16\nvalue = [15, 1]\nclass = Benign"] ;
99 -> 155 ;
156 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
155 -> 156 ;
157 [label="gini = 0.0\nsamples = 15\nvalue = [15, 0]\nclass = Benign"] ;
155 -> 157 ;
158 [label="numericliteral-expressionstatement <= 0.5\ngini = 0.483\nsamples = 49\nvalue = [29, 20]\nclass = Benign"] ;
98 -> 158 ;
159 [label="literal-expression_statement <= 0.5\ngini = 0.251\nsamples = 34\nvalue = [29, 5]\nclass = Benign"] ;
158 -> 159 ;
160 [label="identifiername-expression_statement <= 0.5\ngini = 0.278\nsamples = 6\nvalue = [1, 5]\nclass = Malicious"] ;
159 -> 160 ;
161 [label="gini = 0.0\nsamples = 5\nvalue = [0, 5]\nclass = Malicious"] ;
160 -> 161 ;
162 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
160 -> 162 ;
163 [label="gini = 0.0\nsamples = 28\nvalue = [28, 0]\nclass = Benign"] ;
159 -> 163 ;
164 [label="gini = 0.0\nsamples = 15\nvalue = [0, 15]\nclass = Malicious"] ;
158 -> 164 ;
165 [label="gini = 0.0\nsamples = 48\nvalue = [48, 0]\nclass = Benign"] ;
89 -> 165 ;
166 [label="gini = 0.0\nsamples = 51\nvalue = [51, 0]\nclass = Benign"] ;
88 -> 166 ;
167 [label="literal-trystatement <= 0.5\ngini = 0.187\nsamples = 1367\nvalue = [1224, 143]\nclass = Benign"] ;
1 -> 167 ;
168 [label="continue_break_statement-catchproduction <= 0.5\ngini = 0.008\nsamples = 1228\nvalue = [1223, 5]\nclass = Benign"] ;
167 -> 168 ;
169 [label="continue_break_statement-variable_stuff <= 0.5\ngini = 0.005\nsamples = 1226\nvalue = [1223, 3]\nclass = Benign"] ;
168 -> 169 ;
170 [label="expression_statement-assignmentoperator <= 0.5\ngini = 0.003\nsamples = 1225\nvalue = [1223, 2]\nclass = Benign"] ;
169 -> 170 ;
171 [label="argument_stuff-variable_stuff <= 0.5\ngini = 0.002\nsamples = 1220\nvalue = [1219, 1]\nclass = Benign"] ;
170 -> 171 ;
172 [label="gini = 0.0\nsamples = 1171\nvalue = [1171, 0]\nclass = Benign"] ;
171 -> 172 ;
173 [label="literal-expression_statement <= 0.5\ngini = 0.04\nsamples = 49\nvalue = [48, 1]\nclass = Benign"] ;
171 -> 173 ;
174 [label="element_stuff-expression_statement <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
173 -> 174 ;
175 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
174 -> 175 ;
176 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
174 -> 176 ;
177 [label="gini = 0.0\nsamples = 47\nvalue = [47, 0]\nclass = Benign"] ;
173 -> 177 ;
178 [label="literal-expressionstatement <= 0.5\ngini = 0.32\nsamples = 5\nvalue = [4, 1]\nclass = Benign"] ;
170 -> 178 ;
179 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
178 -> 179 ;
180 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
178 -> 180 ;
181 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
169 -> 181 ;
182 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
168 -> 182 ;
183 [label="litereral_stuff-ifstatement <= 0.5\ngini = 0.014\nsamples = 139\nvalue = [1, 138]\nclass = Malicious"] ;
167 -> 183 ;
184 [label="gini = 0.0\nsamples = 138\nvalue = [0, 138]\nclass = Malicious"] ;
183 -> 184 ;
185 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
183 -> 185 ;
186 [label="do_for_while_statement-expressionsequence <= 0.5\ngini = 0.256\nsamples = 10367\nvalue = [8804, 1563]\nclass = Benign"] ;
0 -> 186 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
187 [label="finallyproduction-expressionstatement <= 0.5\ngini = 0.007\nsamples = 8797\nvalue = [8768, 29]\nclass = Benign"] ;
186 -> 187 ;
188 [label="expression_statement-catchproduction <= 0.5\ngini = 0.001\nsamples = 8771\nvalue = [8768, 3]\nclass = Benign"] ;
187 -> 188 ;
189 [label="gini = 0.0\nsamples = 8760\nvalue = [8760, 0]\nclass = Benign"] ;
188 -> 189 ;
190 [label="identifiername-identifiername <= 0.5\ngini = 0.397\nsamples = 11\nvalue = [8, 3]\nclass = Benign"] ;
188 -> 190 ;
191 [label="gini = 0.0\nsamples = 3\nvalue = [0, 3]\nclass = Malicious"] ;
190 -> 191 ;
192 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
190 -> 192 ;
193 [label="gini = 0.0\nsamples = 26\nvalue = [0, 26]\nclass = Malicious"] ;
187 -> 193 ;
194 [label="variable_stuff-ifstatement <= 0.5\ngini = 0.045\nsamples = 1570\nvalue = [36, 1534]\nclass = Malicious"] ;
186 -> 194 ;
195 [label="expression_statement-property_rules <= 0.5\ngini = 0.003\nsamples = 1536\nvalue = [2, 1534]\nclass = Malicious"] ;
194 -> 195 ;
196 [label="gini = 0.0\nsamples = 1534\nvalue = [0, 1534]\nclass = Malicious"] ;
195 -> 196 ;
197 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
195 -> 197 ;
198 [label="gini = 0.0\nsamples = 34\nvalue = [34, 0]\nclass = Benign"] ;
194 -> 198 ;
}
