digraph Tree {
node [shape=box] ;
0 [label="litereral_stuff-property_rules-propertyname <= 0.5\ngini = 0.5\nsamples = 27000\nvalue = [13529, 13471]\nclass = Benign"] ;
1 [label="expression_statement-identifiername-identifiername <= 0.5\ngini = 0.403\nsamples = 16530\nvalue = [4620, 11910]\nclass = Malicious"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="expression_statement-expressionsequence-expression_statement <= 0.5\ngini = 0.352\nsamples = 15236\nvalue = [3468, 11768]\nclass = Malicious"] ;
1 -> 2 ;
3 [label="variable_stuff-expression_statement-expression_statement <= 0.5\ngini = 0.473\nsamples = 8018\nvalue = [3073, 4945]\nclass = Malicious"] ;
2 -> 3 ;
4 [label="expression_statement-literal-expression_statement <= 0.5\ngini = 0.499\nsamples = 5316\nvalue = [2774, 2542]\nclass = Benign"] ;
3 -> 4 ;
5 [label="sourceElement_stuff-variable_stuff-varmodifier <= 0.5\ngini = 0.495\nsamples = 4611\nvalue = [2069, 2542]\nclass = Malicious"] ;
4 -> 5 ;
6 [label="sourceElement_stuff-expressionstatement-expressionsequence <= 0.5\ngini = 0.458\nsamples = 3879\nvalue = [1378, 2501]\nclass = Malicious"] ;
5 -> 6 ;
7 [label="expression_statement-expression_statement-identifiername <= 0.5\ngini = 0.395\nsamples = 2737\nvalue = [741, 1996]\nclass = Malicious"] ;
6 -> 7 ;
8 [label="numericliteral-expressionstatement-expressionsequence <= 0.5\ngini = 0.385\nsamples = 2699\nvalue = [703, 1996]\nclass = Malicious"] ;
7 -> 8 ;
9 [label="expressionstatement-expressionsequence-expression_statement <= 0.5\ngini = 0.398\nsamples = 2568\nvalue = [703, 1865]\nclass = Malicious"] ;
8 -> 9 ;
10 [label="gini = 0.395\nsamples = 2559\nvalue = [694, 1865]\nclass = Malicious"] ;
9 -> 10 ;
11 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
9 -> 11 ;
12 [label="gini = 0.0\nsamples = 131\nvalue = [0, 131]\nclass = Malicious"] ;
8 -> 12 ;
13 [label="gini = 0.0\nsamples = 38\nvalue = [38, 0]\nclass = Benign"] ;
7 -> 13 ;
14 [label="variable_stuff-expression_statement-literal <= 0.5\ngini = 0.493\nsamples = 1142\nvalue = [637, 505]\nclass = Benign"] ;
6 -> 14 ;
15 [label="argument_stuff-expression_statement-expression_statement <= 0.5\ngini = 0.426\nsamples = 912\nvalue = [632, 280]\nclass = Benign"] ;
14 -> 15 ;
16 [label="gini = 0.0\nsamples = 583\nvalue = [583, 0]\nclass = Benign"] ;
15 -> 16 ;
17 [label="expression_statement-identifiername-expression_statement <= 0.5\ngini = 0.254\nsamples = 329\nvalue = [49, 280]\nclass = Malicious"] ;
15 -> 17 ;
18 [label="expression_statement-expression_statement-identifiername <= 0.5\ngini = 0.124\nsamples = 300\nvalue = [20, 280]\nclass = Malicious"] ;
17 -> 18 ;
19 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
18 -> 19 ;
20 [label="expression_statement-argument_stuff-expression_statement <= 0.5\ngini = 0.041\nsamples = 286\nvalue = [6, 280]\nclass = Malicious"] ;
18 -> 20 ;
21 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
20 -> 21 ;
22 [label="expression_statement-sourceElement_stuff-sourceElement_stuff <= 0.5\ngini = 0.021\nsamples = 283\nvalue = [3, 280]\nclass = Malicious"] ;
20 -> 22 ;
23 [label="gini = 0.0\nsamples = 280\nvalue = [0, 280]\nclass = Malicious"] ;
22 -> 23 ;
24 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
22 -> 24 ;
25 [label="gini = 0.0\nsamples = 29\nvalue = [29, 0]\nclass = Benign"] ;
17 -> 25 ;
26 [label="identifiername-expression_statement-literal <= 0.5\ngini = 0.043\nsamples = 230\nvalue = [5, 225]\nclass = Malicious"] ;
14 -> 26 ;
27 [label="gini = 0.0\nsamples = 225\nvalue = [0, 225]\nclass = Malicious"] ;
26 -> 27 ;
28 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
26 -> 28 ;
29 [label="expression_statement-expression_statement-assignmentoperator <= 0.5\ngini = 0.106\nsamples = 732\nvalue = [691, 41]\nclass = Benign"] ;
5 -> 29 ;
30 [label="gini = 0.0\nsamples = 691\nvalue = [691, 0]\nclass = Benign"] ;
29 -> 30 ;
31 [label="gini = 0.0\nsamples = 41\nvalue = [0, 41]\nclass = Malicious"] ;
29 -> 31 ;
32 [label="gini = 0.0\nsamples = 705\nvalue = [705, 0]\nclass = Benign"] ;
4 -> 32 ;
33 [label="identifiername-expression_statement-literal <= 0.5\ngini = 0.197\nsamples = 2702\nvalue = [299, 2403]\nclass = Malicious"] ;
3 -> 33 ;
34 [label="argument_stuff-expression_statement-literal <= 0.5\ngini = 0.121\nsamples = 2569\nvalue = [166, 2403]\nclass = Malicious"] ;
33 -> 34 ;
35 [label="expression_statement-variable_stuff-expression_statement <= 0.5\ngini = 0.339\nsamples = 88\nvalue = [69, 19]\nclass = Benign"] ;
34 -> 35 ;
36 [label="gini = 0.0\nsamples = 69\nvalue = [69, 0]\nclass = Benign"] ;
35 -> 36 ;
37 [label="gini = 0.0\nsamples = 19\nvalue = [0, 19]\nclass = Malicious"] ;
35 -> 37 ;
38 [label="expression_statement-sourceElement_stuff-sourceElement_stuff <= 0.5\ngini = 0.075\nsamples = 2481\nvalue = [97, 2384]\nclass = Malicious"] ;
34 -> 38 ;
39 [label="expression_statement-variable_stuff-varmodifier <= 0.5\ngini = 0.043\nsamples = 2437\nvalue = [53, 2384]\nclass = Malicious"] ;
38 -> 39 ;
40 [label="identifiername-variable_stuff-varmodifier <= 0.5\ngini = 0.034\nsamples = 2426\nvalue = [42, 2384]\nclass = Malicious"] ;
39 -> 40 ;
41 [label="literal-expression_statement-expression_statement <= 0.5\ngini = 0.029\nsamples = 2419\nvalue = [35, 2384]\nclass = Malicious"] ;
40 -> 41 ;
42 [label="expression_statement-expression_statement-litereral_stuff <= 0.5\ngini = 0.022\nsamples = 2403\nvalue = [27, 2376]\nclass = Malicious"] ;
41 -> 42 ;
43 [label="argument_stuff-expression_statement-identifiername <= 0.5\ngini = 0.021\nsamples = 2401\nvalue = [25, 2376]\nclass = Malicious"] ;
42 -> 43 ;
44 [label="expression_statement-literal-switchstatement <= 0.5\ngini = 0.019\nsamples = 2399\nvalue = [23, 2376]\nclass = Malicious"] ;
43 -> 44 ;
45 [label="identifiername-expression_statement-expression_statement <= 0.5\ngini = 0.018\nsamples = 2398\nvalue = [22, 2376]\nclass = Malicious"] ;
44 -> 45 ;
46 [label="numericliteral-variable_stuff-expression_statement <= 0.5\ngini = 0.017\nsamples = 2397\nvalue = [21, 2376]\nclass = Malicious"] ;
45 -> 46 ;
47 [label="identifiername-argument_stuff-variable_stuff <= 0.5\ngini = 0.017\nsamples = 2396\nvalue = [20, 2376]\nclass = Malicious"] ;
46 -> 47 ;
48 [label="expression_statement-expression_statement-expression_statement <= 0.5\ngini = 0.016\nsamples = 2395\nvalue = [19, 2376]\nclass = Malicious"] ;
47 -> 48 ;
49 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
48 -> 49 ;
50 [label="trystatement-variable_stuff-varmodifier <= 0.5\ngini = 0.015\nsamples = 2394\nvalue = [18, 2376]\nclass = Malicious"] ;
48 -> 50 ;
51 [label="expression_statement-identifiername-argument_stuff <= 0.5\ngini = 0.014\nsamples = 2393\nvalue = [17, 2376]\nclass = Malicious"] ;
50 -> 51 ;
52 [label="literal-numericliteral-expression_statement <= 0.5\ngini = 0.005\nsamples = 2041\nvalue = [5, 2036]\nclass = Malicious"] ;
51 -> 52 ;
53 [label="variable_stuff-expression_statement-literal <= 0.5\ngini = 0.003\nsamples = 2039\nvalue = [3, 2036]\nclass = Malicious"] ;
52 -> 53 ;
54 [label="gini = 0.0\nsamples = 1145\nvalue = [0, 1145]\nclass = Malicious"] ;
53 -> 54 ;
55 [label="argument_stuff-expression_statement-expression_statement <= 0.5\ngini = 0.007\nsamples = 894\nvalue = [3, 891]\nclass = Malicious"] ;
53 -> 55 ;
56 [label="literal-expression_statement-literal <= 0.5\ngini = 0.012\nsamples = 479\nvalue = [3, 476]\nclass = Malicious"] ;
55 -> 56 ;
57 [label="expressionsequence-expression_statement-literal <= 0.5\ngini = 0.004\nsamples = 477\nvalue = [1, 476]\nclass = Malicious"] ;
56 -> 57 ;
58 [label="gini = 0.014\nsamples = 140\nvalue = [1, 139]\nclass = Malicious"] ;
57 -> 58 ;
59 [label="gini = 0.0\nsamples = 337\nvalue = [0, 337]\nclass = Malicious"] ;
57 -> 59 ;
60 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
56 -> 60 ;
61 [label="gini = 0.0\nsamples = 415\nvalue = [0, 415]\nclass = Malicious"] ;
55 -> 61 ;
62 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
52 -> 62 ;
63 [label="expression_statement-literal-numericliteral <= 0.5\ngini = 0.066\nsamples = 352\nvalue = [12, 340]\nclass = Malicious"] ;
51 -> 63 ;
64 [label="gini = 0.0\nsamples = 12\nvalue = [12, 0]\nclass = Benign"] ;
63 -> 64 ;
65 [label="gini = 0.0\nsamples = 340\nvalue = [0, 340]\nclass = Malicious"] ;
63 -> 65 ;
66 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
50 -> 66 ;
67 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
47 -> 67 ;
68 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
46 -> 68 ;
69 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
45 -> 69 ;
70 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
44 -> 70 ;
71 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
43 -> 71 ;
72 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
42 -> 72 ;
73 [label="literal-numericliteral-variable_stuff <= 0.5\ngini = 0.5\nsamples = 16\nvalue = [8, 8]\nclass = Benign"] ;
41 -> 73 ;
74 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
73 -> 74 ;
75 [label="gini = 0.0\nsamples = 8\nvalue = [0, 8]\nclass = Malicious"] ;
73 -> 75 ;
76 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
40 -> 76 ;
77 [label="gini = 0.0\nsamples = 11\nvalue = [11, 0]\nclass = Benign"] ;
39 -> 77 ;
78 [label="gini = 0.0\nsamples = 44\nvalue = [44, 0]\nclass = Benign"] ;
38 -> 78 ;
79 [label="gini = 0.0\nsamples = 133\nvalue = [133, 0]\nclass = Benign"] ;
33 -> 79 ;
80 [label="literal-expression_statement-expressionstatement <= 0.5\ngini = 0.103\nsamples = 7218\nvalue = [395, 6823]\nclass = Malicious"] ;
2 -> 80 ;
81 [label="identifiername-expression_statement-litereral_stuff <= 0.5\ngini = 0.065\nsamples = 6902\nvalue = [231, 6671]\nclass = Malicious"] ;
80 -> 81 ;
82 [label="identifiername-expressionstatement-expressionsequence <= 0.5\ngini = 0.048\nsamples = 6838\nvalue = [167, 6671]\nclass = Malicious"] ;
81 -> 82 ;
83 [label="argument_stuff-expression_statement-sourceElement_stuff <= 0.5\ngini = 0.032\nsamples = 6780\nvalue = [111, 6669]\nclass = Malicious"] ;
82 -> 83 ;
84 [label="expression_statement-litereral_stuff-expressionstatement <= 0.5\ngini = 0.027\nsamples = 6763\nvalue = [94, 6669]\nclass = Malicious"] ;
83 -> 84 ;
85 [label="identifiername-expression_statement-expression_statement <= 0.5\ngini = 0.023\nsamples = 6749\nvalue = [80, 6669]\nclass = Malicious"] ;
84 -> 85 ;
86 [label="argument_stuff-expression_statement-formalparameterlist <= 0.5\ngini = 0.016\nsamples = 6673\nvalue = [55, 6618]\nclass = Malicious"] ;
85 -> 86 ;
87 [label="identifiername-argument_stuff-ifstatement <= 0.5\ngini = 0.015\nsamples = 6669\nvalue = [51, 6618]\nclass = Malicious"] ;
86 -> 87 ;
88 [label="formalParameterArg_stuff-sourceElement_stuff-identifiername <= 0.5\ngini = 0.014\nsamples = 6665\nvalue = [48, 6617]\nclass = Malicious"] ;
87 -> 88 ;
89 [label="expression_statement-expression_statement-expression_statement <= 0.5\ngini = 0.014\nsamples = 6663\nvalue = [46, 6617]\nclass = Malicious"] ;
88 -> 89 ;
90 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
89 -> 90 ;
91 [label="literal-identifiername-identifiername <= 0.5\ngini = 0.013\nsamples = 6661\nvalue = [44, 6617]\nclass = Malicious"] ;
89 -> 91 ;
92 [label="argument_stuff-expression_statement-litereral_stuff <= 0.5\ngini = 0.013\nsamples = 6659\nvalue = [42, 6617]\nclass = Malicious"] ;
91 -> 92 ;
93 [label="expression_statement-argument_stuff-identifiername <= 0.5\ngini = 0.012\nsamples = 6657\nvalue = [40, 6617]\nclass = Malicious"] ;
92 -> 93 ;
94 [label="expression_statement-expression_statement-argument_stuff <= 0.5\ngini = 0.011\nsamples = 6655\nvalue = [38, 6617]\nclass = Malicious"] ;
93 -> 94 ;
95 [label="returnstatement-expressionsequence-expression_statement <= 0.5\ngini = 0.099\nsamples = 535\nvalue = [28, 507]\nclass = Malicious"] ;
94 -> 95 ;
96 [label="expression_statement-expression_statement-expressionstatement <= 0.5\ngini = 0.444\nsamples = 42\nvalue = [28, 14]\nclass = Benign"] ;
95 -> 96 ;
97 [label="literal-variable_stuff-expression_statement <= 0.5\ngini = 0.124\nsamples = 30\nvalue = [28, 2]\nclass = Benign"] ;
96 -> 97 ;
98 [label="gini = 0.0\nsamples = 28\nvalue = [28, 0]\nclass = Benign"] ;
97 -> 98 ;
99 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
97 -> 99 ;
100 [label="gini = 0.0\nsamples = 12\nvalue = [0, 12]\nclass = Malicious"] ;
96 -> 100 ;
101 [label="gini = 0.0\nsamples = 493\nvalue = [0, 493]\nclass = Malicious"] ;
95 -> 101 ;
102 [label="sourceElement_stuff-sourceElement_stuff-do_for_while_statement <= 0.5\ngini = 0.003\nsamples = 6120\nvalue = [10, 6110]\nclass = Malicious"] ;
94 -> 102 ;
103 [label="argument_stuff-expression_statement-argument_stuff <= 0.5\ngini = 0.003\nsamples = 6119\nvalue = [9, 6110]\nclass = Malicious"] ;
102 -> 103 ;
104 [label="identifiername-expression_statement-expressionsequence <= 0.5\ngini = 0.002\nsamples = 6040\nvalue = [6, 6034]\nclass = Malicious"] ;
103 -> 104 ;
105 [label="expression_statement-literal-expression_statement <= 0.5\ngini = 0.002\nsamples = 6029\nvalue = [5, 6024]\nclass = Malicious"] ;
104 -> 105 ;
106 [label="sourceElement_stuff-expressionstatement-expressionsequence <= 0.5\ngini = 0.017\nsamples = 580\nvalue = [5, 575]\nclass = Malicious"] ;
105 -> 106 ;
107 [label="expression_statement-expression_statement-identifiername <= 0.5\ngini = 0.388\nsamples = 19\nvalue = [5, 14]\nclass = Malicious"] ;
106 -> 107 ;
108 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
107 -> 108 ;
109 [label="gini = 0.0\nsamples = 14\nvalue = [0, 14]\nclass = Malicious"] ;
107 -> 109 ;
110 [label="gini = 0.0\nsamples = 561\nvalue = [0, 561]\nclass = Malicious"] ;
106 -> 110 ;
111 [label="gini = 0.0\nsamples = 5449\nvalue = [0, 5449]\nclass = Malicious"] ;
105 -> 111 ;
112 [label="numericliteral-variable_stuff-expression_statement <= 0.5\ngini = 0.165\nsamples = 11\nvalue = [1, 10]\nclass = Malicious"] ;
104 -> 112 ;
113 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
112 -> 113 ;
114 [label="gini = 0.0\nsamples = 10\nvalue = [0, 10]\nclass = Malicious"] ;
112 -> 114 ;
115 [label="element_stuff-expression_statement-literal <= 0.5\ngini = 0.073\nsamples = 79\nvalue = [3, 76]\nclass = Malicious"] ;
103 -> 115 ;
116 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
115 -> 116 ;
117 [label="gini = 0.0\nsamples = 76\nvalue = [0, 76]\nclass = Malicious"] ;
115 -> 117 ;
118 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
102 -> 118 ;
119 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
93 -> 119 ;
120 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
92 -> 120 ;
121 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
91 -> 121 ;
122 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
88 -> 122 ;
123 [label="expression_statement-literal-do_for_while_statement <= 0.5\ngini = 0.375\nsamples = 4\nvalue = [3, 1]\nclass = Benign"] ;
87 -> 123 ;
124 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
123 -> 124 ;
125 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
123 -> 125 ;
126 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
86 -> 126 ;
127 [label="literal-numericliteral-variable_stuff <= 0.5\ngini = 0.441\nsamples = 76\nvalue = [25, 51]\nclass = Malicious"] ;
85 -> 127 ;
128 [label="literal-expression_statement-identifiername <= 0.5\ngini = 0.074\nsamples = 26\nvalue = [25, 1]\nclass = Benign"] ;
127 -> 128 ;
129 [label="gini = 0.0\nsamples = 25\nvalue = [25, 0]\nclass = Benign"] ;
128 -> 129 ;
130 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
128 -> 130 ;
131 [label="gini = 0.0\nsamples = 50\nvalue = [0, 50]\nclass = Malicious"] ;
127 -> 131 ;
132 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
84 -> 132 ;
133 [label="gini = 0.0\nsamples = 17\nvalue = [17, 0]\nclass = Benign"] ;
83 -> 133 ;
134 [label="expressionsequence-expression_statement-argument_stuff <= 0.5\ngini = 0.067\nsamples = 58\nvalue = [56, 2]\nclass = Benign"] ;
82 -> 134 ;
135 [label="gini = 0.0\nsamples = 56\nvalue = [56, 0]\nclass = Benign"] ;
134 -> 135 ;
136 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
134 -> 136 ;
137 [label="gini = 0.0\nsamples = 64\nvalue = [64, 0]\nclass = Benign"] ;
81 -> 137 ;
138 [label="trystatement-expressionstatement-expressionsequence <= 0.5\ngini = 0.499\nsamples = 316\nvalue = [164, 152]\nclass = Benign"] ;
80 -> 138 ;
139 [label="numericliteral-do_for_while_statement-expressionsequence <= 0.5\ngini = 0.012\nsamples = 165\nvalue = [164, 1]\nclass = Benign"] ;
138 -> 139 ;
140 [label="gini = 0.0\nsamples = 164\nvalue = [164, 0]\nclass = Benign"] ;
139 -> 140 ;
141 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
139 -> 141 ;
142 [label="gini = 0.0\nsamples = 151\nvalue = [0, 151]\nclass = Malicious"] ;
138 -> 142 ;
143 [label="numericliteral-argument_stuff-expression_statement <= 0.5\ngini = 0.195\nsamples = 1294\nvalue = [1152, 142]\nclass = Benign"] ;
1 -> 143 ;
144 [label="variable_stuff-expression_statement-trystatement <= 0.5\ngini = 0.01\nsamples = 1158\nvalue = [1152, 6]\nclass = Benign"] ;
143 -> 144 ;
145 [label="literal-continue_break_statement-catchproduction <= 0.5\ngini = 0.007\nsamples = 1156\nvalue = [1152, 4]\nclass = Benign"] ;
144 -> 145 ;
146 [label="assignmentoperator-expression_statement-expression_statement <= 0.5\ngini = 0.003\nsamples = 1154\nvalue = [1152, 2]\nclass = Benign"] ;
145 -> 146 ;
147 [label="expression_statement-argument_stuff-variable_stuff <= 0.5\ngini = 0.002\nsamples = 1151\nvalue = [1150, 1]\nclass = Benign"] ;
146 -> 147 ;
148 [label="gini = 0.0\nsamples = 1140\nvalue = [1140, 0]\nclass = Benign"] ;
147 -> 148 ;
149 [label="literal-expression_statement-expression_statement <= 0.5\ngini = 0.165\nsamples = 11\nvalue = [10, 1]\nclass = Benign"] ;
147 -> 149 ;
150 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
149 -> 150 ;
151 [label="gini = 0.0\nsamples = 10\nvalue = [10, 0]\nclass = Benign"] ;
149 -> 151 ;
152 [label="literal-expression_statement-literal <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [2, 1]\nclass = Benign"] ;
146 -> 152 ;
153 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
152 -> 153 ;
154 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
152 -> 154 ;
155 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
145 -> 155 ;
156 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
144 -> 156 ;
157 [label="gini = 0.0\nsamples = 136\nvalue = [0, 136]\nclass = Malicious"] ;
143 -> 157 ;
158 [label="variable_stuff-variable_stuff-do_for_while_statement <= 0.5\ngini = 0.254\nsamples = 10470\nvalue = [8909, 1561]\nclass = Benign"] ;
0 -> 158 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
159 [label="numericliteral-expression_statement-returnstatement <= 0.5\ngini = 0.013\nsamples = 8963\nvalue = [8904, 59]\nclass = Benign"] ;
158 -> 159 ;
160 [label="literal-continue_break_statement-expressionstatement <= 0.5\ngini = 0.002\nsamples = 8911\nvalue = [8903, 8]\nclass = Benign"] ;
159 -> 160 ;
161 [label="literal-argument_stuff-variable_stuff <= 0.5\ngini = 0.0\nsamples = 8905\nvalue = [8903, 2]\nclass = Benign"] ;
160 -> 161 ;
162 [label="gini = 0.0\nsamples = 8903\nvalue = [8903, 0]\nclass = Benign"] ;
161 -> 162 ;
163 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
161 -> 163 ;
164 [label="gini = 0.0\nsamples = 6\nvalue = [0, 6]\nclass = Malicious"] ;
160 -> 164 ;
165 [label="literal-returnstatement-expressionstatement <= 0.5\ngini = 0.038\nsamples = 52\nvalue = [1, 51]\nclass = Malicious"] ;
159 -> 165 ;
166 [label="gini = 0.0\nsamples = 51\nvalue = [0, 51]\nclass = Malicious"] ;
165 -> 166 ;
167 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
165 -> 167 ;
168 [label="property_rules-propertyname-identifiername <= 0.5\ngini = 0.007\nsamples = 1507\nvalue = [5, 1502]\nclass = Malicious"] ;
158 -> 168 ;
169 [label="gini = 0.0\nsamples = 1502\nvalue = [0, 1502]\nclass = Malicious"] ;
168 -> 169 ;
170 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
168 -> 170 ;
}
