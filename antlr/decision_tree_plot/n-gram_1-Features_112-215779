digraph Tree {
node [shape=box] ;
0 [label="objectliteral <= 0.5\ngini = 0.5\nsamples = 27000\nvalue = [13472, 13528]\nclass = Malicious"] ;
1 [label="memberindexexpression <= 0.5\ngini = 0.389\nsamples = 16309\nvalue = [4321, 11988]\nclass = Malicious"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="newexpression <= 0.5\ngini = 0.481\nsamples = 9704\nvalue = [3910, 5794]\nclass = Malicious"] ;
1 -> 2 ;
3 [label="statement <= 0.5\ngini = 0.498\nsamples = 7723\nvalue = [3633, 4090]\nclass = Malicious"] ;
2 -> 3 ;
4 [label="gini = 0.395\nsamples = 2585\nvalue = [700, 1885]\nclass = Malicious"] ;
3 -> 4 ;
5 [label="numericliteral <= 0.5\ngini = 0.49\nsamples = 5138\nvalue = [2933, 2205]\nclass = Benign"] ;
3 -> 5 ;
6 [label="expressionsequence <= 0.5\ngini = 0.369\nsamples = 2849\nvalue = [2155, 694]\nclass = Benign"] ;
5 -> 6 ;
7 [label="argumentsexpression <= 0.5\ngini = 0.5\nsamples = 900\nvalue = [441, 459]\nclass = Malicious"] ;
6 -> 7 ;
8 [label="gini = 0.0\nsamples = 424\nvalue = [424, 0]\nclass = Benign"] ;
7 -> 8 ;
9 [label="identifierexpression <= 0.5\ngini = 0.069\nsamples = 476\nvalue = [17, 459]\nclass = Malicious"] ;
7 -> 9 ;
10 [label="gini = 0.0\nsamples = 459\nvalue = [0, 459]\nclass = Malicious"] ;
9 -> 10 ;
11 [label="gini = 0.0\nsamples = 17\nvalue = [17, 0]\nclass = Benign"] ;
9 -> 11 ;
12 [label="assignmentexpression <= 0.5\ngini = 0.212\nsamples = 1949\nvalue = [1714, 235]\nclass = Benign"] ;
6 -> 12 ;
13 [label="functionbody <= 0.5\ngini = 0.29\nsamples = 1212\nvalue = [999, 213]\nclass = Benign"] ;
12 -> 13 ;
14 [label="ifstatement <= 0.5\ngini = 0.386\nsamples = 757\nvalue = [559, 198]\nclass = Benign"] ;
13 -> 14 ;
15 [label="literal <= 0.5\ngini = 0.411\nsamples = 684\nvalue = [486, 198]\nclass = Benign"] ;
14 -> 15 ;
16 [label="gini = 0.0\nsamples = 53\nvalue = [53, 0]\nclass = Benign"] ;
15 -> 16 ;
17 [label="arrayliteral <= 0.5\ngini = 0.431\nsamples = 631\nvalue = [433, 198]\nclass = Benign"] ;
15 -> 17 ;
18 [label="memberdotexpression <= 0.5\ngini = 0.448\nsamples = 585\nvalue = [387, 198]\nclass = Benign"] ;
17 -> 18 ;
19 [label="additiveexpression <= 0.5\ngini = 0.318\nsamples = 151\nvalue = [121, 30]\nclass = Benign"] ;
18 -> 19 ;
20 [label="assignmentoperatorexpression <= 0.5\ngini = 0.129\nsamples = 130\nvalue = [121, 9]\nclass = Benign"] ;
19 -> 20 ;
21 [label="gini = 0.0\nsamples = 121\nvalue = [121, 0]\nclass = Benign"] ;
20 -> 21 ;
22 [label="gini = 0.0\nsamples = 9\nvalue = [0, 9]\nclass = Malicious"] ;
20 -> 22 ;
23 [label="gini = 0.0\nsamples = 21\nvalue = [0, 21]\nclass = Malicious"] ;
19 -> 23 ;
24 [label="variablestatement <= 0.5\ngini = 0.475\nsamples = 434\nvalue = [266, 168]\nclass = Benign"] ;
18 -> 24 ;
25 [label="additiveexpression <= 0.5\ngini = 0.481\nsamples = 414\nvalue = [247, 167]\nclass = Benign"] ;
24 -> 25 ;
26 [label="argumentsexpression <= 0.5\ngini = 0.484\nsamples = 408\nvalue = [241, 167]\nclass = Benign"] ;
25 -> 26 ;
27 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
26 -> 27 ;
28 [label="catchproduction <= 0.5\ngini = 0.484\nsamples = 407\nvalue = [240, 167]\nclass = Benign"] ;
26 -> 28 ;
29 [label="ternaryexpression <= 0.5\ngini = 0.484\nsamples = 406\nvalue = [239, 167]\nclass = Benign"] ;
28 -> 29 ;
30 [label="logicalandexpression <= 0.5\ngini = 0.485\nsamples = 405\nvalue = [238, 167]\nclass = Benign"] ;
29 -> 30 ;
31 [label="gini = 0.485\nsamples = 404\nvalue = [237, 167]\nclass = Benign"] ;
30 -> 31 ;
32 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
30 -> 32 ;
33 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
29 -> 33 ;
34 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
28 -> 34 ;
35 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
25 -> 35 ;
36 [label="additiveexpression <= 0.5\ngini = 0.095\nsamples = 20\nvalue = [19, 1]\nclass = Benign"] ;
24 -> 36 ;
37 [label="statementlist <= 0.5\ngini = 0.165\nsamples = 11\nvalue = [10, 1]\nclass = Benign"] ;
36 -> 37 ;
38 [label="gini = 0.245\nsamples = 7\nvalue = [6, 1]\nclass = Benign"] ;
37 -> 38 ;
39 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
37 -> 39 ;
40 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
36 -> 40 ;
41 [label="gini = 0.0\nsamples = 46\nvalue = [46, 0]\nclass = Benign"] ;
17 -> 41 ;
42 [label="gini = 0.0\nsamples = 73\nvalue = [73, 0]\nclass = Benign"] ;
14 -> 42 ;
43 [label="assignmentoperator <= 0.5\ngini = 0.064\nsamples = 455\nvalue = [440, 15]\nclass = Benign"] ;
13 -> 43 ;
44 [label="gini = 0.0\nsamples = 438\nvalue = [438, 0]\nclass = Benign"] ;
43 -> 44 ;
45 [label="returnstatement <= 0.5\ngini = 0.208\nsamples = 17\nvalue = [2, 15]\nclass = Malicious"] ;
43 -> 45 ;
46 [label="gini = 0.0\nsamples = 6\nvalue = [0, 6]\nclass = Malicious"] ;
45 -> 46 ;
47 [label="gini = 0.298\nsamples = 11\nvalue = [2, 9]\nclass = Malicious"] ;
45 -> 47 ;
48 [label="returnstatement <= 0.5\ngini = 0.058\nsamples = 737\nvalue = [715, 22]\nclass = Benign"] ;
12 -> 48 ;
49 [label="emptystatement <= 0.5\ngini = 0.025\nsamples = 710\nvalue = [701, 9]\nclass = Benign"] ;
48 -> 49 ;
50 [label="assignmentoperator <= 0.5\ngini = 0.014\nsamples = 704\nvalue = [699, 5]\nclass = Benign"] ;
49 -> 50 ;
51 [label="gini = 0.0\nsamples = 626\nvalue = [626, 0]\nclass = Benign"] ;
50 -> 51 ;
52 [label="additiveexpression <= 0.5\ngini = 0.12\nsamples = 78\nvalue = [73, 5]\nclass = Benign"] ;
50 -> 52 ;
53 [label="gini = 0.0\nsamples = 5\nvalue = [0, 5]\nclass = Malicious"] ;
52 -> 53 ;
54 [label="gini = 0.0\nsamples = 73\nvalue = [73, 0]\nclass = Benign"] ;
52 -> 54 ;
55 [label="equalityexpression <= 0.5\ngini = 0.444\nsamples = 6\nvalue = [2, 4]\nclass = Malicious"] ;
49 -> 55 ;
56 [label="gini = 0.0\nsamples = 4\nvalue = [0, 4]\nclass = Malicious"] ;
55 -> 56 ;
57 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
55 -> 57 ;
58 [label="identifiername <= 0.5\ngini = 0.499\nsamples = 27\nvalue = [14, 13]\nclass = Benign"] ;
48 -> 58 ;
59 [label="gini = 0.0\nsamples = 13\nvalue = [0, 13]\nclass = Malicious"] ;
58 -> 59 ;
60 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
58 -> 60 ;
61 [label="parenthesizedexpression <= 0.5\ngini = 0.449\nsamples = 2289\nvalue = [778, 1511]\nclass = Malicious"] ;
5 -> 61 ;
62 [label="arguments <= 0.5\ngini = 0.498\nsamples = 1341\nvalue = [715, 626]\nclass = Benign"] ;
61 -> 62 ;
63 [label="gini = 0.0\nsamples = 337\nvalue = [337, 0]\nclass = Benign"] ;
62 -> 63 ;
64 [label="functionbody <= 0.5\ngini = 0.469\nsamples = 1004\nvalue = [378, 626]\nclass = Malicious"] ;
62 -> 64 ;
65 [label="statementlist <= 0.5\ngini = 0.375\nsamples = 835\nvalue = [209, 626]\nclass = Malicious"] ;
64 -> 65 ;
66 [label="variabledeclaration <= 0.5\ngini = 0.336\nsamples = 796\nvalue = [170, 626]\nclass = Malicious"] ;
65 -> 66 ;
67 [label="equalityexpression <= 0.5\ngini = 0.456\nsamples = 403\nvalue = [142, 261]\nclass = Malicious"] ;
66 -> 67 ;
68 [label="identifiername <= 0.5\ngini = 0.497\nsamples = 264\nvalue = [142, 122]\nclass = Benign"] ;
67 -> 68 ;
69 [label="gini = 0.0\nsamples = 35\nvalue = [35, 0]\nclass = Benign"] ;
68 -> 69 ;
70 [label="additiveexpression <= 0.5\ngini = 0.498\nsamples = 229\nvalue = [107, 122]\nclass = Malicious"] ;
68 -> 70 ;
71 [label="arrayliteral <= 0.5\ngini = 0.486\nsamples = 209\nvalue = [87, 122]\nclass = Malicious"] ;
70 -> 71 ;
72 [label="logicalandexpression <= 0.5\ngini = 0.48\nsamples = 203\nvalue = [81, 122]\nclass = Malicious"] ;
71 -> 72 ;
73 [label="assignmentexpression <= 0.5\ngini = 0.472\nsamples = 197\nvalue = [75, 122]\nclass = Malicious"] ;
72 -> 73 ;
74 [label="gini = 0.467\nsamples = 194\nvalue = [72, 122]\nclass = Malicious"] ;
73 -> 74 ;
75 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
73 -> 75 ;
76 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
72 -> 76 ;
77 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
71 -> 77 ;
78 [label="gini = 0.0\nsamples = 20\nvalue = [20, 0]\nclass = Benign"] ;
70 -> 78 ;
79 [label="gini = 0.0\nsamples = 139\nvalue = [0, 139]\nclass = Malicious"] ;
67 -> 79 ;
80 [label="memberdotexpression <= 0.5\ngini = 0.132\nsamples = 393\nvalue = [28, 365]\nclass = Malicious"] ;
66 -> 80 ;
81 [label="gini = 0.0\nsamples = 10\nvalue = [10, 0]\nclass = Benign"] ;
80 -> 81 ;
82 [label="multiplicativeexpression <= 0.5\ngini = 0.09\nsamples = 383\nvalue = [18, 365]\nclass = Malicious"] ;
80 -> 82 ;
83 [label="assignmentexpression <= 0.5\ngini = 0.066\nsamples = 378\nvalue = [13, 365]\nclass = Malicious"] ;
82 -> 83 ;
84 [label="unaryminusexpression <= 0.5\ngini = 0.042\nsamples = 373\nvalue = [8, 365]\nclass = Malicious"] ;
83 -> 84 ;
85 [label="arrayliteral <= 0.5\ngini = 0.037\nsamples = 372\nvalue = [7, 365]\nclass = Malicious"] ;
84 -> 85 ;
86 [label="thisexpression <= 0.5\ngini = 0.032\nsamples = 371\nvalue = [6, 365]\nclass = Malicious"] ;
85 -> 86 ;
87 [label="additiveexpression <= 0.5\ngini = 0.027\nsamples = 370\nvalue = [5, 365]\nclass = Malicious"] ;
86 -> 87 ;
88 [label="gini = 0.042\nsamples = 232\nvalue = [5, 227]\nclass = Malicious"] ;
87 -> 88 ;
89 [label="gini = 0.0\nsamples = 138\nvalue = [0, 138]\nclass = Malicious"] ;
87 -> 89 ;
90 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
86 -> 90 ;
91 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
85 -> 91 ;
92 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
84 -> 92 ;
93 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
83 -> 93 ;
94 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
82 -> 94 ;
95 [label="gini = 0.0\nsamples = 39\nvalue = [39, 0]\nclass = Benign"] ;
65 -> 95 ;
96 [label="gini = 0.0\nsamples = 169\nvalue = [169, 0]\nclass = Benign"] ;
64 -> 96 ;
97 [label="assignmentexpression <= 0.5\ngini = 0.124\nsamples = 948\nvalue = [63, 885]\nclass = Malicious"] ;
61 -> 97 ;
98 [label="returnstatement <= 0.5\ngini = 0.043\nsamples = 46\nvalue = [45, 1]\nclass = Benign"] ;
97 -> 98 ;
99 [label="gini = 0.0\nsamples = 45\nvalue = [45, 0]\nclass = Benign"] ;
98 -> 99 ;
100 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
98 -> 100 ;
101 [label="formalparameterlist <= 0.5\ngini = 0.039\nsamples = 902\nvalue = [18, 884]\nclass = Malicious"] ;
97 -> 101 ;
102 [label="logicalorexpression <= 0.5\ngini = 0.007\nsamples = 887\nvalue = [3, 884]\nclass = Malicious"] ;
101 -> 102 ;
103 [label="multiplicativeexpression <= 0.5\ngini = 0.002\nsamples = 885\nvalue = [1, 884]\nclass = Malicious"] ;
102 -> 103 ;
104 [label="gini = 0.0\nsamples = 884\nvalue = [0, 884]\nclass = Malicious"] ;
103 -> 104 ;
105 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
103 -> 105 ;
106 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
102 -> 106 ;
107 [label="gini = 0.0\nsamples = 15\nvalue = [15, 0]\nclass = Benign"] ;
101 -> 107 ;
108 [label="assignmentexpression <= 0.5\ngini = 0.241\nsamples = 1981\nvalue = [277, 1704]\nclass = Malicious"] ;
2 -> 108 ;
109 [label="elementlist <= 0.5\ngini = 0.059\nsamples = 1756\nvalue = [53, 1703]\nclass = Malicious"] ;
108 -> 109 ;
110 [label="literal <= 0.5\ngini = 0.039\nsamples = 1738\nvalue = [35, 1703]\nclass = Malicious"] ;
109 -> 110 ;
111 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
110 -> 111 ;
112 [label="variabledeclaration <= 0.5\ngini = 0.024\nsamples = 1724\nvalue = [21, 1703]\nclass = Malicious"] ;
110 -> 112 ;
113 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
112 -> 113 ;
114 [label="block <= 0.5\ngini = 0.018\nsamples = 1719\nvalue = [16, 1703]\nclass = Malicious"] ;
112 -> 114 ;
115 [label="expressionsequence <= 0.5\ngini = 0.013\nsamples = 1712\nvalue = [11, 1701]\nclass = Malicious"] ;
114 -> 115 ;
116 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
115 -> 116 ;
117 [label="multiplicativeexpression <= 0.5\ngini = 0.009\nsamples = 1709\nvalue = [8, 1701]\nclass = Malicious"] ;
115 -> 117 ;
118 [label="additiveexpression <= 0.5\ngini = 0.008\nsamples = 1708\nvalue = [7, 1701]\nclass = Malicious"] ;
117 -> 118 ;
119 [label="identifiername <= 0.5\ngini = 0.007\nsamples = 1704\nvalue = [6, 1698]\nclass = Malicious"] ;
118 -> 119 ;
120 [label="gini = 0.0\nsamples = 1090\nvalue = [0, 1090]\nclass = Malicious"] ;
119 -> 120 ;
121 [label="numericliteral <= 0.5\ngini = 0.019\nsamples = 614\nvalue = [6, 608]\nclass = Malicious"] ;
119 -> 121 ;
122 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
121 -> 122 ;
123 [label="returnstatement <= 0.5\ngini = 0.007\nsamples = 610\nvalue = [2, 608]\nclass = Malicious"] ;
121 -> 123 ;
124 [label="gini = 0.375\nsamples = 8\nvalue = [2, 6]\nclass = Malicious"] ;
123 -> 124 ;
125 [label="gini = 0.0\nsamples = 602\nvalue = [0, 602]\nclass = Malicious"] ;
123 -> 125 ;
126 [label="numericliteral <= 0.5\ngini = 0.375\nsamples = 4\nvalue = [1, 3]\nclass = Malicious"] ;
118 -> 126 ;
127 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
126 -> 127 ;
128 [label="gini = 0.0\nsamples = 3\nvalue = [0, 3]\nclass = Malicious"] ;
126 -> 128 ;
129 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
117 -> 129 ;
130 [label="parenthesizedexpression <= 0.5\ngini = 0.408\nsamples = 7\nvalue = [5, 2]\nclass = Benign"] ;
114 -> 130 ;
131 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
130 -> 131 ;
132 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
130 -> 132 ;
133 [label="gini = 0.0\nsamples = 18\nvalue = [18, 0]\nclass = Benign"] ;
109 -> 133 ;
134 [label="assignmentoperatorexpression <= 0.5\ngini = 0.009\nsamples = 225\nvalue = [224, 1]\nclass = Benign"] ;
108 -> 134 ;
135 [label="gini = 0.0\nsamples = 224\nvalue = [224, 0]\nclass = Benign"] ;
134 -> 135 ;
136 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
134 -> 136 ;
137 [label="arguments <= 0.5\ngini = 0.117\nsamples = 6605\nvalue = [411, 6194]\nclass = Malicious"] ;
1 -> 137 ;
138 [label="gini = 0.0\nsamples = 135\nvalue = [135, 0]\nclass = Benign"] ;
137 -> 138 ;
139 [label="logicalorexpression <= 0.5\ngini = 0.082\nsamples = 6470\nvalue = [276, 6194]\nclass = Malicious"] ;
137 -> 139 ;
140 [label="forvarinstatement <= 0.5\ngini = 0.065\nsamples = 6408\nvalue = [214, 6194]\nclass = Malicious"] ;
139 -> 140 ;
141 [label="deleteexpression <= 0.5\ngini = 0.049\nsamples = 6352\nvalue = [158, 6194]\nclass = Malicious"] ;
140 -> 141 ;
142 [label="notexpression <= 0.5\ngini = 0.043\nsamples = 6334\nvalue = [140, 6194]\nclass = Malicious"] ;
141 -> 142 ;
143 [label="ternaryexpression <= 0.5\ngini = 0.039\nsamples = 6307\nvalue = [124, 6183]\nclass = Malicious"] ;
142 -> 143 ;
144 [label="typeofexpression <= 0.5\ngini = 0.037\nsamples = 6303\nvalue = [120, 6183]\nclass = Malicious"] ;
143 -> 144 ;
145 [label="preincrementexpression <= 0.5\ngini = 0.036\nsamples = 6296\nvalue = [116, 6180]\nclass = Malicious"] ;
144 -> 145 ;
146 [label="newexpression <= 0.5\ngini = 0.036\nsamples = 6294\nvalue = [114, 6180]\nclass = Malicious"] ;
145 -> 146 ;
147 [label="functionbody <= 0.5\ngini = 0.064\nsamples = 3001\nvalue = [100, 2901]\nclass = Malicious"] ;
146 -> 147 ;
148 [label="block <= 0.5\ngini = 0.02\nsamples = 2263\nvalue = [23, 2240]\nclass = Malicious"] ;
147 -> 148 ;
149 [label="identifiername <= 0.5\ngini = 0.011\nsamples = 1874\nvalue = [10, 1864]\nclass = Malicious"] ;
148 -> 149 ;
150 [label="variablestatement <= 0.5\ngini = 0.002\nsamples = 1121\nvalue = [1, 1120]\nclass = Malicious"] ;
149 -> 150 ;
151 [label="assignmentexpression <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
150 -> 151 ;
152 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
151 -> 152 ;
153 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
151 -> 153 ;
154 [label="gini = 0.0\nsamples = 1118\nvalue = [0, 1118]\nclass = Malicious"] ;
150 -> 154 ;
155 [label="relationalexpression <= 0.5\ngini = 0.024\nsamples = 753\nvalue = [9, 744]\nclass = Malicious"] ;
149 -> 155 ;
156 [label="numericliteral <= 0.5\ngini = 0.04\nsamples = 441\nvalue = [9, 432]\nclass = Malicious"] ;
155 -> 156 ;
157 [label="gini = 0.0\nsamples = 277\nvalue = [0, 277]\nclass = Malicious"] ;
156 -> 157 ;
158 [label="arrayliteralexpression <= 0.5\ngini = 0.104\nsamples = 164\nvalue = [9, 155]\nclass = Malicious"] ;
156 -> 158 ;
159 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
158 -> 159 ;
160 [label="gini = 0.0\nsamples = 155\nvalue = [0, 155]\nclass = Malicious"] ;
158 -> 160 ;
161 [label="gini = 0.0\nsamples = 312\nvalue = [0, 312]\nclass = Malicious"] ;
155 -> 161 ;
162 [label="varmodifier <= 0.5\ngini = 0.065\nsamples = 389\nvalue = [13, 376]\nclass = Malicious"] ;
148 -> 162 ;
163 [label="gini = 0.0\nsamples = 10\nvalue = [10, 0]\nclass = Benign"] ;
162 -> 163 ;
164 [label="thisexpression <= 0.5\ngini = 0.016\nsamples = 379\nvalue = [3, 376]\nclass = Malicious"] ;
162 -> 164 ;
165 [label="additiveexpression <= 0.5\ngini = 0.291\nsamples = 17\nvalue = [3, 14]\nclass = Malicious"] ;
164 -> 165 ;
166 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
165 -> 166 ;
167 [label="gini = 0.0\nsamples = 14\nvalue = [0, 14]\nclass = Malicious"] ;
165 -> 167 ;
168 [label="gini = 0.0\nsamples = 362\nvalue = [0, 362]\nclass = Malicious"] ;
164 -> 168 ;
169 [label="relationalexpression <= 0.5\ngini = 0.187\nsamples = 738\nvalue = [77, 661]\nclass = Malicious"] ;
147 -> 169 ;
170 [label="identifiername <= 0.5\ngini = 0.468\nsamples = 107\nvalue = [67, 40]\nclass = Benign"] ;
169 -> 170 ;
171 [label="gini = 0.0\nsamples = 38\nvalue = [0, 38]\nclass = Malicious"] ;
170 -> 171 ;
172 [label="assignmentexpression <= 0.5\ngini = 0.056\nsamples = 69\nvalue = [67, 2]\nclass = Benign"] ;
170 -> 172 ;
173 [label="returnstatement <= 0.5\ngini = 0.48\nsamples = 5\nvalue = [3, 2]\nclass = Benign"] ;
172 -> 173 ;
174 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
173 -> 174 ;
175 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
173 -> 175 ;
176 [label="gini = 0.0\nsamples = 64\nvalue = [64, 0]\nclass = Benign"] ;
172 -> 176 ;
177 [label="returnstatement <= 0.5\ngini = 0.031\nsamples = 631\nvalue = [10, 621]\nclass = Malicious"] ;
169 -> 177 ;
178 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
177 -> 178 ;
179 [label="arrayliteral <= 0.5\ngini = 0.003\nsamples = 622\nvalue = [1, 621]\nclass = Malicious"] ;
177 -> 179 ;
180 [label="assignmentoperator <= 0.5\ngini = 0.095\nsamples = 20\nvalue = [1, 19]\nclass = Malicious"] ;
179 -> 180 ;
181 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
180 -> 181 ;
182 [label="gini = 0.0\nsamples = 19\nvalue = [0, 19]\nclass = Malicious"] ;
180 -> 182 ;
183 [label="gini = 0.0\nsamples = 602\nvalue = [0, 602]\nclass = Malicious"] ;
179 -> 183 ;
184 [label="variabledeclarationlist <= 0.5\ngini = 0.008\nsamples = 3293\nvalue = [14, 3279]\nclass = Malicious"] ;
146 -> 184 ;
185 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
184 -> 185 ;
186 [label="equalityexpression <= 0.5\ngini = 0.006\nsamples = 3289\nvalue = [10, 3279]\nclass = Malicious"] ;
184 -> 186 ;
187 [label="parenthesizedexpression <= 0.5\ngini = 0.025\nsamples = 717\nvalue = [9, 708]\nclass = Malicious"] ;
186 -> 187 ;
188 [label="identifiername <= 0.5\ngini = 0.011\nsamples = 712\nvalue = [4, 708]\nclass = Malicious"] ;
187 -> 188 ;
189 [label="block <= 0.5\ngini = 0.32\nsamples = 15\nvalue = [3, 12]\nclass = Malicious"] ;
188 -> 189 ;
190 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
189 -> 190 ;
191 [label="gini = 0.0\nsamples = 12\nvalue = [0, 12]\nclass = Malicious"] ;
189 -> 191 ;
192 [label="thisexpression <= 0.5\ngini = 0.003\nsamples = 697\nvalue = [1, 696]\nclass = Malicious"] ;
188 -> 192 ;
193 [label="gini = 0.0\nsamples = 691\nvalue = [0, 691]\nclass = Malicious"] ;
192 -> 193 ;
194 [label="formalparameterarg <= 0.5\ngini = 0.278\nsamples = 6\nvalue = [1, 5]\nclass = Malicious"] ;
192 -> 194 ;
195 [label="gini = 0.0\nsamples = 5\nvalue = [0, 5]\nclass = Malicious"] ;
194 -> 195 ;
196 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
194 -> 196 ;
197 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
187 -> 197 ;
198 [label="assignmentoperator <= 0.5\ngini = 0.001\nsamples = 2572\nvalue = [1, 2571]\nclass = Malicious"] ;
186 -> 198 ;
199 [label="gini = 0.0\nsamples = 1693\nvalue = [0, 1693]\nclass = Malicious"] ;
198 -> 199 ;
200 [label="formalparameterlist <= 0.5\ngini = 0.002\nsamples = 879\nvalue = [1, 878]\nclass = Malicious"] ;
198 -> 200 ;
201 [label="gini = 0.0\nsamples = 878\nvalue = [0, 878]\nclass = Malicious"] ;
200 -> 201 ;
202 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
200 -> 202 ;
203 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
145 -> 203 ;
204 [label="functionexpression <= 0.5\ngini = 0.49\nsamples = 7\nvalue = [4, 3]\nclass = Benign"] ;
144 -> 204 ;
205 [label="gini = 0.0\nsamples = 3\nvalue = [0, 3]\nclass = Malicious"] ;
204 -> 205 ;
206 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
204 -> 206 ;
207 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
143 -> 207 ;
208 [label="trystatement <= 0.5\ngini = 0.483\nsamples = 27\nvalue = [16, 11]\nclass = Benign"] ;
142 -> 208 ;
209 [label="gini = 0.0\nsamples = 16\nvalue = [16, 0]\nclass = Benign"] ;
208 -> 209 ;
210 [label="gini = 0.0\nsamples = 11\nvalue = [0, 11]\nclass = Malicious"] ;
208 -> 210 ;
211 [label="gini = 0.0\nsamples = 18\nvalue = [18, 0]\nclass = Benign"] ;
141 -> 211 ;
212 [label="gini = 0.0\nsamples = 56\nvalue = [56, 0]\nclass = Benign"] ;
140 -> 212 ;
213 [label="gini = 0.0\nsamples = 62\nvalue = [62, 0]\nclass = Benign"] ;
139 -> 213 ;
214 [label="forstatement <= 0.5\ngini = 0.247\nsamples = 10691\nvalue = [9151, 1540]\nclass = Benign"] ;
0 -> 214 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
215 [label="bitshiftexpression <= 0.5\ngini = 0.012\nsamples = 9174\nvalue = [9118, 56]\nclass = Benign"] ;
214 -> 215 ;
216 [label="whilestatement <= 0.5\ngini = 0.001\nsamples = 9124\nvalue = [9118, 6]\nclass = Benign"] ;
215 -> 216 ;
217 [label="catchproduction <= 0.5\ngini = 0.001\nsamples = 9118\nvalue = [9114, 4]\nclass = Benign"] ;
216 -> 217 ;
218 [label="multiplicativeexpression <= 0.5\ngini = 0.0\nsamples = 9002\nvalue = [9001, 1]\nclass = Benign"] ;
217 -> 218 ;
219 [label="gini = 0.0\nsamples = 8916\nvalue = [8916, 0]\nclass = Benign"] ;
218 -> 219 ;
220 [label="propertyname <= 0.5\ngini = 0.023\nsamples = 86\nvalue = [85, 1]\nclass = Benign"] ;
218 -> 220 ;
221 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
220 -> 221 ;
222 [label="gini = 0.0\nsamples = 85\nvalue = [85, 0]\nclass = Benign"] ;
220 -> 222 ;
223 [label="memberdotexpression <= 0.5\ngini = 0.05\nsamples = 116\nvalue = [113, 3]\nclass = Benign"] ;
217 -> 223 ;
224 [label="gini = 0.0\nsamples = 3\nvalue = [0, 3]\nclass = Malicious"] ;
223 -> 224 ;
225 [label="gini = 0.0\nsamples = 113\nvalue = [113, 0]\nclass = Benign"] ;
223 -> 225 ;
226 [label="relationalexpression <= 0.5\ngini = 0.444\nsamples = 6\nvalue = [4, 2]\nclass = Benign"] ;
216 -> 226 ;
227 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
226 -> 227 ;
228 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
226 -> 228 ;
229 [label="gini = 0.0\nsamples = 50\nvalue = [0, 50]\nclass = Malicious"] ;
215 -> 229 ;
230 [label="identifiername <= 0.5\ngini = 0.043\nsamples = 1517\nvalue = [33, 1484]\nclass = Malicious"] ;
214 -> 230 ;
231 [label="gini = 0.0\nsamples = 1480\nvalue = [0, 1480]\nclass = Malicious"] ;
230 -> 231 ;
232 [label="functionbody <= 0.5\ngini = 0.193\nsamples = 37\nvalue = [33, 4]\nclass = Benign"] ;
230 -> 232 ;
233 [label="gini = 0.0\nsamples = 4\nvalue = [0, 4]\nclass = Malicious"] ;
232 -> 233 ;
234 [label="gini = 0.0\nsamples = 33\nvalue = [33, 0]\nclass = Benign"] ;
232 -> 234 ;
}
