digraph Tree {
node [shape=box] ;
0 [label="propertyname <= 0.5\ngini = 0.5\nsamples = 27000\nvalue = [13475, 13525]\nclass = Malicious"] ;
1 [label="numericliteral <= 0.5\ngini = 0.403\nsamples = 16632\nvalue = [4647, 11985]\nclass = Malicious"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="expressionstatement <= 0.5\ngini = 0.49\nsamples = 7516\nvalue = [3214, 4302]\nclass = Malicious"] ;
1 -> 2 ;
3 [label="argument_stuff <= 0.5\ngini = 0.409\nsamples = 3962\nvalue = [1136, 2826]\nclass = Malicious"] ;
2 -> 3 ;
4 [label="sourceElement_stuff <= 0.5\ngini = 0.466\nsamples = 2990\nvalue = [1106, 1884]\nclass = Malicious"] ;
3 -> 4 ;
5 [label="gini = 0.393\nsamples = 2576\nvalue = [692, 1884]\nclass = Malicious"] ;
4 -> 5 ;
6 [label="gini = 0.0\nsamples = 414\nvalue = [414, 0]\nclass = Benign"] ;
4 -> 6 ;
7 [label="literal <= 0.5\ngini = 0.06\nsamples = 972\nvalue = [30, 942]\nclass = Malicious"] ;
3 -> 7 ;
8 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
7 -> 8 ;
9 [label="element_stuff <= 0.5\ngini = 0.045\nsamples = 964\nvalue = [22, 942]\nclass = Malicious"] ;
7 -> 9 ;
10 [label="expressionsequence <= 0.5\ngini = 0.039\nsamples = 961\nvalue = [19, 942]\nclass = Malicious"] ;
9 -> 10 ;
11 [label="identifiername <= 0.5\ngini = 0.076\nsamples = 479\nvalue = [19, 460]\nclass = Malicious"] ;
10 -> 11 ;
12 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
11 -> 12 ;
13 [label="gini = 0.065\nsamples = 476\nvalue = [16, 460]\nclass = Malicious"] ;
11 -> 13 ;
14 [label="gini = 0.0\nsamples = 482\nvalue = [0, 482]\nclass = Malicious"] ;
10 -> 14 ;
15 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
9 -> 15 ;
16 [label="varmodifier <= 0.5\ngini = 0.486\nsamples = 3554\nvalue = [2078, 1476]\nclass = Benign"] ;
2 -> 16 ;
17 [label="identifiername <= 0.5\ngini = 0.344\nsamples = 2013\nvalue = [1569, 444]\nclass = Benign"] ;
16 -> 17 ;
18 [label="gini = 0.0\nsamples = 351\nvalue = [351, 0]\nclass = Benign"] ;
17 -> 18 ;
19 [label="litereral_stuff <= 0.5\ngini = 0.392\nsamples = 1662\nvalue = [1218, 444]\nclass = Benign"] ;
17 -> 19 ;
20 [label="ifstatement <= 0.5\ngini = 0.444\nsamples = 1334\nvalue = [890, 444]\nclass = Benign"] ;
19 -> 20 ;
21 [label="argument_stuff <= 0.5\ngini = 0.462\nsamples = 1223\nvalue = [779, 444]\nclass = Benign"] ;
20 -> 21 ;
22 [label="gini = 0.0\nsamples = 87\nvalue = [87, 0]\nclass = Benign"] ;
21 -> 22 ;
23 [label="literal <= 0.5\ngini = 0.476\nsamples = 1136\nvalue = [692, 444]\nclass = Benign"] ;
21 -> 23 ;
24 [label="gini = 0.0\nsamples = 46\nvalue = [46, 0]\nclass = Benign"] ;
23 -> 24 ;
25 [label="formalParameterArg_stuff <= 0.5\ngini = 0.483\nsamples = 1090\nvalue = [646, 444]\nclass = Benign"] ;
23 -> 25 ;
26 [label="trystatement <= 0.5\ngini = 0.486\nsamples = 1070\nvalue = [626, 444]\nclass = Benign"] ;
25 -> 26 ;
27 [label="assignmentoperator <= 0.5\ngini = 0.486\nsamples = 1068\nvalue = [624, 444]\nclass = Benign"] ;
26 -> 27 ;
28 [label="gini = 0.486\nsamples = 1067\nvalue = [623, 444]\nclass = Benign"] ;
27 -> 28 ;
29 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
27 -> 29 ;
30 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
26 -> 30 ;
31 [label="gini = 0.0\nsamples = 20\nvalue = [20, 0]\nclass = Benign"] ;
25 -> 31 ;
32 [label="gini = 0.0\nsamples = 111\nvalue = [111, 0]\nclass = Benign"] ;
20 -> 32 ;
33 [label="gini = 0.0\nsamples = 328\nvalue = [328, 0]\nclass = Benign"] ;
19 -> 33 ;
34 [label="identifiername <= 0.5\ngini = 0.442\nsamples = 1541\nvalue = [509, 1032]\nclass = Malicious"] ;
16 -> 34 ;
35 [label="argument_stuff <= 0.5\ngini = 0.087\nsamples = 835\nvalue = [38, 797]\nclass = Malicious"] ;
34 -> 35 ;
36 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
35 -> 36 ;
37 [label="withstatement <= 0.5\ngini = 0.074\nsamples = 829\nvalue = [32, 797]\nclass = Malicious"] ;
35 -> 37 ;
38 [label="element_stuff <= 0.5\ngini = 0.07\nsamples = 827\nvalue = [30, 797]\nclass = Malicious"] ;
37 -> 38 ;
39 [label="returnstatement <= 0.5\ngini = 0.068\nsamples = 826\nvalue = [29, 797]\nclass = Malicious"] ;
38 -> 39 ;
40 [label="assignmentoperator <= 0.5\ngini = 0.065\nsamples = 801\nvalue = [27, 774]\nclass = Malicious"] ;
39 -> 40 ;
41 [label="gini = 0.07\nsamples = 744\nvalue = [27, 717]\nclass = Malicious"] ;
40 -> 41 ;
42 [label="gini = 0.0\nsamples = 57\nvalue = [0, 57]\nclass = Malicious"] ;
40 -> 42 ;
43 [label="gini = 0.147\nsamples = 25\nvalue = [2, 23]\nclass = Malicious"] ;
39 -> 43 ;
44 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
38 -> 44 ;
45 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
37 -> 45 ;
46 [label="returnstatement <= 0.5\ngini = 0.444\nsamples = 706\nvalue = [471, 235]\nclass = Benign"] ;
34 -> 46 ;
47 [label="element_stuff <= 0.5\ngini = 0.013\nsamples = 448\nvalue = [445, 3]\nclass = Benign"] ;
46 -> 47 ;
48 [label="ifstatement <= 0.5\ngini = 0.009\nsamples = 438\nvalue = [436, 2]\nclass = Benign"] ;
47 -> 48 ;
49 [label="assignmentoperator <= 0.5\ngini = 0.006\nsamples = 341\nvalue = [340, 1]\nclass = Benign"] ;
48 -> 49 ;
50 [label="argument_stuff <= 0.5\ngini = 0.008\nsamples = 252\nvalue = [251, 1]\nclass = Benign"] ;
49 -> 50 ;
51 [label="gini = 0.0\nsamples = 58\nvalue = [58, 0]\nclass = Benign"] ;
50 -> 51 ;
52 [label="formalParameterArg_stuff <= 0.5\ngini = 0.01\nsamples = 194\nvalue = [193, 1]\nclass = Benign"] ;
50 -> 52 ;
53 [label="litereral_stuff <= 0.5\ngini = 0.011\nsamples = 178\nvalue = [177, 1]\nclass = Benign"] ;
52 -> 53 ;
54 [label="literal <= 0.5\ngini = 0.012\nsamples = 169\nvalue = [168, 1]\nclass = Benign"] ;
53 -> 54 ;
55 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
54 -> 55 ;
56 [label="trystatement <= 0.5\ngini = 0.012\nsamples = 166\nvalue = [165, 1]\nclass = Benign"] ;
54 -> 56 ;
57 [label="gini = 0.012\nsamples = 164\nvalue = [163, 1]\nclass = Benign"] ;
56 -> 57 ;
58 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
56 -> 58 ;
59 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
53 -> 59 ;
60 [label="gini = 0.0\nsamples = 16\nvalue = [16, 0]\nclass = Benign"] ;
52 -> 60 ;
61 [label="gini = 0.0\nsamples = 89\nvalue = [89, 0]\nclass = Benign"] ;
49 -> 61 ;
62 [label="formalParameterArg_stuff <= 0.5\ngini = 0.02\nsamples = 97\nvalue = [96, 1]\nclass = Benign"] ;
48 -> 62 ;
63 [label="litereral_stuff <= 0.5\ngini = 0.023\nsamples = 87\nvalue = [86, 1]\nclass = Benign"] ;
62 -> 63 ;
64 [label="assignmentoperator <= 0.5\ngini = 0.024\nsamples = 83\nvalue = [82, 1]\nclass = Benign"] ;
63 -> 64 ;
65 [label="argument_stuff <= 0.5\ngini = 0.025\nsamples = 80\nvalue = [79, 1]\nclass = Benign"] ;
64 -> 65 ;
66 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
65 -> 66 ;
67 [label="gini = 0.025\nsamples = 79\nvalue = [78, 1]\nclass = Benign"] ;
65 -> 67 ;
68 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
64 -> 68 ;
69 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
63 -> 69 ;
70 [label="gini = 0.0\nsamples = 10\nvalue = [10, 0]\nclass = Benign"] ;
62 -> 70 ;
71 [label="ifstatement <= 0.5\ngini = 0.18\nsamples = 10\nvalue = [9, 1]\nclass = Benign"] ;
47 -> 71 ;
72 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
71 -> 72 ;
73 [label="formalparameterlist <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [2, 1]\nclass = Benign"] ;
71 -> 73 ;
74 [label="gini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
73 -> 74 ;
75 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
73 -> 75 ;
76 [label="ifstatement <= 0.5\ngini = 0.181\nsamples = 258\nvalue = [26, 232]\nclass = Malicious"] ;
46 -> 76 ;
77 [label="formalParameterArg_stuff <= 0.5\ngini = 0.127\nsamples = 249\nvalue = [17, 232]\nclass = Malicious"] ;
76 -> 77 ;
78 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
77 -> 78 ;
79 [label="litereral_stuff <= 0.5\ngini = 0.094\nsamples = 244\nvalue = [12, 232]\nclass = Malicious"] ;
77 -> 79 ;
80 [label="trystatement <= 0.5\ngini = 0.072\nsamples = 241\nvalue = [9, 232]\nclass = Malicious"] ;
79 -> 80 ;
81 [label="gini = 0.064\nsamples = 240\nvalue = [8, 232]\nclass = Malicious"] ;
80 -> 81 ;
82 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
80 -> 82 ;
83 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
79 -> 83 ;
84 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
76 -> 84 ;
85 [label="expressionstatement <= 0.5\ngini = 0.265\nsamples = 9116\nvalue = [1433, 7683]\nclass = Malicious"] ;
1 -> 85 ;
86 [label="gini = 0.0\nsamples = 246\nvalue = [246, 0]\nclass = Benign"] ;
85 -> 86 ;
87 [label="element_stuff <= 0.5\ngini = 0.232\nsamples = 8870\nvalue = [1187, 7683]\nclass = Malicious"] ;
85 -> 87 ;
88 [label="litereral_stuff <= 0.5\ngini = 0.322\nsamples = 4983\nvalue = [1004, 3979]\nclass = Malicious"] ;
87 -> 88 ;
89 [label="returnstatement <= 0.5\ngini = 0.288\nsamples = 4807\nvalue = [838, 3969]\nclass = Malicious"] ;
88 -> 89 ;
90 [label="argument_stuff <= 0.5\ngini = 0.415\nsamples = 2424\nvalue = [713, 1711]\nclass = Malicious"] ;
89 -> 90 ;
91 [label="gini = 0.0\nsamples = 126\nvalue = [126, 0]\nclass = Benign"] ;
90 -> 91 ;
92 [label="formalparameterlist <= 0.5\ngini = 0.38\nsamples = 2298\nvalue = [587, 1711]\nclass = Malicious"] ;
90 -> 92 ;
93 [label="identifiername <= 0.5\ngini = 0.352\nsamples = 2201\nvalue = [502, 1699]\nclass = Malicious"] ;
92 -> 93 ;
94 [label="varmodifier <= 0.5\ngini = 0.16\nsamples = 649\nvalue = [57, 592]\nclass = Malicious"] ;
93 -> 94 ;
95 [label="ifstatement <= 0.5\ngini = 0.317\nsamples = 157\nvalue = [31, 126]\nclass = Malicious"] ;
94 -> 95 ;
96 [label="gini = 0.0\nsamples = 31\nvalue = [31, 0]\nclass = Benign"] ;
95 -> 96 ;
97 [label="gini = 0.0\nsamples = 126\nvalue = [0, 126]\nclass = Malicious"] ;
95 -> 97 ;
98 [label="catchproduction <= 0.5\ngini = 0.1\nsamples = 492\nvalue = [26, 466]\nclass = Malicious"] ;
94 -> 98 ;
99 [label="ifstatement <= 0.5\ngini = 0.108\nsamples = 456\nvalue = [26, 430]\nclass = Malicious"] ;
98 -> 99 ;
100 [label="assignmentoperator <= 0.5\ngini = 0.104\nsamples = 455\nvalue = [25, 430]\nclass = Malicious"] ;
99 -> 100 ;
101 [label="gini = 0.104\nsamples = 454\nvalue = [25, 429]\nclass = Malicious"] ;
100 -> 101 ;
102 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
100 -> 102 ;
103 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
99 -> 103 ;
104 [label="gini = 0.0\nsamples = 36\nvalue = [0, 36]\nclass = Malicious"] ;
98 -> 104 ;
105 [label="trystatement <= 0.5\ngini = 0.409\nsamples = 1552\nvalue = [445, 1107]\nclass = Malicious"] ;
93 -> 105 ;
106 [label="do_for_while_statement <= 0.5\ngini = 0.427\nsamples = 1417\nvalue = [438, 979]\nclass = Malicious"] ;
105 -> 106 ;
107 [label="ifstatement <= 0.5\ngini = 0.403\nsamples = 1332\nvalue = [372, 960]\nclass = Malicious"] ;
106 -> 107 ;
108 [label="varmodifier <= 0.5\ngini = 0.45\nsamples = 745\nvalue = [255, 490]\nclass = Malicious"] ;
107 -> 108 ;
109 [label="gini = 0.49\nsamples = 280\nvalue = [160, 120]\nclass = Benign"] ;
108 -> 109 ;
110 [label="assignmentoperator <= 0.5\ngini = 0.325\nsamples = 465\nvalue = [95, 370]\nclass = Malicious"] ;
108 -> 110 ;
111 [label="gini = 0.324\nsamples = 462\nvalue = [94, 368]\nclass = Malicious"] ;
110 -> 111 ;
112 [label="gini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
110 -> 112 ;
113 [label="assignmentoperator <= 0.5\ngini = 0.319\nsamples = 587\nvalue = [117, 470]\nclass = Malicious"] ;
107 -> 113 ;
114 [label="variable_stuff <= 0.5\ngini = 0.309\nsamples = 581\nvalue = [111, 470]\nclass = Malicious"] ;
113 -> 114 ;
115 [label="gini = 0.26\nsamples = 352\nvalue = [54, 298]\nclass = Malicious"] ;
114 -> 115 ;
116 [label="clause_stuff <= 0.5\ngini = 0.374\nsamples = 229\nvalue = [57, 172]\nclass = Malicious"] ;
114 -> 116 ;
117 [label="gini = 0.371\nsamples = 228\nvalue = [56, 172]\nclass = Malicious"] ;
116 -> 117 ;
118 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
116 -> 118 ;
119 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
113 -> 119 ;
120 [label="assignmentoperator <= 0.5\ngini = 0.347\nsamples = 85\nvalue = [66, 19]\nclass = Benign"] ;
106 -> 120 ;
121 [label="gini = 0.0\nsamples = 66\nvalue = [66, 0]\nclass = Benign"] ;
120 -> 121 ;
122 [label="gini = 0.0\nsamples = 19\nvalue = [0, 19]\nclass = Malicious"] ;
120 -> 122 ;
123 [label="varmodifier <= 0.5\ngini = 0.098\nsamples = 135\nvalue = [7, 128]\nclass = Malicious"] ;
105 -> 123 ;
124 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
123 -> 124 ;
125 [label="do_for_while_statement <= 0.5\ngini = 0.059\nsamples = 132\nvalue = [4, 128]\nclass = Malicious"] ;
123 -> 125 ;
126 [label="ifstatement <= 0.5\ngini = 0.26\nsamples = 13\nvalue = [2, 11]\nclass = Malicious"] ;
125 -> 126 ;
127 [label="gini = 0.444\nsamples = 3\nvalue = [2, 1]\nclass = Benign"] ;
126 -> 127 ;
128 [label="gini = 0.0\nsamples = 10\nvalue = [0, 10]\nclass = Malicious"] ;
126 -> 128 ;
129 [label="ifstatement <= 0.5\ngini = 0.033\nsamples = 119\nvalue = [2, 117]\nclass = Malicious"] ;
125 -> 129 ;
130 [label="gini = 0.0\nsamples = 102\nvalue = [0, 102]\nclass = Malicious"] ;
129 -> 130 ;
131 [label="assignmentoperator <= 0.5\ngini = 0.208\nsamples = 17\nvalue = [2, 15]\nclass = Malicious"] ;
129 -> 131 ;
132 [label="gini = 0.0\nsamples = 15\nvalue = [0, 15]\nclass = Malicious"] ;
131 -> 132 ;
133 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
131 -> 133 ;
134 [label="ifstatement <= 0.5\ngini = 0.217\nsamples = 97\nvalue = [85, 12]\nclass = Benign"] ;
92 -> 134 ;
135 [label="varmodifier <= 0.5\ngini = 0.469\nsamples = 32\nvalue = [20, 12]\nclass = Benign"] ;
134 -> 135 ;
136 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
135 -> 136 ;
137 [label="do_for_while_statement <= 0.5\ngini = 0.499\nsamples = 23\nvalue = [11, 12]\nclass = Malicious"] ;
135 -> 137 ;
138 [label="gini = 0.496\nsamples = 22\nvalue = [10, 12]\nclass = Malicious"] ;
137 -> 138 ;
139 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
137 -> 139 ;
140 [label="gini = 0.0\nsamples = 65\nvalue = [65, 0]\nclass = Benign"] ;
134 -> 140 ;
141 [label="identifiername <= 0.5\ngini = 0.099\nsamples = 2383\nvalue = [125, 2258]\nclass = Malicious"] ;
89 -> 141 ;
142 [label="gini = 0.0\nsamples = 739\nvalue = [0, 739]\nclass = Malicious"] ;
141 -> 142 ;
143 [label="do_for_while_statement <= 0.5\ngini = 0.141\nsamples = 1644\nvalue = [125, 1519]\nclass = Malicious"] ;
141 -> 143 ;
144 [label="formalParameterArg_stuff <= 0.5\ngini = 0.13\nsamples = 1630\nvalue = [114, 1516]\nclass = Malicious"] ;
143 -> 144 ;
145 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
144 -> 145 ;
146 [label="continue_break_statement <= 0.5\ngini = 0.127\nsamples = 1627\nvalue = [111, 1516]\nclass = Malicious"] ;
144 -> 146 ;
147 [label="varmodifier <= 0.5\ngini = 0.126\nsamples = 1626\nvalue = [110, 1516]\nclass = Malicious"] ;
146 -> 147 ;
148 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
147 -> 148 ;
149 [label="assignmentoperator <= 0.5\ngini = 0.125\nsamples = 1625\nvalue = [109, 1516]\nclass = Malicious"] ;
147 -> 149 ;
150 [label="ifstatement <= 0.5\ngini = 0.124\nsamples = 1624\nvalue = [108, 1516]\nclass = Malicious"] ;
149 -> 150 ;
151 [label="gini = 0.0\nsamples = 13\nvalue = [0, 13]\nclass = Malicious"] ;
150 -> 151 ;
152 [label="trystatement <= 0.5\ngini = 0.125\nsamples = 1611\nvalue = [108, 1503]\nclass = Malicious"] ;
150 -> 152 ;
153 [label="gini = 0.125\nsamples = 1610\nvalue = [108, 1502]\nclass = Malicious"] ;
152 -> 153 ;
154 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
152 -> 154 ;
155 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
149 -> 155 ;
156 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
146 -> 156 ;
157 [label="trystatement <= 0.5\ngini = 0.337\nsamples = 14\nvalue = [11, 3]\nclass = Benign"] ;
143 -> 157 ;
158 [label="assignmentoperator <= 0.5\ngini = 0.153\nsamples = 12\nvalue = [11, 1]\nclass = Benign"] ;
157 -> 158 ;
159 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
158 -> 159 ;
160 [label="continue_break_statement <= 0.5\ngini = 0.375\nsamples = 4\nvalue = [3, 1]\nclass = Benign"] ;
158 -> 160 ;
161 [label="formalParameterArg_stuff <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [2, 1]\nclass = Benign"] ;
160 -> 161 ;
162 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
161 -> 162 ;
163 [label="gini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
161 -> 163 ;
164 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
160 -> 164 ;
165 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
157 -> 165 ;
166 [label="trystatement <= 0.5\ngini = 0.107\nsamples = 176\nvalue = [166, 10]\nclass = Benign"] ;
88 -> 166 ;
167 [label="assignmentoperator <= 0.5\ngini = 0.026\nsamples = 154\nvalue = [152, 2]\nclass = Benign"] ;
166 -> 167 ;
168 [label="gini = 0.0\nsamples = 150\nvalue = [150, 0]\nclass = Benign"] ;
167 -> 168 ;
169 [label="ifstatement <= 0.5\ngini = 0.5\nsamples = 4\nvalue = [2, 2]\nclass = Benign"] ;
167 -> 169 ;
170 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
169 -> 170 ;
171 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
169 -> 171 ;
172 [label="identifiername <= 0.5\ngini = 0.463\nsamples = 22\nvalue = [14, 8]\nclass = Benign"] ;
166 -> 172 ;
173 [label="gini = 0.0\nsamples = 8\nvalue = [0, 8]\nclass = Malicious"] ;
172 -> 173 ;
174 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
172 -> 174 ;
175 [label="argument_stuff <= 0.5\ngini = 0.09\nsamples = 3887\nvalue = [183, 3704]\nclass = Malicious"] ;
87 -> 175 ;
176 [label="gini = 0.0\nsamples = 85\nvalue = [85, 0]\nclass = Benign"] ;
175 -> 176 ;
177 [label="varmodifier <= 0.5\ngini = 0.05\nsamples = 3802\nvalue = [98, 3704]\nclass = Malicious"] ;
175 -> 177 ;
178 [label="identifiername <= 0.5\ngini = 0.159\nsamples = 23\nvalue = [21, 2]\nclass = Benign"] ;
177 -> 178 ;
179 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
178 -> 179 ;
180 [label="gini = 0.0\nsamples = 21\nvalue = [21, 0]\nclass = Benign"] ;
178 -> 180 ;
181 [label="do_for_while_statement <= 0.5\ngini = 0.04\nsamples = 3779\nvalue = [77, 3702]\nclass = Malicious"] ;
177 -> 181 ;
182 [label="ifstatement <= 0.5\ngini = 0.079\nsamples = 1724\nvalue = [71, 1653]\nclass = Malicious"] ;
181 -> 182 ;
183 [label="identifiername <= 0.5\ngini = 0.375\nsamples = 64\nvalue = [48, 16]\nclass = Benign"] ;
182 -> 183 ;
184 [label="gini = 0.124\nsamples = 15\nvalue = [1, 14]\nclass = Malicious"] ;
183 -> 184 ;
185 [label="returnstatement <= 0.5\ngini = 0.078\nsamples = 49\nvalue = [47, 2]\nclass = Benign"] ;
183 -> 185 ;
186 [label="gini = 0.0\nsamples = 47\nvalue = [47, 0]\nclass = Benign"] ;
185 -> 186 ;
187 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
185 -> 187 ;
188 [label="identifiername <= 0.5\ngini = 0.027\nsamples = 1660\nvalue = [23, 1637]\nclass = Malicious"] ;
182 -> 188 ;
189 [label="gini = 0.0\nsamples = 826\nvalue = [0, 826]\nclass = Malicious"] ;
188 -> 189 ;
190 [label="formalParameterArg_stuff <= 0.5\ngini = 0.054\nsamples = 834\nvalue = [23, 811]\nclass = Malicious"] ;
188 -> 190 ;
191 [label="assignmentoperator <= 0.5\ngini = 0.045\nsamples = 829\nvalue = [19, 810]\nclass = Malicious"] ;
190 -> 191 ;
192 [label="returnstatement <= 0.5\ngini = 0.053\nsamples = 699\nvalue = [19, 680]\nclass = Malicious"] ;
191 -> 192 ;
193 [label="continue_break_statement <= 0.5\ngini = 0.048\nsamples = 697\nvalue = [17, 680]\nclass = Malicious"] ;
192 -> 193 ;
194 [label="trystatement <= 0.5\ngini = 0.048\nsamples = 693\nvalue = [17, 676]\nclass = Malicious"] ;
193 -> 194 ;
195 [label="gini = 0.049\nsamples = 639\nvalue = [16, 623]\nclass = Malicious"] ;
194 -> 195 ;
196 [label="gini = 0.036\nsamples = 54\nvalue = [1, 53]\nclass = Malicious"] ;
194 -> 196 ;
197 [label="gini = 0.0\nsamples = 4\nvalue = [0, 4]\nclass = Malicious"] ;
193 -> 197 ;
198 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
192 -> 198 ;
199 [label="gini = 0.0\nsamples = 130\nvalue = [0, 130]\nclass = Malicious"] ;
191 -> 199 ;
200 [label="returnstatement <= 0.5\ngini = 0.32\nsamples = 5\nvalue = [4, 1]\nclass = Benign"] ;
190 -> 200 ;
201 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
200 -> 201 ;
202 [label="gini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
200 -> 202 ;
203 [label="formalParameterArg_stuff <= 0.5\ngini = 0.006\nsamples = 2055\nvalue = [6, 2049]\nclass = Malicious"] ;
181 -> 203 ;
204 [label="ifstatement <= 0.5\ngini = 0.005\nsamples = 2053\nvalue = [5, 2048]\nclass = Malicious"] ;
203 -> 204 ;
205 [label="gini = 0.0\nsamples = 809\nvalue = [0, 809]\nclass = Malicious"] ;
204 -> 205 ;
206 [label="assignmentoperator <= 0.5\ngini = 0.008\nsamples = 1244\nvalue = [5, 1239]\nclass = Malicious"] ;
204 -> 206 ;
207 [label="continue_break_statement <= 0.5\ngini = 0.022\nsamples = 448\nvalue = [5, 443]\nclass = Malicious"] ;
206 -> 207 ;
208 [label="gini = 0.033\nsamples = 299\nvalue = [5, 294]\nclass = Malicious"] ;
207 -> 208 ;
209 [label="gini = 0.0\nsamples = 149\nvalue = [0, 149]\nclass = Malicious"] ;
207 -> 209 ;
210 [label="gini = 0.0\nsamples = 796\nvalue = [0, 796]\nclass = Malicious"] ;
206 -> 210 ;
211 [label="catchproduction <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
203 -> 211 ;
212 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
211 -> 212 ;
213 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
211 -> 213 ;
214 [label="do_for_while_statement <= 0.5\ngini = 0.253\nsamples = 10368\nvalue = [8828, 1540]\nclass = Benign"] ;
0 -> 214 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
215 [label="trystatement <= 0.5\ngini = 0.001\nsamples = 8597\nvalue = [8594, 3]\nclass = Benign"] ;
214 -> 215 ;
216 [label="gini = 0.0\nsamples = 8509\nvalue = [8509, 0]\nclass = Benign"] ;
215 -> 216 ;
217 [label="ifstatement <= 0.5\ngini = 0.066\nsamples = 88\nvalue = [85, 3]\nclass = Benign"] ;
215 -> 217 ;
218 [label="gini = 0.0\nsamples = 44\nvalue = [44, 0]\nclass = Benign"] ;
217 -> 218 ;
219 [label="variable_stuff <= 0.5\ngini = 0.127\nsamples = 44\nvalue = [41, 3]\nclass = Benign"] ;
217 -> 219 ;
220 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
219 -> 220 ;
221 [label="formalParameterArg_stuff <= 0.5\ngini = 0.157\nsamples = 35\nvalue = [32, 3]\nclass = Benign"] ;
219 -> 221 ;
222 [label="element_stuff <= 0.5\ngini = 0.185\nsamples = 29\nvalue = [26, 3]\nclass = Benign"] ;
221 -> 222 ;
223 [label="assignmentoperator <= 0.5\ngini = 0.278\nsamples = 12\nvalue = [10, 2]\nclass = Benign"] ;
222 -> 223 ;
224 [label="gini = 0.298\nsamples = 11\nvalue = [9, 2]\nclass = Benign"] ;
223 -> 224 ;
225 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
223 -> 225 ;
226 [label="numericliteral <= 0.5\ngini = 0.111\nsamples = 17\nvalue = [16, 1]\nclass = Benign"] ;
222 -> 226 ;
227 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
226 -> 227 ;
228 [label="gini = 0.124\nsamples = 15\nvalue = [14, 1]\nclass = Benign"] ;
226 -> 228 ;
229 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
221 -> 229 ;
230 [label="identifiername <= 0.5\ngini = 0.229\nsamples = 1771\nvalue = [234, 1537]\nclass = Malicious"] ;
214 -> 230 ;
231 [label="gini = 0.0\nsamples = 1478\nvalue = [0, 1478]\nclass = Malicious"] ;
230 -> 231 ;
232 [label="trystatement <= 0.5\ngini = 0.322\nsamples = 293\nvalue = [234, 59]\nclass = Benign"] ;
230 -> 232 ;
233 [label="gini = 0.0\nsamples = 212\nvalue = [212, 0]\nclass = Benign"] ;
232 -> 233 ;
234 [label="finallyproduction <= 0.5\ngini = 0.396\nsamples = 81\nvalue = [22, 59]\nclass = Malicious"] ;
232 -> 234 ;
235 [label="continue_break_statement <= 0.5\ngini = 0.486\nsamples = 53\nvalue = [22, 31]\nclass = Malicious"] ;
234 -> 235 ;
236 [label="gini = 0.0\nsamples = 17\nvalue = [17, 0]\nclass = Benign"] ;
235 -> 236 ;
237 [label="switchstatement <= 0.5\ngini = 0.239\nsamples = 36\nvalue = [5, 31]\nclass = Malicious"] ;
235 -> 237 ;
238 [label="throwstatement <= 0.5\ngini = 0.202\nsamples = 35\nvalue = [4, 31]\nclass = Malicious"] ;
237 -> 238 ;
239 [label="formalParameterArg_stuff <= 0.5\ngini = 0.161\nsamples = 34\nvalue = [3, 31]\nclass = Malicious"] ;
238 -> 239 ;
240 [label="gini = 0.0\nsamples = 6\nvalue = [0, 6]\nclass = Malicious"] ;
239 -> 240 ;
241 [label="element_stuff <= 0.5\ngini = 0.191\nsamples = 28\nvalue = [3, 25]\nclass = Malicious"] ;
239 -> 241 ;
242 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
241 -> 242 ;
243 [label="gini = 0.137\nsamples = 27\nvalue = [2, 25]\nclass = Malicious"] ;
241 -> 243 ;
244 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
238 -> 244 ;
245 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
237 -> 245 ;
246 [label="gini = 0.0\nsamples = 28\nvalue = [0, 28]\nclass = Malicious"] ;
234 -> 246 ;
}
