digraph Tree {
node [shape=box] ;
0 [label="objectliteral <= 0.5\ngini = 0.5\nsamples = 27000\nvalue = [13482, 13518]\nclass = Malicious"] ;
1 [label="memberindexexpression <= 0.5\ngini = 0.388\nsamples = 16240\nvalue = [4285, 11955]\nclass = Malicious"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="newexpression <= 0.5\ngini = 0.481\nsamples = 9651\nvalue = [3891, 5760]\nclass = Malicious"] ;
1 -> 2 ;
3 [label="statement <= 0.5\ngini = 0.498\nsamples = 7656\nvalue = [3606, 4050]\nclass = Malicious"] ;
2 -> 3 ;
4 [label="gini = 0.396\nsamples = 2556\nvalue = [694, 1862]\nclass = Malicious"] ;
3 -> 4 ;
5 [label="numericliteral <= 0.5\ngini = 0.49\nsamples = 5100\nvalue = [2912, 2188]\nclass = Benign"] ;
3 -> 5 ;
6 [label="identifierexpression <= 0.5\ngini = 0.368\nsamples = 2852\nvalue = [2158, 694]\nclass = Benign"] ;
5 -> 6 ;
7 [label="argumentsexpression <= 0.5\ngini = 0.5\nsamples = 903\nvalue = [442, 461]\nclass = Malicious"] ;
6 -> 7 ;
8 [label="gini = 0.0\nsamples = 440\nvalue = [440, 0]\nclass = Benign"] ;
7 -> 8 ;
9 [label="parenthesizedexpression <= 0.5\ngini = 0.009\nsamples = 463\nvalue = [2, 461]\nclass = Malicious"] ;
7 -> 9 ;
10 [label="gini = 0.0\nsamples = 461\nvalue = [0, 461]\nclass = Malicious"] ;
9 -> 10 ;
11 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
9 -> 11 ;
12 [label="assignmentexpression <= 0.5\ngini = 0.211\nsamples = 1949\nvalue = [1716, 233]\nclass = Benign"] ;
6 -> 12 ;
13 [label="assignmentoperator <= 0.5\ngini = 0.282\nsamples = 1241\nvalue = [1030, 211]\nclass = Benign"] ;
12 -> 13 ;
14 [label="functionexpression <= 0.5\ngini = 0.261\nsamples = 1214\nvalue = [1027, 187]\nclass = Benign"] ;
13 -> 14 ;
15 [label="memberdotexpression <= 0.5\ngini = 0.366\nsamples = 776\nvalue = [589, 187]\nclass = Benign"] ;
14 -> 15 ;
16 [label="additiveexpression <= 0.5\ngini = 0.179\nsamples = 191\nvalue = [172, 19]\nclass = Benign"] ;
15 -> 16 ;
17 [label="gini = 0.0\nsamples = 159\nvalue = [159, 0]\nclass = Benign"] ;
16 -> 17 ;
18 [label="argumentsexpression <= 0.5\ngini = 0.482\nsamples = 32\nvalue = [13, 19]\nclass = Malicious"] ;
16 -> 18 ;
19 [label="gini = 0.0\nsamples = 13\nvalue = [13, 0]\nclass = Benign"] ;
18 -> 19 ;
20 [label="gini = 0.0\nsamples = 19\nvalue = [0, 19]\nclass = Malicious"] ;
18 -> 20 ;
21 [label="ifstatement <= 0.5\ngini = 0.409\nsamples = 585\nvalue = [417, 168]\nclass = Benign"] ;
15 -> 21 ;
22 [label="arrayliteral <= 0.5\ngini = 0.437\nsamples = 521\nvalue = [353, 168]\nclass = Benign"] ;
21 -> 22 ;
23 [label="variabledeclaration <= 0.5\ngini = 0.455\nsamples = 480\nvalue = [312, 168]\nclass = Benign"] ;
22 -> 23 ;
24 [label="literalexpression <= 0.5\ngini = 0.471\nsamples = 441\nvalue = [274, 167]\nclass = Benign"] ;
23 -> 24 ;
25 [label="gini = 0.0\nsamples = 19\nvalue = [19, 0]\nclass = Benign"] ;
24 -> 25 ;
26 [label="additiveexpression <= 0.5\ngini = 0.478\nsamples = 422\nvalue = [255, 167]\nclass = Benign"] ;
24 -> 26 ;
27 [label="parenthesizedexpression <= 0.5\ngini = 0.48\nsamples = 418\nvalue = [251, 167]\nclass = Benign"] ;
26 -> 27 ;
28 [label="logicalorexpression <= 0.5\ngini = 0.481\nsamples = 416\nvalue = [249, 167]\nclass = Benign"] ;
27 -> 28 ;
29 [label="logicalandexpression <= 0.5\ngini = 0.481\nsamples = 414\nvalue = [247, 167]\nclass = Benign"] ;
28 -> 29 ;
30 [label="trystatement <= 0.5\ngini = 0.482\nsamples = 412\nvalue = [245, 167]\nclass = Benign"] ;
29 -> 30 ;
31 [label="gini = 0.482\nsamples = 411\nvalue = [244, 167]\nclass = Benign"] ;
30 -> 31 ;
32 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
30 -> 32 ;
33 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
29 -> 33 ;
34 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
28 -> 34 ;
35 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
27 -> 35 ;
36 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
26 -> 36 ;
37 [label="expressionsequence <= 0.5\ngini = 0.05\nsamples = 39\nvalue = [38, 1]\nclass = Benign"] ;
23 -> 37 ;
38 [label="gini = 0.0\nsamples = 19\nvalue = [19, 0]\nclass = Benign"] ;
37 -> 38 ;
39 [label="additiveexpression <= 0.5\ngini = 0.095\nsamples = 20\nvalue = [19, 1]\nclass = Benign"] ;
37 -> 39 ;
40 [label="statementlist <= 0.5\ngini = 0.153\nsamples = 12\nvalue = [11, 1]\nclass = Benign"] ;
39 -> 40 ;
41 [label="literal <= 0.5\ngini = 0.219\nsamples = 8\nvalue = [7, 1]\nclass = Benign"] ;
40 -> 41 ;
42 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
41 -> 42 ;
43 [label="gini = 0.245\nsamples = 7\nvalue = [6, 1]\nclass = Benign"] ;
41 -> 43 ;
44 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
40 -> 44 ;
45 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
39 -> 45 ;
46 [label="gini = 0.0\nsamples = 41\nvalue = [41, 0]\nclass = Benign"] ;
22 -> 46 ;
47 [label="gini = 0.0\nsamples = 64\nvalue = [64, 0]\nclass = Benign"] ;
21 -> 47 ;
48 [label="gini = 0.0\nsamples = 438\nvalue = [438, 0]\nclass = Benign"] ;
14 -> 48 ;
49 [label="returnstatement <= 0.5\ngini = 0.198\nsamples = 27\nvalue = [3, 24]\nclass = Malicious"] ;
13 -> 49 ;
50 [label="gini = 0.0\nsamples = 15\nvalue = [0, 15]\nclass = Malicious"] ;
49 -> 50 ;
51 [label="gini = 0.375\nsamples = 12\nvalue = [3, 9]\nclass = Malicious"] ;
49 -> 51 ;
52 [label="returnstatement <= 0.5\ngini = 0.06\nsamples = 708\nvalue = [686, 22]\nclass = Benign"] ;
12 -> 52 ;
53 [label="emptystatement <= 0.5\ngini = 0.023\nsamples = 680\nvalue = [672, 8]\nclass = Benign"] ;
52 -> 53 ;
54 [label="assignmentoperator <= 0.5\ngini = 0.018\nsamples = 676\nvalue = [670, 6]\nclass = Benign"] ;
53 -> 54 ;
55 [label="gini = 0.0\nsamples = 596\nvalue = [596, 0]\nclass = Benign"] ;
54 -> 55 ;
56 [label="memberdotexpression <= 0.5\ngini = 0.139\nsamples = 80\nvalue = [74, 6]\nclass = Benign"] ;
54 -> 56 ;
57 [label="gini = 0.0\nsamples = 6\nvalue = [0, 6]\nclass = Malicious"] ;
56 -> 57 ;
58 [label="gini = 0.0\nsamples = 74\nvalue = [74, 0]\nclass = Benign"] ;
56 -> 58 ;
59 [label="thisexpression <= 0.5\ngini = 0.5\nsamples = 4\nvalue = [2, 2]\nclass = Benign"] ;
53 -> 59 ;
60 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
59 -> 60 ;
61 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
59 -> 61 ;
62 [label="assignmentoperatorexpression <= 0.5\ngini = 0.5\nsamples = 28\nvalue = [14, 14]\nclass = Benign"] ;
52 -> 62 ;
63 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
62 -> 63 ;
64 [label="gini = 0.0\nsamples = 14\nvalue = [0, 14]\nclass = Malicious"] ;
62 -> 64 ;
65 [label="parenthesizedexpression <= 0.5\ngini = 0.446\nsamples = 2248\nvalue = [754, 1494]\nclass = Malicious"] ;
5 -> 65 ;
66 [label="arguments <= 0.5\ngini = 0.498\nsamples = 1311\nvalue = [695, 616]\nclass = Benign"] ;
65 -> 66 ;
67 [label="gini = 0.0\nsamples = 329\nvalue = [329, 0]\nclass = Benign"] ;
66 -> 67 ;
68 [label="functionbody <= 0.5\ngini = 0.468\nsamples = 982\nvalue = [366, 616]\nclass = Malicious"] ;
66 -> 68 ;
69 [label="statementlist <= 0.5\ngini = 0.375\nsamples = 821\nvalue = [205, 616]\nclass = Malicious"] ;
68 -> 69 ;
70 [label="variabledeclarationlist <= 0.5\ngini = 0.333\nsamples = 781\nvalue = [165, 616]\nclass = Malicious"] ;
69 -> 70 ;
71 [label="equalityexpression <= 0.5\ngini = 0.456\nsamples = 396\nvalue = [139, 257]\nclass = Malicious"] ;
70 -> 71 ;
72 [label="memberdotexpression <= 0.5\ngini = 0.499\nsamples = 266\nvalue = [139, 127]\nclass = Benign"] ;
71 -> 72 ;
73 [label="gini = 0.0\nsamples = 33\nvalue = [33, 0]\nclass = Benign"] ;
72 -> 73 ;
74 [label="additiveexpression <= 0.5\ngini = 0.496\nsamples = 233\nvalue = [106, 127]\nclass = Malicious"] ;
72 -> 74 ;
75 [label="elementlist <= 0.5\ngini = 0.483\nsamples = 214\nvalue = [87, 127]\nclass = Malicious"] ;
74 -> 75 ;
76 [label="logicalandexpression <= 0.5\ngini = 0.477\nsamples = 209\nvalue = [82, 127]\nclass = Malicious"] ;
75 -> 76 ;
77 [label="assignmentexpression <= 0.5\ngini = 0.471\nsamples = 205\nvalue = [78, 127]\nclass = Malicious"] ;
76 -> 77 ;
78 [label="gini = 0.465\nsamples = 201\nvalue = [74, 127]\nclass = Malicious"] ;
77 -> 78 ;
79 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
77 -> 79 ;
80 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
76 -> 80 ;
81 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
75 -> 81 ;
82 [label="gini = 0.0\nsamples = 19\nvalue = [19, 0]\nclass = Benign"] ;
74 -> 82 ;
83 [label="gini = 0.0\nsamples = 130\nvalue = [0, 130]\nclass = Malicious"] ;
71 -> 83 ;
84 [label="identifiername <= 0.5\ngini = 0.126\nsamples = 385\nvalue = [26, 359]\nclass = Malicious"] ;
70 -> 84 ;
85 [label="gini = 0.0\nsamples = 11\nvalue = [11, 0]\nclass = Benign"] ;
84 -> 85 ;
86 [label="multiplicativeexpression <= 0.5\ngini = 0.077\nsamples = 374\nvalue = [15, 359]\nclass = Malicious"] ;
84 -> 86 ;
87 [label="assignmentexpression <= 0.5\ngini = 0.053\nsamples = 369\nvalue = [10, 359]\nclass = Malicious"] ;
86 -> 87 ;
88 [label="arrayliteralexpression <= 0.5\ngini = 0.032\nsamples = 365\nvalue = [6, 359]\nclass = Malicious"] ;
87 -> 88 ;
89 [label="thisexpression <= 0.5\ngini = 0.027\nsamples = 364\nvalue = [5, 359]\nclass = Malicious"] ;
88 -> 89 ;
90 [label="expressionstatement <= 0.5\ngini = 0.022\nsamples = 363\nvalue = [4, 359]\nclass = Malicious"] ;
89 -> 90 ;
91 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
90 -> 91 ;
92 [label="additiveexpression <= 0.5\ngini = 0.016\nsamples = 362\nvalue = [3, 359]\nclass = Malicious"] ;
90 -> 92 ;
93 [label="gini = 0.026\nsamples = 225\nvalue = [3, 222]\nclass = Malicious"] ;
92 -> 93 ;
94 [label="gini = 0.0\nsamples = 137\nvalue = [0, 137]\nclass = Malicious"] ;
92 -> 94 ;
95 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
89 -> 95 ;
96 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
88 -> 96 ;
97 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
87 -> 97 ;
98 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
86 -> 98 ;
99 [label="gini = 0.0\nsamples = 40\nvalue = [40, 0]\nclass = Benign"] ;
69 -> 99 ;
100 [label="gini = 0.0\nsamples = 161\nvalue = [161, 0]\nclass = Benign"] ;
68 -> 100 ;
101 [label="assignmentexpression <= 0.5\ngini = 0.118\nsamples = 937\nvalue = [59, 878]\nclass = Malicious"] ;
65 -> 101 ;
102 [label="postincrementexpression <= 0.5\ngini = 0.046\nsamples = 42\nvalue = [41, 1]\nclass = Benign"] ;
101 -> 102 ;
103 [label="gini = 0.0\nsamples = 41\nvalue = [41, 0]\nclass = Benign"] ;
102 -> 103 ;
104 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
102 -> 104 ;
105 [label="formalparameterlist <= 0.5\ngini = 0.039\nsamples = 895\nvalue = [18, 877]\nclass = Malicious"] ;
101 -> 105 ;
106 [label="unaryminusexpression <= 0.5\ngini = 0.009\nsamples = 881\nvalue = [4, 877]\nclass = Malicious"] ;
105 -> 106 ;
107 [label="thisexpression <= 0.5\ngini = 0.005\nsamples = 879\nvalue = [2, 877]\nclass = Malicious"] ;
106 -> 107 ;
108 [label="relationalexpression <= 0.5\ngini = 0.002\nsamples = 878\nvalue = [1, 877]\nclass = Malicious"] ;
107 -> 108 ;
109 [label="gini = 0.0\nsamples = 867\nvalue = [0, 867]\nclass = Malicious"] ;
108 -> 109 ;
110 [label="forvarstatement <= 0.5\ngini = 0.165\nsamples = 11\nvalue = [1, 10]\nclass = Malicious"] ;
108 -> 110 ;
111 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
110 -> 111 ;
112 [label="gini = 0.0\nsamples = 10\nvalue = [0, 10]\nclass = Malicious"] ;
110 -> 112 ;
113 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
107 -> 113 ;
114 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
106 -> 114 ;
115 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
105 -> 115 ;
116 [label="assignmentexpression <= 0.5\ngini = 0.245\nsamples = 1995\nvalue = [285, 1710]\nclass = Malicious"] ;
2 -> 116 ;
117 [label="elementlist <= 0.5\ngini = 0.052\nsamples = 1756\nvalue = [47, 1709]\nclass = Malicious"] ;
116 -> 117 ;
118 [label="literalexpression <= 0.5\ngini = 0.035\nsamples = 1740\nvalue = [31, 1709]\nclass = Malicious"] ;
117 -> 118 ;
119 [label="gini = 0.0\nsamples = 13\nvalue = [13, 0]\nclass = Benign"] ;
118 -> 119 ;
120 [label="expressionsequence <= 0.5\ngini = 0.021\nsamples = 1727\nvalue = [18, 1709]\nclass = Malicious"] ;
118 -> 120 ;
121 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
120 -> 121 ;
122 [label="variabledeclarationlist <= 0.5\ngini = 0.016\nsamples = 1723\nvalue = [14, 1709]\nclass = Malicious"] ;
120 -> 122 ;
123 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
122 -> 123 ;
124 [label="block <= 0.5\ngini = 0.013\nsamples = 1720\nvalue = [11, 1709]\nclass = Malicious"] ;
122 -> 124 ;
125 [label="logicalorexpression <= 0.5\ngini = 0.009\nsamples = 1715\nvalue = [8, 1707]\nclass = Malicious"] ;
124 -> 125 ;
126 [label="additiveexpression <= 0.5\ngini = 0.008\nsamples = 1714\nvalue = [7, 1707]\nclass = Malicious"] ;
125 -> 126 ;
127 [label="memberdotexpression <= 0.5\ngini = 0.007\nsamples = 1711\nvalue = [6, 1705]\nclass = Malicious"] ;
126 -> 127 ;
128 [label="gini = 0.0\nsamples = 1093\nvalue = [0, 1093]\nclass = Malicious"] ;
127 -> 128 ;
129 [label="numericliteral <= 0.5\ngini = 0.019\nsamples = 618\nvalue = [6, 612]\nclass = Malicious"] ;
127 -> 129 ;
130 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
129 -> 130 ;
131 [label="ifstatement <= 0.5\ngini = 0.006\nsamples = 614\nvalue = [2, 612]\nclass = Malicious"] ;
129 -> 131 ;
132 [label="gini = 0.346\nsamples = 9\nvalue = [2, 7]\nclass = Malicious"] ;
131 -> 132 ;
133 [label="gini = 0.0\nsamples = 605\nvalue = [0, 605]\nclass = Malicious"] ;
131 -> 133 ;
134 [label="numericliteral <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
126 -> 134 ;
135 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
134 -> 135 ;
136 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
134 -> 136 ;
137 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
125 -> 137 ;
138 [label="parenthesizedexpression <= 0.5\ngini = 0.48\nsamples = 5\nvalue = [3, 2]\nclass = Benign"] ;
124 -> 138 ;
139 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
138 -> 139 ;
140 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
138 -> 140 ;
141 [label="gini = 0.0\nsamples = 16\nvalue = [16, 0]\nclass = Benign"] ;
117 -> 141 ;
142 [label="assignmentoperator <= 0.5\ngini = 0.008\nsamples = 239\nvalue = [238, 1]\nclass = Benign"] ;
116 -> 142 ;
143 [label="gini = 0.0\nsamples = 238\nvalue = [238, 0]\nclass = Benign"] ;
142 -> 143 ;
144 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
142 -> 144 ;
145 [label="argumentsexpression <= 0.5\ngini = 0.112\nsamples = 6589\nvalue = [394, 6195]\nclass = Malicious"] ;
1 -> 145 ;
146 [label="gini = 0.0\nsamples = 135\nvalue = [135, 0]\nclass = Benign"] ;
145 -> 146 ;
147 [label="forvarinstatement <= 0.5\ngini = 0.077\nsamples = 6454\nvalue = [259, 6195]\nclass = Malicious"] ;
145 -> 147 ;
148 [label="logicalorexpression <= 0.5\ngini = 0.061\nsamples = 6396\nvalue = [201, 6195]\nclass = Malicious"] ;
147 -> 148 ;
149 [label="deleteexpression <= 0.5\ngini = 0.044\nsamples = 6339\nvalue = [144, 6195]\nclass = Malicious"] ;
148 -> 149 ;
150 [label="ternaryexpression <= 0.5\ngini = 0.04\nsamples = 6324\nvalue = [129, 6195]\nclass = Malicious"] ;
149 -> 150 ;
151 [label="notexpression <= 0.5\ngini = 0.037\nsamples = 6315\nvalue = [120, 6195]\nclass = Malicious"] ;
150 -> 151 ;
152 [label="elementlist <= 0.5\ngini = 0.034\nsamples = 6295\nvalue = [110, 6185]\nclass = Malicious"] ;
151 -> 152 ;
153 [label="assignmentexpression <= 0.5\ngini = 0.065\nsamples = 2747\nvalue = [92, 2655]\nclass = Malicious"] ;
152 -> 153 ;
154 [label="arrayliteral <= 0.5\ngini = 0.01\nsamples = 2302\nvalue = [12, 2290]\nclass = Malicious"] ;
153 -> 154 ;
155 [label="postincrementexpression <= 0.5\ngini = 0.01\nsamples = 2301\nvalue = [11, 2290]\nclass = Malicious"] ;
154 -> 155 ;
156 [label="multiplicativeexpression <= 0.5\ngini = 0.008\nsamples = 2275\nvalue = [9, 2266]\nclass = Malicious"] ;
155 -> 156 ;
157 [label="variabledeclarationlist <= 0.5\ngini = 0.007\nsamples = 2274\nvalue = [8, 2266]\nclass = Malicious"] ;
156 -> 157 ;
158 [label="newexpression <= 0.5\ngini = 0.03\nsamples = 453\nvalue = [7, 446]\nclass = Malicious"] ;
157 -> 158 ;
159 [label="statementlist <= 0.5\ngini = 0.022\nsamples = 451\nvalue = [5, 446]\nclass = Malicious"] ;
158 -> 159 ;
160 [label="memberdotexpression <= 0.5\ngini = 0.018\nsamples = 450\nvalue = [4, 446]\nclass = Malicious"] ;
159 -> 160 ;
161 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
160 -> 161 ;
162 [label="functionbody <= 0.5\ngini = 0.013\nsamples = 449\nvalue = [3, 446]\nclass = Malicious"] ;
160 -> 162 ;
163 [label="numericliteral <= 0.5\ngini = 0.009\nsamples = 448\nvalue = [2, 446]\nclass = Malicious"] ;
162 -> 163 ;
164 [label="gini = 0.0\nsamples = 278\nvalue = [0, 278]\nclass = Malicious"] ;
163 -> 164 ;
165 [label="additiveexpression <= 0.5\ngini = 0.023\nsamples = 170\nvalue = [2, 168]\nclass = Malicious"] ;
163 -> 165 ;
166 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
165 -> 166 ;
167 [label="gini = 0.0\nsamples = 168\nvalue = [0, 168]\nclass = Malicious"] ;
165 -> 167 ;
168 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
162 -> 168 ;
169 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
159 -> 169 ;
170 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
158 -> 170 ;
171 [label="functionbody <= 0.5\ngini = 0.001\nsamples = 1821\nvalue = [1, 1820]\nclass = Malicious"] ;
157 -> 171 ;
172 [label="numericliteral <= 0.5\ngini = 0.004\nsamples = 501\nvalue = [1, 500]\nclass = Malicious"] ;
171 -> 172 ;
173 [label="gini = 0.0\nsamples = 500\nvalue = [0, 500]\nclass = Malicious"] ;
172 -> 173 ;
174 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
172 -> 174 ;
175 [label="gini = 0.0\nsamples = 1320\nvalue = [0, 1320]\nclass = Malicious"] ;
171 -> 175 ;
176 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
156 -> 176 ;
177 [label="emptystatement <= 0.5\ngini = 0.142\nsamples = 26\nvalue = [2, 24]\nclass = Malicious"] ;
155 -> 177 ;
178 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
177 -> 178 ;
179 [label="gini = 0.0\nsamples = 24\nvalue = [0, 24]\nclass = Malicious"] ;
177 -> 179 ;
180 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
154 -> 180 ;
181 [label="parenthesizedexpression <= 0.5\ngini = 0.295\nsamples = 445\nvalue = [80, 365]\nclass = Malicious"] ;
153 -> 181 ;
182 [label="relationalexpression <= 0.5\ngini = 0.156\nsamples = 363\nvalue = [31, 332]\nclass = Malicious"] ;
181 -> 182 ;
183 [label="functionbody <= 0.5\ngini = 0.373\nsamples = 101\nvalue = [25, 76]\nclass = Malicious"] ;
182 -> 183 ;
184 [label="newexpression <= 0.5\ngini = 0.34\nsamples = 23\nvalue = [18, 5]\nclass = Benign"] ;
183 -> 184 ;
185 [label="gini = 0.0\nsamples = 13\nvalue = [13, 0]\nclass = Benign"] ;
184 -> 185 ;
186 [label="memberdotexpression <= 0.5\ngini = 0.5\nsamples = 10\nvalue = [5, 5]\nclass = Benign"] ;
184 -> 186 ;
187 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
186 -> 187 ;
188 [label="varmodifier <= 0.5\ngini = 0.408\nsamples = 7\nvalue = [2, 5]\nclass = Malicious"] ;
186 -> 188 ;
189 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
188 -> 189 ;
190 [label="gini = 0.0\nsamples = 5\nvalue = [0, 5]\nclass = Malicious"] ;
188 -> 190 ;
191 [label="memberdotexpression <= 0.5\ngini = 0.163\nsamples = 78\nvalue = [7, 71]\nclass = Malicious"] ;
183 -> 191 ;
192 [label="gini = 0.0\nsamples = 46\nvalue = [0, 46]\nclass = Malicious"] ;
191 -> 192 ;
193 [label="newexpression <= 0.5\ngini = 0.342\nsamples = 32\nvalue = [7, 25]\nclass = Malicious"] ;
191 -> 193 ;
194 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
193 -> 194 ;
195 [label="gini = 0.0\nsamples = 25\nvalue = [0, 25]\nclass = Malicious"] ;
193 -> 195 ;
196 [label="equalityexpression <= 0.5\ngini = 0.045\nsamples = 262\nvalue = [6, 256]\nclass = Malicious"] ;
182 -> 196 ;
197 [label="additiveexpression <= 0.5\ngini = 0.016\nsamples = 255\nvalue = [2, 253]\nclass = Malicious"] ;
196 -> 197 ;
198 [label="thisexpression <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
197 -> 198 ;
199 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
198 -> 199 ;
200 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
198 -> 200 ;
201 [label="newexpression <= 0.5\ngini = 0.008\nsamples = 253\nvalue = [1, 252]\nclass = Malicious"] ;
197 -> 201 ;
202 [label="gini = 0.0\nsamples = 244\nvalue = [0, 244]\nclass = Malicious"] ;
201 -> 202 ;
203 [label="returnstatement <= 0.5\ngini = 0.198\nsamples = 9\nvalue = [1, 8]\nclass = Malicious"] ;
201 -> 203 ;
204 [label="gini = 0.0\nsamples = 8\nvalue = [0, 8]\nclass = Malicious"] ;
203 -> 204 ;
205 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
203 -> 205 ;
206 [label="functionexpression <= 0.5\ngini = 0.49\nsamples = 7\nvalue = [4, 3]\nclass = Benign"] ;
196 -> 206 ;
207 [label="gini = 0.0\nsamples = 3\nvalue = [0, 3]\nclass = Malicious"] ;
206 -> 207 ;
208 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
206 -> 208 ;
209 [label="emptystatement <= 0.5\ngini = 0.481\nsamples = 82\nvalue = [49, 33]\nclass = Benign"] ;
181 -> 209 ;
210 [label="gini = 0.0\nsamples = 49\nvalue = [49, 0]\nclass = Benign"] ;
209 -> 210 ;
211 [label="gini = 0.0\nsamples = 33\nvalue = [0, 33]\nclass = Malicious"] ;
209 -> 211 ;
212 [label="forstatement <= 0.5\ngini = 0.01\nsamples = 3548\nvalue = [18, 3530]\nclass = Malicious"] ;
152 -> 212 ;
213 [label="variabledeclaration <= 0.5\ngini = 0.009\nsamples = 3546\nvalue = [16, 3530]\nclass = Malicious"] ;
212 -> 213 ;
214 [label="identifiername <= 0.5\ngini = 0.5\nsamples = 4\nvalue = [2, 2]\nclass = Benign"] ;
213 -> 214 ;
215 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
214 -> 215 ;
216 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
214 -> 216 ;
217 [label="functionexpression <= 0.5\ngini = 0.008\nsamples = 3542\nvalue = [14, 3528]\nclass = Malicious"] ;
213 -> 217 ;
218 [label="gini = 0.0\nsamples = 2702\nvalue = [0, 2702]\nclass = Malicious"] ;
217 -> 218 ;
219 [label="returnstatement <= 0.5\ngini = 0.033\nsamples = 840\nvalue = [14, 826]\nclass = Malicious"] ;
217 -> 219 ;
220 [label="emptystatement <= 0.5\ngini = 0.247\nsamples = 97\nvalue = [14, 83]\nclass = Malicious"] ;
219 -> 220 ;
221 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
220 -> 221 ;
222 [label="gini = 0.0\nsamples = 83\nvalue = [0, 83]\nclass = Malicious"] ;
220 -> 222 ;
223 [label="gini = 0.0\nsamples = 743\nvalue = [0, 743]\nclass = Malicious"] ;
219 -> 223 ;
224 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
212 -> 224 ;
225 [label="identifiername <= 0.5\ngini = 0.5\nsamples = 20\nvalue = [10, 10]\nclass = Benign"] ;
151 -> 225 ;
226 [label="gini = 0.0\nsamples = 10\nvalue = [0, 10]\nclass = Malicious"] ;
225 -> 226 ;
227 [label="gini = 0.0\nsamples = 10\nvalue = [10, 0]\nclass = Benign"] ;
225 -> 227 ;
228 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
150 -> 228 ;
229 [label="gini = 0.0\nsamples = 15\nvalue = [15, 0]\nclass = Benign"] ;
149 -> 229 ;
230 [label="gini = 0.0\nsamples = 57\nvalue = [57, 0]\nclass = Benign"] ;
148 -> 230 ;
231 [label="gini = 0.0\nsamples = 58\nvalue = [58, 0]\nclass = Benign"] ;
147 -> 231 ;
232 [label="forstatement <= 0.5\ngini = 0.248\nsamples = 10760\nvalue = [9197, 1563]\nclass = Benign"] ;
0 -> 232 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
233 [label="bitshiftexpression <= 0.5\ngini = 0.012\nsamples = 9219\nvalue = [9164, 55]\nclass = Benign"] ;
232 -> 233 ;
234 [label="whilestatement <= 0.5\ngini = 0.001\nsamples = 9170\nvalue = [9164, 6]\nclass = Benign"] ;
233 -> 234 ;
235 [label="trystatement <= 0.5\ngini = 0.001\nsamples = 9164\nvalue = [9160, 4]\nclass = Benign"] ;
234 -> 235 ;
236 [label="multiplicativeexpression <= 0.5\ngini = 0.0\nsamples = 9048\nvalue = [9047, 1]\nclass = Benign"] ;
235 -> 236 ;
237 [label="gini = 0.0\nsamples = 8954\nvalue = [8954, 0]\nclass = Benign"] ;
236 -> 237 ;
238 [label="propertyexpressionassignment <= 0.5\ngini = 0.021\nsamples = 94\nvalue = [93, 1]\nclass = Benign"] ;
236 -> 238 ;
239 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
238 -> 239 ;
240 [label="gini = 0.0\nsamples = 93\nvalue = [93, 0]\nclass = Benign"] ;
238 -> 240 ;
241 [label="memberdotexpression <= 0.5\ngini = 0.05\nsamples = 116\nvalue = [113, 3]\nclass = Benign"] ;
235 -> 241 ;
242 [label="gini = 0.0\nsamples = 3\nvalue = [0, 3]\nclass = Malicious"] ;
241 -> 242 ;
243 [label="gini = 0.0\nsamples = 113\nvalue = [113, 0]\nclass = Benign"] ;
241 -> 243 ;
244 [label="emptystatement <= 0.5\ngini = 0.444\nsamples = 6\nvalue = [4, 2]\nclass = Benign"] ;
234 -> 244 ;
245 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
244 -> 245 ;
246 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
244 -> 246 ;
247 [label="gini = 0.0\nsamples = 49\nvalue = [0, 49]\nclass = Malicious"] ;
233 -> 247 ;
248 [label="formalparameterarg <= 0.5\ngini = 0.042\nsamples = 1541\nvalue = [33, 1508]\nclass = Malicious"] ;
232 -> 248 ;
249 [label="propertyname <= 0.5\ngini = 0.003\nsamples = 1510\nvalue = [2, 1508]\nclass = Malicious"] ;
248 -> 249 ;
250 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
249 -> 250 ;
251 [label="gini = 0.0\nsamples = 1508\nvalue = [0, 1508]\nclass = Malicious"] ;
249 -> 251 ;
252 [label="gini = 0.0\nsamples = 31\nvalue = [31, 0]\nclass = Benign"] ;
248 -> 252 ;
}
