digraph Tree {
node [shape=box] ;
0 [label="property_rules-propertyname <= 0.5\ngini = 0.5\nsamples = 27000\nvalue = [13507, 13493]\nclass = Benign"] ;
1 [label="identifiername-identifiername <= 0.5\ngini = 0.407\nsamples = 16654\nvalue = [4731, 11923]\nclass = Malicious"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="expression_statement-expressionsequence <= 0.5\ngini = 0.354\nsamples = 15305\nvalue = [3516, 11789]\nclass = Malicious"] ;
1 -> 2 ;
3 [label="sourceElement_stuff-expressionstatement <= 0.5\ngini = 0.473\nsamples = 8076\nvalue = [3104, 4972]\nclass = Malicious"] ;
2 -> 3 ;
4 [label="argument_stuff-expression_statement <= 0.5\ngini = 0.41\nsamples = 5976\nvalue = [1720, 4256]\nclass = Malicious"] ;
3 -> 4 ;
5 [label="variable_stuff-varmodifier <= 0.5\ngini = 0.49\nsamples = 3319\nvalue = [1429, 1890]\nclass = Malicious"] ;
4 -> 5 ;
6 [label="expression_statement-expression_statement <= 0.5\ngini = 0.392\nsamples = 2582\nvalue = [692, 1890]\nclass = Malicious"] ;
5 -> 6 ;
7 [label="gini = 0.389\nsamples = 2568\nvalue = [678, 1890]\nclass = Malicious"] ;
6 -> 7 ;
8 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
6 -> 8 ;
9 [label="gini = 0.0\nsamples = 737\nvalue = [737, 0]\nclass = Benign"] ;
5 -> 9 ;
10 [label="withstatement-expressionsequence <= 0.5\ngini = 0.195\nsamples = 2657\nvalue = [291, 2366]\nclass = Malicious"] ;
4 -> 10 ;
11 [label="expression_statement-identifiername <= 0.5\ngini = 0.13\nsamples = 2543\nvalue = [177, 2366]\nclass = Malicious"] ;
10 -> 11 ;
12 [label="literal-catchproduction <= 0.5\ngini = 0.038\nsamples = 2278\nvalue = [44, 2234]\nclass = Malicious"] ;
11 -> 12 ;
13 [label="numericliteral-expression_statement <= 0.5\ngini = 0.035\nsamples = 2275\nvalue = [41, 2234]\nclass = Malicious"] ;
12 -> 13 ;
14 [label="expression_statement-variable_stuff <= 0.5\ngini = 0.034\nsamples = 2273\nvalue = [39, 2234]\nclass = Malicious"] ;
13 -> 14 ;
15 [label="expression_statement-sourceElement_stuff <= 0.5\ngini = 0.027\nsamples = 2220\nvalue = [30, 2190]\nclass = Malicious"] ;
14 -> 15 ;
16 [label="literal-expression_statement <= 0.5\ngini = 0.024\nsamples = 2209\nvalue = [27, 2182]\nclass = Malicious"] ;
15 -> 16 ;
17 [label="literal-expressionstatement <= 0.5\ngini = 0.044\nsamples = 1116\nvalue = [25, 1091]\nclass = Malicious"] ;
16 -> 17 ;
18 [label="gini = 0.0\nsamples = 1087\nvalue = [0, 1087]\nclass = Malicious"] ;
17 -> 18 ;
19 [label="expression_statement-assignmentoperator <= 0.5\ngini = 0.238\nsamples = 29\nvalue = [25, 4]\nclass = Benign"] ;
17 -> 19 ;
20 [label="literal-identifiername <= 0.5\ngini = 0.074\nsamples = 26\nvalue = [25, 1]\nclass = Benign"] ;
19 -> 20 ;
21 [label="gini = 0.0\nsamples = 25\nvalue = [25, 0]\nclass = Benign"] ;
20 -> 21 ;
22 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
20 -> 22 ;
23 [label="gini = 0.0\nsamples = 3\nvalue = [0, 3]\nclass = Malicious"] ;
19 -> 23 ;
24 [label="literal-expressionstatement <= 0.5\ngini = 0.004\nsamples = 1093\nvalue = [2, 1091]\nclass = Malicious"] ;
16 -> 24 ;
25 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
24 -> 25 ;
26 [label="gini = 0.0\nsamples = 1091\nvalue = [0, 1091]\nclass = Malicious"] ;
24 -> 26 ;
27 [label="literal-expressionstatement <= 0.5\ngini = 0.397\nsamples = 11\nvalue = [3, 8]\nclass = Malicious"] ;
15 -> 27 ;
28 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
27 -> 28 ;
29 [label="gini = 0.0\nsamples = 8\nvalue = [0, 8]\nclass = Malicious"] ;
27 -> 29 ;
30 [label="expressionsequence-expression_statement <= 0.5\ngini = 0.282\nsamples = 53\nvalue = [9, 44]\nclass = Malicious"] ;
14 -> 30 ;
31 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
30 -> 31 ;
32 [label="gini = 0.0\nsamples = 44\nvalue = [0, 44]\nclass = Malicious"] ;
30 -> 32 ;
33 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
13 -> 33 ;
34 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
12 -> 34 ;
35 [label="expression_statement-expressionstatement <= 0.5\ngini = 0.5\nsamples = 265\nvalue = [133, 132]\nclass = Benign"] ;
11 -> 35 ;
36 [label="numericliteral-variable_stuff <= 0.5\ngini = 0.12\nsamples = 125\nvalue = [117, 8]\nclass = Benign"] ;
35 -> 36 ;
37 [label="gini = 0.0\nsamples = 114\nvalue = [114, 0]\nclass = Benign"] ;
36 -> 37 ;
38 [label="literal-expressionstatement <= 0.5\ngini = 0.397\nsamples = 11\nvalue = [3, 8]\nclass = Malicious"] ;
36 -> 38 ;
39 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
38 -> 39 ;
40 [label="numericliteral-ifstatement <= 0.5\ngini = 0.198\nsamples = 9\nvalue = [1, 8]\nclass = Malicious"] ;
38 -> 40 ;
41 [label="gini = 0.0\nsamples = 8\nvalue = [0, 8]\nclass = Malicious"] ;
40 -> 41 ;
42 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
40 -> 42 ;
43 [label="ifstatement-expressionsequence <= 0.5\ngini = 0.202\nsamples = 140\nvalue = [16, 124]\nclass = Malicious"] ;
35 -> 43 ;
44 [label="identifiername-expression_statement <= 0.5\ngini = 0.061\nsamples = 128\nvalue = [4, 124]\nclass = Malicious"] ;
43 -> 44 ;
45 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.016\nsamples = 125\nvalue = [1, 124]\nclass = Malicious"] ;
44 -> 45 ;
46 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
45 -> 46 ;
47 [label="gini = 0.0\nsamples = 124\nvalue = [0, 124]\nclass = Malicious"] ;
45 -> 47 ;
48 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
44 -> 48 ;
49 [label="gini = 0.0\nsamples = 12\nvalue = [12, 0]\nclass = Benign"] ;
43 -> 49 ;
50 [label="gini = 0.0\nsamples = 114\nvalue = [114, 0]\nclass = Benign"] ;
10 -> 50 ;
51 [label="argument_stuff-identifiername <= 0.5\ngini = 0.449\nsamples = 2100\nvalue = [1384, 716]\nclass = Benign"] ;
3 -> 51 ;
52 [label="numericliteral-variable_stuff <= 0.5\ngini = 0.323\nsamples = 1706\nvalue = [1361, 345]\nclass = Benign"] ;
51 -> 52 ;
53 [label="numericliteral-expressionstatement <= 0.5\ngini = 0.163\nsamples = 1449\nvalue = [1319, 130]\nclass = Benign"] ;
52 -> 53 ;
54 [label="expression_statement-assignmentoperator <= 0.5\ngini = 0.02\nsamples = 1209\nvalue = [1197, 12]\nclass = Benign"] ;
53 -> 54 ;
55 [label="gini = 0.0\nsamples = 1194\nvalue = [1194, 0]\nclass = Benign"] ;
54 -> 55 ;
56 [label="literal-returnstatement <= 0.5\ngini = 0.32\nsamples = 15\nvalue = [3, 12]\nclass = Malicious"] ;
54 -> 56 ;
57 [label="expression_statement-identifiername <= 0.5\ngini = 0.142\nsamples = 13\nvalue = [1, 12]\nclass = Malicious"] ;
56 -> 57 ;
58 [label="gini = 0.0\nsamples = 12\nvalue = [0, 12]\nclass = Malicious"] ;
57 -> 58 ;
59 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
57 -> 59 ;
60 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
56 -> 60 ;
61 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.5\nsamples = 240\nvalue = [122, 118]\nclass = Benign"] ;
53 -> 61 ;
62 [label="gini = 0.0\nsamples = 64\nvalue = [64, 0]\nclass = Benign"] ;
61 -> 62 ;
63 [label="literal-expressionstatement <= 0.5\ngini = 0.442\nsamples = 176\nvalue = [58, 118]\nclass = Malicious"] ;
61 -> 63 ;
64 [label="gini = 0.0\nsamples = 42\nvalue = [42, 0]\nclass = Benign"] ;
63 -> 64 ;
65 [label="sourceElement_stuff-sourceElement_stuff <= 0.5\ngini = 0.21\nsamples = 134\nvalue = [16, 118]\nclass = Malicious"] ;
63 -> 65 ;
66 [label="gini = 0.0\nsamples = 118\nvalue = [0, 118]\nclass = Malicious"] ;
65 -> 66 ;
67 [label="gini = 0.0\nsamples = 16\nvalue = [16, 0]\nclass = Benign"] ;
65 -> 67 ;
68 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.273\nsamples = 257\nvalue = [42, 215]\nclass = Malicious"] ;
52 -> 68 ;
69 [label="identifiername-expression_statement <= 0.5\ngini = 0.085\nsamples = 225\nvalue = [10, 215]\nclass = Malicious"] ;
68 -> 69 ;
70 [label="gini = 0.0\nsamples = 215\nvalue = [0, 215]\nclass = Malicious"] ;
69 -> 70 ;
71 [label="gini = 0.0\nsamples = 10\nvalue = [10, 0]\nclass = Benign"] ;
69 -> 71 ;
72 [label="gini = 0.0\nsamples = 32\nvalue = [32, 0]\nclass = Benign"] ;
68 -> 72 ;
73 [label="expression_statement-sourceElement_stuff <= 0.5\ngini = 0.11\nsamples = 394\nvalue = [23, 371]\nclass = Malicious"] ;
51 -> 73 ;
74 [label="literal-identifiername <= 0.5\ngini = 0.036\nsamples = 378\nvalue = [7, 371]\nclass = Malicious"] ;
73 -> 74 ;
75 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
74 -> 75 ;
76 [label="litereral_stuff-element_stuff <= 0.5\ngini = 0.005\nsamples = 372\nvalue = [1, 371]\nclass = Malicious"] ;
74 -> 76 ;
77 [label="gini = 0.0\nsamples = 371\nvalue = [0, 371]\nclass = Malicious"] ;
76 -> 77 ;
78 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
76 -> 78 ;
79 [label="gini = 0.0\nsamples = 16\nvalue = [16, 0]\nclass = Benign"] ;
73 -> 79 ;
80 [label="litereral_stuff-expressionstatement <= 0.5\ngini = 0.107\nsamples = 7229\nvalue = [412, 6817]\nclass = Malicious"] ;
2 -> 80 ;
81 [label="sourceElement_stuff-withstatement <= 0.5\ngini = 0.095\nsamples = 7176\nvalue = [359, 6817]\nclass = Malicious"] ;
80 -> 81 ;
82 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.082\nsamples = 7124\nvalue = [307, 6817]\nclass = Malicious"] ;
81 -> 82 ;
83 [label="literal-returnstatement <= 0.5\ngini = 0.405\nsamples = 695\nvalue = [196, 499]\nclass = Malicious"] ;
82 -> 83 ;
84 [label="numericliteral-argument_stuff <= 0.5\ngini = 0.104\nsamples = 181\nvalue = [171, 10]\nclass = Benign"] ;
83 -> 84 ;
85 [label="gini = 0.0\nsamples = 171\nvalue = [171, 0]\nclass = Benign"] ;
84 -> 85 ;
86 [label="gini = 0.0\nsamples = 10\nvalue = [0, 10]\nclass = Malicious"] ;
84 -> 86 ;
87 [label="trystatement-returnstatement <= 0.5\ngini = 0.093\nsamples = 514\nvalue = [25, 489]\nclass = Malicious"] ;
83 -> 87 ;
88 [label="gini = 0.0\nsamples = 489\nvalue = [0, 489]\nclass = Malicious"] ;
87 -> 88 ;
89 [label="gini = 0.0\nsamples = 25\nvalue = [25, 0]\nclass = Benign"] ;
87 -> 89 ;
90 [label="formalParameterArg_stuff-formalParameterArg_stuff <= 0.5\ngini = 0.034\nsamples = 6429\nvalue = [111, 6318]\nclass = Malicious"] ;
82 -> 90 ;
91 [label="argument_stuff-ifstatement <= 0.5\ngini = 0.026\nsamples = 6382\nvalue = [83, 6299]\nclass = Malicious"] ;
90 -> 91 ;
92 [label="numericliteral-identifiername <= 0.5\ngini = 0.021\nsamples = 6367\nvalue = [69, 6298]\nclass = Malicious"] ;
91 -> 92 ;
93 [label="argument_stuff-expression_statement <= 0.5\ngini = 0.014\nsamples = 6259\nvalue = [43, 6216]\nclass = Malicious"] ;
92 -> 93 ;
94 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
93 -> 94 ;
95 [label="numericliteral-ifstatement <= 0.5\ngini = 0.012\nsamples = 6254\nvalue = [38, 6216]\nclass = Malicious"] ;
93 -> 95 ;
96 [label="returnstatement-expressionstatement <= 0.5\ngini = 0.009\nsamples = 6211\nvalue = [27, 6184]\nclass = Malicious"] ;
95 -> 96 ;
97 [label="litereral_stuff-expressionsequence <= 0.5\ngini = 0.008\nsamples = 6209\nvalue = [25, 6184]\nclass = Malicious"] ;
96 -> 97 ;
98 [label="returnstatement-ifstatement <= 0.5\ngini = 0.007\nsamples = 6207\nvalue = [23, 6184]\nclass = Malicious"] ;
97 -> 98 ;
99 [label="litereral_stuff-identifiername <= 0.5\ngini = 0.007\nsamples = 6206\nvalue = [22, 6184]\nclass = Malicious"] ;
98 -> 99 ;
100 [label="litereral_stuff-variable_stuff <= 0.5\ngini = 0.007\nsamples = 6205\nvalue = [21, 6184]\nclass = Malicious"] ;
99 -> 100 ;
101 [label="expression_statement-sourceElement_stuff <= 0.5\ngini = 0.006\nsamples = 6202\nvalue = [20, 6182]\nclass = Malicious"] ;
100 -> 101 ;
102 [label="identifiername-variable_stuff <= 0.5\ngini = 0.002\nsamples = 5618\nvalue = [7, 5611]\nclass = Malicious"] ;
101 -> 102 ;
103 [label="ifstatement-expressionsequence <= 0.5\ngini = 0.002\nsamples = 5612\nvalue = [6, 5606]\nclass = Malicious"] ;
102 -> 103 ;
104 [label="argument_stuff-expressionstatement <= 0.5\ngini = 0.009\nsamples = 1071\nvalue = [5, 1066]\nclass = Malicious"] ;
103 -> 104 ;
105 [label="literal-expressionsequence <= 0.5\ngini = 0.006\nsamples = 1057\nvalue = [3, 1054]\nclass = Malicious"] ;
104 -> 105 ;
106 [label="identifiername-argument_stuff <= 0.5\ngini = 0.004\nsamples = 1054\nvalue = [2, 1052]\nclass = Malicious"] ;
105 -> 106 ;
107 [label="varmodifier-variable_stuff <= 0.5\ngini = 0.111\nsamples = 17\nvalue = [1, 16]\nclass = Malicious"] ;
106 -> 107 ;
108 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
107 -> 108 ;
109 [label="gini = 0.0\nsamples = 16\nvalue = [0, 16]\nclass = Malicious"] ;
107 -> 109 ;
110 [label="identifiername-expression_statement <= 0.5\ngini = 0.002\nsamples = 1037\nvalue = [1, 1036]\nclass = Malicious"] ;
106 -> 110 ;
111 [label="gini = 0.0\nsamples = 940\nvalue = [0, 940]\nclass = Malicious"] ;
110 -> 111 ;
112 [label="numericliteral-expressionstatement <= 0.5\ngini = 0.02\nsamples = 97\nvalue = [1, 96]\nclass = Malicious"] ;
110 -> 112 ;
113 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
112 -> 113 ;
114 [label="gini = 0.0\nsamples = 96\nvalue = [0, 96]\nclass = Malicious"] ;
112 -> 114 ;
115 [label="expression_statement-variable_stuff <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
105 -> 115 ;
116 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
115 -> 116 ;
117 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
115 -> 117 ;
118 [label="litereral_stuff-element_stuff <= 0.5\ngini = 0.245\nsamples = 14\nvalue = [2, 12]\nclass = Malicious"] ;
104 -> 118 ;
119 [label="expression_statement-identifiername <= 0.5\ngini = 0.142\nsamples = 13\nvalue = [1, 12]\nclass = Malicious"] ;
118 -> 119 ;
120 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
119 -> 120 ;
121 [label="gini = 0.0\nsamples = 12\nvalue = [0, 12]\nclass = Malicious"] ;
119 -> 121 ;
122 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
118 -> 122 ;
123 [label="expression_statement-variable_stuff <= 0.5\ngini = 0.0\nsamples = 4541\nvalue = [1, 4540]\nclass = Malicious"] ;
103 -> 123 ;
124 [label="gini = 0.0\nsamples = 4234\nvalue = [0, 4234]\nclass = Malicious"] ;
123 -> 124 ;
125 [label="litereral_stuff-element_stuff <= 0.5\ngini = 0.006\nsamples = 307\nvalue = [1, 306]\nclass = Malicious"] ;
123 -> 125 ;
126 [label="literal-variable_stuff <= 0.5\ngini = 0.278\nsamples = 6\nvalue = [1, 5]\nclass = Malicious"] ;
125 -> 126 ;
127 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
126 -> 127 ;
128 [label="gini = 0.0\nsamples = 5\nvalue = [0, 5]\nclass = Malicious"] ;
126 -> 128 ;
129 [label="gini = 0.0\nsamples = 301\nvalue = [0, 301]\nclass = Malicious"] ;
125 -> 129 ;
130 [label="numericliteral-variable_stuff <= 0.5\ngini = 0.278\nsamples = 6\nvalue = [1, 5]\nclass = Malicious"] ;
102 -> 130 ;
131 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
130 -> 131 ;
132 [label="gini = 0.0\nsamples = 5\nvalue = [0, 5]\nclass = Malicious"] ;
130 -> 132 ;
133 [label="literal-variable_stuff <= 0.5\ngini = 0.044\nsamples = 584\nvalue = [13, 571]\nclass = Malicious"] ;
101 -> 133 ;
134 [label="gini = 0.0\nsamples = 12\nvalue = [12, 0]\nclass = Benign"] ;
133 -> 134 ;
135 [label="literal-ifstatement <= 0.5\ngini = 0.003\nsamples = 572\nvalue = [1, 571]\nclass = Malicious"] ;
133 -> 135 ;
136 [label="gini = 0.0\nsamples = 571\nvalue = [0, 571]\nclass = Malicious"] ;
135 -> 136 ;
137 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
135 -> 137 ;
138 [label="expression_statement-ifstatement <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
100 -> 138 ;
139 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
138 -> 139 ;
140 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
138 -> 140 ;
141 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
99 -> 141 ;
142 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
98 -> 142 ;
143 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
97 -> 143 ;
144 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
96 -> 144 ;
145 [label="expression_statement-sourceElement_stuff <= 0.5\ngini = 0.381\nsamples = 43\nvalue = [11, 32]\nclass = Malicious"] ;
95 -> 145 ;
146 [label="gini = 0.0\nsamples = 32\nvalue = [0, 32]\nclass = Malicious"] ;
145 -> 146 ;
147 [label="gini = 0.0\nsamples = 11\nvalue = [11, 0]\nclass = Benign"] ;
145 -> 147 ;
148 [label="numericliteral-continue_break_statement <= 0.5\ngini = 0.366\nsamples = 108\nvalue = [26, 82]\nclass = Malicious"] ;
92 -> 148 ;
149 [label="trystatement-variable_stuff <= 0.5\ngini = 0.071\nsamples = 27\nvalue = [26, 1]\nclass = Benign"] ;
148 -> 149 ;
150 [label="gini = 0.0\nsamples = 26\nvalue = [26, 0]\nclass = Benign"] ;
149 -> 150 ;
151 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
149 -> 151 ;
152 [label="gini = 0.0\nsamples = 81\nvalue = [0, 81]\nclass = Malicious"] ;
148 -> 152 ;
153 [label="sourceElement_stuff-sourceElement_stuff <= 0.5\ngini = 0.124\nsamples = 15\nvalue = [14, 1]\nclass = Benign"] ;
91 -> 153 ;
154 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
153 -> 154 ;
155 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
153 -> 155 ;
156 [label="numericliteral-expressionstatement <= 0.5\ngini = 0.482\nsamples = 47\nvalue = [28, 19]\nclass = Benign"] ;
90 -> 156 ;
157 [label="literal-expression_statement <= 0.5\ngini = 0.219\nsamples = 32\nvalue = [28, 4]\nclass = Benign"] ;
156 -> 157 ;
158 [label="gini = 0.0\nsamples = 4\nvalue = [0, 4]\nclass = Malicious"] ;
157 -> 158 ;
159 [label="gini = 0.0\nsamples = 28\nvalue = [28, 0]\nclass = Benign"] ;
157 -> 159 ;
160 [label="gini = 0.0\nsamples = 15\nvalue = [0, 15]\nclass = Malicious"] ;
156 -> 160 ;
161 [label="gini = 0.0\nsamples = 52\nvalue = [52, 0]\nclass = Benign"] ;
81 -> 161 ;
162 [label="gini = 0.0\nsamples = 53\nvalue = [53, 0]\nclass = Benign"] ;
80 -> 162 ;
163 [label="literal-trystatement <= 0.5\ngini = 0.179\nsamples = 1349\nvalue = [1215, 134]\nclass = Benign"] ;
1 -> 163 ;
164 [label="continue_break_statement-catchproduction <= 0.5\ngini = 0.007\nsamples = 1218\nvalue = [1214, 4]\nclass = Benign"] ;
163 -> 164 ;
165 [label="argument_stuff-switchstatement <= 0.5\ngini = 0.003\nsamples = 1216\nvalue = [1214, 2]\nclass = Benign"] ;
164 -> 165 ;
166 [label="expression_statement-assignmentoperator <= 0.5\ngini = 0.002\nsamples = 1215\nvalue = [1214, 1]\nclass = Benign"] ;
165 -> 166 ;
167 [label="gini = 0.0\nsamples = 1211\nvalue = [1211, 0]\nclass = Benign"] ;
166 -> 167 ;
168 [label="literal-expressionstatement <= 0.5\ngini = 0.375\nsamples = 4\nvalue = [3, 1]\nclass = Benign"] ;
166 -> 168 ;
169 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
168 -> 169 ;
170 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
168 -> 170 ;
171 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
165 -> 171 ;
172 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
164 -> 172 ;
173 [label="returnstatement-expressionstatement <= 0.5\ngini = 0.015\nsamples = 131\nvalue = [1, 130]\nclass = Malicious"] ;
163 -> 173 ;
174 [label="gini = 0.0\nsamples = 130\nvalue = [0, 130]\nclass = Malicious"] ;
173 -> 174 ;
175 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
173 -> 175 ;
176 [label="do_for_while_statement-expressionsequence <= 0.5\ngini = 0.257\nsamples = 10346\nvalue = [8776, 1570]\nclass = Benign"] ;
0 -> 176 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
177 [label="literal-finallyproduction <= 0.5\ngini = 0.007\nsamples = 8764\nvalue = [8734, 30]\nclass = Benign"] ;
176 -> 177 ;
178 [label="expression_statement-catchproduction <= 0.5\ngini = 0.001\nsamples = 8737\nvalue = [8734, 3]\nclass = Benign"] ;
177 -> 178 ;
179 [label="gini = 0.0\nsamples = 8724\nvalue = [8724, 0]\nclass = Benign"] ;
178 -> 179 ;
180 [label="identifiername-identifiername <= 0.5\ngini = 0.355\nsamples = 13\nvalue = [10, 3]\nclass = Benign"] ;
178 -> 180 ;
181 [label="gini = 0.0\nsamples = 3\nvalue = [0, 3]\nclass = Malicious"] ;
180 -> 181 ;
182 [label="gini = 0.0\nsamples = 10\nvalue = [10, 0]\nclass = Benign"] ;
180 -> 182 ;
183 [label="gini = 0.0\nsamples = 27\nvalue = [0, 27]\nclass = Malicious"] ;
177 -> 183 ;
184 [label="numericliteral-property_rules <= 0.5\ngini = 0.052\nsamples = 1582\nvalue = [42, 1540]\nclass = Malicious"] ;
176 -> 184 ;
185 [label="expression_statement-property_rules <= 0.5\ngini = 0.009\nsamples = 1547\nvalue = [7, 1540]\nclass = Malicious"] ;
184 -> 185 ;
186 [label="identifiername-returnstatement <= 0.5\ngini = 0.003\nsamples = 1542\nvalue = [2, 1540]\nclass = Malicious"] ;
185 -> 186 ;
187 [label="gini = 0.0\nsamples = 1540\nvalue = [0, 1540]\nclass = Malicious"] ;
186 -> 187 ;
188 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
186 -> 188 ;
189 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
185 -> 189 ;
190 [label="gini = 0.0\nsamples = 35\nvalue = [35, 0]\nclass = Benign"] ;
184 -> 190 ;
}
