digraph Tree {
node [shape=box] ;
0 [label="property_rules-propertyname <= 0.5\ngini = 0.5\nsamples = 27000\nvalue = [13487, 13513]\nclass = Malicious"] ;
1 [label="identifiername-identifiername <= 0.5\ngini = 0.406\nsamples = 16654\nvalue = [4708, 11946]\nclass = Malicious"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="expression_statement-expressionsequence <= 0.5\ngini = 0.352\nsamples = 15294\nvalue = [3484, 11810]\nclass = Malicious"] ;
1 -> 2 ;
3 [label="sourceElement_stuff-expressionstatement <= 0.5\ngini = 0.471\nsamples = 8118\nvalue = [3083, 5035]\nclass = Malicious"] ;
2 -> 3 ;
4 [label="argument_stuff-expression_statement <= 0.5\ngini = 0.408\nsamples = 5996\nvalue = [1714, 4282]\nclass = Malicious"] ;
3 -> 4 ;
5 [label="varmodifier-variable_stuff <= 0.5\ngini = 0.49\nsamples = 3309\nvalue = [1426, 1883]\nclass = Malicious"] ;
4 -> 5 ;
6 [label="expressionsequence-expression_statement <= 0.5\ngini = 0.391\nsamples = 2567\nvalue = [684, 1883]\nclass = Malicious"] ;
5 -> 6 ;
7 [label="gini = 0.387\nsamples = 2553\nvalue = [670, 1883]\nclass = Malicious"] ;
6 -> 7 ;
8 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
6 -> 8 ;
9 [label="gini = 0.0\nsamples = 742\nvalue = [742, 0]\nclass = Benign"] ;
5 -> 9 ;
10 [label="withstatement-expressionsequence <= 0.5\ngini = 0.191\nsamples = 2687\nvalue = [288, 2399]\nclass = Malicious"] ;
4 -> 10 ;
11 [label="expression_statement-identifiername <= 0.5\ngini = 0.129\nsamples = 2577\nvalue = [178, 2399]\nclass = Malicious"] ;
10 -> 11 ;
12 [label="sourceElement_stuff-trystatement <= 0.5\ngini = 0.04\nsamples = 2307\nvalue = [47, 2260]\nclass = Malicious"] ;
11 -> 12 ;
13 [label="expression_statement-variable_stuff <= 0.5\ngini = 0.037\nsamples = 2304\nvalue = [44, 2260]\nclass = Malicious"] ;
12 -> 13 ;
14 [label="numericliteral-expression_statement <= 0.5\ngini = 0.031\nsamples = 2253\nvalue = [35, 2218]\nclass = Malicious"] ;
13 -> 14 ;
15 [label="sourceElement_stuff-sourceElement_stuff <= 0.5\ngini = 0.029\nsamples = 2251\nvalue = [33, 2218]\nclass = Malicious"] ;
14 -> 15 ;
16 [label="literal-expression_statement <= 0.5\ngini = 0.026\nsamples = 2239\nvalue = [30, 2209]\nclass = Malicious"] ;
15 -> 16 ;
17 [label="literal-expressionstatement <= 0.5\ngini = 0.047\nsamples = 1116\nvalue = [27, 1089]\nclass = Malicious"] ;
16 -> 17 ;
18 [label="gini = 0.0\nsamples = 1083\nvalue = [0, 1083]\nclass = Malicious"] ;
17 -> 18 ;
19 [label="assignmentoperator-expression_statement <= 0.5\ngini = 0.298\nsamples = 33\nvalue = [27, 6]\nclass = Benign"] ;
17 -> 19 ;
20 [label="identifiername-argument_stuff <= 0.5\ngini = 0.069\nsamples = 28\nvalue = [27, 1]\nclass = Benign"] ;
19 -> 20 ;
21 [label="gini = 0.0\nsamples = 27\nvalue = [27, 0]\nclass = Benign"] ;
20 -> 21 ;
22 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
20 -> 22 ;
23 [label="gini = 0.0\nsamples = 5\nvalue = [0, 5]\nclass = Malicious"] ;
19 -> 23 ;
24 [label="expressionstatement-expressionsequence <= 0.5\ngini = 0.005\nsamples = 1123\nvalue = [3, 1120]\nclass = Malicious"] ;
16 -> 24 ;
25 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
24 -> 25 ;
26 [label="gini = 0.0\nsamples = 1120\nvalue = [0, 1120]\nclass = Malicious"] ;
24 -> 26 ;
27 [label="identifiername-argument_stuff <= 0.5\ngini = 0.375\nsamples = 12\nvalue = [3, 9]\nclass = Malicious"] ;
15 -> 27 ;
28 [label="gini = 0.0\nsamples = 9\nvalue = [0, 9]\nclass = Malicious"] ;
27 -> 28 ;
29 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
27 -> 29 ;
30 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
14 -> 30 ;
31 [label="expressionstatement-expressionsequence <= 0.5\ngini = 0.291\nsamples = 51\nvalue = [9, 42]\nclass = Malicious"] ;
13 -> 31 ;
32 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
31 -> 32 ;
33 [label="gini = 0.0\nsamples = 42\nvalue = [0, 42]\nclass = Malicious"] ;
31 -> 33 ;
34 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
12 -> 34 ;
35 [label="expression_statement-expressionstatement <= 0.5\ngini = 0.5\nsamples = 270\nvalue = [131, 139]\nclass = Malicious"] ;
11 -> 35 ;
36 [label="numericliteral-variable_stuff <= 0.5\ngini = 0.136\nsamples = 123\nvalue = [114, 9]\nclass = Benign"] ;
35 -> 36 ;
37 [label="gini = 0.0\nsamples = 111\nvalue = [111, 0]\nclass = Benign"] ;
36 -> 37 ;
38 [label="literal-expression_statement <= 0.5\ngini = 0.375\nsamples = 12\nvalue = [3, 9]\nclass = Malicious"] ;
36 -> 38 ;
39 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
38 -> 39 ;
40 [label="sourceElement_stuff-variable_stuff <= 0.5\ngini = 0.18\nsamples = 10\nvalue = [1, 9]\nclass = Malicious"] ;
38 -> 40 ;
41 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
40 -> 41 ;
42 [label="gini = 0.0\nsamples = 9\nvalue = [0, 9]\nclass = Malicious"] ;
40 -> 42 ;
43 [label="ifstatement-expressionsequence <= 0.5\ngini = 0.205\nsamples = 147\nvalue = [17, 130]\nclass = Malicious"] ;
35 -> 43 ;
44 [label="argument_stuff-expressionstatement <= 0.5\ngini = 0.071\nsamples = 135\nvalue = [5, 130]\nclass = Malicious"] ;
43 -> 44 ;
45 [label="literal-numericliteral <= 0.5\ngini = 0.015\nsamples = 131\nvalue = [1, 130]\nclass = Malicious"] ;
44 -> 45 ;
46 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
45 -> 46 ;
47 [label="gini = 0.0\nsamples = 130\nvalue = [0, 130]\nclass = Malicious"] ;
45 -> 47 ;
48 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
44 -> 48 ;
49 [label="gini = 0.0\nsamples = 12\nvalue = [12, 0]\nclass = Benign"] ;
43 -> 49 ;
50 [label="gini = 0.0\nsamples = 110\nvalue = [110, 0]\nclass = Benign"] ;
10 -> 50 ;
51 [label="argument_stuff-identifiername <= 0.5\ngini = 0.458\nsamples = 2122\nvalue = [1369, 753]\nclass = Benign"] ;
3 -> 51 ;
52 [label="numericliteral-variable_stuff <= 0.5\ngini = 0.336\nsamples = 1712\nvalue = [1346, 366]\nclass = Benign"] ;
51 -> 52 ;
53 [label="numericliteral-expressionstatement <= 0.5\ngini = 0.174\nsamples = 1444\nvalue = [1305, 139]\nclass = Benign"] ;
52 -> 53 ;
54 [label="expression_statement-assignmentoperator <= 0.5\ngini = 0.021\nsamples = 1198\nvalue = [1185, 13]\nclass = Benign"] ;
53 -> 54 ;
55 [label="gini = 0.0\nsamples = 1182\nvalue = [1182, 0]\nclass = Benign"] ;
54 -> 55 ;
56 [label="literal-returnstatement <= 0.5\ngini = 0.305\nsamples = 16\nvalue = [3, 13]\nclass = Malicious"] ;
54 -> 56 ;
57 [label="literal-variable_stuff <= 0.5\ngini = 0.133\nsamples = 14\nvalue = [1, 13]\nclass = Malicious"] ;
56 -> 57 ;
58 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
57 -> 58 ;
59 [label="gini = 0.0\nsamples = 13\nvalue = [0, 13]\nclass = Malicious"] ;
57 -> 59 ;
60 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
56 -> 60 ;
61 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.5\nsamples = 246\nvalue = [120, 126]\nclass = Malicious"] ;
53 -> 61 ;
62 [label="gini = 0.0\nsamples = 61\nvalue = [61, 0]\nclass = Benign"] ;
61 -> 62 ;
63 [label="literal-expressionstatement <= 0.5\ngini = 0.434\nsamples = 185\nvalue = [59, 126]\nclass = Malicious"] ;
61 -> 63 ;
64 [label="gini = 0.0\nsamples = 43\nvalue = [43, 0]\nclass = Benign"] ;
63 -> 64 ;
65 [label="expression_statement-sourceElement_stuff <= 0.5\ngini = 0.2\nsamples = 142\nvalue = [16, 126]\nclass = Malicious"] ;
63 -> 65 ;
66 [label="gini = 0.0\nsamples = 126\nvalue = [0, 126]\nclass = Malicious"] ;
65 -> 66 ;
67 [label="gini = 0.0\nsamples = 16\nvalue = [16, 0]\nclass = Benign"] ;
65 -> 67 ;
68 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.259\nsamples = 268\nvalue = [41, 227]\nclass = Malicious"] ;
52 -> 68 ;
69 [label="identifiername-expression_statement <= 0.5\ngini = 0.073\nsamples = 236\nvalue = [9, 227]\nclass = Malicious"] ;
68 -> 69 ;
70 [label="gini = 0.0\nsamples = 227\nvalue = [0, 227]\nclass = Malicious"] ;
69 -> 70 ;
71 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
69 -> 71 ;
72 [label="gini = 0.0\nsamples = 32\nvalue = [32, 0]\nclass = Benign"] ;
68 -> 72 ;
73 [label="expression_statement-sourceElement_stuff <= 0.5\ngini = 0.106\nsamples = 410\nvalue = [23, 387]\nclass = Malicious"] ;
51 -> 73 ;
74 [label="literal-identifiername <= 0.5\ngini = 0.035\nsamples = 394\nvalue = [7, 387]\nclass = Malicious"] ;
73 -> 74 ;
75 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
74 -> 75 ;
76 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.005\nsamples = 388\nvalue = [1, 387]\nclass = Malicious"] ;
74 -> 76 ;
77 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
76 -> 77 ;
78 [label="gini = 0.0\nsamples = 387\nvalue = [0, 387]\nclass = Malicious"] ;
76 -> 78 ;
79 [label="gini = 0.0\nsamples = 16\nvalue = [16, 0]\nclass = Benign"] ;
73 -> 79 ;
80 [label="expression_statement-withstatement <= 0.5\ngini = 0.106\nsamples = 7176\nvalue = [401, 6775]\nclass = Malicious"] ;
2 -> 80 ;
81 [label="litereral_stuff-expressionstatement <= 0.5\ngini = 0.092\nsamples = 7121\nvalue = [346, 6775]\nclass = Malicious"] ;
80 -> 81 ;
82 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.081\nsamples = 7073\nvalue = [298, 6775]\nclass = Malicious"] ;
81 -> 82 ;
83 [label="literal-returnstatement <= 0.5\ngini = 0.396\nsamples = 694\nvalue = [189, 505]\nclass = Malicious"] ;
82 -> 83 ;
84 [label="numericliteral-argument_stuff <= 0.5\ngini = 0.087\nsamples = 176\nvalue = [168, 8]\nclass = Benign"] ;
83 -> 84 ;
85 [label="gini = 0.0\nsamples = 168\nvalue = [168, 0]\nclass = Benign"] ;
84 -> 85 ;
86 [label="gini = 0.0\nsamples = 8\nvalue = [0, 8]\nclass = Malicious"] ;
84 -> 86 ;
87 [label="identifiername-argument_stuff <= 0.5\ngini = 0.078\nsamples = 518\nvalue = [21, 497]\nclass = Malicious"] ;
83 -> 87 ;
88 [label="gini = 0.0\nsamples = 497\nvalue = [0, 497]\nclass = Malicious"] ;
87 -> 88 ;
89 [label="gini = 0.0\nsamples = 21\nvalue = [21, 0]\nclass = Benign"] ;
87 -> 89 ;
90 [label="argument_stuff-ifstatement <= 0.5\ngini = 0.034\nsamples = 6379\nvalue = [109, 6270]\nclass = Malicious"] ;
82 -> 90 ;
91 [label="variable_stuff-expressionsequence <= 0.5\ngini = 0.029\nsamples = 6361\nvalue = [92, 6269]\nclass = Malicious"] ;
90 -> 91 ;
92 [label="numericliteral-identifiername <= 0.5\ngini = 0.024\nsamples = 6347\nvalue = [78, 6269]\nclass = Malicious"] ;
91 -> 92 ;
93 [label="argument_stuff-expression_statement <= 0.5\ngini = 0.017\nsamples = 6247\nvalue = [53, 6194]\nclass = Malicious"] ;
92 -> 93 ;
94 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
93 -> 94 ;
95 [label="formalParameterArg_stuff-formalParameterArg_stuff <= 0.5\ngini = 0.015\nsamples = 6242\nvalue = [48, 6194]\nclass = Malicious"] ;
93 -> 95 ;
96 [label="numericliteral-ifstatement <= 0.5\ngini = 0.012\nsamples = 6216\nvalue = [39, 6177]\nclass = Malicious"] ;
95 -> 96 ;
97 [label="returnstatement-expressionstatement <= 0.5\ngini = 0.009\nsamples = 6173\nvalue = [28, 6145]\nclass = Malicious"] ;
96 -> 97 ;
98 [label="litereral_stuff-expressionsequence <= 0.5\ngini = 0.008\nsamples = 6171\nvalue = [26, 6145]\nclass = Malicious"] ;
97 -> 98 ;
99 [label="litereral_stuff-identifiername <= 0.5\ngini = 0.008\nsamples = 6170\nvalue = [25, 6145]\nclass = Malicious"] ;
98 -> 99 ;
100 [label="returnstatement-ifstatement <= 0.5\ngini = 0.008\nsamples = 6169\nvalue = [24, 6145]\nclass = Malicious"] ;
99 -> 100 ;
101 [label="expression_statement-ifstatement <= 0.5\ngini = 0.007\nsamples = 6168\nvalue = [23, 6145]\nclass = Malicious"] ;
100 -> 101 ;
102 [label="expression_statement-sourceElement_stuff <= 0.5\ngini = 0.007\nsamples = 6160\nvalue = [21, 6139]\nclass = Malicious"] ;
101 -> 102 ;
103 [label="identifiername-variable_stuff <= 0.5\ngini = 0.003\nsamples = 5575\nvalue = [7, 5568]\nclass = Malicious"] ;
102 -> 103 ;
104 [label="ifstatement-expressionsequence <= 0.5\ngini = 0.002\nsamples = 5568\nvalue = [6, 5562]\nclass = Malicious"] ;
103 -> 104 ;
105 [label="identifiername-expressionstatement <= 0.5\ngini = 0.009\nsamples = 1056\nvalue = [5, 1051]\nclass = Malicious"] ;
104 -> 105 ;
106 [label="literal-expressionsequence <= 0.5\ngini = 0.008\nsamples = 1055\nvalue = [4, 1051]\nclass = Malicious"] ;
105 -> 106 ;
107 [label="argument_stuff-expressionstatement <= 0.5\ngini = 0.006\nsamples = 1050\nvalue = [3, 1047]\nclass = Malicious"] ;
106 -> 107 ;
108 [label="identifiername-argument_stuff <= 0.5\ngini = 0.004\nsamples = 1038\nvalue = [2, 1036]\nclass = Malicious"] ;
107 -> 108 ;
109 [label="sourceElement_stuff-expressionstatement <= 0.5\ngini = 0.124\nsamples = 15\nvalue = [1, 14]\nclass = Malicious"] ;
108 -> 109 ;
110 [label="gini = 0.0\nsamples = 14\nvalue = [0, 14]\nclass = Malicious"] ;
109 -> 110 ;
111 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
109 -> 111 ;
112 [label="identifiername-expression_statement <= 0.5\ngini = 0.002\nsamples = 1023\nvalue = [1, 1022]\nclass = Malicious"] ;
108 -> 112 ;
113 [label="gini = 0.0\nsamples = 915\nvalue = [0, 915]\nclass = Malicious"] ;
112 -> 113 ;
114 [label="literal-variable_stuff <= 0.5\ngini = 0.018\nsamples = 108\nvalue = [1, 107]\nclass = Malicious"] ;
112 -> 114 ;
115 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
114 -> 115 ;
116 [label="gini = 0.0\nsamples = 107\nvalue = [0, 107]\nclass = Malicious"] ;
114 -> 116 ;
117 [label="element_stuff-expression_statement <= 0.5\ngini = 0.153\nsamples = 12\nvalue = [1, 11]\nclass = Malicious"] ;
107 -> 117 ;
118 [label="gini = 0.0\nsamples = 11\nvalue = [0, 11]\nclass = Malicious"] ;
117 -> 118 ;
119 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
117 -> 119 ;
120 [label="sourceElement_stuff-sourceElement_stuff <= 0.5\ngini = 0.32\nsamples = 5\nvalue = [1, 4]\nclass = Malicious"] ;
106 -> 120 ;
121 [label="gini = 0.0\nsamples = 4\nvalue = [0, 4]\nclass = Malicious"] ;
120 -> 121 ;
122 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
120 -> 122 ;
123 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
105 -> 123 ;
124 [label="expression_statement-variable_stuff <= 0.5\ngini = 0.0\nsamples = 4512\nvalue = [1, 4511]\nclass = Malicious"] ;
104 -> 124 ;
125 [label="gini = 0.0\nsamples = 4206\nvalue = [0, 4206]\nclass = Malicious"] ;
124 -> 125 ;
126 [label="numericliteral-expression_statement <= 0.5\ngini = 0.007\nsamples = 306\nvalue = [1, 305]\nclass = Malicious"] ;
124 -> 126 ;
127 [label="gini = 0.0\nsamples = 301\nvalue = [0, 301]\nclass = Malicious"] ;
126 -> 127 ;
128 [label="expression_statement-formalparameterlist <= 0.5\ngini = 0.32\nsamples = 5\nvalue = [1, 4]\nclass = Malicious"] ;
126 -> 128 ;
129 [label="gini = 0.0\nsamples = 4\nvalue = [0, 4]\nclass = Malicious"] ;
128 -> 129 ;
130 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
128 -> 130 ;
131 [label="argument_stuff-expressionstatement <= 0.5\ngini = 0.245\nsamples = 7\nvalue = [1, 6]\nclass = Malicious"] ;
103 -> 131 ;
132 [label="gini = 0.0\nsamples = 6\nvalue = [0, 6]\nclass = Malicious"] ;
131 -> 132 ;
133 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
131 -> 133 ;
134 [label="literal-variable_stuff <= 0.5\ngini = 0.047\nsamples = 585\nvalue = [14, 571]\nclass = Malicious"] ;
102 -> 134 ;
135 [label="catchproduction-expressionstatement <= 0.5\ngini = 0.124\nsamples = 15\nvalue = [14, 1]\nclass = Benign"] ;
134 -> 135 ;
136 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
135 -> 136 ;
137 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
135 -> 137 ;
138 [label="gini = 0.0\nsamples = 570\nvalue = [0, 570]\nclass = Malicious"] ;
134 -> 138 ;
139 [label="sourceElement_stuff-sourceElement_stuff <= 0.5\ngini = 0.375\nsamples = 8\nvalue = [2, 6]\nclass = Malicious"] ;
101 -> 139 ;
140 [label="gini = 0.0\nsamples = 6\nvalue = [0, 6]\nclass = Malicious"] ;
139 -> 140 ;
141 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
139 -> 141 ;
142 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
100 -> 142 ;
143 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
99 -> 143 ;
144 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
98 -> 144 ;
145 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
97 -> 145 ;
146 [label="expression_statement-sourceElement_stuff <= 0.5\ngini = 0.381\nsamples = 43\nvalue = [11, 32]\nclass = Malicious"] ;
96 -> 146 ;
147 [label="gini = 0.0\nsamples = 32\nvalue = [0, 32]\nclass = Malicious"] ;
146 -> 147 ;
148 [label="gini = 0.0\nsamples = 11\nvalue = [11, 0]\nclass = Benign"] ;
146 -> 148 ;
149 [label="literal-numericliteral <= 0.5\ngini = 0.453\nsamples = 26\nvalue = [9, 17]\nclass = Malicious"] ;
95 -> 149 ;
150 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
149 -> 150 ;
151 [label="gini = 0.0\nsamples = 17\nvalue = [0, 17]\nclass = Malicious"] ;
149 -> 151 ;
152 [label="numericliteral-continue_break_statement <= 0.5\ngini = 0.375\nsamples = 100\nvalue = [25, 75]\nclass = Malicious"] ;
92 -> 152 ;
153 [label="continue_break_statement-catchproduction <= 0.5\ngini = 0.074\nsamples = 26\nvalue = [25, 1]\nclass = Benign"] ;
152 -> 153 ;
154 [label="gini = 0.0\nsamples = 25\nvalue = [25, 0]\nclass = Benign"] ;
153 -> 154 ;
155 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
153 -> 155 ;
156 [label="gini = 0.0\nsamples = 74\nvalue = [0, 74]\nclass = Malicious"] ;
152 -> 156 ;
157 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
91 -> 157 ;
158 [label="expression_statement-continue_break_statement <= 0.5\ngini = 0.105\nsamples = 18\nvalue = [17, 1]\nclass = Benign"] ;
90 -> 158 ;
159 [label="gini = 0.0\nsamples = 17\nvalue = [17, 0]\nclass = Benign"] ;
158 -> 159 ;
160 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
158 -> 160 ;
161 [label="gini = 0.0\nsamples = 48\nvalue = [48, 0]\nclass = Benign"] ;
81 -> 161 ;
162 [label="gini = 0.0\nsamples = 55\nvalue = [55, 0]\nclass = Benign"] ;
80 -> 162 ;
163 [label="literal-trystatement <= 0.5\ngini = 0.18\nsamples = 1360\nvalue = [1224, 136]\nclass = Benign"] ;
1 -> 163 ;
164 [label="numericliteral-continue_break_statement <= 0.5\ngini = 0.008\nsamples = 1228\nvalue = [1223, 5]\nclass = Benign"] ;
163 -> 164 ;
165 [label="continue_break_statement-variable_stuff <= 0.5\ngini = 0.005\nsamples = 1226\nvalue = [1223, 3]\nclass = Benign"] ;
164 -> 165 ;
166 [label="expression_statement-assignmentoperator <= 0.5\ngini = 0.003\nsamples = 1225\nvalue = [1223, 2]\nclass = Benign"] ;
165 -> 166 ;
167 [label="argument_stuff-variable_stuff <= 0.5\ngini = 0.002\nsamples = 1220\nvalue = [1219, 1]\nclass = Benign"] ;
166 -> 167 ;
168 [label="gini = 0.0\nsamples = 1165\nvalue = [1165, 0]\nclass = Benign"] ;
167 -> 168 ;
169 [label="literal-expression_statement <= 0.5\ngini = 0.036\nsamples = 55\nvalue = [54, 1]\nclass = Benign"] ;
167 -> 169 ;
170 [label="literal-numericliteral <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
169 -> 170 ;
171 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
170 -> 171 ;
172 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
170 -> 172 ;
173 [label="gini = 0.0\nsamples = 53\nvalue = [53, 0]\nclass = Benign"] ;
169 -> 173 ;
174 [label="identifiername-expression_statement <= 0.5\ngini = 0.32\nsamples = 5\nvalue = [4, 1]\nclass = Benign"] ;
166 -> 174 ;
175 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
174 -> 175 ;
176 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
174 -> 176 ;
177 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
165 -> 177 ;
178 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
164 -> 178 ;
179 [label="identifiername-expressionstatement <= 0.5\ngini = 0.015\nsamples = 132\nvalue = [1, 131]\nclass = Malicious"] ;
163 -> 179 ;
180 [label="gini = 0.0\nsamples = 131\nvalue = [0, 131]\nclass = Malicious"] ;
179 -> 180 ;
181 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
179 -> 181 ;
182 [label="do_for_while_statement-expressionsequence <= 0.5\ngini = 0.257\nsamples = 10346\nvalue = [8779, 1567]\nclass = Benign"] ;
0 -> 182 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
183 [label="finallyproduction-expressionstatement <= 0.5\ngini = 0.007\nsamples = 8774\nvalue = [8741, 33]\nclass = Benign"] ;
182 -> 183 ;
184 [label="expression_statement-catchproduction <= 0.5\ngini = 0.001\nsamples = 8744\nvalue = [8741, 3]\nclass = Benign"] ;
183 -> 184 ;
185 [label="gini = 0.0\nsamples = 8731\nvalue = [8731, 0]\nclass = Benign"] ;
184 -> 185 ;
186 [label="identifiername-argument_stuff <= 0.5\ngini = 0.355\nsamples = 13\nvalue = [10, 3]\nclass = Benign"] ;
184 -> 186 ;
187 [label="gini = 0.0\nsamples = 3\nvalue = [0, 3]\nclass = Malicious"] ;
186 -> 187 ;
188 [label="gini = 0.0\nsamples = 10\nvalue = [10, 0]\nclass = Benign"] ;
186 -> 188 ;
189 [label="gini = 0.0\nsamples = 30\nvalue = [0, 30]\nclass = Malicious"] ;
183 -> 189 ;
190 [label="numericliteral-property_rules <= 0.5\ngini = 0.047\nsamples = 1572\nvalue = [38, 1534]\nclass = Malicious"] ;
182 -> 190 ;
191 [label="expression_statement-property_rules <= 0.5\ngini = 0.006\nsamples = 1539\nvalue = [5, 1534]\nclass = Malicious"] ;
190 -> 191 ;
192 [label="litereral_stuff-expressionstatement <= 0.5\ngini = 0.001\nsamples = 1535\nvalue = [1, 1534]\nclass = Malicious"] ;
191 -> 192 ;
193 [label="gini = 0.0\nsamples = 1534\nvalue = [0, 1534]\nclass = Malicious"] ;
192 -> 193 ;
194 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
192 -> 194 ;
195 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
191 -> 195 ;
196 [label="gini = 0.0\nsamples = 33\nvalue = [33, 0]\nclass = Benign"] ;
190 -> 196 ;
}
