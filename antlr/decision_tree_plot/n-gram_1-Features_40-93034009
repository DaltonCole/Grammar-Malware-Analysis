digraph Tree {
node [shape=box] ;
0 [label="property_rules <= 0.5\ngini = 0.5\nsamples = 27000\nvalue = [13510, 13490]\nclass = Benign"] ;
1 [label="numericliteral <= 0.5\ngini = 0.404\nsamples = 16610\nvalue = [4672, 11938]\nclass = Malicious"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="expressionstatement <= 0.5\ngini = 0.49\nsamples = 7531\nvalue = [3246, 4285]\nclass = Malicious"] ;
1 -> 2 ;
3 [label="argument_stuff <= 0.5\ngini = 0.411\nsamples = 3983\nvalue = [1149, 2834]\nclass = Malicious"] ;
2 -> 3 ;
4 [label="sourceElement_stuff <= 0.5\ngini = 0.468\nsamples = 2996\nvalue = [1119, 1877]\nclass = Malicious"] ;
3 -> 4 ;
5 [label="gini = 0.395\nsamples = 2576\nvalue = [699, 1877]\nclass = Malicious"] ;
4 -> 5 ;
6 [label="gini = 0.0\nsamples = 420\nvalue = [420, 0]\nclass = Benign"] ;
4 -> 6 ;
7 [label="literal <= 0.5\ngini = 0.059\nsamples = 987\nvalue = [30, 957]\nclass = Malicious"] ;
3 -> 7 ;
8 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
7 -> 8 ;
9 [label="litereral_stuff <= 0.5\ngini = 0.046\nsamples = 980\nvalue = [23, 957]\nclass = Malicious"] ;
7 -> 9 ;
10 [label="expressionsequence <= 0.5\ngini = 0.04\nsamples = 977\nvalue = [20, 957]\nclass = Malicious"] ;
9 -> 10 ;
11 [label="identifiername <= 0.5\ngini = 0.079\nsamples = 486\nvalue = [20, 466]\nclass = Malicious"] ;
10 -> 11 ;
12 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
11 -> 12 ;
13 [label="gini = 0.064\nsamples = 482\nvalue = [16, 466]\nclass = Malicious"] ;
11 -> 13 ;
14 [label="gini = 0.0\nsamples = 491\nvalue = [0, 491]\nclass = Malicious"] ;
10 -> 14 ;
15 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
9 -> 15 ;
16 [label="varmodifier <= 0.5\ngini = 0.483\nsamples = 3548\nvalue = [2097, 1451]\nclass = Benign"] ;
2 -> 16 ;
17 [label="identifiername <= 0.5\ngini = 0.345\nsamples = 2022\nvalue = [1574, 448]\nclass = Benign"] ;
16 -> 17 ;
18 [label="gini = 0.0\nsamples = 358\nvalue = [358, 0]\nclass = Benign"] ;
17 -> 18 ;
19 [label="litereral_stuff <= 0.5\ngini = 0.393\nsamples = 1664\nvalue = [1216, 448]\nclass = Benign"] ;
17 -> 19 ;
20 [label="ifstatement <= 0.5\ngini = 0.446\nsamples = 1334\nvalue = [886, 448]\nclass = Benign"] ;
19 -> 20 ;
21 [label="argument_stuff <= 0.5\ngini = 0.465\nsamples = 1221\nvalue = [773, 448]\nclass = Benign"] ;
20 -> 21 ;
22 [label="gini = 0.0\nsamples = 81\nvalue = [81, 0]\nclass = Benign"] ;
21 -> 22 ;
23 [label="literal <= 0.5\ngini = 0.477\nsamples = 1140\nvalue = [692, 448]\nclass = Benign"] ;
21 -> 23 ;
24 [label="gini = 0.0\nsamples = 47\nvalue = [47, 0]\nclass = Benign"] ;
23 -> 24 ;
25 [label="formalParameterArg_stuff <= 0.5\ngini = 0.484\nsamples = 1093\nvalue = [645, 448]\nclass = Benign"] ;
23 -> 25 ;
26 [label="trystatement <= 0.5\ngini = 0.486\nsamples = 1074\nvalue = [626, 448]\nclass = Benign"] ;
25 -> 26 ;
27 [label="returnstatement <= 0.5\ngini = 0.487\nsamples = 1072\nvalue = [624, 448]\nclass = Benign"] ;
26 -> 27 ;
28 [label="assignmentoperator <= 0.5\ngini = 0.487\nsamples = 1070\nvalue = [622, 448]\nclass = Benign"] ;
27 -> 28 ;
29 [label="gini = 0.487\nsamples = 1069\nvalue = [621, 448]\nclass = Benign"] ;
28 -> 29 ;
30 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
28 -> 30 ;
31 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
27 -> 31 ;
32 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
26 -> 32 ;
33 [label="gini = 0.0\nsamples = 19\nvalue = [19, 0]\nclass = Benign"] ;
25 -> 33 ;
34 [label="gini = 0.0\nsamples = 113\nvalue = [113, 0]\nclass = Benign"] ;
20 -> 34 ;
35 [label="gini = 0.0\nsamples = 330\nvalue = [330, 0]\nclass = Benign"] ;
19 -> 35 ;
36 [label="identifiername <= 0.5\ngini = 0.451\nsamples = 1526\nvalue = [523, 1003]\nclass = Malicious"] ;
16 -> 36 ;
37 [label="argument_stuff <= 0.5\ngini = 0.093\nsamples = 821\nvalue = [40, 781]\nclass = Malicious"] ;
36 -> 37 ;
38 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
37 -> 38 ;
39 [label="withstatement <= 0.5\ngini = 0.08\nsamples = 815\nvalue = [34, 781]\nclass = Malicious"] ;
37 -> 39 ;
40 [label="element_stuff <= 0.5\ngini = 0.076\nsamples = 813\nvalue = [32, 781]\nclass = Malicious"] ;
39 -> 40 ;
41 [label="returnstatement <= 0.5\ngini = 0.073\nsamples = 812\nvalue = [31, 781]\nclass = Malicious"] ;
40 -> 41 ;
42 [label="assignmentoperator <= 0.5\ngini = 0.071\nsamples = 788\nvalue = [29, 759]\nclass = Malicious"] ;
41 -> 42 ;
43 [label="gini = 0.076\nsamples = 731\nvalue = [29, 702]\nclass = Malicious"] ;
42 -> 43 ;
44 [label="gini = 0.0\nsamples = 57\nvalue = [0, 57]\nclass = Malicious"] ;
42 -> 44 ;
45 [label="gini = 0.153\nsamples = 24\nvalue = [2, 22]\nclass = Malicious"] ;
41 -> 45 ;
46 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
40 -> 46 ;
47 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
39 -> 47 ;
48 [label="returnstatement <= 0.5\ngini = 0.431\nsamples = 705\nvalue = [483, 222]\nclass = Benign"] ;
36 -> 48 ;
49 [label="element_stuff <= 0.5\ngini = 0.013\nsamples = 458\nvalue = [455, 3]\nclass = Benign"] ;
48 -> 49 ;
50 [label="ifstatement <= 0.5\ngini = 0.009\nsamples = 448\nvalue = [446, 2]\nclass = Benign"] ;
49 -> 50 ;
51 [label="assignmentoperator <= 0.5\ngini = 0.006\nsamples = 346\nvalue = [345, 1]\nclass = Benign"] ;
50 -> 51 ;
52 [label="argument_stuff <= 0.5\ngini = 0.008\nsamples = 252\nvalue = [251, 1]\nclass = Benign"] ;
51 -> 52 ;
53 [label="gini = 0.0\nsamples = 63\nvalue = [63, 0]\nclass = Benign"] ;
52 -> 53 ;
54 [label="formalParameterArg_stuff <= 0.5\ngini = 0.011\nsamples = 189\nvalue = [188, 1]\nclass = Benign"] ;
52 -> 54 ;
55 [label="litereral_stuff <= 0.5\ngini = 0.011\nsamples = 173\nvalue = [172, 1]\nclass = Benign"] ;
54 -> 55 ;
56 [label="literal <= 0.5\ngini = 0.012\nsamples = 164\nvalue = [163, 1]\nclass = Benign"] ;
55 -> 56 ;
57 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
56 -> 57 ;
58 [label="catchproduction <= 0.5\ngini = 0.012\nsamples = 161\nvalue = [160, 1]\nclass = Benign"] ;
56 -> 58 ;
59 [label="gini = 0.012\nsamples = 159\nvalue = [158, 1]\nclass = Benign"] ;
58 -> 59 ;
60 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
58 -> 60 ;
61 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
55 -> 61 ;
62 [label="gini = 0.0\nsamples = 16\nvalue = [16, 0]\nclass = Benign"] ;
54 -> 62 ;
63 [label="gini = 0.0\nsamples = 94\nvalue = [94, 0]\nclass = Benign"] ;
51 -> 63 ;
64 [label="formalParameterArg_stuff <= 0.5\ngini = 0.019\nsamples = 102\nvalue = [101, 1]\nclass = Benign"] ;
50 -> 64 ;
65 [label="litereral_stuff <= 0.5\ngini = 0.022\nsamples = 89\nvalue = [88, 1]\nclass = Benign"] ;
64 -> 65 ;
66 [label="assignmentoperator <= 0.5\ngini = 0.023\nsamples = 86\nvalue = [85, 1]\nclass = Benign"] ;
65 -> 66 ;
67 [label="argument_stuff <= 0.5\ngini = 0.024\nsamples = 83\nvalue = [82, 1]\nclass = Benign"] ;
66 -> 67 ;
68 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
67 -> 68 ;
69 [label="gini = 0.024\nsamples = 82\nvalue = [81, 1]\nclass = Benign"] ;
67 -> 69 ;
70 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
66 -> 70 ;
71 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
65 -> 71 ;
72 [label="gini = 0.0\nsamples = 13\nvalue = [13, 0]\nclass = Benign"] ;
64 -> 72 ;
73 [label="ifstatement <= 0.5\ngini = 0.18\nsamples = 10\nvalue = [9, 1]\nclass = Benign"] ;
49 -> 73 ;
74 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
73 -> 74 ;
75 [label="formalparameterlist <= 0.5\ngini = 0.375\nsamples = 4\nvalue = [3, 1]\nclass = Benign"] ;
73 -> 75 ;
76 [label="gini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
75 -> 76 ;
77 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
75 -> 77 ;
78 [label="ifstatement <= 0.5\ngini = 0.201\nsamples = 247\nvalue = [28, 219]\nclass = Malicious"] ;
48 -> 78 ;
79 [label="formalParameterArg_stuff <= 0.5\ngini = 0.147\nsamples = 238\nvalue = [19, 219]\nclass = Malicious"] ;
78 -> 79 ;
80 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
79 -> 80 ;
81 [label="litereral_stuff <= 0.5\ngini = 0.113\nsamples = 233\nvalue = [14, 219]\nclass = Malicious"] ;
79 -> 81 ;
82 [label="trystatement <= 0.5\ngini = 0.076\nsamples = 228\nvalue = [9, 219]\nclass = Malicious"] ;
81 -> 82 ;
83 [label="gini = 0.068\nsamples = 227\nvalue = [8, 219]\nclass = Malicious"] ;
82 -> 83 ;
84 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
82 -> 84 ;
85 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
81 -> 85 ;
86 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
78 -> 86 ;
87 [label="expressionsequence <= 0.5\ngini = 0.265\nsamples = 9079\nvalue = [1426, 7653]\nclass = Malicious"] ;
1 -> 87 ;
88 [label="gini = 0.0\nsamples = 250\nvalue = [250, 0]\nclass = Benign"] ;
87 -> 88 ;
89 [label="element_stuff <= 0.5\ngini = 0.231\nsamples = 8829\nvalue = [1176, 7653]\nclass = Malicious"] ;
87 -> 89 ;
90 [label="litereral_stuff <= 0.5\ngini = 0.321\nsamples = 4965\nvalue = [998, 3967]\nclass = Malicious"] ;
89 -> 90 ;
91 [label="returnstatement <= 0.5\ngini = 0.286\nsamples = 4788\nvalue = [828, 3960]\nclass = Malicious"] ;
90 -> 91 ;
92 [label="argument_stuff <= 0.5\ngini = 0.41\nsamples = 2428\nvalue = [699, 1729]\nclass = Malicious"] ;
91 -> 92 ;
93 [label="gini = 0.0\nsamples = 120\nvalue = [120, 0]\nclass = Benign"] ;
92 -> 93 ;
94 [label="formalparameterlist <= 0.5\ngini = 0.376\nsamples = 2308\nvalue = [579, 1729]\nclass = Malicious"] ;
92 -> 94 ;
95 [label="identifiername <= 0.5\ngini = 0.35\nsamples = 2221\nvalue = [502, 1719]\nclass = Malicious"] ;
94 -> 95 ;
96 [label="variable_stuff <= 0.5\ngini = 0.164\nsamples = 656\nvalue = [59, 597]\nclass = Malicious"] ;
95 -> 96 ;
97 [label="ifstatement <= 0.5\ngini = 0.308\nsamples = 168\nvalue = [32, 136]\nclass = Malicious"] ;
96 -> 97 ;
98 [label="gini = 0.0\nsamples = 32\nvalue = [32, 0]\nclass = Benign"] ;
97 -> 98 ;
99 [label="gini = 0.0\nsamples = 136\nvalue = [0, 136]\nclass = Malicious"] ;
97 -> 99 ;
100 [label="trystatement <= 0.5\ngini = 0.105\nsamples = 488\nvalue = [27, 461]\nclass = Malicious"] ;
96 -> 100 ;
101 [label="ifstatement <= 0.5\ngini = 0.113\nsamples = 450\nvalue = [27, 423]\nclass = Malicious"] ;
100 -> 101 ;
102 [label="do_for_while_statement <= 0.5\ngini = 0.109\nsamples = 449\nvalue = [26, 423]\nclass = Malicious"] ;
101 -> 102 ;
103 [label="gini = 0.109\nsamples = 448\nvalue = [26, 422]\nclass = Malicious"] ;
102 -> 103 ;
104 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
102 -> 104 ;
105 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
101 -> 105 ;
106 [label="gini = 0.0\nsamples = 38\nvalue = [0, 38]\nclass = Malicious"] ;
100 -> 106 ;
107 [label="trystatement <= 0.5\ngini = 0.406\nsamples = 1565\nvalue = [443, 1122]\nclass = Malicious"] ;
95 -> 107 ;
108 [label="do_for_while_statement <= 0.5\ngini = 0.424\nsamples = 1433\nvalue = [437, 996]\nclass = Malicious"] ;
107 -> 108 ;
109 [label="ifstatement <= 0.5\ngini = 0.396\nsamples = 1343\nvalue = [365, 978]\nclass = Malicious"] ;
108 -> 109 ;
110 [label="variable_stuff <= 0.5\ngini = 0.44\nsamples = 744\nvalue = [243, 501]\nclass = Malicious"] ;
109 -> 110 ;
111 [label="gini = 0.493\nsamples = 282\nvalue = [158, 124]\nclass = Benign"] ;
110 -> 111 ;
112 [label="assignmentoperator <= 0.5\ngini = 0.3\nsamples = 462\nvalue = [85, 377]\nclass = Malicious"] ;
110 -> 112 ;
113 [label="gini = 0.299\nsamples = 459\nvalue = [84, 375]\nclass = Malicious"] ;
112 -> 113 ;
114 [label="gini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
112 -> 114 ;
115 [label="assignmentoperator <= 0.5\ngini = 0.324\nsamples = 599\nvalue = [122, 477]\nclass = Malicious"] ;
109 -> 115 ;
116 [label="variable_stuff <= 0.5\ngini = 0.315\nsamples = 593\nvalue = [116, 477]\nclass = Malicious"] ;
115 -> 116 ;
117 [label="gini = 0.262\nsamples = 361\nvalue = [56, 305]\nclass = Malicious"] ;
116 -> 117 ;
118 [label="switchstatement <= 0.5\ngini = 0.383\nsamples = 232\nvalue = [60, 172]\nclass = Malicious"] ;
116 -> 118 ;
119 [label="gini = 0.38\nsamples = 231\nvalue = [59, 172]\nclass = Malicious"] ;
118 -> 119 ;
120 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
118 -> 120 ;
121 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
115 -> 121 ;
122 [label="assignmentoperator <= 0.5\ngini = 0.32\nsamples = 90\nvalue = [72, 18]\nclass = Benign"] ;
108 -> 122 ;
123 [label="gini = 0.0\nsamples = 72\nvalue = [72, 0]\nclass = Benign"] ;
122 -> 123 ;
124 [label="gini = 0.0\nsamples = 18\nvalue = [0, 18]\nclass = Malicious"] ;
122 -> 124 ;
125 [label="varmodifier <= 0.5\ngini = 0.087\nsamples = 132\nvalue = [6, 126]\nclass = Malicious"] ;
107 -> 125 ;
126 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
125 -> 126 ;
127 [label="do_for_while_statement <= 0.5\ngini = 0.06\nsamples = 130\nvalue = [4, 126]\nclass = Malicious"] ;
125 -> 127 ;
128 [label="ifstatement <= 0.5\ngini = 0.231\nsamples = 15\nvalue = [2, 13]\nclass = Malicious"] ;
127 -> 128 ;
129 [label="gini = 0.5\nsamples = 4\nvalue = [2, 2]\nclass = Benign"] ;
128 -> 129 ;
130 [label="gini = 0.0\nsamples = 11\nvalue = [0, 11]\nclass = Malicious"] ;
128 -> 130 ;
131 [label="ifstatement <= 0.5\ngini = 0.034\nsamples = 115\nvalue = [2, 113]\nclass = Malicious"] ;
127 -> 131 ;
132 [label="gini = 0.0\nsamples = 100\nvalue = [0, 100]\nclass = Malicious"] ;
131 -> 132 ;
133 [label="assignmentoperator <= 0.5\ngini = 0.231\nsamples = 15\nvalue = [2, 13]\nclass = Malicious"] ;
131 -> 133 ;
134 [label="gini = 0.0\nsamples = 13\nvalue = [0, 13]\nclass = Malicious"] ;
133 -> 134 ;
135 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
133 -> 135 ;
136 [label="ifstatement <= 0.5\ngini = 0.203\nsamples = 87\nvalue = [77, 10]\nclass = Benign"] ;
94 -> 136 ;
137 [label="variable_stuff <= 0.5\ngini = 0.466\nsamples = 27\nvalue = [17, 10]\nclass = Benign"] ;
136 -> 137 ;
138 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
137 -> 138 ;
139 [label="do_for_while_statement <= 0.5\ngini = 0.499\nsamples = 21\nvalue = [11, 10]\nclass = Benign"] ;
137 -> 139 ;
140 [label="gini = 0.5\nsamples = 20\nvalue = [10, 10]\nclass = Benign"] ;
139 -> 140 ;
141 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
139 -> 141 ;
142 [label="gini = 0.0\nsamples = 60\nvalue = [60, 0]\nclass = Benign"] ;
136 -> 142 ;
143 [label="do_for_while_statement <= 0.5\ngini = 0.103\nsamples = 2360\nvalue = [129, 2231]\nclass = Malicious"] ;
91 -> 143 ;
144 [label="identifiername <= 0.5\ngini = 0.094\nsamples = 2321\nvalue = [115, 2206]\nclass = Malicious"] ;
143 -> 144 ;
145 [label="gini = 0.0\nsamples = 724\nvalue = [0, 724]\nclass = Malicious"] ;
144 -> 145 ;
146 [label="formalparameterlist <= 0.5\ngini = 0.134\nsamples = 1597\nvalue = [115, 1482]\nclass = Malicious"] ;
144 -> 146 ;
147 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
146 -> 147 ;
148 [label="varmodifier <= 0.5\ngini = 0.128\nsamples = 1591\nvalue = [109, 1482]\nclass = Malicious"] ;
146 -> 148 ;
149 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
148 -> 149 ;
150 [label="continue_break_statement <= 0.5\ngini = 0.127\nsamples = 1590\nvalue = [108, 1482]\nclass = Malicious"] ;
148 -> 150 ;
151 [label="ifstatement <= 0.5\ngini = 0.126\nsamples = 1589\nvalue = [107, 1482]\nclass = Malicious"] ;
150 -> 151 ;
152 [label="gini = 0.0\nsamples = 14\nvalue = [0, 14]\nclass = Malicious"] ;
151 -> 152 ;
153 [label="catchproduction <= 0.5\ngini = 0.127\nsamples = 1575\nvalue = [107, 1468]\nclass = Malicious"] ;
151 -> 153 ;
154 [label="gini = 0.127\nsamples = 1574\nvalue = [107, 1467]\nclass = Malicious"] ;
153 -> 154 ;
155 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
153 -> 155 ;
156 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
150 -> 156 ;
157 [label="identifiername <= 0.5\ngini = 0.46\nsamples = 39\nvalue = [14, 25]\nclass = Malicious"] ;
143 -> 157 ;
158 [label="gini = 0.0\nsamples = 23\nvalue = [0, 23]\nclass = Malicious"] ;
157 -> 158 ;
159 [label="catchproduction <= 0.5\ngini = 0.219\nsamples = 16\nvalue = [14, 2]\nclass = Benign"] ;
157 -> 159 ;
160 [label="assignmentoperator <= 0.5\ngini = 0.124\nsamples = 15\nvalue = [14, 1]\nclass = Benign"] ;
159 -> 160 ;
161 [label="gini = 0.0\nsamples = 11\nvalue = [11, 0]\nclass = Benign"] ;
160 -> 161 ;
162 [label="formalParameterArg_stuff <= 0.5\ngini = 0.375\nsamples = 4\nvalue = [3, 1]\nclass = Benign"] ;
160 -> 162 ;
163 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
162 -> 163 ;
164 [label="continue_break_statement <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [2, 1]\nclass = Benign"] ;
162 -> 164 ;
165 [label="gini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
164 -> 165 ;
166 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
164 -> 166 ;
167 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
159 -> 167 ;
168 [label="catchproduction <= 0.5\ngini = 0.076\nsamples = 177\nvalue = [170, 7]\nclass = Benign"] ;
90 -> 168 ;
169 [label="assignmentoperator <= 0.5\ngini = 0.013\nsamples = 153\nvalue = [152, 1]\nclass = Benign"] ;
168 -> 169 ;
170 [label="gini = 0.0\nsamples = 150\nvalue = [150, 0]\nclass = Benign"] ;
169 -> 170 ;
171 [label="do_for_while_statement <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [2, 1]\nclass = Benign"] ;
169 -> 171 ;
172 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
171 -> 172 ;
173 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
171 -> 173 ;
174 [label="identifiername <= 0.5\ngini = 0.375\nsamples = 24\nvalue = [18, 6]\nclass = Benign"] ;
168 -> 174 ;
175 [label="gini = 0.0\nsamples = 6\nvalue = [0, 6]\nclass = Malicious"] ;
174 -> 175 ;
176 [label="gini = 0.0\nsamples = 18\nvalue = [18, 0]\nclass = Benign"] ;
174 -> 176 ;
177 [label="argument_stuff <= 0.5\ngini = 0.088\nsamples = 3864\nvalue = [178, 3686]\nclass = Malicious"] ;
89 -> 177 ;
178 [label="gini = 0.0\nsamples = 81\nvalue = [81, 0]\nclass = Benign"] ;
177 -> 178 ;
179 [label="variable_stuff <= 0.5\ngini = 0.05\nsamples = 3783\nvalue = [97, 3686]\nclass = Malicious"] ;
177 -> 179 ;
180 [label="gini = 0.0\nsamples = 20\nvalue = [20, 0]\nclass = Benign"] ;
179 -> 180 ;
181 [label="ifstatement <= 0.5\ngini = 0.04\nsamples = 3763\nvalue = [77, 3686]\nclass = Malicious"] ;
179 -> 181 ;
182 [label="do_for_while_statement <= 0.5\ngini = 0.111\nsamples = 850\nvalue = [50, 800]\nclass = Malicious"] ;
181 -> 182 ;
183 [label="identifiername <= 0.5\ngini = 0.367\nsamples = 66\nvalue = [50, 16]\nclass = Benign"] ;
182 -> 183 ;
184 [label="gini = 0.124\nsamples = 15\nvalue = [1, 14]\nclass = Malicious"] ;
183 -> 184 ;
185 [label="formalparameterlist <= 0.5\ngini = 0.075\nsamples = 51\nvalue = [49, 2]\nclass = Benign"] ;
183 -> 185 ;
186 [label="gini = 0.0\nsamples = 49\nvalue = [49, 0]\nclass = Benign"] ;
185 -> 186 ;
187 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
185 -> 187 ;
188 [label="gini = 0.0\nsamples = 784\nvalue = [0, 784]\nclass = Malicious"] ;
182 -> 188 ;
189 [label="identifiername <= 0.5\ngini = 0.018\nsamples = 2913\nvalue = [27, 2886]\nclass = Malicious"] ;
181 -> 189 ;
190 [label="gini = 0.0\nsamples = 823\nvalue = [0, 823]\nclass = Malicious"] ;
189 -> 190 ;
191 [label="formalparameterlist <= 0.5\ngini = 0.026\nsamples = 2090\nvalue = [27, 2063]\nclass = Malicious"] ;
189 -> 191 ;
192 [label="assignmentoperator <= 0.5\ngini = 0.022\nsamples = 2083\nvalue = [23, 2060]\nclass = Malicious"] ;
191 -> 192 ;
193 [label="returnstatement <= 0.5\ngini = 0.04\nsamples = 1132\nvalue = [23, 1109]\nclass = Malicious"] ;
192 -> 193 ;
194 [label="do_for_while_statement <= 0.5\ngini = 0.036\nsamples = 1130\nvalue = [21, 1109]\nclass = Malicious"] ;
193 -> 194 ;
195 [label="continue_break_statement <= 0.5\ngini = 0.048\nsamples = 685\nvalue = [17, 668]\nclass = Malicious"] ;
194 -> 195 ;
196 [label="catchproduction <= 0.5\ngini = 0.049\nsamples = 680\nvalue = [17, 663]\nclass = Malicious"] ;
195 -> 196 ;
197 [label="gini = 0.05\nsamples = 629\nvalue = [16, 613]\nclass = Malicious"] ;
196 -> 197 ;
198 [label="gini = 0.038\nsamples = 51\nvalue = [1, 50]\nclass = Malicious"] ;
196 -> 198 ;
199 [label="gini = 0.0\nsamples = 5\nvalue = [0, 5]\nclass = Malicious"] ;
195 -> 199 ;
200 [label="continue_break_statement <= 0.5\ngini = 0.018\nsamples = 445\nvalue = [4, 441]\nclass = Malicious"] ;
194 -> 200 ;
201 [label="gini = 0.026\nsamples = 298\nvalue = [4, 294]\nclass = Malicious"] ;
200 -> 201 ;
202 [label="gini = 0.0\nsamples = 147\nvalue = [0, 147]\nclass = Malicious"] ;
200 -> 202 ;
203 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
193 -> 203 ;
204 [label="gini = 0.0\nsamples = 951\nvalue = [0, 951]\nclass = Malicious"] ;
192 -> 204 ;
205 [label="continue_break_statement <= 0.5\ngini = 0.49\nsamples = 7\nvalue = [4, 3]\nclass = Benign"] ;
191 -> 205 ;
206 [label="returnstatement <= 0.5\ngini = 0.444\nsamples = 6\nvalue = [4, 2]\nclass = Benign"] ;
205 -> 206 ;
207 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
206 -> 207 ;
208 [label="gini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
206 -> 208 ;
209 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
205 -> 209 ;
210 [label="do_for_while_statement <= 0.5\ngini = 0.254\nsamples = 10390\nvalue = [8838, 1552]\nclass = Benign"] ;
0 -> 210 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
211 [label="catchproduction <= 0.5\ngini = 0.001\nsamples = 8615\nvalue = [8612, 3]\nclass = Benign"] ;
210 -> 211 ;
212 [label="gini = 0.0\nsamples = 8519\nvalue = [8519, 0]\nclass = Benign"] ;
211 -> 212 ;
213 [label="ifstatement <= 0.5\ngini = 0.061\nsamples = 96\nvalue = [93, 3]\nclass = Benign"] ;
211 -> 213 ;
214 [label="gini = 0.0\nsamples = 43\nvalue = [43, 0]\nclass = Benign"] ;
213 -> 214 ;
215 [label="varmodifier <= 0.5\ngini = 0.107\nsamples = 53\nvalue = [50, 3]\nclass = Benign"] ;
213 -> 215 ;
216 [label="gini = 0.0\nsamples = 13\nvalue = [13, 0]\nclass = Benign"] ;
215 -> 216 ;
217 [label="formalparameterlist <= 0.5\ngini = 0.139\nsamples = 40\nvalue = [37, 3]\nclass = Benign"] ;
215 -> 217 ;
218 [label="element_stuff <= 0.5\ngini = 0.165\nsamples = 33\nvalue = [30, 3]\nclass = Benign"] ;
217 -> 218 ;
219 [label="assignmentoperator <= 0.5\ngini = 0.245\nsamples = 14\nvalue = [12, 2]\nclass = Benign"] ;
218 -> 219 ;
220 [label="numericliteral <= 0.5\ngini = 0.26\nsamples = 13\nvalue = [11, 2]\nclass = Benign"] ;
219 -> 220 ;
221 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
220 -> 221 ;
222 [label="gini = 0.278\nsamples = 12\nvalue = [10, 2]\nclass = Benign"] ;
220 -> 222 ;
223 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
219 -> 223 ;
224 [label="numericliteral <= 0.5\ngini = 0.1\nsamples = 19\nvalue = [18, 1]\nclass = Benign"] ;
218 -> 224 ;
225 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
224 -> 225 ;
226 [label="gini = 0.117\nsamples = 16\nvalue = [15, 1]\nclass = Benign"] ;
224 -> 226 ;
227 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
217 -> 227 ;
228 [label="identifiername <= 0.5\ngini = 0.222\nsamples = 1775\nvalue = [226, 1549]\nclass = Malicious"] ;
210 -> 228 ;
229 [label="gini = 0.0\nsamples = 1491\nvalue = [0, 1491]\nclass = Malicious"] ;
228 -> 229 ;
230 [label="catchproduction <= 0.5\ngini = 0.325\nsamples = 284\nvalue = [226, 58]\nclass = Benign"] ;
228 -> 230 ;
231 [label="gini = 0.0\nsamples = 206\nvalue = [206, 0]\nclass = Benign"] ;
230 -> 231 ;
232 [label="assignmentoperator <= 0.5\ngini = 0.381\nsamples = 78\nvalue = [20, 58]\nclass = Malicious"] ;
230 -> 232 ;
233 [label="continue_break_statement <= 0.5\ngini = 0.469\nsamples = 16\nvalue = [10, 6]\nclass = Benign"] ;
232 -> 233 ;
234 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
233 -> 234 ;
235 [label="formalParameterArg_stuff <= 0.5\ngini = 0.245\nsamples = 7\nvalue = [1, 6]\nclass = Malicious"] ;
233 -> 235 ;
236 [label="gini = 0.0\nsamples = 6\nvalue = [0, 6]\nclass = Malicious"] ;
235 -> 236 ;
237 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
235 -> 237 ;
238 [label="finallyproduction <= 0.5\ngini = 0.271\nsamples = 62\nvalue = [10, 52]\nclass = Malicious"] ;
232 -> 238 ;
239 [label="continue_break_statement <= 0.5\ngini = 0.408\nsamples = 35\nvalue = [10, 25]\nclass = Malicious"] ;
238 -> 239 ;
240 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
239 -> 240 ;
241 [label="clause_stuff <= 0.5\ngini = 0.238\nsamples = 29\nvalue = [4, 25]\nclass = Malicious"] ;
239 -> 241 ;
242 [label="throwstatement <= 0.5\ngini = 0.191\nsamples = 28\nvalue = [3, 25]\nclass = Malicious"] ;
241 -> 242 ;
243 [label="gini = 0.137\nsamples = 27\nvalue = [2, 25]\nclass = Malicious"] ;
242 -> 243 ;
244 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
242 -> 244 ;
245 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
241 -> 245 ;
246 [label="gini = 0.0\nsamples = 27\nvalue = [0, 27]\nclass = Malicious"] ;
238 -> 246 ;
}
