digraph Tree {
node [shape=box] ;
0 [label="propertyname <= 0.5\ngini = 0.5\nsamples = 27000\nvalue = [13511, 13489]\nclass = Benign"] ;
1 [label="numericliteral <= 0.5\ngini = 0.404\nsamples = 16594\nvalue = [4669, 11925]\nclass = Malicious"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="expressionstatement <= 0.5\ngini = 0.491\nsamples = 7567\nvalue = [3268, 4299]\nclass = Malicious"] ;
1 -> 2 ;
3 [label="argument_stuff <= 0.5\ngini = 0.41\nsamples = 3978\nvalue = [1143, 2835]\nclass = Malicious"] ;
2 -> 3 ;
4 [label="sourceElement_stuff <= 0.5\ngini = 0.469\nsamples = 2972\nvalue = [1114, 1858]\nclass = Malicious"] ;
3 -> 4 ;
5 [label="gini = 0.395\nsamples = 2549\nvalue = [691, 1858]\nclass = Malicious"] ;
4 -> 5 ;
6 [label="gini = 0.0\nsamples = 423\nvalue = [423, 0]\nclass = Benign"] ;
4 -> 6 ;
7 [label="literal <= 0.5\ngini = 0.056\nsamples = 1006\nvalue = [29, 977]\nclass = Malicious"] ;
3 -> 7 ;
8 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
7 -> 8 ;
9 [label="litereral_stuff <= 0.5\ngini = 0.041\nsamples = 998\nvalue = [21, 977]\nclass = Malicious"] ;
7 -> 9 ;
10 [label="expressionsequence <= 0.5\ngini = 0.036\nsamples = 995\nvalue = [18, 977]\nclass = Malicious"] ;
9 -> 10 ;
11 [label="identifiername <= 0.5\ngini = 0.07\nsamples = 492\nvalue = [18, 474]\nclass = Malicious"] ;
10 -> 11 ;
12 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
11 -> 12 ;
13 [label="gini = 0.059\nsamples = 489\nvalue = [15, 474]\nclass = Malicious"] ;
11 -> 13 ;
14 [label="gini = 0.0\nsamples = 503\nvalue = [0, 503]\nclass = Malicious"] ;
10 -> 14 ;
15 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
9 -> 15 ;
16 [label="variable_stuff <= 0.5\ngini = 0.483\nsamples = 3589\nvalue = [2125, 1464]\nclass = Benign"] ;
2 -> 16 ;
17 [label="identifiername <= 0.5\ngini = 0.343\nsamples = 2054\nvalue = [1603, 451]\nclass = Benign"] ;
16 -> 17 ;
18 [label="gini = 0.0\nsamples = 355\nvalue = [355, 0]\nclass = Benign"] ;
17 -> 18 ;
19 [label="litereral_stuff <= 0.5\ngini = 0.39\nsamples = 1699\nvalue = [1248, 451]\nclass = Benign"] ;
17 -> 19 ;
20 [label="ifstatement <= 0.5\ngini = 0.443\nsamples = 1362\nvalue = [911, 451]\nclass = Benign"] ;
19 -> 20 ;
21 [label="argument_stuff <= 0.5\ngini = 0.462\nsamples = 1246\nvalue = [795, 451]\nclass = Benign"] ;
20 -> 21 ;
22 [label="gini = 0.0\nsamples = 86\nvalue = [86, 0]\nclass = Benign"] ;
21 -> 22 ;
23 [label="literal <= 0.5\ngini = 0.475\nsamples = 1160\nvalue = [709, 451]\nclass = Benign"] ;
21 -> 23 ;
24 [label="gini = 0.0\nsamples = 50\nvalue = [50, 0]\nclass = Benign"] ;
23 -> 24 ;
25 [label="formalparameterlist <= 0.5\ngini = 0.482\nsamples = 1110\nvalue = [659, 451]\nclass = Benign"] ;
23 -> 25 ;
26 [label="returnstatement <= 0.5\ngini = 0.485\nsamples = 1091\nvalue = [640, 451]\nclass = Benign"] ;
25 -> 26 ;
27 [label="trystatement <= 0.5\ngini = 0.485\nsamples = 1089\nvalue = [638, 451]\nclass = Benign"] ;
26 -> 27 ;
28 [label="assignmentoperator <= 0.5\ngini = 0.486\nsamples = 1087\nvalue = [636, 451]\nclass = Benign"] ;
27 -> 28 ;
29 [label="gini = 0.486\nsamples = 1086\nvalue = [635, 451]\nclass = Benign"] ;
28 -> 29 ;
30 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
28 -> 30 ;
31 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
27 -> 31 ;
32 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
26 -> 32 ;
33 [label="gini = 0.0\nsamples = 19\nvalue = [19, 0]\nclass = Benign"] ;
25 -> 33 ;
34 [label="gini = 0.0\nsamples = 116\nvalue = [116, 0]\nclass = Benign"] ;
20 -> 34 ;
35 [label="gini = 0.0\nsamples = 337\nvalue = [337, 0]\nclass = Benign"] ;
19 -> 35 ;
36 [label="identifiername <= 0.5\ngini = 0.449\nsamples = 1535\nvalue = [522, 1013]\nclass = Malicious"] ;
16 -> 36 ;
37 [label="argument_stuff <= 0.5\ngini = 0.091\nsamples = 820\nvalue = [39, 781]\nclass = Malicious"] ;
36 -> 37 ;
38 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
37 -> 38 ;
39 [label="withstatement <= 0.5\ngini = 0.078\nsamples = 814\nvalue = [33, 781]\nclass = Malicious"] ;
37 -> 39 ;
40 [label="returnstatement <= 0.5\ngini = 0.073\nsamples = 812\nvalue = [31, 781]\nclass = Malicious"] ;
39 -> 40 ;
41 [label="assignmentoperator <= 0.5\ngini = 0.071\nsamples = 788\nvalue = [29, 759]\nclass = Malicious"] ;
40 -> 41 ;
42 [label="gini = 0.076\nsamples = 728\nvalue = [29, 699]\nclass = Malicious"] ;
41 -> 42 ;
43 [label="gini = 0.0\nsamples = 60\nvalue = [0, 60]\nclass = Malicious"] ;
41 -> 43 ;
44 [label="gini = 0.153\nsamples = 24\nvalue = [2, 22]\nclass = Malicious"] ;
40 -> 44 ;
45 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
39 -> 45 ;
46 [label="returnstatement <= 0.5\ngini = 0.438\nsamples = 715\nvalue = [483, 232]\nclass = Benign"] ;
36 -> 46 ;
47 [label="gini = 0.0\nsamples = 457\nvalue = [457, 0]\nclass = Benign"] ;
46 -> 47 ;
48 [label="ifstatement <= 0.5\ngini = 0.181\nsamples = 258\nvalue = [26, 232]\nclass = Malicious"] ;
46 -> 48 ;
49 [label="formalParameterArg_stuff <= 0.5\ngini = 0.14\nsamples = 251\nvalue = [19, 232]\nclass = Malicious"] ;
48 -> 49 ;
50 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
49 -> 50 ;
51 [label="litereral_stuff <= 0.5\ngini = 0.107\nsamples = 246\nvalue = [14, 232]\nclass = Malicious"] ;
49 -> 51 ;
52 [label="gini = 0.079\nsamples = 242\nvalue = [10, 232]\nclass = Malicious"] ;
51 -> 52 ;
53 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
51 -> 53 ;
54 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
48 -> 54 ;
55 [label="expressionstatement <= 0.5\ngini = 0.262\nsamples = 9027\nvalue = [1401, 7626]\nclass = Malicious"] ;
1 -> 55 ;
56 [label="gini = 0.0\nsamples = 248\nvalue = [248, 0]\nclass = Benign"] ;
55 -> 56 ;
57 [label="element_stuff <= 0.5\ngini = 0.228\nsamples = 8779\nvalue = [1153, 7626]\nclass = Malicious"] ;
55 -> 57 ;
58 [label="litereral_stuff <= 0.5\ngini = 0.32\nsamples = 4896\nvalue = [980, 3916]\nclass = Malicious"] ;
57 -> 58 ;
59 [label="returnstatement <= 0.5\ngini = 0.284\nsamples = 4717\nvalue = [810, 3907]\nclass = Malicious"] ;
58 -> 59 ;
60 [label="argument_stuff <= 0.5\ngini = 0.409\nsamples = 2386\nvalue = [685, 1701]\nclass = Malicious"] ;
59 -> 60 ;
61 [label="gini = 0.0\nsamples = 119\nvalue = [119, 0]\nclass = Benign"] ;
60 -> 61 ;
62 [label="formalparameterlist <= 0.5\ngini = 0.375\nsamples = 2267\nvalue = [566, 1701]\nclass = Malicious"] ;
60 -> 62 ;
63 [label="identifiername <= 0.5\ngini = 0.347\nsamples = 2177\nvalue = [487, 1690]\nclass = Malicious"] ;
62 -> 63 ;
64 [label="variable_stuff <= 0.5\ngini = 0.153\nsamples = 657\nvalue = [55, 602]\nclass = Malicious"] ;
63 -> 64 ;
65 [label="ifstatement <= 0.5\ngini = 0.302\nsamples = 167\nvalue = [31, 136]\nclass = Malicious"] ;
64 -> 65 ;
66 [label="gini = 0.0\nsamples = 31\nvalue = [31, 0]\nclass = Benign"] ;
65 -> 66 ;
67 [label="gini = 0.0\nsamples = 136\nvalue = [0, 136]\nclass = Malicious"] ;
65 -> 67 ;
68 [label="catchproduction <= 0.5\ngini = 0.093\nsamples = 490\nvalue = [24, 466]\nclass = Malicious"] ;
64 -> 68 ;
69 [label="ifstatement <= 0.5\ngini = 0.1\nsamples = 454\nvalue = [24, 430]\nclass = Malicious"] ;
68 -> 69 ;
70 [label="do_for_while_statement <= 0.5\ngini = 0.096\nsamples = 453\nvalue = [23, 430]\nclass = Malicious"] ;
69 -> 70 ;
71 [label="gini = 0.097\nsamples = 452\nvalue = [23, 429]\nclass = Malicious"] ;
70 -> 71 ;
72 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
70 -> 72 ;
73 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
69 -> 73 ;
74 [label="gini = 0.0\nsamples = 36\nvalue = [0, 36]\nclass = Malicious"] ;
68 -> 74 ;
75 [label="trystatement <= 0.5\ngini = 0.407\nsamples = 1520\nvalue = [432, 1088]\nclass = Malicious"] ;
63 -> 75 ;
76 [label="do_for_while_statement <= 0.5\ngini = 0.424\nsamples = 1396\nvalue = [425, 971]\nclass = Malicious"] ;
75 -> 76 ;
77 [label="varmodifier <= 0.5\ngini = 0.397\nsamples = 1310\nvalue = [358, 952]\nclass = Malicious"] ;
76 -> 77 ;
78 [label="ifstatement <= 0.5\ngini = 0.452\nsamples = 614\nvalue = [212, 402]\nclass = Malicious"] ;
77 -> 78 ;
79 [label="gini = 0.491\nsamples = 276\nvalue = [157, 119]\nclass = Benign"] ;
78 -> 79 ;
80 [label="assignmentoperator <= 0.5\ngini = 0.272\nsamples = 338\nvalue = [55, 283]\nclass = Malicious"] ;
78 -> 80 ;
81 [label="gini = 0.269\nsamples = 337\nvalue = [54, 283]\nclass = Malicious"] ;
80 -> 81 ;
82 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
80 -> 82 ;
83 [label="assignmentoperator <= 0.5\ngini = 0.332\nsamples = 696\nvalue = [146, 550]\nclass = Malicious"] ;
77 -> 83 ;
84 [label="continue_break_statement <= 0.5\ngini = 0.324\nsamples = 688\nvalue = [140, 548]\nclass = Malicious"] ;
83 -> 84 ;
85 [label="ifstatement <= 0.5\ngini = 0.323\nsamples = 687\nvalue = [139, 548]\nclass = Malicious"] ;
84 -> 85 ;
86 [label="gini = 0.299\nsamples = 460\nvalue = [84, 376]\nclass = Malicious"] ;
85 -> 86 ;
87 [label="gini = 0.367\nsamples = 227\nvalue = [55, 172]\nclass = Malicious"] ;
85 -> 87 ;
88 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
84 -> 88 ;
89 [label="ifstatement <= 0.5\ngini = 0.375\nsamples = 8\nvalue = [6, 2]\nclass = Benign"] ;
83 -> 89 ;
90 [label="gini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
89 -> 90 ;
91 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
89 -> 91 ;
92 [label="assignmentoperator <= 0.5\ngini = 0.344\nsamples = 86\nvalue = [67, 19]\nclass = Benign"] ;
76 -> 92 ;
93 [label="gini = 0.0\nsamples = 67\nvalue = [67, 0]\nclass = Benign"] ;
92 -> 93 ;
94 [label="gini = 0.0\nsamples = 19\nvalue = [0, 19]\nclass = Malicious"] ;
92 -> 94 ;
95 [label="variable_stuff <= 0.5\ngini = 0.107\nsamples = 124\nvalue = [7, 117]\nclass = Malicious"] ;
75 -> 95 ;
96 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
95 -> 96 ;
97 [label="do_for_while_statement <= 0.5\ngini = 0.064\nsamples = 121\nvalue = [4, 117]\nclass = Malicious"] ;
95 -> 97 ;
98 [label="ifstatement <= 0.5\ngini = 0.245\nsamples = 14\nvalue = [2, 12]\nclass = Malicious"] ;
97 -> 98 ;
99 [label="gini = 0.5\nsamples = 4\nvalue = [2, 2]\nclass = Benign"] ;
98 -> 99 ;
100 [label="gini = 0.0\nsamples = 10\nvalue = [0, 10]\nclass = Malicious"] ;
98 -> 100 ;
101 [label="ifstatement <= 0.5\ngini = 0.037\nsamples = 107\nvalue = [2, 105]\nclass = Malicious"] ;
97 -> 101 ;
102 [label="gini = 0.0\nsamples = 89\nvalue = [0, 89]\nclass = Malicious"] ;
101 -> 102 ;
103 [label="continue_break_statement <= 0.5\ngini = 0.198\nsamples = 18\nvalue = [2, 16]\nclass = Malicious"] ;
101 -> 103 ;
104 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
103 -> 104 ;
105 [label="gini = 0.0\nsamples = 16\nvalue = [0, 16]\nclass = Malicious"] ;
103 -> 105 ;
106 [label="ifstatement <= 0.5\ngini = 0.215\nsamples = 90\nvalue = [79, 11]\nclass = Benign"] ;
62 -> 106 ;
107 [label="varmodifier <= 0.5\ngini = 0.471\nsamples = 29\nvalue = [18, 11]\nclass = Benign"] ;
106 -> 107 ;
108 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
107 -> 108 ;
109 [label="do_for_while_statement <= 0.5\ngini = 0.495\nsamples = 20\nvalue = [9, 11]\nclass = Malicious"] ;
107 -> 109 ;
110 [label="gini = 0.488\nsamples = 19\nvalue = [8, 11]\nclass = Malicious"] ;
109 -> 110 ;
111 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
109 -> 111 ;
112 [label="gini = 0.0\nsamples = 61\nvalue = [61, 0]\nclass = Benign"] ;
106 -> 112 ;
113 [label="identifiername <= 0.5\ngini = 0.101\nsamples = 2331\nvalue = [125, 2206]\nclass = Malicious"] ;
59 -> 113 ;
114 [label="gini = 0.0\nsamples = 743\nvalue = [0, 743]\nclass = Malicious"] ;
113 -> 114 ;
115 [label="do_for_while_statement <= 0.5\ngini = 0.145\nsamples = 1588\nvalue = [125, 1463]\nclass = Malicious"] ;
113 -> 115 ;
116 [label="formalParameterArg_stuff <= 0.5\ngini = 0.132\nsamples = 1572\nvalue = [112, 1460]\nclass = Malicious"] ;
115 -> 116 ;
117 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
116 -> 117 ;
118 [label="varmodifier <= 0.5\ngini = 0.126\nsamples = 1566\nvalue = [106, 1460]\nclass = Malicious"] ;
116 -> 118 ;
119 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
118 -> 119 ;
120 [label="clause_stuff <= 0.5\ngini = 0.125\nsamples = 1565\nvalue = [105, 1460]\nclass = Malicious"] ;
118 -> 120 ;
121 [label="assignmentoperator <= 0.5\ngini = 0.124\nsamples = 1564\nvalue = [104, 1460]\nclass = Malicious"] ;
120 -> 121 ;
122 [label="ifstatement <= 0.5\ngini = 0.123\nsamples = 1563\nvalue = [103, 1460]\nclass = Malicious"] ;
121 -> 122 ;
123 [label="gini = 0.0\nsamples = 13\nvalue = [0, 13]\nclass = Malicious"] ;
122 -> 123 ;
124 [label="catchproduction <= 0.5\ngini = 0.124\nsamples = 1550\nvalue = [103, 1447]\nclass = Malicious"] ;
122 -> 124 ;
125 [label="gini = 0.124\nsamples = 1549\nvalue = [103, 1446]\nclass = Malicious"] ;
124 -> 125 ;
126 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
124 -> 126 ;
127 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
121 -> 127 ;
128 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
120 -> 128 ;
129 [label="trystatement <= 0.5\ngini = 0.305\nsamples = 16\nvalue = [13, 3]\nclass = Benign"] ;
115 -> 129 ;
130 [label="assignmentoperator <= 0.5\ngini = 0.133\nsamples = 14\nvalue = [13, 1]\nclass = Benign"] ;
129 -> 130 ;
131 [label="gini = 0.0\nsamples = 10\nvalue = [10, 0]\nclass = Benign"] ;
130 -> 131 ;
132 [label="continue_break_statement <= 0.5\ngini = 0.375\nsamples = 4\nvalue = [3, 1]\nclass = Benign"] ;
130 -> 132 ;
133 [label="formalParameterArg_stuff <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [2, 1]\nclass = Benign"] ;
132 -> 133 ;
134 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
133 -> 134 ;
135 [label="gini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
133 -> 135 ;
136 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
132 -> 136 ;
137 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
129 -> 137 ;
138 [label="catchproduction <= 0.5\ngini = 0.096\nsamples = 179\nvalue = [170, 9]\nclass = Benign"] ;
58 -> 138 ;
139 [label="assignmentoperator <= 0.5\ngini = 0.025\nsamples = 155\nvalue = [153, 2]\nclass = Benign"] ;
138 -> 139 ;
140 [label="gini = 0.0\nsamples = 151\nvalue = [151, 0]\nclass = Benign"] ;
139 -> 140 ;
141 [label="do_for_while_statement <= 0.5\ngini = 0.5\nsamples = 4\nvalue = [2, 2]\nclass = Benign"] ;
139 -> 141 ;
142 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
141 -> 142 ;
143 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
141 -> 143 ;
144 [label="identifiername <= 0.5\ngini = 0.413\nsamples = 24\nvalue = [17, 7]\nclass = Benign"] ;
138 -> 144 ;
145 [label="gini = 0.0\nsamples = 7\nvalue = [0, 7]\nclass = Malicious"] ;
144 -> 145 ;
146 [label="gini = 0.0\nsamples = 17\nvalue = [17, 0]\nclass = Benign"] ;
144 -> 146 ;
147 [label="argument_stuff <= 0.5\ngini = 0.085\nsamples = 3883\nvalue = [173, 3710]\nclass = Malicious"] ;
57 -> 147 ;
148 [label="gini = 0.0\nsamples = 80\nvalue = [80, 0]\nclass = Benign"] ;
147 -> 148 ;
149 [label="varmodifier <= 0.5\ngini = 0.048\nsamples = 3803\nvalue = [93, 3710]\nclass = Malicious"] ;
147 -> 149 ;
150 [label="identifiername <= 0.5\ngini = 0.172\nsamples = 21\nvalue = [19, 2]\nclass = Benign"] ;
149 -> 150 ;
151 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
150 -> 151 ;
152 [label="gini = 0.0\nsamples = 19\nvalue = [19, 0]\nclass = Benign"] ;
150 -> 152 ;
153 [label="ifstatement <= 0.5\ngini = 0.038\nsamples = 3782\nvalue = [74, 3708]\nclass = Malicious"] ;
149 -> 153 ;
154 [label="do_for_while_statement <= 0.5\ngini = 0.104\nsamples = 851\nvalue = [47, 804]\nclass = Malicious"] ;
153 -> 154 ;
155 [label="identifiername <= 0.5\ngini = 0.324\nsamples = 59\nvalue = [47, 12]\nclass = Benign"] ;
154 -> 155 ;
156 [label="gini = 0.165\nsamples = 11\nvalue = [1, 10]\nclass = Malicious"] ;
155 -> 156 ;
157 [label="formalParameterArg_stuff <= 0.5\ngini = 0.08\nsamples = 48\nvalue = [46, 2]\nclass = Benign"] ;
155 -> 157 ;
158 [label="gini = 0.0\nsamples = 46\nvalue = [46, 0]\nclass = Benign"] ;
157 -> 158 ;
159 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
157 -> 159 ;
160 [label="gini = 0.0\nsamples = 792\nvalue = [0, 792]\nclass = Malicious"] ;
154 -> 160 ;
161 [label="identifiername <= 0.5\ngini = 0.018\nsamples = 2931\nvalue = [27, 2904]\nclass = Malicious"] ;
153 -> 161 ;
162 [label="gini = 0.0\nsamples = 837\nvalue = [0, 837]\nclass = Malicious"] ;
161 -> 162 ;
163 [label="formalParameterArg_stuff <= 0.5\ngini = 0.025\nsamples = 2094\nvalue = [27, 2067]\nclass = Malicious"] ;
161 -> 163 ;
164 [label="do_for_while_statement <= 0.5\ngini = 0.021\nsamples = 2086\nvalue = [22, 2064]\nclass = Malicious"] ;
163 -> 164 ;
165 [label="catchproduction <= 0.5\ngini = 0.045\nsamples = 834\nvalue = [19, 815]\nclass = Malicious"] ;
164 -> 165 ;
166 [label="returnstatement <= 0.5\ngini = 0.057\nsamples = 651\nvalue = [19, 632]\nclass = Malicious"] ;
165 -> 166 ;
167 [label="continue_break_statement <= 0.5\ngini = 0.051\nsamples = 649\nvalue = [17, 632]\nclass = Malicious"] ;
166 -> 167 ;
168 [label="gini = 0.051\nsamples = 645\nvalue = [17, 628]\nclass = Malicious"] ;
167 -> 168 ;
169 [label="gini = 0.0\nsamples = 4\nvalue = [0, 4]\nclass = Malicious"] ;
167 -> 169 ;
170 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
166 -> 170 ;
171 [label="gini = 0.0\nsamples = 183\nvalue = [0, 183]\nclass = Malicious"] ;
165 -> 171 ;
172 [label="assignmentoperator <= 0.5\ngini = 0.005\nsamples = 1252\nvalue = [3, 1249]\nclass = Malicious"] ;
164 -> 172 ;
173 [label="trystatement <= 0.5\ngini = 0.013\nsamples = 451\nvalue = [3, 448]\nclass = Malicious"] ;
172 -> 173 ;
174 [label="gini = 0.02\nsamples = 294\nvalue = [3, 291]\nclass = Malicious"] ;
173 -> 174 ;
175 [label="gini = 0.0\nsamples = 157\nvalue = [0, 157]\nclass = Malicious"] ;
173 -> 175 ;
176 [label="gini = 0.0\nsamples = 801\nvalue = [0, 801]\nclass = Malicious"] ;
172 -> 176 ;
177 [label="catchproduction <= 0.5\ngini = 0.469\nsamples = 8\nvalue = [5, 3]\nclass = Benign"] ;
163 -> 177 ;
178 [label="returnstatement <= 0.5\ngini = 0.408\nsamples = 7\nvalue = [5, 2]\nclass = Benign"] ;
177 -> 178 ;
179 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
178 -> 179 ;
180 [label="gini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
178 -> 180 ;
181 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
177 -> 181 ;
182 [label="do_for_while_statement <= 0.5\ngini = 0.255\nsamples = 10406\nvalue = [8842, 1564]\nclass = Benign"] ;
0 -> 182 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
183 [label="trystatement <= 0.5\ngini = 0.0\nsamples = 8610\nvalue = [8608, 2]\nclass = Benign"] ;
182 -> 183 ;
184 [label="gini = 0.0\nsamples = 8517\nvalue = [8517, 0]\nclass = Benign"] ;
183 -> 184 ;
185 [label="ifstatement <= 0.5\ngini = 0.042\nsamples = 93\nvalue = [91, 2]\nclass = Benign"] ;
183 -> 185 ;
186 [label="gini = 0.0\nsamples = 42\nvalue = [42, 0]\nclass = Benign"] ;
185 -> 186 ;
187 [label="variable_stuff <= 0.5\ngini = 0.075\nsamples = 51\nvalue = [49, 2]\nclass = Benign"] ;
185 -> 187 ;
188 [label="gini = 0.0\nsamples = 13\nvalue = [13, 0]\nclass = Benign"] ;
187 -> 188 ;
189 [label="formalparameterlist <= 0.5\ngini = 0.1\nsamples = 38\nvalue = [36, 2]\nclass = Benign"] ;
187 -> 189 ;
190 [label="numericliteral <= 0.5\ngini = 0.121\nsamples = 31\nvalue = [29, 2]\nclass = Benign"] ;
189 -> 190 ;
191 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
190 -> 191 ;
192 [label="assignmentoperator <= 0.5\ngini = 0.137\nsamples = 27\nvalue = [25, 2]\nclass = Benign"] ;
190 -> 192 ;
193 [label="element_stuff <= 0.5\ngini = 0.142\nsamples = 26\nvalue = [24, 2]\nclass = Benign"] ;
192 -> 193 ;
194 [label="gini = 0.165\nsamples = 11\nvalue = [10, 1]\nclass = Benign"] ;
193 -> 194 ;
195 [label="gini = 0.124\nsamples = 15\nvalue = [14, 1]\nclass = Benign"] ;
193 -> 195 ;
196 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
192 -> 196 ;
197 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
189 -> 197 ;
198 [label="identifiername <= 0.5\ngini = 0.227\nsamples = 1796\nvalue = [234, 1562]\nclass = Malicious"] ;
182 -> 198 ;
199 [label="gini = 0.0\nsamples = 1505\nvalue = [0, 1505]\nclass = Malicious"] ;
198 -> 199 ;
200 [label="trystatement <= 0.5\ngini = 0.315\nsamples = 291\nvalue = [234, 57]\nclass = Benign"] ;
198 -> 200 ;
201 [label="gini = 0.0\nsamples = 211\nvalue = [211, 0]\nclass = Benign"] ;
200 -> 201 ;
202 [label="assignmentoperator <= 0.5\ngini = 0.41\nsamples = 80\nvalue = [23, 57]\nclass = Malicious"] ;
200 -> 202 ;
203 [label="continue_break_statement <= 0.5\ngini = 0.401\nsamples = 18\nvalue = [13, 5]\nclass = Benign"] ;
202 -> 203 ;
204 [label="gini = 0.0\nsamples = 12\nvalue = [12, 0]\nclass = Benign"] ;
203 -> 204 ;
205 [label="formalParameterArg_stuff <= 0.5\ngini = 0.278\nsamples = 6\nvalue = [1, 5]\nclass = Malicious"] ;
203 -> 205 ;
206 [label="gini = 0.0\nsamples = 5\nvalue = [0, 5]\nclass = Malicious"] ;
205 -> 206 ;
207 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
205 -> 207 ;
208 [label="returnstatement <= 0.5\ngini = 0.271\nsamples = 62\nvalue = [10, 52]\nclass = Malicious"] ;
202 -> 208 ;
209 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
208 -> 209 ;
210 [label="finallyproduction <= 0.5\ngini = 0.231\nsamples = 60\nvalue = [8, 52]\nclass = Malicious"] ;
208 -> 210 ;
211 [label="continue_break_statement <= 0.5\ngini = 0.36\nsamples = 34\nvalue = [8, 26]\nclass = Malicious"] ;
210 -> 211 ;
212 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
211 -> 212 ;
213 [label="clause_stuff <= 0.5\ngini = 0.185\nsamples = 29\nvalue = [3, 26]\nclass = Malicious"] ;
211 -> 213 ;
214 [label="throwstatement <= 0.5\ngini = 0.133\nsamples = 28\nvalue = [2, 26]\nclass = Malicious"] ;
213 -> 214 ;
215 [label="gini = 0.071\nsamples = 27\nvalue = [1, 26]\nclass = Malicious"] ;
214 -> 215 ;
216 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
214 -> 216 ;
217 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
213 -> 217 ;
218 [label="gini = 0.0\nsamples = 26\nvalue = [0, 26]\nclass = Malicious"] ;
210 -> 218 ;
}
