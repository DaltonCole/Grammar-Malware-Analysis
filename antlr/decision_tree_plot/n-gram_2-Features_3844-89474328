digraph Tree {
node [shape=box] ;
0 [label="expression_statement-objectliteral <= 0.5\ngini = 0.5\nsamples = 27000\nvalue = [13510, 13490]\nclass = Benign"] ;
1 [label="literal-arguments <= 0.5\ngini = 0.389\nsamples = 16237\nvalue = [4289, 11948]\nclass = Malicious"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="identifiername-identifiername <= 0.5\ngini = 0.473\nsamples = 11157\nvalue = [4283, 6874]\nclass = Malicious"] ;
1 -> 2 ;
3 [label="expression_statement-arguments <= 0.5\ngini = 0.436\nsamples = 10116\nvalue = [3248, 6868]\nclass = Malicious"] ;
2 -> 3 ;
4 [label="expression_statement-identifiername <= 0.5\ngini = 0.494\nsamples = 5507\nvalue = [2450, 3057]\nclass = Malicious"] ;
3 -> 4 ;
5 [label="variabledeclaration-expression_statement <= 0.5\ngini = 0.463\nsamples = 4462\nvalue = [1628, 2834]\nclass = Malicious"] ;
4 -> 5 ;
6 [label="eos-eos <= 0.5\ngini = 0.394\nsamples = 3227\nvalue = [870, 2357]\nclass = Malicious"] ;
5 -> 6 ;
7 [label="sourceelements-sourceelement <= 0.5\ngini = 0.435\nsamples = 2722\nvalue = [870, 1852]\nclass = Malicious"] ;
6 -> 7 ;
8 [label="gini = 0.399\nsamples = 2552\nvalue = [702, 1850]\nclass = Malicious"] ;
7 -> 8 ;
9 [label="arguments-expression_statement <= 0.5\ngini = 0.023\nsamples = 170\nvalue = [168, 2]\nclass = Benign"] ;
7 -> 9 ;
10 [label="gini = 0.0\nsamples = 168\nvalue = [168, 0]\nclass = Benign"] ;
9 -> 10 ;
11 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
9 -> 11 ;
12 [label="gini = 0.0\nsamples = 505\nvalue = [0, 505]\nclass = Malicious"] ;
6 -> 12 ;
13 [label="arguments-expression_statement <= 0.5\ngini = 0.474\nsamples = 1235\nvalue = [758, 477]\nclass = Benign"] ;
5 -> 13 ;
14 [label="gini = 0.0\nsamples = 757\nvalue = [757, 0]\nclass = Benign"] ;
13 -> 14 ;
15 [label="literal-expression_statement <= 0.5\ngini = 0.004\nsamples = 478\nvalue = [1, 477]\nclass = Malicious"] ;
13 -> 15 ;
16 [label="gini = 0.0\nsamples = 469\nvalue = [0, 469]\nclass = Malicious"] ;
15 -> 16 ;
17 [label="arguments-eos <= 0.5\ngini = 0.198\nsamples = 9\nvalue = [1, 8]\nclass = Malicious"] ;
15 -> 17 ;
18 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
17 -> 18 ;
19 [label="gini = 0.0\nsamples = 8\nvalue = [0, 8]\nclass = Malicious"] ;
17 -> 19 ;
20 [label="numericliteral-eos <= 0.5\ngini = 0.336\nsamples = 1045\nvalue = [822, 223]\nclass = Benign"] ;
4 -> 20 ;
21 [label="gini = 0.0\nsamples = 645\nvalue = [645, 0]\nclass = Benign"] ;
20 -> 21 ;
22 [label="varmodifier-variabledeclarationlist <= 0.5\ngini = 0.493\nsamples = 400\nvalue = [177, 223]\nclass = Malicious"] ;
20 -> 22 ;
23 [label="gini = 0.0\nsamples = 143\nvalue = [143, 0]\nclass = Benign"] ;
22 -> 23 ;
24 [label="identifiername-arguments <= 0.5\ngini = 0.23\nsamples = 257\nvalue = [34, 223]\nclass = Malicious"] ;
22 -> 24 ;
25 [label="gini = 0.0\nsamples = 17\nvalue = [17, 0]\nclass = Benign"] ;
24 -> 25 ;
26 [label="literal-expression_statement <= 0.5\ngini = 0.132\nsamples = 240\nvalue = [17, 223]\nclass = Malicious"] ;
24 -> 26 ;
27 [label="identifiername-expression_statement <= 0.5\ngini = 0.026\nsamples = 226\nvalue = [3, 223]\nclass = Malicious"] ;
26 -> 27 ;
28 [label="gini = 0.0\nsamples = 223\nvalue = [0, 223]\nclass = Malicious"] ;
27 -> 28 ;
29 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
27 -> 29 ;
30 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
26 -> 30 ;
31 [label="variabledeclaration-expression_statement <= 0.5\ngini = 0.286\nsamples = 4609\nvalue = [798, 3811]\nclass = Malicious"] ;
3 -> 31 ;
32 [label="literal-expression_statement <= 0.5\ngini = 0.481\nsamples = 1033\nvalue = [616, 417]\nclass = Benign"] ;
31 -> 32 ;
33 [label="expression_statement-eos <= 0.5\ngini = 0.431\nsamples = 608\nvalue = [191, 417]\nclass = Malicious"] ;
32 -> 33 ;
34 [label="arguments-identifiername <= 0.5\ngini = 0.499\nsamples = 335\nvalue = [174, 161]\nclass = Benign"] ;
33 -> 34 ;
35 [label="gini = 0.0\nsamples = 166\nvalue = [166, 0]\nclass = Benign"] ;
34 -> 35 ;
36 [label="arguments-eos <= 0.5\ngini = 0.09\nsamples = 169\nvalue = [8, 161]\nclass = Malicious"] ;
34 -> 36 ;
37 [label="functionbody-sourceelements <= 0.5\ngini = 0.024\nsamples = 163\nvalue = [2, 161]\nclass = Malicious"] ;
36 -> 37 ;
38 [label="gini = 0.0\nsamples = 161\nvalue = [0, 161]\nclass = Malicious"] ;
37 -> 38 ;
39 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
37 -> 39 ;
40 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
36 -> 40 ;
41 [label="literal-identifiername <= 0.5\ngini = 0.117\nsamples = 273\nvalue = [17, 256]\nclass = Malicious"] ;
33 -> 41 ;
42 [label="gini = 0.0\nsamples = 256\nvalue = [0, 256]\nclass = Malicious"] ;
41 -> 42 ;
43 [label="gini = 0.0\nsamples = 17\nvalue = [17, 0]\nclass = Benign"] ;
41 -> 43 ;
44 [label="gini = 0.0\nsamples = 425\nvalue = [425, 0]\nclass = Benign"] ;
32 -> 44 ;
45 [label="expression_statement-functionbody <= 0.5\ngini = 0.097\nsamples = 3576\nvalue = [182, 3394]\nclass = Malicious"] ;
31 -> 45 ;
46 [label="expressionstatement-expressionsequence <= 0.5\ngini = 0.054\nsamples = 3328\nvalue = [93, 3235]\nclass = Malicious"] ;
45 -> 46 ;
47 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
46 -> 47 ;
48 [label="arguments-expression_statement <= 0.5\ngini = 0.047\nsamples = 3314\nvalue = [79, 3235]\nclass = Malicious"] ;
46 -> 48 ;
49 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
48 -> 49 ;
50 [label="eos-arguments <= 0.5\ngini = 0.042\nsamples = 3306\nvalue = [71, 3235]\nclass = Malicious"] ;
48 -> 50 ;
51 [label="literal-expression_statement <= 0.5\ngini = 0.039\nsamples = 3299\nvalue = [65, 3234]\nclass = Malicious"] ;
50 -> 51 ;
52 [label="identifiername-arguments <= 0.5\ngini = 0.219\nsamples = 295\nvalue = [37, 258]\nclass = Malicious"] ;
51 -> 52 ;
53 [label="assignmentoperator-expression_statement <= 0.5\ngini = 0.46\nsamples = 53\nvalue = [34, 19]\nclass = Benign"] ;
52 -> 53 ;
54 [label="gini = 0.0\nsamples = 34\nvalue = [34, 0]\nclass = Benign"] ;
53 -> 54 ;
55 [label="gini = 0.0\nsamples = 19\nvalue = [0, 19]\nclass = Malicious"] ;
53 -> 55 ;
56 [label="literal-numericliteral <= 0.5\ngini = 0.024\nsamples = 242\nvalue = [3, 239]\nclass = Malicious"] ;
52 -> 56 ;
57 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
56 -> 57 ;
58 [label="variabledeclaration-eos <= 0.5\ngini = 0.008\nsamples = 240\nvalue = [1, 239]\nclass = Malicious"] ;
56 -> 58 ;
59 [label="gini = 0.0\nsamples = 239\nvalue = [0, 239]\nclass = Malicious"] ;
58 -> 59 ;
60 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
58 -> 60 ;
61 [label="identifiername-expression_statement <= 0.5\ngini = 0.018\nsamples = 3004\nvalue = [28, 2976]\nclass = Malicious"] ;
51 -> 61 ;
62 [label="withstatement-expressionsequence <= 0.5\ngini = 0.01\nsamples = 2875\nvalue = [15, 2860]\nclass = Malicious"] ;
61 -> 62 ;
63 [label="identifiername-eos <= 0.5\ngini = 0.01\nsamples = 2874\nvalue = [14, 2860]\nclass = Malicious"] ;
62 -> 63 ;
64 [label="catchproduction-block <= 0.5\ngini = 0.009\nsamples = 2871\nvalue = [13, 2858]\nclass = Malicious"] ;
63 -> 64 ;
65 [label="expression_statement-assignmentoperator <= 0.5\ngini = 0.008\nsamples = 2868\nvalue = [12, 2856]\nclass = Malicious"] ;
64 -> 65 ;
66 [label="numericliteral-eos <= 0.5\ngini = 0.008\nsamples = 2865\nvalue = [11, 2854]\nclass = Malicious"] ;
65 -> 66 ;
67 [label="statement-block <= 0.5\ngini = 0.015\nsamples = 1449\nvalue = [11, 1438]\nclass = Malicious"] ;
66 -> 67 ;
68 [label="expression_statement-identifiername <= 0.5\ngini = 0.01\nsamples = 1444\nvalue = [7, 1437]\nclass = Malicious"] ;
67 -> 68 ;
69 [label="expression_statement-eos <= 0.5\ngini = 0.002\nsamples = 1042\nvalue = [1, 1041]\nclass = Malicious"] ;
68 -> 69 ;
70 [label="gini = 0.003\nsamples = 673\nvalue = [1, 672]\nclass = Malicious"] ;
69 -> 70 ;
71 [label="gini = 0.0\nsamples = 369\nvalue = [0, 369]\nclass = Malicious"] ;
69 -> 71 ;
72 [label="ifstatement-expressionsequence <= 0.5\ngini = 0.029\nsamples = 402\nvalue = [6, 396]\nclass = Malicious"] ;
68 -> 72 ;
73 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
72 -> 73 ;
74 [label="gini = 0.0\nsamples = 396\nvalue = [0, 396]\nclass = Malicious"] ;
72 -> 74 ;
75 [label="arguments-eos <= 0.5\ngini = 0.32\nsamples = 5\nvalue = [4, 1]\nclass = Benign"] ;
67 -> 75 ;
76 [label="literal-numericliteral <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
75 -> 76 ;
77 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
76 -> 77 ;
78 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
76 -> 78 ;
79 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
75 -> 79 ;
80 [label="gini = 0.0\nsamples = 1416\nvalue = [0, 1416]\nclass = Malicious"] ;
66 -> 80 ;
81 [label="arguments-identifiername <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
65 -> 81 ;
82 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
81 -> 82 ;
83 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
81 -> 83 ;
84 [label="numericliteral-expression_statement <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
64 -> 84 ;
85 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
84 -> 85 ;
86 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
84 -> 86 ;
87 [label="eos-statement <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
63 -> 87 ;
88 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
87 -> 88 ;
89 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
87 -> 89 ;
90 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
62 -> 90 ;
91 [label="expression_statement-expressionsequence <= 0.5\ngini = 0.181\nsamples = 129\nvalue = [13, 116]\nclass = Malicious"] ;
61 -> 91 ;
92 [label="gini = 0.0\nsamples = 10\nvalue = [10, 0]\nclass = Benign"] ;
91 -> 92 ;
93 [label="literal-eos <= 0.5\ngini = 0.049\nsamples = 119\nvalue = [3, 116]\nclass = Malicious"] ;
91 -> 93 ;
94 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
93 -> 94 ;
95 [label="gini = 0.0\nsamples = 116\nvalue = [0, 116]\nclass = Malicious"] ;
93 -> 95 ;
96 [label="do_for_while_statement-varmodifier <= 0.5\ngini = 0.245\nsamples = 7\nvalue = [6, 1]\nclass = Benign"] ;
50 -> 96 ;
97 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
96 -> 97 ;
98 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
96 -> 98 ;
99 [label="assignmentoperator-expression_statement <= 0.5\ngini = 0.46\nsamples = 248\nvalue = [89, 159]\nclass = Malicious"] ;
45 -> 99 ;
100 [label="numericliteral-arguments <= 0.5\ngini = 0.023\nsamples = 87\nvalue = [86, 1]\nclass = Benign"] ;
99 -> 100 ;
101 [label="gini = 0.0\nsamples = 86\nvalue = [86, 0]\nclass = Benign"] ;
100 -> 101 ;
102 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
100 -> 102 ;
103 [label="formalparameterarg-formalparameterarg <= 0.5\ngini = 0.037\nsamples = 161\nvalue = [3, 158]\nclass = Malicious"] ;
99 -> 103 ;
104 [label="literal-eos <= 0.5\ngini = 0.013\nsamples = 158\nvalue = [1, 157]\nclass = Malicious"] ;
103 -> 104 ;
105 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
104 -> 105 ;
106 [label="gini = 0.0\nsamples = 157\nvalue = [0, 157]\nclass = Malicious"] ;
104 -> 106 ;
107 [label="trystatement-block <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [2, 1]\nclass = Benign"] ;
103 -> 107 ;
108 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
107 -> 108 ;
109 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
107 -> 109 ;
110 [label="statement-breakstatement <= 0.5\ngini = 0.011\nsamples = 1041\nvalue = [1035, 6]\nclass = Benign"] ;
2 -> 110 ;
111 [label="expression_statement-assignmentoperator <= 0.5\ngini = 0.004\nsamples = 1037\nvalue = [1035, 2]\nclass = Benign"] ;
110 -> 111 ;
112 [label="numericliteral-expression_statement <= 0.5\ngini = 0.002\nsamples = 1034\nvalue = [1033, 1]\nclass = Benign"] ;
111 -> 112 ;
113 [label="gini = 0.0\nsamples = 922\nvalue = [922, 0]\nclass = Benign"] ;
112 -> 113 ;
114 [label="literal-expression_statement <= 0.5\ngini = 0.018\nsamples = 112\nvalue = [111, 1]\nclass = Benign"] ;
112 -> 114 ;
115 [label="elementlist-expression_statement <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
114 -> 115 ;
116 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
115 -> 116 ;
117 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
115 -> 117 ;
118 [label="gini = 0.0\nsamples = 110\nvalue = [110, 0]\nclass = Benign"] ;
114 -> 118 ;
119 [label="expression_statement-expressionsequence <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [2, 1]\nclass = Benign"] ;
111 -> 119 ;
120 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
119 -> 120 ;
121 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
119 -> 121 ;
122 [label="gini = 0.0\nsamples = 4\nvalue = [0, 4]\nclass = Malicious"] ;
110 -> 122 ;
123 [label="eos-arguments <= 0.5\ngini = 0.002\nsamples = 5080\nvalue = [6, 5074]\nclass = Malicious"] ;
1 -> 123 ;
124 [label="arguments-expression_statement <= 0.5\ngini = 0.001\nsamples = 5077\nvalue = [3, 5074]\nclass = Malicious"] ;
123 -> 124 ;
125 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
124 -> 125 ;
126 [label="literal-eos <= 0.5\ngini = 0.0\nsamples = 5075\nvalue = [1, 5074]\nclass = Malicious"] ;
124 -> 126 ;
127 [label="formalparameterlist-formalparameterarg <= 0.5\ngini = 0.011\nsamples = 174\nvalue = [1, 173]\nclass = Malicious"] ;
126 -> 127 ;
128 [label="gini = 0.0\nsamples = 173\nvalue = [0, 173]\nclass = Malicious"] ;
127 -> 128 ;
129 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
127 -> 129 ;
130 [label="gini = 0.0\nsamples = 4901\nvalue = [0, 4901]\nclass = Malicious"] ;
126 -> 130 ;
131 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
123 -> 131 ;
132 [label="do_for_while_statement-expressionsequence <= 0.5\ngini = 0.245\nsamples = 10763\nvalue = [9221, 1542]\nclass = Benign"] ;
0 -> 132 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
133 [label="identifiername-caseblock <= 0.5\ngini = 0.006\nsamples = 9213\nvalue = [9183, 30]\nclass = Benign"] ;
132 -> 133 ;
134 [label="literal-arguments <= 0.5\ngini = 0.001\nsamples = 9187\nvalue = [9183, 4]\nclass = Benign"] ;
133 -> 134 ;
135 [label="gini = 0.0\nsamples = 9172\nvalue = [9172, 0]\nclass = Benign"] ;
134 -> 135 ;
136 [label="literal-expressionsequence <= 0.5\ngini = 0.391\nsamples = 15\nvalue = [11, 4]\nclass = Benign"] ;
134 -> 136 ;
137 [label="gini = 0.0\nsamples = 11\nvalue = [11, 0]\nclass = Benign"] ;
136 -> 137 ;
138 [label="gini = 0.0\nsamples = 4\nvalue = [0, 4]\nclass = Malicious"] ;
136 -> 138 ;
139 [label="gini = 0.0\nsamples = 26\nvalue = [0, 26]\nclass = Malicious"] ;
133 -> 139 ;
140 [label="objectliteral-eos <= 0.5\ngini = 0.048\nsamples = 1550\nvalue = [38, 1512]\nclass = Malicious"] ;
132 -> 140 ;
141 [label="literal-expressionsequence <= 0.5\ngini = 0.007\nsamples = 1516\nvalue = [5, 1511]\nclass = Malicious"] ;
140 -> 141 ;
142 [label="catchproduction-block <= 0.5\ngini = 0.5\nsamples = 10\nvalue = [5, 5]\nclass = Benign"] ;
141 -> 142 ;
143 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
142 -> 143 ;
144 [label="gini = 0.0\nsamples = 5\nvalue = [0, 5]\nclass = Malicious"] ;
142 -> 144 ;
145 [label="gini = 0.0\nsamples = 1506\nvalue = [0, 1506]\nclass = Malicious"] ;
141 -> 145 ;
146 [label="returnstatement-expressionsequence <= 0.5\ngini = 0.057\nsamples = 34\nvalue = [33, 1]\nclass = Benign"] ;
140 -> 146 ;
147 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
146 -> 147 ;
148 [label="gini = 0.0\nsamples = 33\nvalue = [33, 0]\nclass = Benign"] ;
146 -> 148 ;
}
