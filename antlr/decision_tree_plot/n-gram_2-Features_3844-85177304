digraph Tree {
node [shape=box] ;
0 [label="expression_statement-objectliteral <= 0.5\ngini = 0.5\nsamples = 27000\nvalue = [13489, 13511]\nclass = Malicious"] ;
1 [label="literal-arguments <= 0.5\ngini = 0.388\nsamples = 16249\nvalue = [4283, 11966]\nclass = Malicious"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="identifiername-identifiername <= 0.5\ngini = 0.472\nsamples = 11198\nvalue = [4277, 6921]\nclass = Malicious"] ;
1 -> 2 ;
3 [label="expression_statement-arguments <= 0.5\ngini = 0.435\nsamples = 10159\nvalue = [3244, 6915]\nclass = Malicious"] ;
2 -> 3 ;
4 [label="expression_statement-identifiername <= 0.5\ngini = 0.494\nsamples = 5496\nvalue = [2439, 3057]\nclass = Malicious"] ;
3 -> 4 ;
5 [label="varmodifier-variabledeclarationlist <= 0.5\ngini = 0.464\nsamples = 4475\nvalue = [1637, 2838]\nclass = Malicious"] ;
4 -> 5 ;
6 [label="statement-returnstatement <= 0.5\ngini = 0.393\nsamples = 3249\nvalue = [873, 2376]\nclass = Malicious"] ;
5 -> 6 ;
7 [label="sourceelements-sourceelement <= 0.5\ngini = 0.434\nsamples = 2738\nvalue = [873, 1865]\nclass = Malicious"] ;
6 -> 7 ;
8 [label="gini = 0.397\nsamples = 2564\nvalue = [701, 1863]\nclass = Malicious"] ;
7 -> 8 ;
9 [label="numericliteral-arguments <= 0.5\ngini = 0.023\nsamples = 174\nvalue = [172, 2]\nclass = Benign"] ;
7 -> 9 ;
10 [label="gini = 0.0\nsamples = 172\nvalue = [172, 0]\nclass = Benign"] ;
9 -> 10 ;
11 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
9 -> 11 ;
12 [label="gini = 0.0\nsamples = 511\nvalue = [0, 511]\nclass = Malicious"] ;
6 -> 12 ;
13 [label="arguments-expression_statement <= 0.5\ngini = 0.47\nsamples = 1226\nvalue = [764, 462]\nclass = Benign"] ;
5 -> 13 ;
14 [label="gini = 0.0\nsamples = 763\nvalue = [763, 0]\nclass = Benign"] ;
13 -> 14 ;
15 [label="literal-expression_statement <= 0.5\ngini = 0.004\nsamples = 463\nvalue = [1, 462]\nclass = Malicious"] ;
13 -> 15 ;
16 [label="gini = 0.0\nsamples = 455\nvalue = [0, 455]\nclass = Malicious"] ;
15 -> 16 ;
17 [label="literal-identifiername <= 0.5\ngini = 0.219\nsamples = 8\nvalue = [1, 7]\nclass = Malicious"] ;
15 -> 17 ;
18 [label="gini = 0.0\nsamples = 7\nvalue = [0, 7]\nclass = Malicious"] ;
17 -> 18 ;
19 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
17 -> 19 ;
20 [label="numericliteral-eos <= 0.5\ngini = 0.337\nsamples = 1021\nvalue = [802, 219]\nclass = Benign"] ;
4 -> 20 ;
21 [label="gini = 0.0\nsamples = 628\nvalue = [628, 0]\nclass = Benign"] ;
20 -> 21 ;
22 [label="variabledeclaration-expression_statement <= 0.5\ngini = 0.493\nsamples = 393\nvalue = [174, 219]\nclass = Malicious"] ;
20 -> 22 ;
23 [label="gini = 0.0\nsamples = 140\nvalue = [140, 0]\nclass = Benign"] ;
22 -> 23 ;
24 [label="arguments-expression_statement <= 0.5\ngini = 0.233\nsamples = 253\nvalue = [34, 219]\nclass = Malicious"] ;
22 -> 24 ;
25 [label="gini = 0.0\nsamples = 18\nvalue = [18, 0]\nclass = Benign"] ;
24 -> 25 ;
26 [label="literal-expression_statement <= 0.5\ngini = 0.127\nsamples = 235\nvalue = [16, 219]\nclass = Malicious"] ;
24 -> 26 ;
27 [label="identifiername-expression_statement <= 0.5\ngini = 0.027\nsamples = 222\nvalue = [3, 219]\nclass = Malicious"] ;
26 -> 27 ;
28 [label="gini = 0.0\nsamples = 219\nvalue = [0, 219]\nclass = Malicious"] ;
27 -> 28 ;
29 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
27 -> 29 ;
30 [label="gini = 0.0\nsamples = 13\nvalue = [13, 0]\nclass = Benign"] ;
26 -> 30 ;
31 [label="variabledeclaration-expression_statement <= 0.5\ngini = 0.286\nsamples = 4663\nvalue = [805, 3858]\nclass = Malicious"] ;
3 -> 31 ;
32 [label="literal-expression_statement <= 0.5\ngini = 0.483\nsamples = 1057\nvalue = [627, 430]\nclass = Benign"] ;
31 -> 32 ;
33 [label="expression_statement-functionbody <= 0.5\ngini = 0.434\nsamples = 631\nvalue = [201, 430]\nclass = Malicious"] ;
32 -> 33 ;
34 [label="expression_statement-eos <= 0.5\ngini = 0.362\nsamples = 564\nvalue = [134, 430]\nclass = Malicious"] ;
33 -> 34 ;
35 [label="arguments-identifiername <= 0.5\ngini = 0.493\nsamples = 305\nvalue = [134, 171]\nclass = Malicious"] ;
34 -> 35 ;
36 [label="gini = 0.0\nsamples = 128\nvalue = [128, 0]\nclass = Benign"] ;
35 -> 36 ;
37 [label="literal-eos <= 0.5\ngini = 0.065\nsamples = 177\nvalue = [6, 171]\nclass = Malicious"] ;
35 -> 37 ;
38 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
37 -> 38 ;
39 [label="gini = 0.0\nsamples = 171\nvalue = [0, 171]\nclass = Malicious"] ;
37 -> 39 ;
40 [label="gini = 0.0\nsamples = 259\nvalue = [0, 259]\nclass = Malicious"] ;
34 -> 40 ;
41 [label="gini = 0.0\nsamples = 67\nvalue = [67, 0]\nclass = Benign"] ;
33 -> 41 ;
42 [label="gini = 0.0\nsamples = 426\nvalue = [426, 0]\nclass = Benign"] ;
32 -> 42 ;
43 [label="expression_statement-functionbody <= 0.5\ngini = 0.094\nsamples = 3606\nvalue = [178, 3428]\nclass = Malicious"] ;
31 -> 43 ;
44 [label="expressionstatement-expressionsequence <= 0.5\ngini = 0.053\nsamples = 3361\nvalue = [91, 3270]\nclass = Malicious"] ;
43 -> 44 ;
45 [label="statementlist-statement <= 0.5\ngini = 0.111\nsamples = 17\nvalue = [16, 1]\nclass = Benign"] ;
44 -> 45 ;
46 [label="gini = 0.0\nsamples = 16\nvalue = [16, 0]\nclass = Benign"] ;
45 -> 46 ;
47 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
45 -> 47 ;
48 [label="arguments-expression_statement <= 0.5\ngini = 0.044\nsamples = 3344\nvalue = [75, 3269]\nclass = Malicious"] ;
44 -> 48 ;
49 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
48 -> 49 ;
50 [label="eos-arguments <= 0.5\ngini = 0.04\nsamples = 3337\nvalue = [68, 3269]\nclass = Malicious"] ;
48 -> 50 ;
51 [label="literal-expression_statement <= 0.5\ngini = 0.037\nsamples = 3331\nvalue = [63, 3268]\nclass = Malicious"] ;
50 -> 51 ;
52 [label="expression_statement-identifiername <= 0.5\ngini = 0.214\nsamples = 304\nvalue = [37, 267]\nclass = Malicious"] ;
51 -> 52 ;
53 [label="assignmentoperator-expression_statement <= 0.5\ngini = 0.46\nsamples = 53\nvalue = [34, 19]\nclass = Benign"] ;
52 -> 53 ;
54 [label="arguments-identifiername <= 0.5\ngini = 0.056\nsamples = 35\nvalue = [34, 1]\nclass = Benign"] ;
53 -> 54 ;
55 [label="gini = 0.0\nsamples = 34\nvalue = [34, 0]\nclass = Benign"] ;
54 -> 55 ;
56 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
54 -> 56 ;
57 [label="gini = 0.0\nsamples = 18\nvalue = [0, 18]\nclass = Malicious"] ;
53 -> 57 ;
58 [label="literal-numericliteral <= 0.5\ngini = 0.024\nsamples = 251\nvalue = [3, 248]\nclass = Malicious"] ;
52 -> 58 ;
59 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
58 -> 59 ;
60 [label="variabledeclaration-eos <= 0.5\ngini = 0.008\nsamples = 249\nvalue = [1, 248]\nclass = Malicious"] ;
58 -> 60 ;
61 [label="gini = 0.0\nsamples = 248\nvalue = [0, 248]\nclass = Malicious"] ;
60 -> 61 ;
62 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
60 -> 62 ;
63 [label="identifiername-eos <= 0.5\ngini = 0.017\nsamples = 3027\nvalue = [26, 3001]\nclass = Malicious"] ;
51 -> 63 ;
64 [label="withstatement-expressionsequence <= 0.5\ngini = 0.013\nsamples = 2999\nvalue = [20, 2979]\nclass = Malicious"] ;
63 -> 64 ;
65 [label="literal-expressionsequence <= 0.5\ngini = 0.013\nsamples = 2998\nvalue = [19, 2979]\nclass = Malicious"] ;
64 -> 65 ;
66 [label="formalparameterarg-formalparameterarg <= 0.5\ngini = 0.011\nsamples = 2973\nvalue = [16, 2957]\nclass = Malicious"] ;
65 -> 66 ;
67 [label="arguments-eos <= 0.5\ngini = 0.01\nsamples = 2961\nvalue = [15, 2946]\nclass = Malicious"] ;
66 -> 67 ;
68 [label="arguments-identifiername <= 0.5\ngini = 0.006\nsamples = 2544\nvalue = [8, 2536]\nclass = Malicious"] ;
67 -> 68 ;
69 [label="literal-identifiername <= 0.5\ngini = 0.005\nsamples = 2543\nvalue = [7, 2536]\nclass = Malicious"] ;
68 -> 69 ;
70 [label="numericliteral-eos <= 0.5\ngini = 0.005\nsamples = 2535\nvalue = [6, 2529]\nclass = Malicious"] ;
69 -> 70 ;
71 [label="expression_statement-identifiername <= 0.5\ngini = 0.011\nsamples = 1046\nvalue = [6, 1040]\nclass = Malicious"] ;
70 -> 71 ;
72 [label="expression_statement-eos <= 0.5\ngini = 0.002\nsamples = 1041\nvalue = [1, 1040]\nclass = Malicious"] ;
71 -> 72 ;
73 [label="gini = 0.003\nsamples = 678\nvalue = [1, 677]\nclass = Malicious"] ;
72 -> 73 ;
74 [label="gini = 0.0\nsamples = 363\nvalue = [0, 363]\nclass = Malicious"] ;
72 -> 74 ;
75 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
71 -> 75 ;
76 [label="gini = 0.0\nsamples = 1489\nvalue = [0, 1489]\nclass = Malicious"] ;
70 -> 76 ;
77 [label="eos-eos <= 0.5\ngini = 0.219\nsamples = 8\nvalue = [1, 7]\nclass = Malicious"] ;
69 -> 77 ;
78 [label="gini = 0.0\nsamples = 7\nvalue = [0, 7]\nclass = Malicious"] ;
77 -> 78 ;
79 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
77 -> 79 ;
80 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
68 -> 80 ;
81 [label="numericliteral-expression_statement <= 0.5\ngini = 0.033\nsamples = 417\nvalue = [7, 410]\nclass = Malicious"] ;
67 -> 81 ;
82 [label="arguments-arguments <= 0.5\ngini = 0.245\nsamples = 7\nvalue = [6, 1]\nclass = Benign"] ;
81 -> 82 ;
83 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
82 -> 83 ;
84 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
82 -> 84 ;
85 [label="eos-statement <= 0.5\ngini = 0.005\nsamples = 410\nvalue = [1, 409]\nclass = Malicious"] ;
81 -> 85 ;
86 [label="elementlist-expression_statement <= 0.5\ngini = 0.278\nsamples = 6\nvalue = [1, 5]\nclass = Malicious"] ;
85 -> 86 ;
87 [label="gini = 0.0\nsamples = 5\nvalue = [0, 5]\nclass = Malicious"] ;
86 -> 87 ;
88 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
86 -> 88 ;
89 [label="gini = 0.0\nsamples = 404\nvalue = [0, 404]\nclass = Malicious"] ;
85 -> 89 ;
90 [label="literal-identifiername <= 0.5\ngini = 0.153\nsamples = 12\nvalue = [1, 11]\nclass = Malicious"] ;
66 -> 90 ;
91 [label="gini = 0.0\nsamples = 11\nvalue = [0, 11]\nclass = Malicious"] ;
90 -> 91 ;
92 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
90 -> 92 ;
93 [label="identifiername-expression_statement <= 0.5\ngini = 0.211\nsamples = 25\nvalue = [3, 22]\nclass = Malicious"] ;
65 -> 93 ;
94 [label="gini = 0.0\nsamples = 22\nvalue = [0, 22]\nclass = Malicious"] ;
93 -> 94 ;
95 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
93 -> 95 ;
96 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
64 -> 96 ;
97 [label="eos-statement <= 0.5\ngini = 0.337\nsamples = 28\nvalue = [6, 22]\nclass = Malicious"] ;
63 -> 97 ;
98 [label="expression_statement-arrayliteral <= 0.5\ngini = 0.408\nsamples = 7\nvalue = [5, 2]\nclass = Benign"] ;
97 -> 98 ;
99 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
98 -> 99 ;
100 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
98 -> 100 ;
101 [label="returnstatement-eos <= 0.5\ngini = 0.091\nsamples = 21\nvalue = [1, 20]\nclass = Malicious"] ;
97 -> 101 ;
102 [label="gini = 0.0\nsamples = 20\nvalue = [0, 20]\nclass = Malicious"] ;
101 -> 102 ;
103 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
101 -> 103 ;
104 [label="do_for_while_statement-varmodifier <= 0.5\ngini = 0.278\nsamples = 6\nvalue = [5, 1]\nclass = Benign"] ;
50 -> 104 ;
105 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
104 -> 105 ;
106 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
104 -> 106 ;
107 [label="expression_statement-assignmentoperator <= 0.5\ngini = 0.458\nsamples = 245\nvalue = [87, 158]\nclass = Malicious"] ;
43 -> 107 ;
108 [label="emptystatement-eos <= 0.5\ngini = 0.023\nsamples = 85\nvalue = [84, 1]\nclass = Benign"] ;
107 -> 108 ;
109 [label="gini = 0.0\nsamples = 84\nvalue = [84, 0]\nclass = Benign"] ;
108 -> 109 ;
110 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
108 -> 110 ;
111 [label="formalparameterarg-formalparameterarg <= 0.5\ngini = 0.037\nsamples = 160\nvalue = [3, 157]\nclass = Malicious"] ;
107 -> 111 ;
112 [label="literal-eos <= 0.5\ngini = 0.013\nsamples = 157\nvalue = [1, 156]\nclass = Malicious"] ;
111 -> 112 ;
113 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
112 -> 113 ;
114 [label="gini = 0.0\nsamples = 156\nvalue = [0, 156]\nclass = Malicious"] ;
112 -> 114 ;
115 [label="expression_statement-arrayliteral <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [2, 1]\nclass = Benign"] ;
111 -> 115 ;
116 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
115 -> 116 ;
117 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
115 -> 117 ;
118 [label="breakstatement-eos <= 0.5\ngini = 0.011\nsamples = 1039\nvalue = [1033, 6]\nclass = Benign"] ;
2 -> 118 ;
119 [label="expression_statement-assignmentoperator <= 0.5\ngini = 0.002\nsamples = 1034\nvalue = [1033, 1]\nclass = Benign"] ;
118 -> 119 ;
120 [label="gini = 0.0\nsamples = 1031\nvalue = [1031, 0]\nclass = Benign"] ;
119 -> 120 ;
121 [label="emptystatement-sourceelement <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [2, 1]\nclass = Benign"] ;
119 -> 121 ;
122 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
121 -> 122 ;
123 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
121 -> 123 ;
124 [label="gini = 0.0\nsamples = 5\nvalue = [0, 5]\nclass = Malicious"] ;
118 -> 124 ;
125 [label="eos-arguments <= 0.5\ngini = 0.002\nsamples = 5051\nvalue = [6, 5045]\nclass = Malicious"] ;
1 -> 125 ;
126 [label="arguments-expression_statement <= 0.5\ngini = 0.001\nsamples = 5048\nvalue = [3, 5045]\nclass = Malicious"] ;
125 -> 126 ;
127 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
126 -> 127 ;
128 [label="literal-eos <= 0.5\ngini = 0.0\nsamples = 5046\nvalue = [1, 5045]\nclass = Malicious"] ;
126 -> 128 ;
129 [label="identifiername-arguments <= 0.5\ngini = 0.011\nsamples = 175\nvalue = [1, 174]\nclass = Malicious"] ;
128 -> 129 ;
130 [label="gini = 0.0\nsamples = 174\nvalue = [0, 174]\nclass = Malicious"] ;
129 -> 130 ;
131 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
129 -> 131 ;
132 [label="gini = 0.0\nsamples = 4871\nvalue = [0, 4871]\nclass = Malicious"] ;
128 -> 132 ;
133 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
125 -> 133 ;
134 [label="do_for_while_statement-expressionsequence <= 0.5\ngini = 0.246\nsamples = 10751\nvalue = [9206, 1545]\nclass = Benign"] ;
0 -> 134 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
135 [label="numericliteral-arguments <= 0.5\ngini = 0.007\nsamples = 9201\nvalue = [9168, 33]\nclass = Benign"] ;
134 -> 135 ;
136 [label="literal-arguments <= 0.5\ngini = 0.001\nsamples = 9172\nvalue = [9168, 4]\nclass = Benign"] ;
135 -> 136 ;
137 [label="gini = 0.0\nsamples = 9155\nvalue = [9155, 0]\nclass = Benign"] ;
136 -> 137 ;
138 [label="literal-expressionsequence <= 0.5\ngini = 0.36\nsamples = 17\nvalue = [13, 4]\nclass = Benign"] ;
136 -> 138 ;
139 [label="gini = 0.0\nsamples = 13\nvalue = [13, 0]\nclass = Benign"] ;
138 -> 139 ;
140 [label="gini = 0.0\nsamples = 4\nvalue = [0, 4]\nclass = Malicious"] ;
138 -> 140 ;
141 [label="gini = 0.0\nsamples = 29\nvalue = [0, 29]\nclass = Malicious"] ;
135 -> 141 ;
142 [label="objectliteral-eos <= 0.5\ngini = 0.048\nsamples = 1550\nvalue = [38, 1512]\nclass = Malicious"] ;
134 -> 142 ;
143 [label="literal-expressionsequence <= 0.5\ngini = 0.007\nsamples = 1516\nvalue = [5, 1511]\nclass = Malicious"] ;
142 -> 143 ;
144 [label="catchproduction-block <= 0.5\ngini = 0.5\nsamples = 10\nvalue = [5, 5]\nclass = Benign"] ;
143 -> 144 ;
145 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
144 -> 145 ;
146 [label="gini = 0.0\nsamples = 5\nvalue = [0, 5]\nclass = Malicious"] ;
144 -> 146 ;
147 [label="gini = 0.0\nsamples = 1506\nvalue = [0, 1506]\nclass = Malicious"] ;
143 -> 147 ;
148 [label="arguments-expressionsequence <= 0.5\ngini = 0.057\nsamples = 34\nvalue = [33, 1]\nclass = Benign"] ;
142 -> 148 ;
149 [label="gini = 0.0\nsamples = 33\nvalue = [33, 0]\nclass = Benign"] ;
148 -> 149 ;
150 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
148 -> 150 ;
}
