digraph Tree {
node [shape=box] ;
0 [label="objectliteralexpression <= 0.5\ngini = 0.5\nsamples = 27000\nvalue = [13503, 13497]\nclass = Benign"] ;
1 [label="memberindexexpression <= 0.5\ngini = 0.39\nsamples = 16258\nvalue = [4315, 11943]\nclass = Malicious"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="newexpression <= 0.5\ngini = 0.481\nsamples = 9733\nvalue = [3913, 5820]\nclass = Malicious"] ;
1 -> 2 ;
3 [label="statement <= 0.5\ngini = 0.498\nsamples = 7730\nvalue = [3612, 4118]\nclass = Malicious"] ;
2 -> 3 ;
4 [label="gini = 0.396\nsamples = 2579\nvalue = [701, 1878]\nclass = Malicious"] ;
3 -> 4 ;
5 [label="numericliteral <= 0.5\ngini = 0.492\nsamples = 5151\nvalue = [2911, 2240]\nclass = Benign"] ;
3 -> 5 ;
6 [label="expressionsequence <= 0.5\ngini = 0.374\nsamples = 2833\nvalue = [2128, 705]\nclass = Benign"] ;
5 -> 6 ;
7 [label="argumentsexpression <= 0.5\ngini = 0.499\nsamples = 893\nvalue = [426, 467]\nclass = Malicious"] ;
6 -> 7 ;
8 [label="gini = 0.0\nsamples = 412\nvalue = [412, 0]\nclass = Benign"] ;
7 -> 8 ;
9 [label="identifierexpression <= 0.5\ngini = 0.057\nsamples = 481\nvalue = [14, 467]\nclass = Malicious"] ;
7 -> 9 ;
10 [label="gini = 0.0\nsamples = 467\nvalue = [0, 467]\nclass = Malicious"] ;
9 -> 10 ;
11 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
9 -> 11 ;
12 [label="assignmentoperator <= 0.5\ngini = 0.215\nsamples = 1940\nvalue = [1702, 238]\nclass = Benign"] ;
6 -> 12 ;
13 [label="assignmentexpression <= 0.5\ngini = 0.186\nsamples = 1813\nvalue = [1625, 188]\nclass = Benign"] ;
12 -> 13 ;
14 [label="functionbody <= 0.5\ngini = 0.263\nsamples = 1205\nvalue = [1017, 188]\nclass = Benign"] ;
13 -> 14 ;
15 [label="memberdotexpression <= 0.5\ngini = 0.37\nsamples = 767\nvalue = [579, 188]\nclass = Benign"] ;
14 -> 15 ;
16 [label="additiveexpression <= 0.5\ngini = 0.19\nsamples = 197\nvalue = [176, 21]\nclass = Benign"] ;
15 -> 16 ;
17 [label="gini = 0.0\nsamples = 161\nvalue = [161, 0]\nclass = Benign"] ;
16 -> 17 ;
18 [label="argumentsexpression <= 0.5\ngini = 0.486\nsamples = 36\nvalue = [15, 21]\nclass = Malicious"] ;
16 -> 18 ;
19 [label="gini = 0.0\nsamples = 15\nvalue = [15, 0]\nclass = Benign"] ;
18 -> 19 ;
20 [label="gini = 0.0\nsamples = 21\nvalue = [0, 21]\nclass = Malicious"] ;
18 -> 20 ;
21 [label="ifstatement <= 0.5\ngini = 0.414\nsamples = 570\nvalue = [403, 167]\nclass = Benign"] ;
15 -> 21 ;
22 [label="arrayliteralexpression <= 0.5\ngini = 0.442\nsamples = 506\nvalue = [339, 167]\nclass = Benign"] ;
21 -> 22 ;
23 [label="literalexpression <= 0.5\ngini = 0.462\nsamples = 461\nvalue = [294, 167]\nclass = Benign"] ;
22 -> 23 ;
24 [label="gini = 0.0\nsamples = 20\nvalue = [20, 0]\nclass = Benign"] ;
23 -> 24 ;
25 [label="variablestatement <= 0.5\ngini = 0.471\nsamples = 441\nvalue = [274, 167]\nclass = Benign"] ;
23 -> 25 ;
26 [label="additiveexpression <= 0.5\ngini = 0.476\nsamples = 425\nvalue = [259, 166]\nclass = Benign"] ;
25 -> 26 ;
27 [label="ternaryexpression <= 0.5\ngini = 0.478\nsamples = 420\nvalue = [254, 166]\nclass = Benign"] ;
26 -> 27 ;
28 [label="logicalorexpression <= 0.5\ngini = 0.479\nsamples = 418\nvalue = [252, 166]\nclass = Benign"] ;
27 -> 28 ;
29 [label="logicalandexpression <= 0.5\ngini = 0.48\nsamples = 416\nvalue = [250, 166]\nclass = Benign"] ;
28 -> 29 ;
30 [label="statementlist <= 0.5\ngini = 0.48\nsamples = 414\nvalue = [248, 166]\nclass = Benign"] ;
29 -> 30 ;
31 [label="gini = 0.481\nsamples = 413\nvalue = [247, 166]\nclass = Benign"] ;
30 -> 31 ;
32 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
30 -> 32 ;
33 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
29 -> 33 ;
34 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
28 -> 34 ;
35 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
27 -> 35 ;
36 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
26 -> 36 ;
37 [label="additiveexpression <= 0.5\ngini = 0.117\nsamples = 16\nvalue = [15, 1]\nclass = Benign"] ;
25 -> 37 ;
38 [label="statementlist <= 0.5\ngini = 0.18\nsamples = 10\nvalue = [9, 1]\nclass = Benign"] ;
37 -> 38 ;
39 [label="gini = 0.278\nsamples = 6\nvalue = [5, 1]\nclass = Benign"] ;
38 -> 39 ;
40 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
38 -> 40 ;
41 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
37 -> 41 ;
42 [label="gini = 0.0\nsamples = 45\nvalue = [45, 0]\nclass = Benign"] ;
22 -> 42 ;
43 [label="gini = 0.0\nsamples = 64\nvalue = [64, 0]\nclass = Benign"] ;
21 -> 43 ;
44 [label="gini = 0.0\nsamples = 438\nvalue = [438, 0]\nclass = Benign"] ;
14 -> 44 ;
45 [label="gini = 0.0\nsamples = 608\nvalue = [608, 0]\nclass = Benign"] ;
13 -> 45 ;
46 [label="memberdotexpression <= 0.5\ngini = 0.477\nsamples = 127\nvalue = [77, 50]\nclass = Benign"] ;
12 -> 46 ;
47 [label="returnstatement <= 0.5\ngini = 0.107\nsamples = 53\nvalue = [3, 50]\nclass = Malicious"] ;
46 -> 47 ;
48 [label="gini = 0.0\nsamples = 27\nvalue = [0, 27]\nclass = Malicious"] ;
47 -> 48 ;
49 [label="assignmentexpression <= 0.5\ngini = 0.204\nsamples = 26\nvalue = [3, 23]\nclass = Malicious"] ;
47 -> 49 ;
50 [label="gini = 0.375\nsamples = 12\nvalue = [3, 9]\nclass = Malicious"] ;
49 -> 50 ;
51 [label="gini = 0.0\nsamples = 14\nvalue = [0, 14]\nclass = Malicious"] ;
49 -> 51 ;
52 [label="gini = 0.0\nsamples = 74\nvalue = [74, 0]\nclass = Benign"] ;
46 -> 52 ;
53 [label="parenthesizedexpression <= 0.5\ngini = 0.447\nsamples = 2318\nvalue = [783, 1535]\nclass = Malicious"] ;
5 -> 53 ;
54 [label="arguments <= 0.5\ngini = 0.498\nsamples = 1349\nvalue = [720, 629]\nclass = Benign"] ;
53 -> 54 ;
55 [label="gini = 0.0\nsamples = 346\nvalue = [346, 0]\nclass = Benign"] ;
54 -> 55 ;
56 [label="functionbody <= 0.5\ngini = 0.468\nsamples = 1003\nvalue = [374, 629]\nclass = Malicious"] ;
54 -> 56 ;
57 [label="statementlist <= 0.5\ngini = 0.376\nsamples = 840\nvalue = [211, 629]\nclass = Malicious"] ;
56 -> 57 ;
58 [label="variablestatement <= 0.5\ngini = 0.335\nsamples = 799\nvalue = [170, 629]\nclass = Malicious"] ;
57 -> 58 ;
59 [label="equalityexpression <= 0.5\ngini = 0.456\nsamples = 407\nvalue = [143, 264]\nclass = Malicious"] ;
58 -> 59 ;
60 [label="memberdotexpression <= 0.5\ngini = 0.498\nsamples = 268\nvalue = [143, 125]\nclass = Benign"] ;
59 -> 60 ;
61 [label="gini = 0.0\nsamples = 35\nvalue = [35, 0]\nclass = Benign"] ;
60 -> 61 ;
62 [label="additiveexpression <= 0.5\ngini = 0.497\nsamples = 233\nvalue = [108, 125]\nclass = Malicious"] ;
60 -> 62 ;
63 [label="arrayliteral <= 0.5\ngini = 0.486\nsamples = 214\nvalue = [89, 125]\nclass = Malicious"] ;
62 -> 63 ;
64 [label="logicalandexpression <= 0.5\ngini = 0.48\nsamples = 208\nvalue = [83, 125]\nclass = Malicious"] ;
63 -> 64 ;
65 [label="assignmentexpression <= 0.5\ngini = 0.473\nsamples = 203\nvalue = [78, 125]\nclass = Malicious"] ;
64 -> 65 ;
66 [label="gini = 0.469\nsamples = 200\nvalue = [75, 125]\nclass = Malicious"] ;
65 -> 66 ;
67 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
65 -> 67 ;
68 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
64 -> 68 ;
69 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
63 -> 69 ;
70 [label="gini = 0.0\nsamples = 19\nvalue = [19, 0]\nclass = Benign"] ;
62 -> 70 ;
71 [label="gini = 0.0\nsamples = 139\nvalue = [0, 139]\nclass = Malicious"] ;
59 -> 71 ;
72 [label="memberdotexpression <= 0.5\ngini = 0.128\nsamples = 392\nvalue = [27, 365]\nclass = Malicious"] ;
58 -> 72 ;
73 [label="gini = 0.0\nsamples = 11\nvalue = [11, 0]\nclass = Benign"] ;
72 -> 73 ;
74 [label="multiplicativeexpression <= 0.5\ngini = 0.08\nsamples = 381\nvalue = [16, 365]\nclass = Malicious"] ;
72 -> 74 ;
75 [label="assignmentexpression <= 0.5\ngini = 0.057\nsamples = 376\nvalue = [11, 365]\nclass = Malicious"] ;
74 -> 75 ;
76 [label="arrayliteralexpression <= 0.5\ngini = 0.037\nsamples = 372\nvalue = [7, 365]\nclass = Malicious"] ;
75 -> 76 ;
77 [label="unaryminusexpression <= 0.5\ngini = 0.032\nsamples = 371\nvalue = [6, 365]\nclass = Malicious"] ;
76 -> 77 ;
78 [label="thisexpression <= 0.5\ngini = 0.027\nsamples = 370\nvalue = [5, 365]\nclass = Malicious"] ;
77 -> 78 ;
79 [label="additiveexpression <= 0.5\ngini = 0.021\nsamples = 369\nvalue = [4, 365]\nclass = Malicious"] ;
78 -> 79 ;
80 [label="gini = 0.034\nsamples = 232\nvalue = [4, 228]\nclass = Malicious"] ;
79 -> 80 ;
81 [label="gini = 0.0\nsamples = 137\nvalue = [0, 137]\nclass = Malicious"] ;
79 -> 81 ;
82 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
78 -> 82 ;
83 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
77 -> 83 ;
84 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
76 -> 84 ;
85 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
75 -> 85 ;
86 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
74 -> 86 ;
87 [label="gini = 0.0\nsamples = 41\nvalue = [41, 0]\nclass = Benign"] ;
57 -> 87 ;
88 [label="gini = 0.0\nsamples = 163\nvalue = [163, 0]\nclass = Benign"] ;
56 -> 88 ;
89 [label="assignmentexpression <= 0.5\ngini = 0.122\nsamples = 969\nvalue = [63, 906]\nclass = Malicious"] ;
53 -> 89 ;
90 [label="postincrementexpression <= 0.5\ngini = 0.043\nsamples = 46\nvalue = [45, 1]\nclass = Benign"] ;
89 -> 90 ;
91 [label="gini = 0.0\nsamples = 45\nvalue = [45, 0]\nclass = Benign"] ;
90 -> 91 ;
92 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
90 -> 92 ;
93 [label="formalparameterarg <= 0.5\ngini = 0.038\nsamples = 923\nvalue = [18, 905]\nclass = Malicious"] ;
89 -> 93 ;
94 [label="logicalorexpression <= 0.5\ngini = 0.009\nsamples = 909\nvalue = [4, 905]\nclass = Malicious"] ;
93 -> 94 ;
95 [label="multiplicativeexpression <= 0.5\ngini = 0.004\nsamples = 907\nvalue = [2, 905]\nclass = Malicious"] ;
94 -> 95 ;
96 [label="relationalexpression <= 0.5\ngini = 0.002\nsamples = 906\nvalue = [1, 905]\nclass = Malicious"] ;
95 -> 96 ;
97 [label="gini = 0.0\nsamples = 897\nvalue = [0, 897]\nclass = Malicious"] ;
96 -> 97 ;
98 [label="assignmentoperator <= 0.5\ngini = 0.198\nsamples = 9\nvalue = [1, 8]\nclass = Malicious"] ;
96 -> 98 ;
99 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
98 -> 99 ;
100 [label="gini = 0.0\nsamples = 8\nvalue = [0, 8]\nclass = Malicious"] ;
98 -> 100 ;
101 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
95 -> 101 ;
102 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
94 -> 102 ;
103 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
93 -> 103 ;
104 [label="assignmentexpression <= 0.5\ngini = 0.255\nsamples = 2003\nvalue = [301, 1702]\nclass = Malicious"] ;
2 -> 104 ;
105 [label="arrayliteralexpression <= 0.5\ngini = 0.064\nsamples = 1759\nvalue = [58, 1701]\nclass = Malicious"] ;
104 -> 105 ;
106 [label="literalexpression <= 0.5\ngini = 0.044\nsamples = 1740\nvalue = [39, 1701]\nclass = Malicious"] ;
105 -> 106 ;
107 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
106 -> 107 ;
108 [label="expressionsequence <= 0.5\ngini = 0.029\nsamples = 1726\nvalue = [25, 1701]\nclass = Malicious"] ;
106 -> 108 ;
109 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
108 -> 109 ;
110 [label="varmodifier <= 0.5\ngini = 0.023\nsamples = 1721\nvalue = [20, 1701]\nclass = Malicious"] ;
108 -> 110 ;
111 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
110 -> 111 ;
112 [label="statementlist <= 0.5\ngini = 0.017\nsamples = 1716\nvalue = [15, 1701]\nclass = Malicious"] ;
110 -> 112 ;
113 [label="additiveexpression <= 0.5\ngini = 0.012\nsamples = 1709\nvalue = [10, 1699]\nclass = Malicious"] ;
112 -> 113 ;
114 [label="identifiername <= 0.5\ngini = 0.008\nsamples = 1703\nvalue = [7, 1696]\nclass = Malicious"] ;
113 -> 114 ;
115 [label="gini = 0.0\nsamples = 1094\nvalue = [0, 1094]\nclass = Malicious"] ;
114 -> 115 ;
116 [label="ifstatement <= 0.5\ngini = 0.023\nsamples = 609\nvalue = [7, 602]\nclass = Malicious"] ;
114 -> 116 ;
117 [label="numericliteral <= 0.5\ngini = 0.463\nsamples = 11\nvalue = [7, 4]\nclass = Benign"] ;
116 -> 117 ;
118 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
117 -> 118 ;
119 [label="gini = 0.49\nsamples = 7\nvalue = [3, 4]\nclass = Malicious"] ;
117 -> 119 ;
120 [label="gini = 0.0\nsamples = 598\nvalue = [0, 598]\nclass = Malicious"] ;
116 -> 120 ;
121 [label="numericliteral <= 0.5\ngini = 0.5\nsamples = 6\nvalue = [3, 3]\nclass = Benign"] ;
113 -> 121 ;
122 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
121 -> 122 ;
123 [label="gini = 0.0\nsamples = 3\nvalue = [0, 3]\nclass = Malicious"] ;
121 -> 123 ;
124 [label="additiveexpression <= 0.5\ngini = 0.408\nsamples = 7\nvalue = [5, 2]\nclass = Benign"] ;
112 -> 124 ;
125 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
124 -> 125 ;
126 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
124 -> 126 ;
127 [label="gini = 0.0\nsamples = 19\nvalue = [19, 0]\nclass = Benign"] ;
105 -> 127 ;
128 [label="bitxorexpression <= 0.5\ngini = 0.008\nsamples = 244\nvalue = [243, 1]\nclass = Benign"] ;
104 -> 128 ;
129 [label="gini = 0.0\nsamples = 243\nvalue = [243, 0]\nclass = Benign"] ;
128 -> 129 ;
130 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
128 -> 130 ;
131 [label="argumentsexpression <= 0.5\ngini = 0.116\nsamples = 6525\nvalue = [402, 6123]\nclass = Malicious"] ;
1 -> 131 ;
132 [label="gini = 0.0\nsamples = 137\nvalue = [137, 0]\nclass = Benign"] ;
131 -> 132 ;
133 [label="logicalorexpression <= 0.5\ngini = 0.08\nsamples = 6388\nvalue = [265, 6123]\nclass = Malicious"] ;
131 -> 133 ;
134 [label="forvarinstatement <= 0.5\ngini = 0.063\nsamples = 6328\nvalue = [205, 6123]\nclass = Malicious"] ;
133 -> 134 ;
135 [label="deleteexpression <= 0.5\ngini = 0.045\nsamples = 6269\nvalue = [146, 6123]\nclass = Malicious"] ;
134 -> 135 ;
136 [label="ternaryexpression <= 0.5\ngini = 0.04\nsamples = 6252\nvalue = [129, 6123]\nclass = Malicious"] ;
135 -> 136 ;
137 [label="notexpression <= 0.5\ngini = 0.038\nsamples = 6243\nvalue = [120, 6123]\nclass = Malicious"] ;
136 -> 137 ;
138 [label="typeofexpression <= 0.5\ngini = 0.035\nsamples = 6223\nvalue = [111, 6112]\nclass = Malicious"] ;
137 -> 138 ;
139 [label="preincrementexpression <= 0.5\ngini = 0.034\nsamples = 6216\nvalue = [107, 6109]\nclass = Malicious"] ;
138 -> 139 ;
140 [label="newexpression <= 0.5\ngini = 0.033\nsamples = 6214\nvalue = [105, 6109]\nclass = Malicious"] ;
139 -> 140 ;
141 [label="functionexpression <= 0.5\ngini = 0.061\nsamples = 2954\nvalue = [93, 2861]\nclass = Malicious"] ;
140 -> 141 ;
142 [label="statementlist <= 0.5\ngini = 0.017\nsamples = 2225\nvalue = [19, 2206]\nclass = Malicious"] ;
141 -> 142 ;
143 [label="identifiername <= 0.5\ngini = 0.009\nsamples = 1840\nvalue = [8, 1832]\nclass = Malicious"] ;
142 -> 143 ;
144 [label="varmodifier <= 0.5\ngini = 0.002\nsamples = 1123\nvalue = [1, 1122]\nclass = Malicious"] ;
143 -> 144 ;
145 [label="arrayliteral <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
144 -> 145 ;
146 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
145 -> 146 ;
147 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
145 -> 147 ;
148 [label="gini = 0.0\nsamples = 1120\nvalue = [0, 1120]\nclass = Malicious"] ;
144 -> 148 ;
149 [label="variabledeclarationlist <= 0.5\ngini = 0.019\nsamples = 717\nvalue = [7, 710]\nclass = Malicious"] ;
143 -> 149 ;
150 [label="additiveexpression <= 0.5\ngini = 0.007\nsamples = 568\nvalue = [2, 566]\nclass = Malicious"] ;
149 -> 150 ;
151 [label="numericliteral <= 0.5\ngini = 0.015\nsamples = 272\nvalue = [2, 270]\nclass = Malicious"] ;
150 -> 151 ;
152 [label="gini = 0.0\nsamples = 270\nvalue = [0, 270]\nclass = Malicious"] ;
151 -> 152 ;
153 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
151 -> 153 ;
154 [label="gini = 0.0\nsamples = 296\nvalue = [0, 296]\nclass = Malicious"] ;
150 -> 154 ;
155 [label="elementlist <= 0.5\ngini = 0.065\nsamples = 149\nvalue = [5, 144]\nclass = Malicious"] ;
149 -> 155 ;
156 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
155 -> 156 ;
157 [label="gini = 0.0\nsamples = 144\nvalue = [0, 144]\nclass = Malicious"] ;
155 -> 157 ;
158 [label="variabledeclarationlist <= 0.5\ngini = 0.056\nsamples = 385\nvalue = [11, 374]\nclass = Malicious"] ;
142 -> 158 ;
159 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
158 -> 159 ;
160 [label="emptystatement <= 0.5\ngini = 0.011\nsamples = 376\nvalue = [2, 374]\nclass = Malicious"] ;
158 -> 160 ;
161 [label="assignmentoperator <= 0.5\ngini = 0.375\nsamples = 8\nvalue = [2, 6]\nclass = Malicious"] ;
160 -> 161 ;
162 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
161 -> 162 ;
163 [label="gini = 0.0\nsamples = 6\nvalue = [0, 6]\nclass = Malicious"] ;
161 -> 163 ;
164 [label="gini = 0.0\nsamples = 368\nvalue = [0, 368]\nclass = Malicious"] ;
160 -> 164 ;
165 [label="relationalexpression <= 0.5\ngini = 0.182\nsamples = 729\nvalue = [74, 655]\nclass = Malicious"] ;
141 -> 165 ;
166 [label="memberdotexpression <= 0.5\ngini = 0.458\nsamples = 104\nvalue = [67, 37]\nclass = Benign"] ;
165 -> 166 ;
167 [label="gini = 0.0\nsamples = 35\nvalue = [0, 35]\nclass = Malicious"] ;
166 -> 167 ;
168 [label="assignmentexpression <= 0.5\ngini = 0.056\nsamples = 69\nvalue = [67, 2]\nclass = Benign"] ;
166 -> 168 ;
169 [label="returnstatement <= 0.5\ngini = 0.48\nsamples = 5\nvalue = [3, 2]\nclass = Benign"] ;
168 -> 169 ;
170 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
169 -> 170 ;
171 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
169 -> 171 ;
172 [label="gini = 0.0\nsamples = 64\nvalue = [64, 0]\nclass = Benign"] ;
168 -> 172 ;
173 [label="returnstatement <= 0.5\ngini = 0.022\nsamples = 625\nvalue = [7, 618]\nclass = Malicious"] ;
165 -> 173 ;
174 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
173 -> 174 ;
175 [label="thisexpression <= 0.5\ngini = 0.003\nsamples = 619\nvalue = [1, 618]\nclass = Malicious"] ;
173 -> 175 ;
176 [label="gini = 0.0\nsamples = 595\nvalue = [0, 595]\nclass = Malicious"] ;
175 -> 176 ;
177 [label="identifiername <= 0.5\ngini = 0.08\nsamples = 24\nvalue = [1, 23]\nclass = Malicious"] ;
175 -> 177 ;
178 [label="gini = 0.0\nsamples = 23\nvalue = [0, 23]\nclass = Malicious"] ;
177 -> 178 ;
179 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
177 -> 179 ;
180 [label="varmodifier <= 0.5\ngini = 0.007\nsamples = 3260\nvalue = [12, 3248]\nclass = Malicious"] ;
140 -> 180 ;
181 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
180 -> 181 ;
182 [label="block <= 0.5\ngini = 0.006\nsamples = 3257\nvalue = [9, 3248]\nclass = Malicious"] ;
180 -> 182 ;
183 [label="formalparameterarg <= 0.5\ngini = 0.028\nsamples = 496\nvalue = [7, 489]\nclass = Malicious"] ;
182 -> 183 ;
184 [label="assignmentoperatorexpression <= 0.5\ngini = 0.346\nsamples = 9\nvalue = [7, 2]\nclass = Benign"] ;
183 -> 184 ;
185 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
184 -> 185 ;
186 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
184 -> 186 ;
187 [label="gini = 0.0\nsamples = 487\nvalue = [0, 487]\nclass = Malicious"] ;
183 -> 187 ;
188 [label="arrayliteral <= 0.5\ngini = 0.001\nsamples = 2761\nvalue = [2, 2759]\nclass = Malicious"] ;
182 -> 188 ;
189 [label="assignmentoperatorexpression <= 0.5\ngini = 0.004\nsamples = 895\nvalue = [2, 893]\nclass = Malicious"] ;
188 -> 189 ;
190 [label="ifstatement <= 0.5\ngini = 0.002\nsamples = 890\nvalue = [1, 889]\nclass = Malicious"] ;
189 -> 190 ;
191 [label="functionbody <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
190 -> 191 ;
192 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
191 -> 192 ;
193 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
191 -> 193 ;
194 [label="gini = 0.0\nsamples = 887\nvalue = [0, 887]\nclass = Malicious"] ;
190 -> 194 ;
195 [label="formalparameterarg <= 0.5\ngini = 0.32\nsamples = 5\nvalue = [1, 4]\nclass = Malicious"] ;
189 -> 195 ;
196 [label="gini = 0.0\nsamples = 4\nvalue = [0, 4]\nclass = Malicious"] ;
195 -> 196 ;
197 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
195 -> 197 ;
198 [label="gini = 0.0\nsamples = 1866\nvalue = [0, 1866]\nclass = Malicious"] ;
188 -> 198 ;
199 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
139 -> 199 ;
200 [label="arrayliteral <= 0.5\ngini = 0.49\nsamples = 7\nvalue = [4, 3]\nclass = Benign"] ;
138 -> 200 ;
201 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
200 -> 201 ;
202 [label="gini = 0.0\nsamples = 3\nvalue = [0, 3]\nclass = Malicious"] ;
200 -> 202 ;
203 [label="identifiername <= 0.5\ngini = 0.495\nsamples = 20\nvalue = [9, 11]\nclass = Malicious"] ;
137 -> 203 ;
204 [label="gini = 0.0\nsamples = 11\nvalue = [0, 11]\nclass = Malicious"] ;
203 -> 204 ;
205 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
203 -> 205 ;
206 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
136 -> 206 ;
207 [label="gini = 0.0\nsamples = 17\nvalue = [17, 0]\nclass = Benign"] ;
135 -> 207 ;
208 [label="gini = 0.0\nsamples = 59\nvalue = [59, 0]\nclass = Benign"] ;
134 -> 208 ;
209 [label="gini = 0.0\nsamples = 60\nvalue = [60, 0]\nclass = Benign"] ;
133 -> 209 ;
210 [label="forstatement <= 0.5\ngini = 0.247\nsamples = 10742\nvalue = [9188, 1554]\nclass = Benign"] ;
0 -> 210 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
211 [label="bitshiftexpression <= 0.5\ngini = 0.012\nsamples = 9212\nvalue = [9155, 57]\nclass = Benign"] ;
210 -> 211 ;
212 [label="whilestatement <= 0.5\ngini = 0.001\nsamples = 9161\nvalue = [9155, 6]\nclass = Benign"] ;
211 -> 212 ;
213 [label="trystatement <= 0.5\ngini = 0.001\nsamples = 9156\nvalue = [9152, 4]\nclass = Benign"] ;
212 -> 213 ;
214 [label="multiplicativeexpression <= 0.5\ngini = 0.0\nsamples = 9039\nvalue = [9038, 1]\nclass = Benign"] ;
213 -> 214 ;
215 [label="gini = 0.0\nsamples = 8947\nvalue = [8947, 0]\nclass = Benign"] ;
214 -> 215 ;
216 [label="propertyexpressionassignment <= 0.5\ngini = 0.022\nsamples = 92\nvalue = [91, 1]\nclass = Benign"] ;
214 -> 216 ;
217 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
216 -> 217 ;
218 [label="gini = 0.0\nsamples = 91\nvalue = [91, 0]\nclass = Benign"] ;
216 -> 218 ;
219 [label="memberdotexpression <= 0.5\ngini = 0.05\nsamples = 117\nvalue = [114, 3]\nclass = Benign"] ;
213 -> 219 ;
220 [label="gini = 0.0\nsamples = 3\nvalue = [0, 3]\nclass = Malicious"] ;
219 -> 220 ;
221 [label="gini = 0.0\nsamples = 114\nvalue = [114, 0]\nclass = Benign"] ;
219 -> 221 ;
222 [label="formalparameterlist <= 0.5\ngini = 0.48\nsamples = 5\nvalue = [3, 2]\nclass = Benign"] ;
212 -> 222 ;
223 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
222 -> 223 ;
224 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
222 -> 224 ;
225 [label="gini = 0.0\nsamples = 51\nvalue = [0, 51]\nclass = Malicious"] ;
211 -> 225 ;
226 [label="memberdotexpression <= 0.5\ngini = 0.042\nsamples = 1530\nvalue = [33, 1497]\nclass = Malicious"] ;
210 -> 226 ;
227 [label="gini = 0.0\nsamples = 1493\nvalue = [0, 1493]\nclass = Malicious"] ;
226 -> 227 ;
228 [label="functionbody <= 0.5\ngini = 0.193\nsamples = 37\nvalue = [33, 4]\nclass = Benign"] ;
226 -> 228 ;
229 [label="gini = 0.0\nsamples = 4\nvalue = [0, 4]\nclass = Malicious"] ;
228 -> 229 ;
230 [label="gini = 0.0\nsamples = 33\nvalue = [33, 0]\nclass = Benign"] ;
228 -> 230 ;
}
