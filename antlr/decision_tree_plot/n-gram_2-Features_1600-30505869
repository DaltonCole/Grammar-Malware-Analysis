digraph Tree {
node [shape=box] ;
0 [label="property_rules-propertyname <= 0.5\ngini = 0.5\nsamples = 27000\nvalue = [13526, 13474]\nclass = Benign"] ;
1 [label="identifiername-identifiername <= 0.5\ngini = 0.405\nsamples = 16625\nvalue = [4697, 11928]\nclass = Malicious"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="expression_statement-expressionsequence <= 0.5\ngini = 0.353\nsamples = 15284\nvalue = [3494, 11790]\nclass = Malicious"] ;
1 -> 2 ;
3 [label="sourceElement_stuff-expressionstatement <= 0.5\ngini = 0.473\nsamples = 8085\nvalue = [3095, 4990]\nclass = Malicious"] ;
2 -> 3 ;
4 [label="argument_stuff-expression_statement <= 0.5\ngini = 0.411\nsamples = 5991\nvalue = [1730, 4261]\nclass = Malicious"] ;
3 -> 4 ;
5 [label="variable_stuff-variable_stuff <= 0.5\ngini = 0.492\nsamples = 3310\nvalue = [1442, 1868]\nclass = Malicious"] ;
4 -> 5 ;
6 [label="expressionsequence-expression_statement <= 0.5\ngini = 0.394\nsamples = 2558\nvalue = [690, 1868]\nclass = Malicious"] ;
5 -> 6 ;
7 [label="gini = 0.39\nsamples = 2545\nvalue = [677, 1868]\nclass = Malicious"] ;
6 -> 7 ;
8 [label="gini = 0.0\nsamples = 13\nvalue = [13, 0]\nclass = Benign"] ;
6 -> 8 ;
9 [label="gini = 0.0\nsamples = 752\nvalue = [752, 0]\nclass = Benign"] ;
5 -> 9 ;
10 [label="withstatement-expressionsequence <= 0.5\ngini = 0.192\nsamples = 2681\nvalue = [288, 2393]\nclass = Malicious"] ;
4 -> 10 ;
11 [label="expression_statement-identifiername <= 0.5\ngini = 0.129\nsamples = 2571\nvalue = [178, 2393]\nclass = Malicious"] ;
10 -> 11 ;
12 [label="trystatement-expressionstatement <= 0.5\ngini = 0.041\nsamples = 2299\nvalue = [48, 2251]\nclass = Malicious"] ;
11 -> 12 ;
13 [label="expression_statement-variable_stuff <= 0.5\ngini = 0.038\nsamples = 2296\nvalue = [45, 2251]\nclass = Malicious"] ;
12 -> 13 ;
14 [label="numericliteral-expression_statement <= 0.5\ngini = 0.031\nsamples = 2237\nvalue = [35, 2202]\nclass = Malicious"] ;
13 -> 14 ;
15 [label="sourceElement_stuff-sourceElement_stuff <= 0.5\ngini = 0.03\nsamples = 2236\nvalue = [34, 2202]\nclass = Malicious"] ;
14 -> 15 ;
16 [label="literal-variable_stuff <= 0.5\ngini = 0.027\nsamples = 2225\nvalue = [31, 2194]\nclass = Malicious"] ;
15 -> 16 ;
17 [label="literal-expressionstatement <= 0.5\ngini = 0.063\nsamples = 618\nvalue = [20, 598]\nclass = Malicious"] ;
16 -> 17 ;
18 [label="literal-expression_statement <= 0.5\ngini = 0.007\nsamples = 599\nvalue = [2, 597]\nclass = Malicious"] ;
17 -> 18 ;
19 [label="gini = 0.0\nsamples = 597\nvalue = [0, 597]\nclass = Malicious"] ;
18 -> 19 ;
20 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
18 -> 20 ;
21 [label="identifiername-argument_stuff <= 0.5\ngini = 0.1\nsamples = 19\nvalue = [18, 1]\nclass = Benign"] ;
17 -> 21 ;
22 [label="gini = 0.0\nsamples = 18\nvalue = [18, 0]\nclass = Benign"] ;
21 -> 22 ;
23 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
21 -> 23 ;
24 [label="literal-expression_statement <= 0.5\ngini = 0.014\nsamples = 1607\nvalue = [11, 1596]\nclass = Malicious"] ;
16 -> 24 ;
25 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.039\nsamples = 507\nvalue = [10, 497]\nclass = Malicious"] ;
24 -> 25 ;
26 [label="gini = 0.0\nsamples = 492\nvalue = [0, 492]\nclass = Malicious"] ;
25 -> 26 ;
27 [label="expression_statement-assignmentoperator <= 0.5\ngini = 0.444\nsamples = 15\nvalue = [10, 5]\nclass = Benign"] ;
25 -> 27 ;
28 [label="gini = 0.0\nsamples = 10\nvalue = [10, 0]\nclass = Benign"] ;
27 -> 28 ;
29 [label="gini = 0.0\nsamples = 5\nvalue = [0, 5]\nclass = Malicious"] ;
27 -> 29 ;
30 [label="expressionsequence-expression_statement <= 0.5\ngini = 0.002\nsamples = 1100\nvalue = [1, 1099]\nclass = Malicious"] ;
24 -> 30 ;
31 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
30 -> 31 ;
32 [label="gini = 0.0\nsamples = 1099\nvalue = [0, 1099]\nclass = Malicious"] ;
30 -> 32 ;
33 [label="assignmentoperator-expression_statement <= 0.5\ngini = 0.397\nsamples = 11\nvalue = [3, 8]\nclass = Malicious"] ;
15 -> 33 ;
34 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
33 -> 34 ;
35 [label="gini = 0.0\nsamples = 8\nvalue = [0, 8]\nclass = Malicious"] ;
33 -> 35 ;
36 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
14 -> 36 ;
37 [label="expressionstatement-expressionsequence <= 0.5\ngini = 0.282\nsamples = 59\nvalue = [10, 49]\nclass = Malicious"] ;
13 -> 37 ;
38 [label="gini = 0.0\nsamples = 10\nvalue = [10, 0]\nclass = Benign"] ;
37 -> 38 ;
39 [label="gini = 0.0\nsamples = 49\nvalue = [0, 49]\nclass = Malicious"] ;
37 -> 39 ;
40 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
12 -> 40 ;
41 [label="expression_statement-expressionstatement <= 0.5\ngini = 0.499\nsamples = 272\nvalue = [130, 142]\nclass = Malicious"] ;
11 -> 41 ;
42 [label="numericliteral-variable_stuff <= 0.5\ngini = 0.138\nsamples = 121\nvalue = [112, 9]\nclass = Benign"] ;
41 -> 42 ;
43 [label="gini = 0.0\nsamples = 108\nvalue = [108, 0]\nclass = Benign"] ;
42 -> 43 ;
44 [label="literal-expressionstatement <= 0.5\ngini = 0.426\nsamples = 13\nvalue = [4, 9]\nclass = Malicious"] ;
42 -> 44 ;
45 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
44 -> 45 ;
46 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.18\nsamples = 10\nvalue = [1, 9]\nclass = Malicious"] ;
44 -> 46 ;
47 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
46 -> 47 ;
48 [label="gini = 0.0\nsamples = 9\nvalue = [0, 9]\nclass = Malicious"] ;
46 -> 48 ;
49 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.21\nsamples = 151\nvalue = [18, 133]\nclass = Malicious"] ;
41 -> 49 ;
50 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
49 -> 50 ;
51 [label="literal-variable_stuff <= 0.5\ngini = 0.057\nsamples = 137\nvalue = [4, 133]\nclass = Malicious"] ;
49 -> 51 ;
52 [label="sourceElement_stuff-variable_stuff <= 0.5\ngini = 0.015\nsamples = 134\nvalue = [1, 133]\nclass = Malicious"] ;
51 -> 52 ;
53 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
52 -> 53 ;
54 [label="gini = 0.0\nsamples = 133\nvalue = [0, 133]\nclass = Malicious"] ;
52 -> 54 ;
55 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
51 -> 55 ;
56 [label="gini = 0.0\nsamples = 110\nvalue = [110, 0]\nclass = Benign"] ;
10 -> 56 ;
57 [label="argument_stuff-identifiername <= 0.5\ngini = 0.454\nsamples = 2094\nvalue = [1365, 729]\nclass = Benign"] ;
3 -> 57 ;
58 [label="numericliteral-variable_stuff <= 0.5\ngini = 0.333\nsamples = 1699\nvalue = [1341, 358]\nclass = Benign"] ;
57 -> 58 ;
59 [label="numericliteral-expressionstatement <= 0.5\ngini = 0.165\nsamples = 1426\nvalue = [1297, 129]\nclass = Benign"] ;
58 -> 59 ;
60 [label="expression_statement-assignmentoperator <= 0.5\ngini = 0.017\nsamples = 1190\nvalue = [1180, 10]\nclass = Benign"] ;
59 -> 60 ;
61 [label="gini = 0.0\nsamples = 1177\nvalue = [1177, 0]\nclass = Benign"] ;
60 -> 61 ;
62 [label="returnstatement-expressionsequence <= 0.5\ngini = 0.355\nsamples = 13\nvalue = [3, 10]\nclass = Malicious"] ;
60 -> 62 ;
63 [label="identifiername-argument_stuff <= 0.5\ngini = 0.165\nsamples = 11\nvalue = [1, 10]\nclass = Malicious"] ;
62 -> 63 ;
64 [label="gini = 0.0\nsamples = 10\nvalue = [0, 10]\nclass = Malicious"] ;
63 -> 64 ;
65 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
63 -> 65 ;
66 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
62 -> 66 ;
67 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.5\nsamples = 236\nvalue = [117, 119]\nclass = Malicious"] ;
59 -> 67 ;
68 [label="gini = 0.0\nsamples = 63\nvalue = [63, 0]\nclass = Benign"] ;
67 -> 68 ;
69 [label="literal-expressionstatement <= 0.5\ngini = 0.429\nsamples = 173\nvalue = [54, 119]\nclass = Malicious"] ;
67 -> 69 ;
70 [label="gini = 0.0\nsamples = 41\nvalue = [41, 0]\nclass = Benign"] ;
69 -> 70 ;
71 [label="expression_statement-sourceElement_stuff <= 0.5\ngini = 0.178\nsamples = 132\nvalue = [13, 119]\nclass = Malicious"] ;
69 -> 71 ;
72 [label="gini = 0.0\nsamples = 119\nvalue = [0, 119]\nclass = Malicious"] ;
71 -> 72 ;
73 [label="gini = 0.0\nsamples = 13\nvalue = [13, 0]\nclass = Benign"] ;
71 -> 73 ;
74 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.27\nsamples = 273\nvalue = [44, 229]\nclass = Malicious"] ;
58 -> 74 ;
75 [label="identifiername-expression_statement <= 0.5\ngini = 0.08\nsamples = 239\nvalue = [10, 229]\nclass = Malicious"] ;
74 -> 75 ;
76 [label="gini = 0.0\nsamples = 229\nvalue = [0, 229]\nclass = Malicious"] ;
75 -> 76 ;
77 [label="gini = 0.0\nsamples = 10\nvalue = [10, 0]\nclass = Benign"] ;
75 -> 77 ;
78 [label="gini = 0.0\nsamples = 34\nvalue = [34, 0]\nclass = Benign"] ;
74 -> 78 ;
79 [label="expression_statement-sourceElement_stuff <= 0.5\ngini = 0.114\nsamples = 395\nvalue = [24, 371]\nclass = Malicious"] ;
57 -> 79 ;
80 [label="literal-identifiername <= 0.5\ngini = 0.041\nsamples = 379\nvalue = [8, 371]\nclass = Malicious"] ;
79 -> 80 ;
81 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
80 -> 81 ;
82 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.011\nsamples = 373\nvalue = [2, 371]\nclass = Malicious"] ;
80 -> 82 ;
83 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
82 -> 83 ;
84 [label="gini = 0.0\nsamples = 371\nvalue = [0, 371]\nclass = Malicious"] ;
82 -> 84 ;
85 [label="gini = 0.0\nsamples = 16\nvalue = [16, 0]\nclass = Benign"] ;
79 -> 85 ;
86 [label="sourceElement_stuff-withstatement <= 0.5\ngini = 0.105\nsamples = 7199\nvalue = [399, 6800]\nclass = Malicious"] ;
2 -> 86 ;
87 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.091\nsamples = 7143\nvalue = [343, 6800]\nclass = Malicious"] ;
86 -> 87 ;
88 [label="literal-returnstatement <= 0.5\ngini = 0.403\nsamples = 707\nvalue = [198, 509]\nclass = Malicious"] ;
87 -> 88 ;
89 [label="numericliteral-argument_stuff <= 0.5\ngini = 0.095\nsamples = 180\nvalue = [171, 9]\nclass = Benign"] ;
88 -> 89 ;
90 [label="gini = 0.0\nsamples = 171\nvalue = [171, 0]\nclass = Benign"] ;
89 -> 90 ;
91 [label="gini = 0.0\nsamples = 9\nvalue = [0, 9]\nclass = Malicious"] ;
89 -> 91 ;
92 [label="varmodifier-variable_stuff <= 0.5\ngini = 0.097\nsamples = 527\nvalue = [27, 500]\nclass = Malicious"] ;
88 -> 92 ;
93 [label="gini = 0.0\nsamples = 500\nvalue = [0, 500]\nclass = Malicious"] ;
92 -> 93 ;
94 [label="gini = 0.0\nsamples = 27\nvalue = [27, 0]\nclass = Benign"] ;
92 -> 94 ;
95 [label="litereral_stuff-expressionstatement <= 0.5\ngini = 0.044\nsamples = 6436\nvalue = [145, 6291]\nclass = Malicious"] ;
87 -> 95 ;
96 [label="argument_stuff-ifstatement <= 0.5\ngini = 0.034\nsamples = 6402\nvalue = [111, 6291]\nclass = Malicious"] ;
95 -> 96 ;
97 [label="variable_stuff-expressionsequence <= 0.5\ngini = 0.029\nsamples = 6384\nvalue = [94, 6290]\nclass = Malicious"] ;
96 -> 97 ;
98 [label="numericliteral-identifiername <= 0.5\ngini = 0.025\nsamples = 6372\nvalue = [82, 6290]\nclass = Malicious"] ;
97 -> 98 ;
99 [label="argument_stuff-expression_statement <= 0.5\ngini = 0.017\nsamples = 6269\nvalue = [55, 6214]\nclass = Malicious"] ;
98 -> 99 ;
100 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
99 -> 100 ;
101 [label="formalParameterArg_stuff-formalParameterArg_stuff <= 0.5\ngini = 0.016\nsamples = 6263\nvalue = [49, 6214]\nclass = Malicious"] ;
99 -> 101 ;
102 [label="litereral_stuff-expressionsequence <= 0.5\ngini = 0.013\nsamples = 6233\nvalue = [40, 6193]\nclass = Malicious"] ;
101 -> 102 ;
103 [label="numericliteral-ifstatement <= 0.5\ngini = 0.012\nsamples = 6231\nvalue = [38, 6193]\nclass = Malicious"] ;
102 -> 103 ;
104 [label="returnstatement-expressionstatement <= 0.5\ngini = 0.009\nsamples = 6188\nvalue = [29, 6159]\nclass = Malicious"] ;
103 -> 104 ;
105 [label="litereral_stuff-identifiername <= 0.5\ngini = 0.009\nsamples = 6187\nvalue = [28, 6159]\nclass = Malicious"] ;
104 -> 105 ;
106 [label="returnstatement-ifstatement <= 0.5\ngini = 0.009\nsamples = 6186\nvalue = [27, 6159]\nclass = Malicious"] ;
105 -> 106 ;
107 [label="expression_statement-ifstatement <= 0.5\ngini = 0.008\nsamples = 6185\nvalue = [26, 6159]\nclass = Malicious"] ;
106 -> 107 ;
108 [label="expression_statement-sourceElement_stuff <= 0.5\ngini = 0.008\nsamples = 6177\nvalue = [24, 6153]\nclass = Malicious"] ;
107 -> 108 ;
109 [label="identifiername-variable_stuff <= 0.5\ngini = 0.003\nsamples = 5601\nvalue = [8, 5593]\nclass = Malicious"] ;
108 -> 109 ;
110 [label="ifstatement-expressionsequence <= 0.5\ngini = 0.002\nsamples = 5594\nvalue = [7, 5587]\nclass = Malicious"] ;
109 -> 110 ;
111 [label="identifiername-expressionstatement <= 0.5\ngini = 0.011\nsamples = 1077\nvalue = [6, 1071]\nclass = Malicious"] ;
110 -> 111 ;
112 [label="argument_stuff-expressionstatement <= 0.5\ngini = 0.009\nsamples = 1075\nvalue = [5, 1070]\nclass = Malicious"] ;
111 -> 112 ;
113 [label="literal-expressionsequence <= 0.5\ngini = 0.006\nsamples = 1061\nvalue = [3, 1058]\nclass = Malicious"] ;
112 -> 113 ;
114 [label="identifiername-argument_stuff <= 0.5\ngini = 0.004\nsamples = 1058\nvalue = [2, 1056]\nclass = Malicious"] ;
113 -> 114 ;
115 [label="variable_stuff-varmodifier <= 0.5\ngini = 0.111\nsamples = 17\nvalue = [1, 16]\nclass = Malicious"] ;
114 -> 115 ;
116 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
115 -> 116 ;
117 [label="gini = 0.0\nsamples = 16\nvalue = [0, 16]\nclass = Malicious"] ;
115 -> 117 ;
118 [label="identifiername-expression_statement <= 0.5\ngini = 0.002\nsamples = 1041\nvalue = [1, 1040]\nclass = Malicious"] ;
114 -> 118 ;
119 [label="gini = 0.0\nsamples = 939\nvalue = [0, 939]\nclass = Malicious"] ;
118 -> 119 ;
120 [label="literal-variable_stuff <= 0.5\ngini = 0.019\nsamples = 102\nvalue = [1, 101]\nclass = Malicious"] ;
118 -> 120 ;
121 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
120 -> 121 ;
122 [label="gini = 0.0\nsamples = 101\nvalue = [0, 101]\nclass = Malicious"] ;
120 -> 122 ;
123 [label="litereral_stuff-element_stuff <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
113 -> 123 ;
124 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
123 -> 124 ;
125 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
123 -> 125 ;
126 [label="litereral_stuff-element_stuff <= 0.5\ngini = 0.245\nsamples = 14\nvalue = [2, 12]\nclass = Malicious"] ;
112 -> 126 ;
127 [label="identifiername-argument_stuff <= 0.5\ngini = 0.142\nsamples = 13\nvalue = [1, 12]\nclass = Malicious"] ;
126 -> 127 ;
128 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
127 -> 128 ;
129 [label="gini = 0.0\nsamples = 12\nvalue = [0, 12]\nclass = Malicious"] ;
127 -> 129 ;
130 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
126 -> 130 ;
131 [label="identifiername-expression_statement <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
111 -> 131 ;
132 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
131 -> 132 ;
133 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
131 -> 133 ;
134 [label="expression_statement-variable_stuff <= 0.5\ngini = 0.0\nsamples = 4517\nvalue = [1, 4516]\nclass = Malicious"] ;
110 -> 134 ;
135 [label="gini = 0.0\nsamples = 4204\nvalue = [0, 4204]\nclass = Malicious"] ;
134 -> 135 ;
136 [label="expression_statement-litereral_stuff <= 0.5\ngini = 0.006\nsamples = 313\nvalue = [1, 312]\nclass = Malicious"] ;
134 -> 136 ;
137 [label="sourceElement_stuff-sourceElement_stuff <= 0.5\ngini = 0.278\nsamples = 6\nvalue = [1, 5]\nclass = Malicious"] ;
136 -> 137 ;
138 [label="gini = 0.0\nsamples = 5\nvalue = [0, 5]\nclass = Malicious"] ;
137 -> 138 ;
139 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
137 -> 139 ;
140 [label="gini = 0.0\nsamples = 307\nvalue = [0, 307]\nclass = Malicious"] ;
136 -> 140 ;
141 [label="argument_stuff-expressionstatement <= 0.5\ngini = 0.245\nsamples = 7\nvalue = [1, 6]\nclass = Malicious"] ;
109 -> 141 ;
142 [label="gini = 0.0\nsamples = 6\nvalue = [0, 6]\nclass = Malicious"] ;
141 -> 142 ;
143 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
141 -> 143 ;
144 [label="literal-variable_stuff <= 0.5\ngini = 0.054\nsamples = 576\nvalue = [16, 560]\nclass = Malicious"] ;
108 -> 144 ;
145 [label="numericliteral-argument_stuff <= 0.5\ngini = 0.117\nsamples = 16\nvalue = [15, 1]\nclass = Benign"] ;
144 -> 145 ;
146 [label="gini = 0.0\nsamples = 15\nvalue = [15, 0]\nclass = Benign"] ;
145 -> 146 ;
147 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
145 -> 147 ;
148 [label="literal-expressionstatement <= 0.5\ngini = 0.004\nsamples = 560\nvalue = [1, 559]\nclass = Malicious"] ;
144 -> 148 ;
149 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
148 -> 149 ;
150 [label="gini = 0.0\nsamples = 559\nvalue = [0, 559]\nclass = Malicious"] ;
148 -> 150 ;
151 [label="sourceElement_stuff-expressionstatement <= 0.5\ngini = 0.375\nsamples = 8\nvalue = [2, 6]\nclass = Malicious"] ;
107 -> 151 ;
152 [label="gini = 0.0\nsamples = 6\nvalue = [0, 6]\nclass = Malicious"] ;
151 -> 152 ;
153 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
151 -> 153 ;
154 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
106 -> 154 ;
155 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
105 -> 155 ;
156 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
104 -> 156 ;
157 [label="expression_statement-sourceElement_stuff <= 0.5\ngini = 0.331\nsamples = 43\nvalue = [9, 34]\nclass = Malicious"] ;
103 -> 157 ;
158 [label="gini = 0.0\nsamples = 34\nvalue = [0, 34]\nclass = Malicious"] ;
157 -> 158 ;
159 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
157 -> 159 ;
160 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
102 -> 160 ;
161 [label="literal-numericliteral <= 0.5\ngini = 0.42\nsamples = 30\nvalue = [9, 21]\nclass = Malicious"] ;
101 -> 161 ;
162 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
161 -> 162 ;
163 [label="gini = 0.0\nsamples = 21\nvalue = [0, 21]\nclass = Malicious"] ;
161 -> 163 ;
164 [label="numericliteral-continue_break_statement <= 0.5\ngini = 0.387\nsamples = 103\nvalue = [27, 76]\nclass = Malicious"] ;
98 -> 164 ;
165 [label="continue_break_statement-trystatement <= 0.5\ngini = 0.069\nsamples = 28\nvalue = [27, 1]\nclass = Benign"] ;
164 -> 165 ;
166 [label="gini = 0.0\nsamples = 27\nvalue = [27, 0]\nclass = Benign"] ;
165 -> 166 ;
167 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
165 -> 167 ;
168 [label="gini = 0.0\nsamples = 75\nvalue = [0, 75]\nclass = Malicious"] ;
164 -> 168 ;
169 [label="gini = 0.0\nsamples = 12\nvalue = [12, 0]\nclass = Benign"] ;
97 -> 169 ;
170 [label="do_for_while_statement-varmodifier <= 0.5\ngini = 0.105\nsamples = 18\nvalue = [17, 1]\nclass = Benign"] ;
96 -> 170 ;
171 [label="gini = 0.0\nsamples = 17\nvalue = [17, 0]\nclass = Benign"] ;
170 -> 171 ;
172 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
170 -> 172 ;
173 [label="gini = 0.0\nsamples = 34\nvalue = [34, 0]\nclass = Benign"] ;
95 -> 173 ;
174 [label="gini = 0.0\nsamples = 56\nvalue = [56, 0]\nclass = Benign"] ;
86 -> 174 ;
175 [label="literal-trystatement <= 0.5\ngini = 0.185\nsamples = 1341\nvalue = [1203, 138]\nclass = Benign"] ;
1 -> 175 ;
176 [label="continue_break_statement-catchproduction <= 0.5\ngini = 0.008\nsamples = 1208\nvalue = [1203, 5]\nclass = Benign"] ;
175 -> 176 ;
177 [label="argument_stuff-switchstatement <= 0.5\ngini = 0.005\nsamples = 1206\nvalue = [1203, 3]\nclass = Benign"] ;
176 -> 177 ;
178 [label="expression_statement-assignmentoperator <= 0.5\ngini = 0.003\nsamples = 1205\nvalue = [1203, 2]\nclass = Benign"] ;
177 -> 178 ;
179 [label="argument_stuff-variable_stuff <= 0.5\ngini = 0.002\nsamples = 1200\nvalue = [1199, 1]\nclass = Benign"] ;
178 -> 179 ;
180 [label="gini = 0.0\nsamples = 1151\nvalue = [1151, 0]\nclass = Benign"] ;
179 -> 180 ;
181 [label="literal-expression_statement <= 0.5\ngini = 0.04\nsamples = 49\nvalue = [48, 1]\nclass = Benign"] ;
179 -> 181 ;
182 [label="litereral_stuff-element_stuff <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
181 -> 182 ;
183 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
182 -> 183 ;
184 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
182 -> 184 ;
185 [label="gini = 0.0\nsamples = 47\nvalue = [47, 0]\nclass = Benign"] ;
181 -> 185 ;
186 [label="literal-expressionstatement <= 0.5\ngini = 0.32\nsamples = 5\nvalue = [4, 1]\nclass = Benign"] ;
178 -> 186 ;
187 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
186 -> 187 ;
188 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
186 -> 188 ;
189 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
177 -> 189 ;
190 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
176 -> 190 ;
191 [label="gini = 0.0\nsamples = 133\nvalue = [0, 133]\nclass = Malicious"] ;
175 -> 191 ;
192 [label="do_for_while_statement-expressionsequence <= 0.5\ngini = 0.254\nsamples = 10375\nvalue = [8829, 1546]\nclass = Benign"] ;
0 -> 192 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
193 [label="finallyproduction-expressionstatement <= 0.5\ngini = 0.007\nsamples = 8820\nvalue = [8789, 31]\nclass = Benign"] ;
192 -> 193 ;
194 [label="expression_statement-catchproduction <= 0.5\ngini = 0.001\nsamples = 8792\nvalue = [8789, 3]\nclass = Benign"] ;
193 -> 194 ;
195 [label="gini = 0.0\nsamples = 8779\nvalue = [8779, 0]\nclass = Benign"] ;
194 -> 195 ;
196 [label="literal-argument_stuff <= 0.5\ngini = 0.355\nsamples = 13\nvalue = [10, 3]\nclass = Benign"] ;
194 -> 196 ;
197 [label="gini = 0.0\nsamples = 10\nvalue = [10, 0]\nclass = Benign"] ;
196 -> 197 ;
198 [label="gini = 0.0\nsamples = 3\nvalue = [0, 3]\nclass = Malicious"] ;
196 -> 198 ;
199 [label="gini = 0.0\nsamples = 28\nvalue = [0, 28]\nclass = Malicious"] ;
193 -> 199 ;
200 [label="identifiername-returnstatement <= 0.5\ngini = 0.05\nsamples = 1555\nvalue = [40, 1515]\nclass = Malicious"] ;
192 -> 200 ;
201 [label="expression_statement-property_rules <= 0.5\ngini = 0.009\nsamples = 1522\nvalue = [7, 1515]\nclass = Malicious"] ;
200 -> 201 ;
202 [label="numericliteral-property_rules <= 0.5\ngini = 0.001\nsamples = 1516\nvalue = [1, 1515]\nclass = Malicious"] ;
201 -> 202 ;
203 [label="gini = 0.0\nsamples = 1515\nvalue = [0, 1515]\nclass = Malicious"] ;
202 -> 203 ;
204 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
202 -> 204 ;
205 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
201 -> 205 ;
206 [label="gini = 0.0\nsamples = 33\nvalue = [33, 0]\nclass = Benign"] ;
200 -> 206 ;
}
