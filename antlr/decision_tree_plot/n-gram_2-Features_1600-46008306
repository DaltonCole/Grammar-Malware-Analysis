digraph Tree {
node [shape=box] ;
0 [label="litereral_stuff-property_rules <= 0.5\ngini = 0.5\nsamples = 27000\nvalue = [13489, 13511]\nclass = Malicious"] ;
1 [label="identifiername-identifiername <= 0.5\ngini = 0.404\nsamples = 16633\nvalue = [4671, 11962]\nclass = Malicious"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="expression_statement-expressionsequence <= 0.5\ngini = 0.35\nsamples = 15278\nvalue = [3451, 11827]\nclass = Malicious"] ;
1 -> 2 ;
3 [label="sourceElement_stuff-expressionstatement <= 0.5\ngini = 0.471\nsamples = 8045\nvalue = [3051, 4994]\nclass = Malicious"] ;
2 -> 3 ;
4 [label="argument_stuff-expression_statement <= 0.5\ngini = 0.408\nsamples = 5973\nvalue = [1702, 4271]\nclass = Malicious"] ;
3 -> 4 ;
5 [label="variable_stuff-varmodifier <= 0.5\ngini = 0.49\nsamples = 3285\nvalue = [1405, 1880]\nclass = Malicious"] ;
4 -> 5 ;
6 [label="expressionstatement-expressionsequence <= 0.5\ngini = 0.384\nsamples = 2539\nvalue = [659, 1880]\nclass = Malicious"] ;
5 -> 6 ;
7 [label="gini = 0.381\nsamples = 2527\nvalue = [647, 1880]\nclass = Malicious"] ;
6 -> 7 ;
8 [label="gini = 0.0\nsamples = 12\nvalue = [12, 0]\nclass = Benign"] ;
6 -> 8 ;
9 [label="gini = 0.0\nsamples = 746\nvalue = [746, 0]\nclass = Benign"] ;
5 -> 9 ;
10 [label="withstatement-expressionsequence <= 0.5\ngini = 0.197\nsamples = 2688\nvalue = [297, 2391]\nclass = Malicious"] ;
4 -> 10 ;
11 [label="expression_statement-identifiername <= 0.5\ngini = 0.133\nsamples = 2575\nvalue = [184, 2391]\nclass = Malicious"] ;
10 -> 11 ;
12 [label="trystatement-expressionstatement <= 0.5\ngini = 0.041\nsamples = 2293\nvalue = [48, 2245]\nclass = Malicious"] ;
11 -> 12 ;
13 [label="expression_statement-variable_stuff <= 0.5\ngini = 0.039\nsamples = 2290\nvalue = [45, 2245]\nclass = Malicious"] ;
12 -> 13 ;
14 [label="numericliteral-expression_statement <= 0.5\ngini = 0.031\nsamples = 2236\nvalue = [35, 2201]\nclass = Malicious"] ;
13 -> 14 ;
15 [label="sourceElement_stuff-sourceElement_stuff <= 0.5\ngini = 0.029\nsamples = 2234\nvalue = [33, 2201]\nclass = Malicious"] ;
14 -> 15 ;
16 [label="literal-expressionstatement <= 0.5\ngini = 0.027\nsamples = 2221\nvalue = [30, 2191]\nclass = Malicious"] ;
15 -> 16 ;
17 [label="literal-expression_statement <= 0.5\ngini = 0.005\nsamples = 1098\nvalue = [3, 1095]\nclass = Malicious"] ;
16 -> 17 ;
18 [label="gini = 0.0\nsamples = 1095\nvalue = [0, 1095]\nclass = Malicious"] ;
17 -> 18 ;
19 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
17 -> 19 ;
20 [label="literal-expression_statement <= 0.5\ngini = 0.047\nsamples = 1123\nvalue = [27, 1096]\nclass = Malicious"] ;
16 -> 20 ;
21 [label="assignmentoperator-expression_statement <= 0.5\ngini = 0.327\nsamples = 34\nvalue = [27, 7]\nclass = Benign"] ;
20 -> 21 ;
22 [label="identifiername-argument_stuff <= 0.5\ngini = 0.069\nsamples = 28\nvalue = [27, 1]\nclass = Benign"] ;
21 -> 22 ;
23 [label="gini = 0.0\nsamples = 27\nvalue = [27, 0]\nclass = Benign"] ;
22 -> 23 ;
24 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
22 -> 24 ;
25 [label="gini = 0.0\nsamples = 6\nvalue = [0, 6]\nclass = Malicious"] ;
21 -> 25 ;
26 [label="gini = 0.0\nsamples = 1089\nvalue = [0, 1089]\nclass = Malicious"] ;
20 -> 26 ;
27 [label="expression_statement-assignmentoperator <= 0.5\ngini = 0.355\nsamples = 13\nvalue = [3, 10]\nclass = Malicious"] ;
15 -> 27 ;
28 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
27 -> 28 ;
29 [label="gini = 0.0\nsamples = 10\nvalue = [0, 10]\nclass = Malicious"] ;
27 -> 29 ;
30 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
14 -> 30 ;
31 [label="expressionstatement-expressionsequence <= 0.5\ngini = 0.302\nsamples = 54\nvalue = [10, 44]\nclass = Malicious"] ;
13 -> 31 ;
32 [label="gini = 0.0\nsamples = 10\nvalue = [10, 0]\nclass = Benign"] ;
31 -> 32 ;
33 [label="gini = 0.0\nsamples = 44\nvalue = [0, 44]\nclass = Malicious"] ;
31 -> 33 ;
34 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
12 -> 34 ;
35 [label="expression_statement-expressionstatement <= 0.5\ngini = 0.499\nsamples = 282\nvalue = [136, 146]\nclass = Malicious"] ;
11 -> 35 ;
36 [label="numericliteral-variable_stuff <= 0.5\ngini = 0.118\nsamples = 127\nvalue = [119, 8]\nclass = Benign"] ;
35 -> 36 ;
37 [label="gini = 0.0\nsamples = 116\nvalue = [116, 0]\nclass = Benign"] ;
36 -> 37 ;
38 [label="literal-expressionstatement <= 0.5\ngini = 0.397\nsamples = 11\nvalue = [3, 8]\nclass = Malicious"] ;
36 -> 38 ;
39 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
38 -> 39 ;
40 [label="numericliteral-ifstatement <= 0.5\ngini = 0.198\nsamples = 9\nvalue = [1, 8]\nclass = Malicious"] ;
38 -> 40 ;
41 [label="gini = 0.0\nsamples = 8\nvalue = [0, 8]\nclass = Malicious"] ;
40 -> 41 ;
42 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
40 -> 42 ;
43 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.195\nsamples = 155\nvalue = [17, 138]\nclass = Malicious"] ;
35 -> 43 ;
44 [label="gini = 0.0\nsamples = 12\nvalue = [12, 0]\nclass = Benign"] ;
43 -> 44 ;
45 [label="sourceElement_stuff-ifstatement <= 0.5\ngini = 0.067\nsamples = 143\nvalue = [5, 138]\nclass = Malicious"] ;
43 -> 45 ;
46 [label="argument_stuff-expressionstatement <= 0.5\ngini = 0.028\nsamples = 140\nvalue = [2, 138]\nclass = Malicious"] ;
45 -> 46 ;
47 [label="gini = 0.0\nsamples = 138\nvalue = [0, 138]\nclass = Malicious"] ;
46 -> 47 ;
48 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
46 -> 48 ;
49 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
45 -> 49 ;
50 [label="gini = 0.0\nsamples = 113\nvalue = [113, 0]\nclass = Benign"] ;
10 -> 50 ;
51 [label="argument_stuff-identifiername <= 0.5\ngini = 0.454\nsamples = 2072\nvalue = [1349, 723]\nclass = Benign"] ;
3 -> 51 ;
52 [label="numericliteral-variable_stuff <= 0.5\ngini = 0.335\nsamples = 1685\nvalue = [1326, 359]\nclass = Benign"] ;
51 -> 52 ;
53 [label="numericliteral-expressionstatement <= 0.5\ngini = 0.174\nsamples = 1422\nvalue = [1285, 137]\nclass = Benign"] ;
52 -> 53 ;
54 [label="expression_statement-assignmentoperator <= 0.5\ngini = 0.018\nsamples = 1187\nvalue = [1176, 11]\nclass = Benign"] ;
53 -> 54 ;
55 [label="gini = 0.0\nsamples = 1174\nvalue = [1174, 0]\nclass = Benign"] ;
54 -> 55 ;
56 [label="literal-identifiername <= 0.5\ngini = 0.26\nsamples = 13\nvalue = [2, 11]\nclass = Malicious"] ;
54 -> 56 ;
57 [label="literal-returnstatement <= 0.5\ngini = 0.153\nsamples = 12\nvalue = [1, 11]\nclass = Malicious"] ;
56 -> 57 ;
58 [label="gini = 0.0\nsamples = 11\nvalue = [0, 11]\nclass = Malicious"] ;
57 -> 58 ;
59 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
57 -> 59 ;
60 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
56 -> 60 ;
61 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.497\nsamples = 235\nvalue = [109, 126]\nclass = Malicious"] ;
53 -> 61 ;
62 [label="gini = 0.0\nsamples = 58\nvalue = [58, 0]\nclass = Benign"] ;
61 -> 62 ;
63 [label="sourceElement_stuff-sourceElement_stuff <= 0.5\ngini = 0.41\nsamples = 177\nvalue = [51, 126]\nclass = Malicious"] ;
61 -> 63 ;
64 [label="literal-expressionstatement <= 0.5\ngini = 0.18\nsamples = 140\nvalue = [14, 126]\nclass = Malicious"] ;
63 -> 64 ;
65 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
64 -> 65 ;
66 [label="gini = 0.0\nsamples = 126\nvalue = [0, 126]\nclass = Malicious"] ;
64 -> 66 ;
67 [label="gini = 0.0\nsamples = 37\nvalue = [37, 0]\nclass = Benign"] ;
63 -> 67 ;
68 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.263\nsamples = 263\nvalue = [41, 222]\nclass = Malicious"] ;
52 -> 68 ;
69 [label="identifiername-expression_statement <= 0.5\ngini = 0.082\nsamples = 232\nvalue = [10, 222]\nclass = Malicious"] ;
68 -> 69 ;
70 [label="gini = 0.0\nsamples = 222\nvalue = [0, 222]\nclass = Malicious"] ;
69 -> 70 ;
71 [label="gini = 0.0\nsamples = 10\nvalue = [10, 0]\nclass = Benign"] ;
69 -> 71 ;
72 [label="gini = 0.0\nsamples = 31\nvalue = [31, 0]\nclass = Benign"] ;
68 -> 72 ;
73 [label="literal-expression_statement <= 0.5\ngini = 0.112\nsamples = 387\nvalue = [23, 364]\nclass = Malicious"] ;
51 -> 73 ;
74 [label="expression_statement-sourceElement_stuff <= 0.5\ngini = 0.037\nsamples = 371\nvalue = [7, 364]\nclass = Malicious"] ;
73 -> 74 ;
75 [label="expression_statement-literal <= 0.5\ngini = 0.016\nsamples = 367\nvalue = [3, 364]\nclass = Malicious"] ;
74 -> 75 ;
76 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
75 -> 76 ;
77 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.005\nsamples = 365\nvalue = [1, 364]\nclass = Malicious"] ;
75 -> 77 ;
78 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
77 -> 78 ;
79 [label="gini = 0.0\nsamples = 364\nvalue = [0, 364]\nclass = Malicious"] ;
77 -> 79 ;
80 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
74 -> 80 ;
81 [label="gini = 0.0\nsamples = 16\nvalue = [16, 0]\nclass = Benign"] ;
73 -> 81 ;
82 [label="litereral_stuff-expressionstatement <= 0.5\ngini = 0.104\nsamples = 7233\nvalue = [400, 6833]\nclass = Malicious"] ;
2 -> 82 ;
83 [label="sourceElement_stuff-withstatement <= 0.5\ngini = 0.092\nsamples = 7181\nvalue = [348, 6833]\nclass = Malicious"] ;
82 -> 83 ;
84 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.08\nsamples = 7129\nvalue = [296, 6833]\nclass = Malicious"] ;
83 -> 84 ;
85 [label="literal-returnstatement <= 0.5\ngini = 0.394\nsamples = 675\nvalue = [182, 493]\nclass = Malicious"] ;
84 -> 85 ;
86 [label="argument_stuff-expressionstatement <= 0.5\ngini = 0.113\nsamples = 166\nvalue = [156, 10]\nclass = Benign"] ;
85 -> 86 ;
87 [label="gini = 0.0\nsamples = 156\nvalue = [156, 0]\nclass = Benign"] ;
86 -> 87 ;
88 [label="gini = 0.0\nsamples = 10\nvalue = [0, 10]\nclass = Malicious"] ;
86 -> 88 ;
89 [label="identifiername-expression_statement <= 0.5\ngini = 0.097\nsamples = 509\nvalue = [26, 483]\nclass = Malicious"] ;
85 -> 89 ;
90 [label="gini = 0.0\nsamples = 483\nvalue = [0, 483]\nclass = Malicious"] ;
89 -> 90 ;
91 [label="gini = 0.0\nsamples = 26\nvalue = [26, 0]\nclass = Benign"] ;
89 -> 91 ;
92 [label="formalParameterArg_stuff-formalParameterArg_stuff <= 0.5\ngini = 0.035\nsamples = 6454\nvalue = [114, 6340]\nclass = Malicious"] ;
84 -> 92 ;
93 [label="argument_stuff-ifstatement <= 0.5\ngini = 0.026\nsamples = 6404\nvalue = [85, 6319]\nclass = Malicious"] ;
92 -> 93 ;
94 [label="numericliteral-identifiername <= 0.5\ngini = 0.021\nsamples = 6387\nvalue = [69, 6318]\nclass = Malicious"] ;
93 -> 94 ;
95 [label="argument_stuff-expression_statement <= 0.5\ngini = 0.013\nsamples = 6279\nvalue = [42, 6237]\nclass = Malicious"] ;
94 -> 95 ;
96 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
95 -> 96 ;
97 [label="litereral_stuff-expressionsequence <= 0.5\ngini = 0.012\nsamples = 6274\nvalue = [37, 6237]\nclass = Malicious"] ;
95 -> 97 ;
98 [label="returnstatement-expressionstatement <= 0.5\ngini = 0.011\nsamples = 6272\nvalue = [35, 6237]\nclass = Malicious"] ;
97 -> 98 ;
99 [label="numericliteral-ifstatement <= 0.5\ngini = 0.01\nsamples = 6270\nvalue = [33, 6237]\nclass = Malicious"] ;
98 -> 99 ;
100 [label="litereral_stuff-identifiername <= 0.5\ngini = 0.008\nsamples = 6227\nvalue = [25, 6202]\nclass = Malicious"] ;
99 -> 100 ;
101 [label="returnstatement-ifstatement <= 0.5\ngini = 0.008\nsamples = 6226\nvalue = [24, 6202]\nclass = Malicious"] ;
100 -> 101 ;
102 [label="expression_statement-ifstatement <= 0.5\ngini = 0.007\nsamples = 6225\nvalue = [23, 6202]\nclass = Malicious"] ;
101 -> 102 ;
103 [label="expression_statement-sourceElement_stuff <= 0.5\ngini = 0.007\nsamples = 6219\nvalue = [21, 6198]\nclass = Malicious"] ;
102 -> 103 ;
104 [label="identifiername-variable_stuff <= 0.5\ngini = 0.002\nsamples = 5631\nvalue = [7, 5624]\nclass = Malicious"] ;
103 -> 104 ;
105 [label="ifstatement-expressionsequence <= 0.5\ngini = 0.002\nsamples = 5625\nvalue = [6, 5619]\nclass = Malicious"] ;
104 -> 105 ;
106 [label="identifiername-expressionstatement <= 0.5\ngini = 0.009\nsamples = 1064\nvalue = [5, 1059]\nclass = Malicious"] ;
105 -> 106 ;
107 [label="identifiername-argument_stuff <= 0.5\ngini = 0.008\nsamples = 1062\nvalue = [4, 1058]\nclass = Malicious"] ;
106 -> 107 ;
108 [label="literal-expression_statement <= 0.5\ngini = 0.188\nsamples = 19\nvalue = [2, 17]\nclass = Malicious"] ;
107 -> 108 ;
109 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
108 -> 109 ;
110 [label="variable_stuff-expression_statement <= 0.5\ngini = 0.105\nsamples = 18\nvalue = [1, 17]\nclass = Malicious"] ;
108 -> 110 ;
111 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
110 -> 111 ;
112 [label="gini = 0.0\nsamples = 17\nvalue = [0, 17]\nclass = Malicious"] ;
110 -> 112 ;
113 [label="literal-expressionsequence <= 0.5\ngini = 0.004\nsamples = 1043\nvalue = [2, 1041]\nclass = Malicious"] ;
107 -> 113 ;
114 [label="identifiername-expression_statement <= 0.5\ngini = 0.002\nsamples = 1040\nvalue = [1, 1039]\nclass = Malicious"] ;
113 -> 114 ;
115 [label="gini = 0.0\nsamples = 939\nvalue = [0, 939]\nclass = Malicious"] ;
114 -> 115 ;
116 [label="litereral_stuff-element_stuff <= 0.5\ngini = 0.02\nsamples = 101\nvalue = [1, 100]\nclass = Malicious"] ;
114 -> 116 ;
117 [label="gini = 0.0\nsamples = 100\nvalue = [0, 100]\nclass = Malicious"] ;
116 -> 117 ;
118 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
116 -> 118 ;
119 [label="identifiername-expression_statement <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
113 -> 119 ;
120 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
119 -> 120 ;
121 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
119 -> 121 ;
122 [label="expression_statement-expressionstatement <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
106 -> 122 ;
123 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
122 -> 123 ;
124 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
122 -> 124 ;
125 [label="expression_statement-variable_stuff <= 0.5\ngini = 0.0\nsamples = 4561\nvalue = [1, 4560]\nclass = Malicious"] ;
105 -> 125 ;
126 [label="gini = 0.0\nsamples = 4254\nvalue = [0, 4254]\nclass = Malicious"] ;
125 -> 126 ;
127 [label="element_stuff-expression_statement <= 0.5\ngini = 0.006\nsamples = 307\nvalue = [1, 306]\nclass = Malicious"] ;
125 -> 127 ;
128 [label="sourceElement_stuff-sourceElement_stuff <= 0.5\ngini = 0.278\nsamples = 6\nvalue = [1, 5]\nclass = Malicious"] ;
127 -> 128 ;
129 [label="gini = 0.0\nsamples = 5\nvalue = [0, 5]\nclass = Malicious"] ;
128 -> 129 ;
130 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
128 -> 130 ;
131 [label="gini = 0.0\nsamples = 301\nvalue = [0, 301]\nclass = Malicious"] ;
127 -> 131 ;
132 [label="argument_stuff-expressionstatement <= 0.5\ngini = 0.278\nsamples = 6\nvalue = [1, 5]\nclass = Malicious"] ;
104 -> 132 ;
133 [label="gini = 0.0\nsamples = 5\nvalue = [0, 5]\nclass = Malicious"] ;
132 -> 133 ;
134 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
132 -> 134 ;
135 [label="literal-variable_stuff <= 0.5\ngini = 0.046\nsamples = 588\nvalue = [14, 574]\nclass = Malicious"] ;
103 -> 135 ;
136 [label="numericliteral-argument_stuff <= 0.5\ngini = 0.133\nsamples = 14\nvalue = [13, 1]\nclass = Benign"] ;
135 -> 136 ;
137 [label="gini = 0.0\nsamples = 13\nvalue = [13, 0]\nclass = Benign"] ;
136 -> 137 ;
138 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
136 -> 138 ;
139 [label="literal-ifstatement <= 0.5\ngini = 0.003\nsamples = 574\nvalue = [1, 573]\nclass = Malicious"] ;
135 -> 139 ;
140 [label="gini = 0.0\nsamples = 573\nvalue = [0, 573]\nclass = Malicious"] ;
139 -> 140 ;
141 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
139 -> 141 ;
142 [label="numericliteral-variable_stuff <= 0.5\ngini = 0.444\nsamples = 6\nvalue = [2, 4]\nclass = Malicious"] ;
102 -> 142 ;
143 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
142 -> 143 ;
144 [label="gini = 0.0\nsamples = 4\nvalue = [0, 4]\nclass = Malicious"] ;
142 -> 144 ;
145 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
101 -> 145 ;
146 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
100 -> 146 ;
147 [label="variable_stuff-varmodifier <= 0.5\ngini = 0.303\nsamples = 43\nvalue = [8, 35]\nclass = Malicious"] ;
99 -> 147 ;
148 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
147 -> 148 ;
149 [label="gini = 0.0\nsamples = 35\nvalue = [0, 35]\nclass = Malicious"] ;
147 -> 149 ;
150 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
98 -> 150 ;
151 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
97 -> 151 ;
152 [label="numericliteral-continue_break_statement <= 0.5\ngini = 0.375\nsamples = 108\nvalue = [27, 81]\nclass = Malicious"] ;
94 -> 152 ;
153 [label="catchproduction-expressionstatement <= 0.5\ngini = 0.069\nsamples = 28\nvalue = [27, 1]\nclass = Benign"] ;
152 -> 153 ;
154 [label="gini = 0.0\nsamples = 27\nvalue = [27, 0]\nclass = Benign"] ;
153 -> 154 ;
155 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
153 -> 155 ;
156 [label="gini = 0.0\nsamples = 80\nvalue = [0, 80]\nclass = Malicious"] ;
152 -> 156 ;
157 [label="sourceElement_stuff-expressionstatement <= 0.5\ngini = 0.111\nsamples = 17\nvalue = [16, 1]\nclass = Benign"] ;
93 -> 157 ;
158 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
157 -> 158 ;
159 [label="gini = 0.0\nsamples = 16\nvalue = [16, 0]\nclass = Benign"] ;
157 -> 159 ;
160 [label="numericliteral-expressionstatement <= 0.5\ngini = 0.487\nsamples = 50\nvalue = [29, 21]\nclass = Benign"] ;
92 -> 160 ;
161 [label="literal-expression_statement <= 0.5\ngini = 0.284\nsamples = 35\nvalue = [29, 6]\nclass = Benign"] ;
160 -> 161 ;
162 [label="numericliteral-identifiername <= 0.5\ngini = 0.245\nsamples = 7\nvalue = [1, 6]\nclass = Malicious"] ;
161 -> 162 ;
163 [label="gini = 0.0\nsamples = 6\nvalue = [0, 6]\nclass = Malicious"] ;
162 -> 163 ;
164 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
162 -> 164 ;
165 [label="gini = 0.0\nsamples = 28\nvalue = [28, 0]\nclass = Benign"] ;
161 -> 165 ;
166 [label="gini = 0.0\nsamples = 15\nvalue = [0, 15]\nclass = Malicious"] ;
160 -> 166 ;
167 [label="gini = 0.0\nsamples = 52\nvalue = [52, 0]\nclass = Benign"] ;
83 -> 167 ;
168 [label="gini = 0.0\nsamples = 52\nvalue = [52, 0]\nclass = Benign"] ;
82 -> 168 ;
169 [label="literal-trystatement <= 0.5\ngini = 0.179\nsamples = 1355\nvalue = [1220, 135]\nclass = Benign"] ;
1 -> 169 ;
170 [label="continue_break_statement-catchproduction <= 0.5\ngini = 0.008\nsamples = 1224\nvalue = [1219, 5]\nclass = Benign"] ;
169 -> 170 ;
171 [label="numericliteral-clause_stuff <= 0.5\ngini = 0.005\nsamples = 1222\nvalue = [1219, 3]\nclass = Benign"] ;
170 -> 171 ;
172 [label="expression_statement-assignmentoperator <= 0.5\ngini = 0.003\nsamples = 1221\nvalue = [1219, 2]\nclass = Benign"] ;
171 -> 172 ;
173 [label="argument_stuff-variable_stuff <= 0.5\ngini = 0.002\nsamples = 1216\nvalue = [1215, 1]\nclass = Benign"] ;
172 -> 173 ;
174 [label="gini = 0.0\nsamples = 1163\nvalue = [1163, 0]\nclass = Benign"] ;
173 -> 174 ;
175 [label="literal-expression_statement <= 0.5\ngini = 0.037\nsamples = 53\nvalue = [52, 1]\nclass = Benign"] ;
173 -> 175 ;
176 [label="litereral_stuff-element_stuff <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
175 -> 176 ;
177 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
176 -> 177 ;
178 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
176 -> 178 ;
179 [label="gini = 0.0\nsamples = 51\nvalue = [51, 0]\nclass = Benign"] ;
175 -> 179 ;
180 [label="identifiername-expression_statement <= 0.5\ngini = 0.32\nsamples = 5\nvalue = [4, 1]\nclass = Benign"] ;
172 -> 180 ;
181 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
180 -> 181 ;
182 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
180 -> 182 ;
183 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
171 -> 183 ;
184 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
170 -> 184 ;
185 [label="literal-identifiername <= 0.5\ngini = 0.015\nsamples = 131\nvalue = [1, 130]\nclass = Malicious"] ;
169 -> 185 ;
186 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
185 -> 186 ;
187 [label="gini = 0.0\nsamples = 130\nvalue = [0, 130]\nclass = Malicious"] ;
185 -> 187 ;
188 [label="do_for_while_statement-expressionsequence <= 0.5\ngini = 0.254\nsamples = 10367\nvalue = [8818, 1549]\nclass = Benign"] ;
0 -> 188 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
189 [label="literal-finallyproduction <= 0.5\ngini = 0.007\nsamples = 8806\nvalue = [8776, 30]\nclass = Benign"] ;
188 -> 189 ;
190 [label="expression_statement-catchproduction <= 0.5\ngini = 0.001\nsamples = 8779\nvalue = [8776, 3]\nclass = Benign"] ;
189 -> 190 ;
191 [label="gini = 0.0\nsamples = 8766\nvalue = [8766, 0]\nclass = Benign"] ;
190 -> 191 ;
192 [label="identifiername-argument_stuff <= 0.5\ngini = 0.355\nsamples = 13\nvalue = [10, 3]\nclass = Benign"] ;
190 -> 192 ;
193 [label="gini = 0.0\nsamples = 3\nvalue = [0, 3]\nclass = Malicious"] ;
192 -> 193 ;
194 [label="gini = 0.0\nsamples = 10\nvalue = [10, 0]\nclass = Benign"] ;
192 -> 194 ;
195 [label="gini = 0.0\nsamples = 27\nvalue = [0, 27]\nclass = Malicious"] ;
189 -> 195 ;
196 [label="numericliteral-property_rules <= 0.5\ngini = 0.052\nsamples = 1561\nvalue = [42, 1519]\nclass = Malicious"] ;
188 -> 196 ;
197 [label="variable_stuff-ifstatement <= 0.5\ngini = 0.009\nsamples = 1526\nvalue = [7, 1519]\nclass = Malicious"] ;
196 -> 197 ;
198 [label="expression_statement-property_rules <= 0.5\ngini = 0.003\nsamples = 1521\nvalue = [2, 1519]\nclass = Malicious"] ;
197 -> 198 ;
199 [label="gini = 0.0\nsamples = 1519\nvalue = [0, 1519]\nclass = Malicious"] ;
198 -> 199 ;
200 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
198 -> 200 ;
201 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
197 -> 201 ;
202 [label="gini = 0.0\nsamples = 35\nvalue = [35, 0]\nclass = Benign"] ;
196 -> 202 ;
}
