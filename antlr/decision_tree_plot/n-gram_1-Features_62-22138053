digraph Tree {
node [shape=box] ;
0 [label="objectliteral <= 0.5\ngini = 0.5\nsamples = 27000\nvalue = [13528, 13472]\nclass = Benign"] ;
1 [label="numericliteral <= 0.5\ngini = 0.39\nsamples = 16246\nvalue = [4313, 11933]\nclass = Malicious"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="expressionstatement <= 0.5\ngini = 0.485\nsamples = 7290\nvalue = [3016, 4274]\nclass = Malicious"] ;
1 -> 2 ;
3 [label="arguments <= 0.5\ngini = 0.406\nsamples = 3965\nvalue = [1123, 2842]\nclass = Malicious"] ;
2 -> 3 ;
4 [label="variablestatement <= 0.5\ngini = 0.464\nsamples = 2984\nvalue = [1091, 1893]\nclass = Malicious"] ;
3 -> 4 ;
5 [label="gini = 0.389\nsamples = 2572\nvalue = [679, 1893]\nclass = Malicious"] ;
4 -> 5 ;
6 [label="gini = 0.0\nsamples = 412\nvalue = [412, 0]\nclass = Benign"] ;
4 -> 6 ;
7 [label="literal <= 0.5\ngini = 0.063\nsamples = 981\nvalue = [32, 949]\nclass = Malicious"] ;
3 -> 7 ;
8 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
7 -> 8 ;
9 [label="elementlist <= 0.5\ngini = 0.054\nsamples = 976\nvalue = [27, 949]\nclass = Malicious"] ;
7 -> 9 ;
10 [label="varmodifier <= 0.5\ngini = 0.046\nsamples = 972\nvalue = [23, 949]\nclass = Malicious"] ;
9 -> 10 ;
11 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
10 -> 11 ;
12 [label="expressionsequence <= 0.5\ngini = 0.044\nsamples = 971\nvalue = [22, 949]\nclass = Malicious"] ;
10 -> 12 ;
13 [label="identifiername <= 0.5\ngini = 0.086\nsamples = 489\nvalue = [22, 467]\nclass = Malicious"] ;
12 -> 13 ;
14 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
13 -> 14 ;
15 [label="gini = 0.082\nsamples = 488\nvalue = [21, 467]\nclass = Malicious"] ;
13 -> 15 ;
16 [label="gini = 0.0\nsamples = 482\nvalue = [0, 482]\nclass = Malicious"] ;
12 -> 16 ;
17 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
9 -> 17 ;
18 [label="variablestatement <= 0.5\ngini = 0.49\nsamples = 3325\nvalue = [1893, 1432]\nclass = Benign"] ;
2 -> 18 ;
19 [label="functionbody <= 0.5\ngini = 0.353\nsamples = 1896\nvalue = [1462, 434]\nclass = Benign"] ;
18 -> 19 ;
20 [label="identifiername <= 0.5\ngini = 0.424\nsamples = 1424\nvalue = [990, 434]\nclass = Benign"] ;
19 -> 20 ;
21 [label="gini = 0.0\nsamples = 355\nvalue = [355, 0]\nclass = Benign"] ;
20 -> 21 ;
22 [label="arguments <= 0.5\ngini = 0.482\nsamples = 1069\nvalue = [635, 434]\nclass = Benign"] ;
20 -> 22 ;
23 [label="gini = 0.0\nsamples = 152\nvalue = [152, 0]\nclass = Benign"] ;
22 -> 23 ;
24 [label="ifstatement <= 0.5\ngini = 0.499\nsamples = 917\nvalue = [483, 434]\nclass = Benign"] ;
22 -> 24 ;
25 [label="arrayliteral <= 0.5\ngini = 0.5\nsamples = 854\nvalue = [420, 434]\nclass = Malicious"] ;
24 -> 25 ;
26 [label="literal <= 0.5\ngini = 0.496\nsamples = 796\nvalue = [362, 434]\nclass = Malicious"] ;
25 -> 26 ;
27 [label="gini = 0.0\nsamples = 21\nvalue = [21, 0]\nclass = Benign"] ;
26 -> 27 ;
28 [label="statementlist <= 0.5\ngini = 0.493\nsamples = 775\nvalue = [341, 434]\nclass = Malicious"] ;
26 -> 28 ;
29 [label="gini = 0.492\nsamples = 772\nvalue = [338, 434]\nclass = Malicious"] ;
28 -> 29 ;
30 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
28 -> 30 ;
31 [label="gini = 0.0\nsamples = 58\nvalue = [58, 0]\nclass = Benign"] ;
25 -> 31 ;
32 [label="gini = 0.0\nsamples = 63\nvalue = [63, 0]\nclass = Benign"] ;
24 -> 32 ;
33 [label="gini = 0.0\nsamples = 472\nvalue = [472, 0]\nclass = Benign"] ;
19 -> 33 ;
34 [label="identifiername <= 0.5\ngini = 0.421\nsamples = 1429\nvalue = [431, 998]\nclass = Malicious"] ;
18 -> 34 ;
35 [label="arguments <= 0.5\ngini = 0.083\nsamples = 804\nvalue = [35, 769]\nclass = Malicious"] ;
34 -> 35 ;
36 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
35 -> 36 ;
37 [label="withstatement <= 0.5\ngini = 0.074\nsamples = 800\nvalue = [31, 769]\nclass = Malicious"] ;
35 -> 37 ;
38 [label="returnstatement <= 0.5\ngini = 0.07\nsamples = 798\nvalue = [29, 769]\nclass = Malicious"] ;
37 -> 38 ;
39 [label="assignmentoperator <= 0.5\ngini = 0.063\nsamples = 774\nvalue = [25, 749]\nclass = Malicious"] ;
38 -> 39 ;
40 [label="functionbody <= 0.5\ngini = 0.067\nsamples = 716\nvalue = [25, 691]\nclass = Malicious"] ;
39 -> 40 ;
41 [label="gini = 0.065\nsamples = 715\nvalue = [24, 691]\nclass = Malicious"] ;
40 -> 41 ;
42 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
40 -> 42 ;
43 [label="gini = 0.0\nsamples = 58\nvalue = [0, 58]\nclass = Malicious"] ;
39 -> 43 ;
44 [label="assignmentoperator <= 0.5\ngini = 0.278\nsamples = 24\nvalue = [4, 20]\nclass = Malicious"] ;
38 -> 44 ;
45 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
44 -> 45 ;
46 [label="gini = 0.165\nsamples = 22\nvalue = [2, 20]\nclass = Malicious"] ;
44 -> 46 ;
47 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
37 -> 47 ;
48 [label="returnstatement <= 0.5\ngini = 0.464\nsamples = 625\nvalue = [396, 229]\nclass = Benign"] ;
34 -> 48 ;
49 [label="elementlist <= 0.5\ngini = 0.016\nsamples = 381\nvalue = [378, 3]\nclass = Benign"] ;
48 -> 49 ;
50 [label="functionbody <= 0.5\ngini = 0.011\nsamples = 371\nvalue = [369, 2]\nclass = Benign"] ;
49 -> 50 ;
51 [label="assignmentoperator <= 0.5\ngini = 0.023\nsamples = 174\nvalue = [172, 2]\nclass = Benign"] ;
50 -> 51 ;
52 [label="arguments <= 0.5\ngini = 0.044\nsamples = 89\nvalue = [87, 2]\nclass = Benign"] ;
51 -> 52 ;
53 [label="gini = 0.0\nsamples = 27\nvalue = [27, 0]\nclass = Benign"] ;
52 -> 53 ;
54 [label="arrayliteral <= 0.5\ngini = 0.062\nsamples = 62\nvalue = [60, 2]\nclass = Benign"] ;
52 -> 54 ;
55 [label="catchproduction <= 0.5\ngini = 0.067\nsamples = 58\nvalue = [56, 2]\nclass = Benign"] ;
54 -> 55 ;
56 [label="ifstatement <= 0.5\ngini = 0.069\nsamples = 56\nvalue = [54, 2]\nclass = Benign"] ;
55 -> 56 ;
57 [label="gini = 0.08\nsamples = 24\nvalue = [23, 1]\nclass = Benign"] ;
56 -> 57 ;
58 [label="statementlist <= 0.5\ngini = 0.061\nsamples = 32\nvalue = [31, 1]\nclass = Benign"] ;
56 -> 58 ;
59 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
58 -> 59 ;
60 [label="gini = 0.062\nsamples = 31\nvalue = [30, 1]\nclass = Benign"] ;
58 -> 60 ;
61 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
55 -> 61 ;
62 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
54 -> 62 ;
63 [label="gini = 0.0\nsamples = 85\nvalue = [85, 0]\nclass = Benign"] ;
51 -> 63 ;
64 [label="gini = 0.0\nsamples = 197\nvalue = [197, 0]\nclass = Benign"] ;
50 -> 64 ;
65 [label="functionbody <= 0.5\ngini = 0.18\nsamples = 10\nvalue = [9, 1]\nclass = Benign"] ;
49 -> 65 ;
66 [label="block <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [2, 1]\nclass = Benign"] ;
65 -> 66 ;
67 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
66 -> 67 ;
68 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
66 -> 68 ;
69 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
65 -> 69 ;
70 [label="ifstatement <= 0.5\ngini = 0.137\nsamples = 244\nvalue = [18, 226]\nclass = Malicious"] ;
48 -> 70 ;
71 [label="formalparameterarg <= 0.5\ngini = 0.089\nsamples = 237\nvalue = [11, 226]\nclass = Malicious"] ;
70 -> 71 ;
72 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
71 -> 72 ;
73 [label="gini = 0.074\nsamples = 235\nvalue = [9, 226]\nclass = Malicious"] ;
71 -> 73 ;
74 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
70 -> 74 ;
75 [label="expressionstatement <= 0.5\ngini = 0.248\nsamples = 8956\nvalue = [1297, 7659]\nclass = Malicious"] ;
1 -> 75 ;
76 [label="gini = 0.0\nsamples = 261\nvalue = [261, 0]\nclass = Benign"] ;
75 -> 76 ;
77 [label="variablestatement <= 0.5\ngini = 0.21\nsamples = 8695\nvalue = [1036, 7659]\nclass = Malicious"] ;
75 -> 77 ;
78 [label="returnstatement <= 0.5\ngini = 0.393\nsamples = 1435\nvalue = [386, 1049]\nclass = Malicious"] ;
77 -> 78 ;
79 [label="ifstatement <= 0.5\ngini = 0.481\nsamples = 940\nvalue = [378, 562]\nclass = Malicious"] ;
78 -> 79 ;
80 [label="functionbody <= 0.5\ngini = 0.406\nsamples = 441\nvalue = [316, 125]\nclass = Benign"] ;
79 -> 80 ;
81 [label="arguments <= 0.5\ngini = 0.461\nsamples = 347\nvalue = [222, 125]\nclass = Benign"] ;
80 -> 81 ;
82 [label="gini = 0.0\nsamples = 91\nvalue = [91, 0]\nclass = Benign"] ;
81 -> 82 ;
83 [label="identifiername <= 0.5\ngini = 0.5\nsamples = 256\nvalue = [131, 125]\nclass = Benign"] ;
81 -> 83 ;
84 [label="arrayliteral <= 0.5\ngini = 0.137\nsamples = 27\nvalue = [25, 2]\nclass = Benign"] ;
83 -> 84 ;
85 [label="gini = 0.0\nsamples = 25\nvalue = [25, 0]\nclass = Benign"] ;
84 -> 85 ;
86 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
84 -> 86 ;
87 [label="emptystatement <= 0.5\ngini = 0.497\nsamples = 229\nvalue = [106, 123]\nclass = Malicious"] ;
83 -> 87 ;
88 [label="arrayliteral <= 0.5\ngini = 0.489\nsamples = 214\nvalue = [91, 123]\nclass = Malicious"] ;
87 -> 88 ;
89 [label="catchproduction <= 0.5\ngini = 0.485\nsamples = 210\nvalue = [87, 123]\nclass = Malicious"] ;
88 -> 89 ;
90 [label="assignmentoperator <= 0.5\ngini = 0.484\nsamples = 209\nvalue = [86, 123]\nclass = Malicious"] ;
89 -> 90 ;
91 [label="gini = 0.483\nsamples = 208\nvalue = [85, 123]\nclass = Malicious"] ;
90 -> 91 ;
92 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
90 -> 92 ;
93 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
89 -> 93 ;
94 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
88 -> 94 ;
95 [label="gini = 0.0\nsamples = 15\nvalue = [15, 0]\nclass = Benign"] ;
87 -> 95 ;
96 [label="gini = 0.0\nsamples = 94\nvalue = [94, 0]\nclass = Benign"] ;
80 -> 96 ;
97 [label="block <= 0.5\ngini = 0.218\nsamples = 499\nvalue = [62, 437]\nclass = Malicious"] ;
79 -> 97 ;
98 [label="identifiername <= 0.5\ngini = 0.014\nsamples = 440\nvalue = [3, 437]\nclass = Malicious"] ;
97 -> 98 ;
99 [label="gini = 0.0\nsamples = 140\nvalue = [0, 140]\nclass = Malicious"] ;
98 -> 99 ;
100 [label="gini = 0.02\nsamples = 300\nvalue = [3, 297]\nclass = Malicious"] ;
98 -> 100 ;
101 [label="gini = 0.0\nsamples = 59\nvalue = [59, 0]\nclass = Benign"] ;
97 -> 101 ;
102 [label="identifiername <= 0.5\ngini = 0.032\nsamples = 495\nvalue = [8, 487]\nclass = Malicious"] ;
78 -> 102 ;
103 [label="gini = 0.0\nsamples = 487\nvalue = [0, 487]\nclass = Malicious"] ;
102 -> 103 ;
104 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
102 -> 104 ;
105 [label="arguments <= 0.5\ngini = 0.163\nsamples = 7260\nvalue = [650, 6610]\nclass = Malicious"] ;
77 -> 105 ;
106 [label="gini = 0.0\nsamples = 114\nvalue = [114, 0]\nclass = Benign"] ;
105 -> 106 ;
107 [label="elementlist <= 0.5\ngini = 0.139\nsamples = 7146\nvalue = [536, 6610]\nclass = Malicious"] ;
105 -> 107 ;
108 [label="do_for_while_statement <= 0.5\ngini = 0.242\nsamples = 3387\nvalue = [476, 2911]\nclass = Malicious"] ;
107 -> 108 ;
109 [label="returnstatement <= 0.5\ngini = 0.207\nsamples = 3118\nvalue = [365, 2753]\nclass = Malicious"] ;
108 -> 109 ;
110 [label="functionbody <= 0.5\ngini = 0.309\nsamples = 1284\nvalue = [245, 1039]\nclass = Malicious"] ;
109 -> 110 ;
111 [label="emptystatement <= 0.5\ngini = 0.148\nsamples = 1058\nvalue = [85, 973]\nclass = Malicious"] ;
110 -> 111 ;
112 [label="trystatement <= 0.5\ngini = 0.143\nsamples = 1055\nvalue = [82, 973]\nclass = Malicious"] ;
111 -> 112 ;
113 [label="identifiername <= 0.5\ngini = 0.141\nsamples = 1052\nvalue = [80, 972]\nclass = Malicious"] ;
112 -> 113 ;
114 [label="gini = 0.082\nsamples = 445\nvalue = [19, 426]\nclass = Malicious"] ;
113 -> 114 ;
115 [label="assignmentoperator <= 0.5\ngini = 0.181\nsamples = 607\nvalue = [61, 546]\nclass = Malicious"] ;
113 -> 115 ;
116 [label="ifstatement <= 0.5\ngini = 0.179\nsamples = 605\nvalue = [60, 545]\nclass = Malicious"] ;
115 -> 116 ;
117 [label="gini = 0.162\nsamples = 404\nvalue = [36, 368]\nclass = Malicious"] ;
116 -> 117 ;
118 [label="statementlist <= 0.5\ngini = 0.21\nsamples = 201\nvalue = [24, 177]\nclass = Malicious"] ;
116 -> 118 ;
119 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
118 -> 119 ;
120 [label="gini = 0.175\nsamples = 196\nvalue = [19, 177]\nclass = Malicious"] ;
118 -> 120 ;
121 [label="block <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
115 -> 121 ;
122 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
121 -> 122 ;
123 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
121 -> 123 ;
124 [label="ifstatement <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [2, 1]\nclass = Benign"] ;
112 -> 124 ;
125 [label="gini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
124 -> 125 ;
126 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
124 -> 126 ;
127 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
111 -> 127 ;
128 [label="emptystatement <= 0.5\ngini = 0.414\nsamples = 226\nvalue = [160, 66]\nclass = Benign"] ;
110 -> 128 ;
129 [label="formalparameterlist <= 0.5\ngini = 0.111\nsamples = 169\nvalue = [159, 10]\nclass = Benign"] ;
128 -> 129 ;
130 [label="gini = 0.0\nsamples = 133\nvalue = [133, 0]\nclass = Benign"] ;
129 -> 130 ;
131 [label="statementlist <= 0.5\ngini = 0.401\nsamples = 36\nvalue = [26, 10]\nclass = Benign"] ;
129 -> 131 ;
132 [label="gini = 0.484\nsamples = 17\nvalue = [7, 10]\nclass = Malicious"] ;
131 -> 132 ;
133 [label="gini = 0.0\nsamples = 19\nvalue = [19, 0]\nclass = Benign"] ;
131 -> 133 ;
134 [label="formalparameterarg <= 0.5\ngini = 0.034\nsamples = 57\nvalue = [1, 56]\nclass = Malicious"] ;
128 -> 134 ;
135 [label="gini = 0.0\nsamples = 56\nvalue = [0, 56]\nclass = Malicious"] ;
134 -> 135 ;
136 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
134 -> 136 ;
137 [label="block <= 0.5\ngini = 0.122\nsamples = 1834\nvalue = [120, 1714]\nclass = Malicious"] ;
109 -> 137 ;
138 [label="formalparameterarg <= 0.5\ngini = 0.036\nsamples = 880\nvalue = [16, 864]\nclass = Malicious"] ;
137 -> 138 ;
139 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
138 -> 139 ;
140 [label="ifstatement <= 0.5\ngini = 0.034\nsamples = 879\nvalue = [15, 864]\nclass = Malicious"] ;
138 -> 140 ;
141 [label="gini = 0.0\nsamples = 12\nvalue = [0, 12]\nclass = Malicious"] ;
140 -> 141 ;
142 [label="gini = 0.034\nsamples = 867\nvalue = [15, 852]\nclass = Malicious"] ;
140 -> 142 ;
143 [label="identifiername <= 0.5\ngini = 0.194\nsamples = 954\nvalue = [104, 850]\nclass = Malicious"] ;
137 -> 143 ;
144 [label="gini = 0.0\nsamples = 235\nvalue = [0, 235]\nclass = Malicious"] ;
143 -> 144 ;
145 [label="formalparameterarg <= 0.5\ngini = 0.247\nsamples = 719\nvalue = [104, 615]\nclass = Malicious"] ;
143 -> 145 ;
146 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
145 -> 146 ;
147 [label="arrayliteral <= 0.5\ngini = 0.244\nsamples = 717\nvalue = [102, 615]\nclass = Malicious"] ;
145 -> 147 ;
148 [label="emptystatement <= 0.5\ngini = 0.242\nsamples = 716\nvalue = [101, 615]\nclass = Malicious"] ;
147 -> 148 ;
149 [label="gini = 0.241\nsamples = 714\nvalue = [100, 614]\nclass = Malicious"] ;
148 -> 149 ;
150 [label="catchproduction <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
148 -> 150 ;
151 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
150 -> 151 ;
152 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
150 -> 152 ;
153 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
147 -> 153 ;
154 [label="assignmentoperator <= 0.5\ngini = 0.485\nsamples = 269\nvalue = [111, 158]\nclass = Malicious"] ;
108 -> 154 ;
155 [label="emptystatement <= 0.5\ngini = 0.235\nsamples = 125\nvalue = [108, 17]\nclass = Benign"] ;
154 -> 155 ;
156 [label="gini = 0.0\nsamples = 108\nvalue = [108, 0]\nclass = Benign"] ;
155 -> 156 ;
157 [label="gini = 0.0\nsamples = 17\nvalue = [0, 17]\nclass = Malicious"] ;
155 -> 157 ;
158 [label="ifstatement <= 0.5\ngini = 0.041\nsamples = 144\nvalue = [3, 141]\nclass = Malicious"] ;
154 -> 158 ;
159 [label="emptystatement <= 0.5\ngini = 0.014\nsamples = 137\nvalue = [1, 136]\nclass = Malicious"] ;
158 -> 159 ;
160 [label="block <= 0.5\ngini = 0.071\nsamples = 27\nvalue = [1, 26]\nclass = Malicious"] ;
159 -> 160 ;
161 [label="gini = 0.0\nsamples = 10\nvalue = [0, 10]\nclass = Malicious"] ;
160 -> 161 ;
162 [label="functionbody <= 0.5\ngini = 0.111\nsamples = 17\nvalue = [1, 16]\nclass = Malicious"] ;
160 -> 162 ;
163 [label="arrayliteral <= 0.5\ngini = 0.198\nsamples = 9\nvalue = [1, 8]\nclass = Malicious"] ;
162 -> 163 ;
164 [label="gini = 0.219\nsamples = 8\nvalue = [1, 7]\nclass = Malicious"] ;
163 -> 164 ;
165 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
163 -> 165 ;
166 [label="gini = 0.0\nsamples = 8\nvalue = [0, 8]\nclass = Malicious"] ;
162 -> 166 ;
167 [label="gini = 0.0\nsamples = 110\nvalue = [0, 110]\nclass = Malicious"] ;
159 -> 167 ;
168 [label="catchproduction <= 0.5\ngini = 0.408\nsamples = 7\nvalue = [2, 5]\nclass = Malicious"] ;
158 -> 168 ;
169 [label="gini = 0.0\nsamples = 4\nvalue = [0, 4]\nclass = Malicious"] ;
168 -> 169 ;
170 [label="emptystatement <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [2, 1]\nclass = Benign"] ;
168 -> 170 ;
171 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
170 -> 171 ;
172 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
170 -> 172 ;
173 [label="functionbody <= 0.5\ngini = 0.031\nsamples = 3759\nvalue = [60, 3699]\nclass = Malicious"] ;
107 -> 173 ;
174 [label="ifstatement <= 0.5\ngini = 0.002\nsamples = 2876\nvalue = [3, 2873]\nclass = Malicious"] ;
173 -> 174 ;
175 [label="do_for_while_statement <= 0.5\ngini = 0.009\nsamples = 427\nvalue = [2, 425]\nclass = Malicious"] ;
174 -> 175 ;
176 [label="identifiername <= 0.5\ngini = 0.231\nsamples = 15\nvalue = [2, 13]\nclass = Malicious"] ;
175 -> 176 ;
177 [label="gini = 0.0\nsamples = 13\nvalue = [0, 13]\nclass = Malicious"] ;
176 -> 177 ;
178 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
176 -> 178 ;
179 [label="gini = 0.0\nsamples = 412\nvalue = [0, 412]\nclass = Malicious"] ;
175 -> 179 ;
180 [label="emptystatement <= 0.5\ngini = 0.001\nsamples = 2449\nvalue = [1, 2448]\nclass = Malicious"] ;
174 -> 180 ;
181 [label="statementlist <= 0.5\ngini = 0.002\nsamples = 1008\nvalue = [1, 1007]\nclass = Malicious"] ;
180 -> 181 ;
182 [label="gini = 0.0\nsamples = 756\nvalue = [0, 756]\nclass = Malicious"] ;
181 -> 182 ;
183 [label="identifiername <= 0.5\ngini = 0.008\nsamples = 252\nvalue = [1, 251]\nclass = Malicious"] ;
181 -> 183 ;
184 [label="gini = 0.0\nsamples = 23\nvalue = [0, 23]\nclass = Malicious"] ;
183 -> 184 ;
185 [label="caseblock <= 0.5\ngini = 0.009\nsamples = 229\nvalue = [1, 228]\nclass = Malicious"] ;
183 -> 185 ;
186 [label="gini = 0.009\nsamples = 225\nvalue = [1, 224]\nclass = Malicious"] ;
185 -> 186 ;
187 [label="gini = 0.0\nsamples = 4\nvalue = [0, 4]\nclass = Malicious"] ;
185 -> 187 ;
188 [label="gini = 0.0\nsamples = 1441\nvalue = [0, 1441]\nclass = Malicious"] ;
180 -> 188 ;
189 [label="returnstatement <= 0.5\ngini = 0.121\nsamples = 883\nvalue = [57, 826]\nclass = Malicious"] ;
173 -> 189 ;
190 [label="trystatement <= 0.5\ngini = 0.465\nsamples = 139\nvalue = [51, 88]\nclass = Malicious"] ;
189 -> 190 ;
191 [label="gini = 0.0\nsamples = 51\nvalue = [51, 0]\nclass = Benign"] ;
190 -> 191 ;
192 [label="gini = 0.0\nsamples = 88\nvalue = [0, 88]\nclass = Malicious"] ;
190 -> 192 ;
193 [label="breakstatement <= 0.5\ngini = 0.016\nsamples = 744\nvalue = [6, 738]\nclass = Malicious"] ;
189 -> 193 ;
194 [label="identifiername <= 0.5\ngini = 0.011\nsamples = 742\nvalue = [4, 738]\nclass = Malicious"] ;
193 -> 194 ;
195 [label="gini = 0.0\nsamples = 540\nvalue = [0, 540]\nclass = Malicious"] ;
194 -> 195 ;
196 [label="assignmentoperator <= 0.5\ngini = 0.039\nsamples = 202\nvalue = [4, 198]\nclass = Malicious"] ;
194 -> 196 ;
197 [label="formalparameterlist <= 0.5\ngini = 0.49\nsamples = 7\nvalue = [3, 4]\nclass = Malicious"] ;
196 -> 197 ;
198 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
197 -> 198 ;
199 [label="block <= 0.5\ngini = 0.32\nsamples = 5\nvalue = [1, 4]\nclass = Malicious"] ;
197 -> 199 ;
200 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
199 -> 200 ;
201 [label="gini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
199 -> 201 ;
202 [label="formalparameterlist <= 0.5\ngini = 0.01\nsamples = 195\nvalue = [1, 194]\nclass = Malicious"] ;
196 -> 202 ;
203 [label="gini = 0.0\nsamples = 194\nvalue = [0, 194]\nclass = Malicious"] ;
202 -> 203 ;
204 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
202 -> 204 ;
205 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
193 -> 205 ;
206 [label="do_for_while_statement <= 0.5\ngini = 0.245\nsamples = 10754\nvalue = [9215, 1539]\nclass = Benign"] ;
0 -> 206 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
207 [label="trystatement <= 0.5\ngini = 0.001\nsamples = 8989\nvalue = [8986, 3]\nclass = Benign"] ;
206 -> 207 ;
208 [label="gini = 0.0\nsamples = 8882\nvalue = [8882, 0]\nclass = Benign"] ;
207 -> 208 ;
209 [label="functionbody <= 0.5\ngini = 0.055\nsamples = 107\nvalue = [104, 3]\nclass = Benign"] ;
207 -> 209 ;
210 [label="arrayliteral <= 0.5\ngini = 0.098\nsamples = 58\nvalue = [55, 3]\nclass = Benign"] ;
209 -> 210 ;
211 [label="variabledeclaration <= 0.5\ngini = 0.298\nsamples = 11\nvalue = [9, 2]\nclass = Benign"] ;
210 -> 211 ;
212 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
211 -> 212 ;
213 [label="numericliteral <= 0.5\ngini = 0.5\nsamples = 4\nvalue = [2, 2]\nclass = Benign"] ;
211 -> 213 ;
214 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
213 -> 214 ;
215 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
213 -> 215 ;
216 [label="ifstatement <= 0.5\ngini = 0.042\nsamples = 47\nvalue = [46, 1]\nclass = Benign"] ;
210 -> 216 ;
217 [label="gini = 0.0\nsamples = 21\nvalue = [21, 0]\nclass = Benign"] ;
216 -> 217 ;
218 [label="variablestatement <= 0.5\ngini = 0.074\nsamples = 26\nvalue = [25, 1]\nclass = Benign"] ;
216 -> 218 ;
219 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
218 -> 219 ;
220 [label="elementlist <= 0.5\ngini = 0.111\nsamples = 17\nvalue = [16, 1]\nclass = Benign"] ;
218 -> 220 ;
221 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
220 -> 221 ;
222 [label="gini = 0.117\nsamples = 16\nvalue = [15, 1]\nclass = Benign"] ;
220 -> 222 ;
223 [label="gini = 0.0\nsamples = 49\nvalue = [49, 0]\nclass = Benign"] ;
209 -> 223 ;
224 [label="identifiername <= 0.5\ngini = 0.226\nsamples = 1765\nvalue = [229, 1536]\nclass = Malicious"] ;
206 -> 224 ;
225 [label="gini = 0.0\nsamples = 1482\nvalue = [0, 1482]\nclass = Malicious"] ;
224 -> 225 ;
226 [label="trystatement <= 0.5\ngini = 0.309\nsamples = 283\nvalue = [229, 54]\nclass = Benign"] ;
224 -> 226 ;
227 [label="property_rules <= 0.5\ngini = 0.01\nsamples = 204\nvalue = [203, 1]\nclass = Benign"] ;
226 -> 227 ;
228 [label="emptystatement <= 0.5\ngini = 0.111\nsamples = 17\nvalue = [16, 1]\nclass = Benign"] ;
227 -> 228 ;
229 [label="gini = 0.0\nsamples = 16\nvalue = [16, 0]\nclass = Benign"] ;
228 -> 229 ;
230 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
228 -> 230 ;
231 [label="gini = 0.0\nsamples = 187\nvalue = [187, 0]\nclass = Benign"] ;
227 -> 231 ;
232 [label="assignmentoperator <= 0.5\ngini = 0.442\nsamples = 79\nvalue = [26, 53]\nclass = Malicious"] ;
226 -> 232 ;
233 [label="breakstatement <= 0.5\ngini = 0.388\nsamples = 19\nvalue = [14, 5]\nclass = Benign"] ;
232 -> 233 ;
234 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
233 -> 234 ;
235 [label="gini = 0.0\nsamples = 5\nvalue = [0, 5]\nclass = Malicious"] ;
233 -> 235 ;
236 [label="defaultclause <= 0.5\ngini = 0.32\nsamples = 60\nvalue = [12, 48]\nclass = Malicious"] ;
232 -> 236 ;
237 [label="breakstatement <= 0.5\ngini = 0.444\nsamples = 36\nvalue = [12, 24]\nclass = Malicious"] ;
236 -> 237 ;
238 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
237 -> 238 ;
239 [label="emptystatement <= 0.5\ngini = 0.198\nsamples = 27\nvalue = [3, 24]\nclass = Malicious"] ;
237 -> 239 ;
240 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
239 -> 240 ;
241 [label="gini = 0.0\nsamples = 24\nvalue = [0, 24]\nclass = Malicious"] ;
239 -> 241 ;
242 [label="gini = 0.0\nsamples = 24\nvalue = [0, 24]\nclass = Malicious"] ;
236 -> 242 ;
}
