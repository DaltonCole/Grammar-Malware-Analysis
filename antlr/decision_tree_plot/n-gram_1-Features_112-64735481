digraph Tree {
node [shape=box] ;
0 [label="objectliteral <= 0.5\ngini = 0.5\nsamples = 27000\nvalue = [13526, 13474]\nclass = Benign"] ;
1 [label="memberindexexpression <= 0.5\ngini = 0.391\nsamples = 16251\nvalue = [4340, 11911]\nclass = Malicious"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="newexpression <= 0.5\ngini = 0.482\nsamples = 9735\nvalue = [3942, 5793]\nclass = Malicious"] ;
1 -> 2 ;
3 [label="sourceelements <= 0.5\ngini = 0.499\nsamples = 7714\nvalue = [3651, 4063]\nclass = Malicious"] ;
2 -> 3 ;
4 [label="gini = 0.4\nsamples = 2567\nvalue = [709, 1858]\nclass = Malicious"] ;
3 -> 4 ;
5 [label="numericliteral <= 0.5\ngini = 0.49\nsamples = 5147\nvalue = [2942, 2205]\nclass = Benign"] ;
3 -> 5 ;
6 [label="expressionsequence <= 0.5\ngini = 0.368\nsamples = 2861\nvalue = [2166, 695]\nclass = Benign"] ;
5 -> 6 ;
7 [label="memberdotexpression <= 0.5\ngini = 0.499\nsamples = 890\nvalue = [427, 463]\nclass = Malicious"] ;
6 -> 7 ;
8 [label="gini = 0.0\nsamples = 408\nvalue = [408, 0]\nclass = Benign"] ;
7 -> 8 ;
9 [label="identifierexpression <= 0.5\ngini = 0.076\nsamples = 482\nvalue = [19, 463]\nclass = Malicious"] ;
7 -> 9 ;
10 [label="gini = 0.0\nsamples = 463\nvalue = [0, 463]\nclass = Malicious"] ;
9 -> 10 ;
11 [label="gini = 0.0\nsamples = 19\nvalue = [19, 0]\nclass = Benign"] ;
9 -> 11 ;
12 [label="assignmentexpression <= 0.5\ngini = 0.208\nsamples = 1971\nvalue = [1739, 232]\nclass = Benign"] ;
6 -> 12 ;
13 [label="functionexpression <= 0.5\ngini = 0.281\nsamples = 1246\nvalue = [1035, 211]\nclass = Benign"] ;
12 -> 13 ;
14 [label="ifstatement <= 0.5\ngini = 0.381\nsamples = 772\nvalue = [574, 198]\nclass = Benign"] ;
13 -> 14 ;
15 [label="literalexpression <= 0.5\ngini = 0.406\nsamples = 699\nvalue = [501, 198]\nclass = Benign"] ;
14 -> 15 ;
16 [label="gini = 0.0\nsamples = 55\nvalue = [55, 0]\nclass = Benign"] ;
15 -> 16 ;
17 [label="arrayliteralexpression <= 0.5\ngini = 0.426\nsamples = 644\nvalue = [446, 198]\nclass = Benign"] ;
15 -> 17 ;
18 [label="assignmentoperatorexpression <= 0.5\ngini = 0.443\nsamples = 597\nvalue = [399, 198]\nclass = Benign"] ;
17 -> 18 ;
19 [label="identifiername <= 0.5\ngini = 0.436\nsamples = 586\nvalue = [398, 188]\nclass = Benign"] ;
18 -> 19 ;
20 [label="additiveexpression <= 0.5\ngini = 0.248\nsamples = 145\nvalue = [124, 21]\nclass = Benign"] ;
19 -> 20 ;
21 [label="gini = 0.0\nsamples = 124\nvalue = [124, 0]\nclass = Benign"] ;
20 -> 21 ;
22 [label="gini = 0.0\nsamples = 21\nvalue = [0, 21]\nclass = Malicious"] ;
20 -> 22 ;
23 [label="variablestatement <= 0.5\ngini = 0.471\nsamples = 441\nvalue = [274, 167]\nclass = Benign"] ;
19 -> 23 ;
24 [label="additiveexpression <= 0.5\ngini = 0.477\nsamples = 422\nvalue = [256, 166]\nclass = Benign"] ;
23 -> 24 ;
25 [label="logicalandexpression <= 0.5\ngini = 0.48\nsamples = 416\nvalue = [250, 166]\nclass = Benign"] ;
24 -> 25 ;
26 [label="parenthesizedexpression <= 0.5\ngini = 0.48\nsamples = 414\nvalue = [248, 166]\nclass = Benign"] ;
25 -> 26 ;
27 [label="logicalorexpression <= 0.5\ngini = 0.481\nsamples = 412\nvalue = [246, 166]\nclass = Benign"] ;
26 -> 27 ;
28 [label="gini = 0.482\nsamples = 410\nvalue = [244, 166]\nclass = Benign"] ;
27 -> 28 ;
29 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
27 -> 29 ;
30 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
26 -> 30 ;
31 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
25 -> 31 ;
32 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
24 -> 32 ;
33 [label="additiveexpression <= 0.5\ngini = 0.1\nsamples = 19\nvalue = [18, 1]\nclass = Benign"] ;
23 -> 33 ;
34 [label="statementlist <= 0.5\ngini = 0.165\nsamples = 11\nvalue = [10, 1]\nclass = Benign"] ;
33 -> 34 ;
35 [label="gini = 0.245\nsamples = 7\nvalue = [6, 1]\nclass = Benign"] ;
34 -> 35 ;
36 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
34 -> 36 ;
37 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
33 -> 37 ;
38 [label="memberdotexpression <= 0.5\ngini = 0.165\nsamples = 11\nvalue = [1, 10]\nclass = Malicious"] ;
18 -> 38 ;
39 [label="gini = 0.0\nsamples = 10\nvalue = [0, 10]\nclass = Malicious"] ;
38 -> 39 ;
40 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
38 -> 40 ;
41 [label="gini = 0.0\nsamples = 47\nvalue = [47, 0]\nclass = Benign"] ;
17 -> 41 ;
42 [label="gini = 0.0\nsamples = 73\nvalue = [73, 0]\nclass = Benign"] ;
14 -> 42 ;
43 [label="assignmentoperator <= 0.5\ngini = 0.053\nsamples = 474\nvalue = [461, 13]\nclass = Benign"] ;
13 -> 43 ;
44 [label="gini = 0.0\nsamples = 458\nvalue = [458, 0]\nclass = Benign"] ;
43 -> 44 ;
45 [label="returnstatement <= 0.5\ngini = 0.305\nsamples = 16\nvalue = [3, 13]\nclass = Malicious"] ;
43 -> 45 ;
46 [label="gini = 0.0\nsamples = 5\nvalue = [0, 5]\nclass = Malicious"] ;
45 -> 46 ;
47 [label="gini = 0.397\nsamples = 11\nvalue = [3, 8]\nclass = Malicious"] ;
45 -> 47 ;
48 [label="returnstatement <= 0.5\ngini = 0.056\nsamples = 725\nvalue = [704, 21]\nclass = Benign"] ;
12 -> 48 ;
49 [label="emptystatement <= 0.5\ngini = 0.025\nsamples = 701\nvalue = [692, 9]\nclass = Benign"] ;
48 -> 49 ;
50 [label="assignmentoperator <= 0.5\ngini = 0.017\nsamples = 696\nvalue = [690, 6]\nclass = Benign"] ;
49 -> 50 ;
51 [label="gini = 0.0\nsamples = 614\nvalue = [614, 0]\nclass = Benign"] ;
50 -> 51 ;
52 [label="identifiername <= 0.5\ngini = 0.136\nsamples = 82\nvalue = [76, 6]\nclass = Benign"] ;
50 -> 52 ;
53 [label="gini = 0.0\nsamples = 6\nvalue = [0, 6]\nclass = Malicious"] ;
52 -> 53 ;
54 [label="gini = 0.0\nsamples = 76\nvalue = [76, 0]\nclass = Benign"] ;
52 -> 54 ;
55 [label="ifstatement <= 0.5\ngini = 0.48\nsamples = 5\nvalue = [2, 3]\nclass = Malicious"] ;
49 -> 55 ;
56 [label="gini = 0.0\nsamples = 3\nvalue = [0, 3]\nclass = Malicious"] ;
55 -> 56 ;
57 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
55 -> 57 ;
58 [label="assignmentoperatorexpression <= 0.5\ngini = 0.5\nsamples = 24\nvalue = [12, 12]\nclass = Benign"] ;
48 -> 58 ;
59 [label="gini = 0.0\nsamples = 12\nvalue = [12, 0]\nclass = Benign"] ;
58 -> 59 ;
60 [label="gini = 0.0\nsamples = 12\nvalue = [0, 12]\nclass = Malicious"] ;
58 -> 60 ;
61 [label="parenthesizedexpression <= 0.5\ngini = 0.448\nsamples = 2286\nvalue = [776, 1510]\nclass = Malicious"] ;
5 -> 61 ;
62 [label="arguments <= 0.5\ngini = 0.497\nsamples = 1331\nvalue = [715, 616]\nclass = Benign"] ;
61 -> 62 ;
63 [label="gini = 0.0\nsamples = 336\nvalue = [336, 0]\nclass = Benign"] ;
62 -> 63 ;
64 [label="functionexpression <= 0.5\ngini = 0.472\nsamples = 995\nvalue = [379, 616]\nclass = Malicious"] ;
62 -> 64 ;
65 [label="statementlist <= 0.5\ngini = 0.377\nsamples = 824\nvalue = [208, 616]\nclass = Malicious"] ;
64 -> 65 ;
66 [label="varmodifier <= 0.5\ngini = 0.34\nsamples = 787\nvalue = [171, 616]\nclass = Malicious"] ;
65 -> 66 ;
67 [label="equalityexpression <= 0.5\ngini = 0.466\nsamples = 393\nvalue = [145, 248]\nclass = Malicious"] ;
66 -> 67 ;
68 [label="identifiername <= 0.5\ngini = 0.496\nsamples = 265\nvalue = [145, 120]\nclass = Benign"] ;
67 -> 68 ;
69 [label="gini = 0.0\nsamples = 35\nvalue = [35, 0]\nclass = Benign"] ;
68 -> 69 ;
70 [label="additiveexpression <= 0.5\ngini = 0.499\nsamples = 230\nvalue = [110, 120]\nclass = Malicious"] ;
68 -> 70 ;
71 [label="logicalandexpression <= 0.5\ngini = 0.491\nsamples = 212\nvalue = [92, 120]\nclass = Malicious"] ;
70 -> 71 ;
72 [label="arrayliteralexpression <= 0.5\ngini = 0.485\nsamples = 205\nvalue = [85, 120]\nclass = Malicious"] ;
71 -> 72 ;
73 [label="assignmentexpression <= 0.5\ngini = 0.48\nsamples = 200\nvalue = [80, 120]\nclass = Malicious"] ;
72 -> 73 ;
74 [label="gini = 0.476\nsamples = 197\nvalue = [77, 120]\nclass = Malicious"] ;
73 -> 74 ;
75 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
73 -> 75 ;
76 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
72 -> 76 ;
77 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
71 -> 77 ;
78 [label="gini = 0.0\nsamples = 18\nvalue = [18, 0]\nclass = Benign"] ;
70 -> 78 ;
79 [label="gini = 0.0\nsamples = 128\nvalue = [0, 128]\nclass = Malicious"] ;
67 -> 79 ;
80 [label="identifiername <= 0.5\ngini = 0.123\nsamples = 394\nvalue = [26, 368]\nclass = Malicious"] ;
66 -> 80 ;
81 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
80 -> 81 ;
82 [label="multiplicativeexpression <= 0.5\ngini = 0.089\nsamples = 386\nvalue = [18, 368]\nclass = Malicious"] ;
80 -> 82 ;
83 [label="assignmentexpression <= 0.5\ngini = 0.061\nsamples = 380\nvalue = [12, 368]\nclass = Malicious"] ;
82 -> 83 ;
84 [label="thisexpression <= 0.5\ngini = 0.037\nsamples = 375\nvalue = [7, 368]\nclass = Malicious"] ;
83 -> 84 ;
85 [label="arrayliteral <= 0.5\ngini = 0.032\nsamples = 374\nvalue = [6, 368]\nclass = Malicious"] ;
84 -> 85 ;
86 [label="additiveexpression <= 0.5\ngini = 0.026\nsamples = 373\nvalue = [5, 368]\nclass = Malicious"] ;
85 -> 86 ;
87 [label="gini = 0.041\nsamples = 239\nvalue = [5, 234]\nclass = Malicious"] ;
86 -> 87 ;
88 [label="gini = 0.0\nsamples = 134\nvalue = [0, 134]\nclass = Malicious"] ;
86 -> 88 ;
89 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
85 -> 89 ;
90 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
84 -> 90 ;
91 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
83 -> 91 ;
92 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
82 -> 92 ;
93 [label="gini = 0.0\nsamples = 37\nvalue = [37, 0]\nclass = Benign"] ;
65 -> 93 ;
94 [label="gini = 0.0\nsamples = 171\nvalue = [171, 0]\nclass = Benign"] ;
64 -> 94 ;
95 [label="assignmentexpression <= 0.5\ngini = 0.12\nsamples = 955\nvalue = [61, 894]\nclass = Malicious"] ;
61 -> 95 ;
96 [label="postincrementexpression <= 0.5\ngini = 0.043\nsamples = 46\nvalue = [45, 1]\nclass = Benign"] ;
95 -> 96 ;
97 [label="gini = 0.0\nsamples = 45\nvalue = [45, 0]\nclass = Benign"] ;
96 -> 97 ;
98 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
96 -> 98 ;
99 [label="formalparameterlist <= 0.5\ngini = 0.035\nsamples = 909\nvalue = [16, 893]\nclass = Malicious"] ;
95 -> 99 ;
100 [label="thisexpression <= 0.5\ngini = 0.007\nsamples = 896\nvalue = [3, 893]\nclass = Malicious"] ;
99 -> 100 ;
101 [label="unaryminusexpression <= 0.5\ngini = 0.004\nsamples = 895\nvalue = [2, 893]\nclass = Malicious"] ;
100 -> 101 ;
102 [label="relationalexpression <= 0.5\ngini = 0.002\nsamples = 894\nvalue = [1, 893]\nclass = Malicious"] ;
101 -> 102 ;
103 [label="gini = 0.0\nsamples = 884\nvalue = [0, 884]\nclass = Malicious"] ;
102 -> 103 ;
104 [label="statementlist <= 0.5\ngini = 0.18\nsamples = 10\nvalue = [1, 9]\nclass = Malicious"] ;
102 -> 104 ;
105 [label="gini = 0.0\nsamples = 9\nvalue = [0, 9]\nclass = Malicious"] ;
104 -> 105 ;
106 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
104 -> 106 ;
107 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
101 -> 107 ;
108 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
100 -> 108 ;
109 [label="gini = 0.0\nsamples = 13\nvalue = [13, 0]\nclass = Benign"] ;
99 -> 109 ;
110 [label="assignmentexpression <= 0.5\ngini = 0.247\nsamples = 2021\nvalue = [291, 1730]\nclass = Malicious"] ;
2 -> 110 ;
111 [label="variablestatement <= 0.5\ngini = 0.06\nsamples = 1784\nvalue = [55, 1729]\nclass = Malicious"] ;
110 -> 111 ;
112 [label="gini = 0.0\nsamples = 17\nvalue = [17, 0]\nclass = Benign"] ;
111 -> 112 ;
113 [label="statementlist <= 0.5\ngini = 0.042\nsamples = 1767\nvalue = [38, 1729]\nclass = Malicious"] ;
111 -> 113 ;
114 [label="expressionstatement <= 0.5\ngini = 0.028\nsamples = 1752\nvalue = [25, 1727]\nclass = Malicious"] ;
113 -> 114 ;
115 [label="gini = 0.0\nsamples = 11\nvalue = [11, 0]\nclass = Benign"] ;
114 -> 115 ;
116 [label="literal <= 0.5\ngini = 0.016\nsamples = 1741\nvalue = [14, 1727]\nclass = Malicious"] ;
114 -> 116 ;
117 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
116 -> 117 ;
118 [label="additiveexpression <= 0.5\ngini = 0.013\nsamples = 1738\nvalue = [11, 1727]\nclass = Malicious"] ;
116 -> 118 ;
119 [label="arrayliteralexpression <= 0.5\ngini = 0.009\nsamples = 1732\nvalue = [8, 1724]\nclass = Malicious"] ;
118 -> 119 ;
120 [label="memberdotexpression <= 0.5\ngini = 0.008\nsamples = 1731\nvalue = [7, 1724]\nclass = Malicious"] ;
119 -> 120 ;
121 [label="gini = 0.0\nsamples = 1108\nvalue = [0, 1108]\nclass = Malicious"] ;
120 -> 121 ;
122 [label="numericliteral <= 0.5\ngini = 0.022\nsamples = 623\nvalue = [7, 616]\nclass = Malicious"] ;
120 -> 122 ;
123 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
122 -> 123 ;
124 [label="formalparameterarg <= 0.5\ngini = 0.01\nsamples = 619\nvalue = [3, 616]\nclass = Malicious"] ;
122 -> 124 ;
125 [label="gini = 0.42\nsamples = 10\nvalue = [3, 7]\nclass = Malicious"] ;
124 -> 125 ;
126 [label="gini = 0.0\nsamples = 609\nvalue = [0, 609]\nclass = Malicious"] ;
124 -> 126 ;
127 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
119 -> 127 ;
128 [label="numericliteral <= 0.5\ngini = 0.5\nsamples = 6\nvalue = [3, 3]\nclass = Benign"] ;
118 -> 128 ;
129 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
128 -> 129 ;
130 [label="gini = 0.0\nsamples = 3\nvalue = [0, 3]\nclass = Malicious"] ;
128 -> 130 ;
131 [label="additiveexpression <= 0.5\ngini = 0.231\nsamples = 15\nvalue = [13, 2]\nclass = Benign"] ;
113 -> 131 ;
132 [label="gini = 0.0\nsamples = 13\nvalue = [13, 0]\nclass = Benign"] ;
131 -> 132 ;
133 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
131 -> 133 ;
134 [label="forvarstatement <= 0.5\ngini = 0.008\nsamples = 237\nvalue = [236, 1]\nclass = Benign"] ;
110 -> 134 ;
135 [label="gini = 0.0\nsamples = 236\nvalue = [236, 0]\nclass = Benign"] ;
134 -> 135 ;
136 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
134 -> 136 ;
137 [label="argumentsexpression <= 0.5\ngini = 0.115\nsamples = 6516\nvalue = [398, 6118]\nclass = Malicious"] ;
1 -> 137 ;
138 [label="gini = 0.0\nsamples = 127\nvalue = [127, 0]\nclass = Benign"] ;
137 -> 138 ;
139 [label="forvarinstatement <= 0.5\ngini = 0.081\nsamples = 6389\nvalue = [271, 6118]\nclass = Malicious"] ;
137 -> 139 ;
140 [label="logicalorexpression <= 0.5\ngini = 0.064\nsamples = 6328\nvalue = [210, 6118]\nclass = Malicious"] ;
139 -> 140 ;
141 [label="deleteexpression <= 0.5\ngini = 0.048\nsamples = 6272\nvalue = [154, 6118]\nclass = Malicious"] ;
140 -> 141 ;
142 [label="ternaryexpression <= 0.5\ngini = 0.043\nsamples = 6255\nvalue = [137, 6118]\nclass = Malicious"] ;
141 -> 142 ;
143 [label="notexpression <= 0.5\ngini = 0.04\nsamples = 6244\nvalue = [126, 6118]\nclass = Malicious"] ;
142 -> 143 ;
144 [label="typeofexpression <= 0.5\ngini = 0.037\nsamples = 6226\nvalue = [116, 6110]\nclass = Malicious"] ;
143 -> 144 ;
145 [label="preincrementexpression <= 0.5\ngini = 0.035\nsamples = 6220\nvalue = [112, 6108]\nclass = Malicious"] ;
144 -> 145 ;
146 [label="newexpression <= 0.5\ngini = 0.035\nsamples = 6218\nvalue = [110, 6108]\nclass = Malicious"] ;
145 -> 146 ;
147 [label="functionbody <= 0.5\ngini = 0.064\nsamples = 2970\nvalue = [99, 2871]\nclass = Malicious"] ;
146 -> 147 ;
148 [label="statementlist <= 0.5\ngini = 0.02\nsamples = 2234\nvalue = [22, 2212]\nclass = Malicious"] ;
147 -> 148 ;
149 [label="identifiername <= 0.5\ngini = 0.011\nsamples = 1836\nvalue = [10, 1826]\nclass = Malicious"] ;
148 -> 149 ;
150 [label="variablestatement <= 0.5\ngini = 0.002\nsamples = 1106\nvalue = [1, 1105]\nclass = Malicious"] ;
149 -> 150 ;
151 [label="assignmentexpression <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
150 -> 151 ;
152 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
151 -> 152 ;
153 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
151 -> 153 ;
154 [label="gini = 0.0\nsamples = 1104\nvalue = [0, 1104]\nclass = Malicious"] ;
150 -> 154 ;
155 [label="varmodifier <= 0.5\ngini = 0.024\nsamples = 730\nvalue = [9, 721]\nclass = Malicious"] ;
149 -> 155 ;
156 [label="additiveexpression <= 0.5\ngini = 0.014\nsamples = 574\nvalue = [4, 570]\nclass = Malicious"] ;
155 -> 156 ;
157 [label="numericliteral <= 0.5\ngini = 0.028\nsamples = 285\nvalue = [4, 281]\nclass = Malicious"] ;
156 -> 157 ;
158 [label="gini = 0.0\nsamples = 281\nvalue = [0, 281]\nclass = Malicious"] ;
157 -> 158 ;
159 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
157 -> 159 ;
160 [label="gini = 0.0\nsamples = 289\nvalue = [0, 289]\nclass = Malicious"] ;
156 -> 160 ;
161 [label="equalityexpression <= 0.5\ngini = 0.062\nsamples = 156\nvalue = [5, 151]\nclass = Malicious"] ;
155 -> 161 ;
162 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
161 -> 162 ;
163 [label="gini = 0.0\nsamples = 151\nvalue = [0, 151]\nclass = Malicious"] ;
161 -> 163 ;
164 [label="variablestatement <= 0.5\ngini = 0.058\nsamples = 398\nvalue = [12, 386]\nclass = Malicious"] ;
148 -> 164 ;
165 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
164 -> 165 ;
166 [label="thisexpression <= 0.5\ngini = 0.015\nsamples = 389\nvalue = [3, 386]\nclass = Malicious"] ;
164 -> 166 ;
167 [label="additiveexpression <= 0.5\ngini = 0.266\nsamples = 19\nvalue = [3, 16]\nclass = Malicious"] ;
166 -> 167 ;
168 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
167 -> 168 ;
169 [label="gini = 0.0\nsamples = 16\nvalue = [0, 16]\nclass = Malicious"] ;
167 -> 169 ;
170 [label="gini = 0.0\nsamples = 370\nvalue = [0, 370]\nclass = Malicious"] ;
166 -> 170 ;
171 [label="relationalexpression <= 0.5\ngini = 0.187\nsamples = 736\nvalue = [77, 659]\nclass = Malicious"] ;
147 -> 171 ;
172 [label="identifiername <= 0.5\ngini = 0.465\nsamples = 106\nvalue = [67, 39]\nclass = Benign"] ;
171 -> 172 ;
173 [label="gini = 0.0\nsamples = 37\nvalue = [0, 37]\nclass = Malicious"] ;
172 -> 173 ;
174 [label="assignmentexpression <= 0.5\ngini = 0.056\nsamples = 69\nvalue = [67, 2]\nclass = Benign"] ;
172 -> 174 ;
175 [label="formalparameterarg <= 0.5\ngini = 0.5\nsamples = 4\nvalue = [2, 2]\nclass = Benign"] ;
174 -> 175 ;
176 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
175 -> 176 ;
177 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
175 -> 177 ;
178 [label="gini = 0.0\nsamples = 65\nvalue = [65, 0]\nclass = Benign"] ;
174 -> 178 ;
179 [label="returnstatement <= 0.5\ngini = 0.031\nsamples = 630\nvalue = [10, 620]\nclass = Malicious"] ;
171 -> 179 ;
180 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
179 -> 180 ;
181 [label="elementlist <= 0.5\ngini = 0.003\nsamples = 621\nvalue = [1, 620]\nclass = Malicious"] ;
179 -> 181 ;
182 [label="assignmentoperatorexpression <= 0.5\ngini = 0.087\nsamples = 22\nvalue = [1, 21]\nclass = Malicious"] ;
181 -> 182 ;
183 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
182 -> 183 ;
184 [label="gini = 0.0\nsamples = 21\nvalue = [0, 21]\nclass = Malicious"] ;
182 -> 184 ;
185 [label="gini = 0.0\nsamples = 599\nvalue = [0, 599]\nclass = Malicious"] ;
181 -> 185 ;
186 [label="variablestatement <= 0.5\ngini = 0.007\nsamples = 3248\nvalue = [11, 3237]\nclass = Malicious"] ;
146 -> 186 ;
187 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
186 -> 187 ;
188 [label="statementlist <= 0.5\ngini = 0.004\nsamples = 3244\nvalue = [7, 3237]\nclass = Malicious"] ;
186 -> 188 ;
189 [label="formalparameterlist <= 0.5\ngini = 0.024\nsamples = 502\nvalue = [6, 496]\nclass = Malicious"] ;
188 -> 189 ;
190 [label="assignmentoperatorexpression <= 0.5\ngini = 0.444\nsamples = 9\nvalue = [6, 3]\nclass = Benign"] ;
189 -> 190 ;
191 [label="memberdotexpression <= 0.5\ngini = 0.245\nsamples = 7\nvalue = [6, 1]\nclass = Benign"] ;
190 -> 191 ;
192 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
191 -> 192 ;
193 [label="functionbody <= 0.5\ngini = 0.375\nsamples = 4\nvalue = [3, 1]\nclass = Benign"] ;
191 -> 193 ;
194 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
193 -> 194 ;
195 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
193 -> 195 ;
196 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
190 -> 196 ;
197 [label="gini = 0.0\nsamples = 493\nvalue = [0, 493]\nclass = Malicious"] ;
189 -> 197 ;
198 [label="equalityexpression <= 0.5\ngini = 0.001\nsamples = 2742\nvalue = [1, 2741]\nclass = Malicious"] ;
188 -> 198 ;
199 [label="formalparameterlist <= 0.5\ngini = 0.004\nsamples = 451\nvalue = [1, 450]\nclass = Malicious"] ;
198 -> 199 ;
200 [label="gini = 0.0\nsamples = 449\nvalue = [0, 449]\nclass = Malicious"] ;
199 -> 200 ;
201 [label="elementlist <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
199 -> 201 ;
202 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
201 -> 202 ;
203 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
201 -> 203 ;
204 [label="gini = 0.0\nsamples = 2291\nvalue = [0, 2291]\nclass = Malicious"] ;
198 -> 204 ;
205 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
145 -> 205 ;
206 [label="arrayliteral <= 0.5\ngini = 0.444\nsamples = 6\nvalue = [4, 2]\nclass = Benign"] ;
144 -> 206 ;
207 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
206 -> 207 ;
208 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
206 -> 208 ;
209 [label="identifiername <= 0.5\ngini = 0.494\nsamples = 18\nvalue = [10, 8]\nclass = Benign"] ;
143 -> 209 ;
210 [label="gini = 0.0\nsamples = 8\nvalue = [0, 8]\nclass = Malicious"] ;
209 -> 210 ;
211 [label="gini = 0.0\nsamples = 10\nvalue = [10, 0]\nclass = Benign"] ;
209 -> 211 ;
212 [label="gini = 0.0\nsamples = 11\nvalue = [11, 0]\nclass = Benign"] ;
142 -> 212 ;
213 [label="gini = 0.0\nsamples = 17\nvalue = [17, 0]\nclass = Benign"] ;
141 -> 213 ;
214 [label="gini = 0.0\nsamples = 56\nvalue = [56, 0]\nclass = Benign"] ;
140 -> 214 ;
215 [label="gini = 0.0\nsamples = 61\nvalue = [61, 0]\nclass = Benign"] ;
139 -> 215 ;
216 [label="forstatement <= 0.5\ngini = 0.249\nsamples = 10749\nvalue = [9186, 1563]\nclass = Benign"] ;
0 -> 216 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
217 [label="bitshiftexpression <= 0.5\ngini = 0.012\nsamples = 9211\nvalue = [9154, 57]\nclass = Benign"] ;
216 -> 217 ;
218 [label="whilestatement <= 0.5\ngini = 0.001\nsamples = 9159\nvalue = [9154, 5]\nclass = Benign"] ;
217 -> 218 ;
219 [label="trystatement <= 0.5\ngini = 0.001\nsamples = 9154\nvalue = [9151, 3]\nclass = Benign"] ;
218 -> 219 ;
220 [label="forvarstatement <= 0.5\ngini = 0.0\nsamples = 9039\nvalue = [9038, 1]\nclass = Benign"] ;
219 -> 220 ;
221 [label="gini = 0.0\nsamples = 8952\nvalue = [8952, 0]\nclass = Benign"] ;
220 -> 221 ;
222 [label="postincrementexpression <= 0.5\ngini = 0.023\nsamples = 87\nvalue = [86, 1]\nclass = Benign"] ;
220 -> 222 ;
223 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
222 -> 223 ;
224 [label="gini = 0.0\nsamples = 86\nvalue = [86, 0]\nclass = Benign"] ;
222 -> 224 ;
225 [label="memberdotexpression <= 0.5\ngini = 0.034\nsamples = 115\nvalue = [113, 2]\nclass = Benign"] ;
219 -> 225 ;
226 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
225 -> 226 ;
227 [label="gini = 0.0\nsamples = 113\nvalue = [113, 0]\nclass = Benign"] ;
225 -> 227 ;
228 [label="relationalexpression <= 0.5\ngini = 0.48\nsamples = 5\nvalue = [3, 2]\nclass = Benign"] ;
218 -> 228 ;
229 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
228 -> 229 ;
230 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
228 -> 230 ;
231 [label="gini = 0.0\nsamples = 52\nvalue = [0, 52]\nclass = Malicious"] ;
217 -> 231 ;
232 [label="memberdotexpression <= 0.5\ngini = 0.041\nsamples = 1538\nvalue = [32, 1506]\nclass = Malicious"] ;
216 -> 232 ;
233 [label="gini = 0.0\nsamples = 1502\nvalue = [0, 1502]\nclass = Malicious"] ;
232 -> 233 ;
234 [label="bitandexpression <= 0.5\ngini = 0.198\nsamples = 36\nvalue = [32, 4]\nclass = Benign"] ;
232 -> 234 ;
235 [label="gini = 0.0\nsamples = 32\nvalue = [32, 0]\nclass = Benign"] ;
234 -> 235 ;
236 [label="gini = 0.0\nsamples = 4\nvalue = [0, 4]\nclass = Malicious"] ;
234 -> 236 ;
}
