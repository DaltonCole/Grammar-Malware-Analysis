digraph Tree {
node [shape=box] ;
0 [label="expression_statement-objectliteral <= 0.5\ngini = 0.5\nsamples = 27000\nvalue = [13499, 13501]\nclass = Malicious"] ;
1 [label="literal-arguments <= 0.5\ngini = 0.388\nsamples = 16237\nvalue = [4284, 11953]\nclass = Malicious"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="identifiername-identifiername <= 0.5\ngini = 0.472\nsamples = 11181\nvalue = [4279, 6902]\nclass = Malicious"] ;
1 -> 2 ;
3 [label="expression_statement-arguments <= 0.5\ngini = 0.435\nsamples = 10140\nvalue = [3245, 6895]\nclass = Malicious"] ;
2 -> 3 ;
4 [label="sourceelements-sourceelement <= 0.5\ngini = 0.493\nsamples = 5532\nvalue = [2445, 3087]\nclass = Malicious"] ;
3 -> 4 ;
5 [label="gini = 0.395\nsamples = 2585\nvalue = [701, 1884]\nclass = Malicious"] ;
4 -> 5 ;
6 [label="returnstatement-expressionsequence <= 0.5\ngini = 0.483\nsamples = 2947\nvalue = [1744, 1203]\nclass = Benign"] ;
4 -> 6 ;
7 [label="literal-identifiername <= 0.5\ngini = 0.41\nsamples = 2448\nvalue = [1743, 705]\nclass = Benign"] ;
6 -> 7 ;
8 [label="arguments-expression_statement <= 0.5\ngini = 0.226\nsamples = 1852\nvalue = [1612, 240]\nclass = Benign"] ;
7 -> 8 ;
9 [label="gini = 0.0\nsamples = 1155\nvalue = [1155, 0]\nclass = Benign"] ;
8 -> 9 ;
10 [label="numericliteral-eos <= 0.5\ngini = 0.452\nsamples = 697\nvalue = [457, 240]\nclass = Benign"] ;
8 -> 10 ;
11 [label="gini = 0.0\nsamples = 356\nvalue = [356, 0]\nclass = Benign"] ;
10 -> 11 ;
12 [label="eos-sourceelement <= 0.5\ngini = 0.417\nsamples = 341\nvalue = [101, 240]\nclass = Malicious"] ;
10 -> 12 ;
13 [label="gini = 0.0\nsamples = 87\nvalue = [87, 0]\nclass = Benign"] ;
12 -> 13 ;
14 [label="literal-expression_statement <= 0.5\ngini = 0.104\nsamples = 254\nvalue = [14, 240]\nclass = Malicious"] ;
12 -> 14 ;
15 [label="expression_statement-eos <= 0.5\ngini = 0.017\nsamples = 234\nvalue = [2, 232]\nclass = Malicious"] ;
14 -> 15 ;
16 [label="gini = 0.0\nsamples = 232\nvalue = [0, 232]\nclass = Malicious"] ;
15 -> 16 ;
17 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
15 -> 17 ;
18 [label="literal-expressionsequence <= 0.5\ngini = 0.48\nsamples = 20\nvalue = [12, 8]\nclass = Benign"] ;
14 -> 18 ;
19 [label="gini = 0.0\nsamples = 12\nvalue = [12, 0]\nclass = Benign"] ;
18 -> 19 ;
20 [label="gini = 0.0\nsamples = 8\nvalue = [0, 8]\nclass = Malicious"] ;
18 -> 20 ;
21 [label="expression_statement-identifiername <= 0.5\ngini = 0.343\nsamples = 596\nvalue = [131, 465]\nclass = Malicious"] ;
7 -> 21 ;
22 [label="literal-expression_statement <= 0.5\ngini = 0.004\nsamples = 466\nvalue = [1, 465]\nclass = Malicious"] ;
21 -> 22 ;
23 [label="gini = 0.0\nsamples = 465\nvalue = [0, 465]\nclass = Malicious"] ;
22 -> 23 ;
24 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
22 -> 24 ;
25 [label="gini = 0.0\nsamples = 130\nvalue = [130, 0]\nclass = Benign"] ;
21 -> 25 ;
26 [label="identifiername-arguments <= 0.5\ngini = 0.004\nsamples = 499\nvalue = [1, 498]\nclass = Malicious"] ;
6 -> 26 ;
27 [label="gini = 0.0\nsamples = 498\nvalue = [0, 498]\nclass = Malicious"] ;
26 -> 27 ;
28 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
26 -> 28 ;
29 [label="variabledeclaration-expression_statement <= 0.5\ngini = 0.287\nsamples = 4608\nvalue = [800, 3808]\nclass = Malicious"] ;
3 -> 29 ;
30 [label="literal-expression_statement <= 0.5\ngini = 0.483\nsamples = 1046\nvalue = [619, 427]\nclass = Benign"] ;
29 -> 30 ;
31 [label="expression_statement-functionbody <= 0.5\ngini = 0.43\nsamples = 621\nvalue = [194, 427]\nclass = Malicious"] ;
30 -> 31 ;
32 [label="expression_statement-eos <= 0.5\ngini = 0.358\nsamples = 557\nvalue = [130, 427]\nclass = Malicious"] ;
31 -> 32 ;
33 [label="arguments-identifiername <= 0.5\ngini = 0.492\nsamples = 297\nvalue = [130, 167]\nclass = Malicious"] ;
32 -> 33 ;
34 [label="gini = 0.0\nsamples = 124\nvalue = [124, 0]\nclass = Benign"] ;
33 -> 34 ;
35 [label="literal-identifiername <= 0.5\ngini = 0.067\nsamples = 173\nvalue = [6, 167]\nclass = Malicious"] ;
33 -> 35 ;
36 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
35 -> 36 ;
37 [label="gini = 0.0\nsamples = 167\nvalue = [0, 167]\nclass = Malicious"] ;
35 -> 37 ;
38 [label="gini = 0.0\nsamples = 260\nvalue = [0, 260]\nclass = Malicious"] ;
32 -> 38 ;
39 [label="gini = 0.0\nsamples = 64\nvalue = [64, 0]\nclass = Benign"] ;
31 -> 39 ;
40 [label="gini = 0.0\nsamples = 425\nvalue = [425, 0]\nclass = Benign"] ;
30 -> 40 ;
41 [label="expression_statement-functionbody <= 0.5\ngini = 0.096\nsamples = 3562\nvalue = [181, 3381]\nclass = Malicious"] ;
29 -> 41 ;
42 [label="arguments-expression_statement <= 0.5\ngini = 0.054\nsamples = 3320\nvalue = [92, 3228]\nclass = Malicious"] ;
41 -> 42 ;
43 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
42 -> 43 ;
44 [label="expressionsequence-expression_statement <= 0.5\ngini = 0.046\nsamples = 3306\nvalue = [78, 3228]\nclass = Malicious"] ;
42 -> 44 ;
45 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
44 -> 45 ;
46 [label="eos-arguments <= 0.5\ngini = 0.042\nsamples = 3298\nvalue = [70, 3228]\nclass = Malicious"] ;
44 -> 46 ;
47 [label="literal-expression_statement <= 0.5\ngini = 0.038\nsamples = 3291\nvalue = [64, 3227]\nclass = Malicious"] ;
46 -> 47 ;
48 [label="expression_statement-identifiername <= 0.5\ngini = 0.223\nsamples = 290\nvalue = [37, 253]\nclass = Malicious"] ;
47 -> 48 ;
49 [label="expression_statement-assignmentoperator <= 0.5\ngini = 0.469\nsamples = 56\nvalue = [35, 21]\nclass = Benign"] ;
48 -> 49 ;
50 [label="arguments-identifiername <= 0.5\ngini = 0.054\nsamples = 36\nvalue = [35, 1]\nclass = Benign"] ;
49 -> 50 ;
51 [label="gini = 0.0\nsamples = 35\nvalue = [35, 0]\nclass = Benign"] ;
50 -> 51 ;
52 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
50 -> 52 ;
53 [label="gini = 0.0\nsamples = 20\nvalue = [0, 20]\nclass = Malicious"] ;
49 -> 53 ;
54 [label="literal-numericliteral <= 0.5\ngini = 0.017\nsamples = 234\nvalue = [2, 232]\nclass = Malicious"] ;
48 -> 54 ;
55 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
54 -> 55 ;
56 [label="gini = 0.0\nsamples = 232\nvalue = [0, 232]\nclass = Malicious"] ;
54 -> 56 ;
57 [label="identifiername-expression_statement <= 0.5\ngini = 0.018\nsamples = 3001\nvalue = [27, 2974]\nclass = Malicious"] ;
47 -> 57 ;
58 [label="identifiername-eos <= 0.5\ngini = 0.009\nsamples = 2873\nvalue = [13, 2860]\nclass = Malicious"] ;
57 -> 58 ;
59 [label="catchproduction-block <= 0.5\ngini = 0.008\nsamples = 2871\nvalue = [12, 2859]\nclass = Malicious"] ;
58 -> 59 ;
60 [label="expression_statement-assignmentoperator <= 0.5\ngini = 0.008\nsamples = 2869\nvalue = [11, 2858]\nclass = Malicious"] ;
59 -> 60 ;
61 [label="numericliteral-eos <= 0.5\ngini = 0.007\nsamples = 2866\nvalue = [10, 2856]\nclass = Malicious"] ;
60 -> 61 ;
62 [label="statement-block <= 0.5\ngini = 0.014\nsamples = 1460\nvalue = [10, 1450]\nclass = Malicious"] ;
61 -> 62 ;
63 [label="expression_statement-identifiername <= 0.5\ngini = 0.008\nsamples = 1454\nvalue = [6, 1448]\nclass = Malicious"] ;
62 -> 63 ;
64 [label="expression_statement-eos <= 0.5\ngini = 0.002\nsamples = 1052\nvalue = [1, 1051]\nclass = Malicious"] ;
63 -> 64 ;
65 [label="gini = 0.003\nsamples = 677\nvalue = [1, 676]\nclass = Malicious"] ;
64 -> 65 ;
66 [label="gini = 0.0\nsamples = 375\nvalue = [0, 375]\nclass = Malicious"] ;
64 -> 66 ;
67 [label="literal-statement <= 0.5\ngini = 0.025\nsamples = 402\nvalue = [5, 397]\nclass = Malicious"] ;
63 -> 67 ;
68 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
67 -> 68 ;
69 [label="gini = 0.0\nsamples = 397\nvalue = [0, 397]\nclass = Malicious"] ;
67 -> 69 ;
70 [label="expression_statement-expressionsequence <= 0.5\ngini = 0.444\nsamples = 6\nvalue = [4, 2]\nclass = Benign"] ;
62 -> 70 ;
71 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
70 -> 71 ;
72 [label="functionbody-sourceelements <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
70 -> 72 ;
73 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
72 -> 73 ;
74 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
72 -> 74 ;
75 [label="gini = 0.0\nsamples = 1406\nvalue = [0, 1406]\nclass = Malicious"] ;
61 -> 75 ;
76 [label="statement-block <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
60 -> 76 ;
77 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
76 -> 77 ;
78 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
76 -> 78 ;
79 [label="numericliteral-expression_statement <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
59 -> 79 ;
80 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
79 -> 80 ;
81 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
79 -> 81 ;
82 [label="breakstatement-eos <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
58 -> 82 ;
83 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
82 -> 83 ;
84 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
82 -> 84 ;
85 [label="expression_statement-expressionsequence <= 0.5\ngini = 0.195\nsamples = 128\nvalue = [14, 114]\nclass = Malicious"] ;
57 -> 85 ;
86 [label="gini = 0.0\nsamples = 11\nvalue = [11, 0]\nclass = Benign"] ;
85 -> 86 ;
87 [label="literal-eos <= 0.5\ngini = 0.05\nsamples = 117\nvalue = [3, 114]\nclass = Malicious"] ;
85 -> 87 ;
88 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
87 -> 88 ;
89 [label="gini = 0.0\nsamples = 114\nvalue = [0, 114]\nclass = Malicious"] ;
87 -> 89 ;
90 [label="expression_statement-statement <= 0.5\ngini = 0.245\nsamples = 7\nvalue = [6, 1]\nclass = Benign"] ;
46 -> 90 ;
91 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
90 -> 91 ;
92 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
90 -> 92 ;
93 [label="expression_statement-assignmentoperator <= 0.5\ngini = 0.465\nsamples = 242\nvalue = [89, 153]\nclass = Malicious"] ;
41 -> 93 ;
94 [label="emptystatement-eos <= 0.5\ngini = 0.023\nsamples = 87\nvalue = [86, 1]\nclass = Benign"] ;
93 -> 94 ;
95 [label="gini = 0.0\nsamples = 86\nvalue = [86, 0]\nclass = Benign"] ;
94 -> 95 ;
96 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
94 -> 96 ;
97 [label="formalparameterarg-formalparameterarg <= 0.5\ngini = 0.038\nsamples = 155\nvalue = [3, 152]\nclass = Malicious"] ;
93 -> 97 ;
98 [label="literal-eos <= 0.5\ngini = 0.013\nsamples = 152\nvalue = [1, 151]\nclass = Malicious"] ;
97 -> 98 ;
99 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
98 -> 99 ;
100 [label="gini = 0.0\nsamples = 151\nvalue = [0, 151]\nclass = Malicious"] ;
98 -> 100 ;
101 [label="numericliteral-expressionsequence <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [2, 1]\nclass = Benign"] ;
97 -> 101 ;
102 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
101 -> 102 ;
103 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
101 -> 103 ;
104 [label="statement-breakstatement <= 0.5\ngini = 0.013\nsamples = 1041\nvalue = [1034, 7]\nclass = Benign"] ;
2 -> 104 ;
105 [label="expression_statement-assignmentoperator <= 0.5\ngini = 0.004\nsamples = 1036\nvalue = [1034, 2]\nclass = Benign"] ;
104 -> 105 ;
106 [label="numericliteral-expression_statement <= 0.5\ngini = 0.002\nsamples = 1033\nvalue = [1032, 1]\nclass = Benign"] ;
105 -> 106 ;
107 [label="gini = 0.0\nsamples = 926\nvalue = [926, 0]\nclass = Benign"] ;
106 -> 107 ;
108 [label="literal-expression_statement <= 0.5\ngini = 0.019\nsamples = 107\nvalue = [106, 1]\nclass = Benign"] ;
106 -> 108 ;
109 [label="statement-block <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [2, 1]\nclass = Benign"] ;
108 -> 109 ;
110 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
109 -> 110 ;
111 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
109 -> 111 ;
112 [label="gini = 0.0\nsamples = 104\nvalue = [104, 0]\nclass = Benign"] ;
108 -> 112 ;
113 [label="formalparameterlist-formalparameterarg <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [2, 1]\nclass = Benign"] ;
105 -> 113 ;
114 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
113 -> 114 ;
115 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
113 -> 115 ;
116 [label="gini = 0.0\nsamples = 5\nvalue = [0, 5]\nclass = Malicious"] ;
104 -> 116 ;
117 [label="eos-arguments <= 0.5\ngini = 0.002\nsamples = 5056\nvalue = [5, 5051]\nclass = Malicious"] ;
1 -> 117 ;
118 [label="arguments-expression_statement <= 0.5\ngini = 0.001\nsamples = 5053\nvalue = [2, 5051]\nclass = Malicious"] ;
117 -> 118 ;
119 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
118 -> 119 ;
120 [label="literal-eos <= 0.5\ngini = 0.0\nsamples = 5052\nvalue = [1, 5051]\nclass = Malicious"] ;
118 -> 120 ;
121 [label="functionbody-sourceelements <= 0.5\ngini = 0.011\nsamples = 177\nvalue = [1, 176]\nclass = Malicious"] ;
120 -> 121 ;
122 [label="gini = 0.0\nsamples = 176\nvalue = [0, 176]\nclass = Malicious"] ;
121 -> 122 ;
123 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
121 -> 123 ;
124 [label="gini = 0.0\nsamples = 4875\nvalue = [0, 4875]\nclass = Malicious"] ;
120 -> 124 ;
125 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
117 -> 125 ;
126 [label="do_for_while_statement-expressionsequence <= 0.5\ngini = 0.246\nsamples = 10763\nvalue = [9215, 1548]\nclass = Benign"] ;
0 -> 126 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
127 [label="numericliteral-arguments <= 0.5\ngini = 0.007\nsamples = 9212\nvalue = [9181, 31]\nclass = Benign"] ;
126 -> 127 ;
128 [label="literal-arguments <= 0.5\ngini = 0.001\nsamples = 9184\nvalue = [9181, 3]\nclass = Benign"] ;
127 -> 128 ;
129 [label="gini = 0.0\nsamples = 9169\nvalue = [9169, 0]\nclass = Benign"] ;
128 -> 129 ;
130 [label="literal-expressionsequence <= 0.5\ngini = 0.32\nsamples = 15\nvalue = [12, 3]\nclass = Benign"] ;
128 -> 130 ;
131 [label="gini = 0.0\nsamples = 12\nvalue = [12, 0]\nclass = Benign"] ;
130 -> 131 ;
132 [label="gini = 0.0\nsamples = 3\nvalue = [0, 3]\nclass = Malicious"] ;
130 -> 132 ;
133 [label="gini = 0.0\nsamples = 28\nvalue = [0, 28]\nclass = Malicious"] ;
127 -> 133 ;
134 [label="literal-expressionsequence <= 0.5\ngini = 0.043\nsamples = 1551\nvalue = [34, 1517]\nclass = Malicious"] ;
126 -> 134 ;
135 [label="functionbody-sourceelements <= 0.5\ngini = 0.229\nsamples = 38\nvalue = [33, 5]\nclass = Benign"] ;
134 -> 135 ;
136 [label="gini = 0.0\nsamples = 5\nvalue = [0, 5]\nclass = Malicious"] ;
135 -> 136 ;
137 [label="gini = 0.0\nsamples = 33\nvalue = [33, 0]\nclass = Benign"] ;
135 -> 137 ;
138 [label="returnstatement-eos <= 0.5\ngini = 0.001\nsamples = 1513\nvalue = [1, 1512]\nclass = Malicious"] ;
134 -> 138 ;
139 [label="gini = 0.0\nsamples = 1512\nvalue = [0, 1512]\nclass = Malicious"] ;
138 -> 139 ;
140 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
138 -> 140 ;
}
