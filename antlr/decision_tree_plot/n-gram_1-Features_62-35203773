igraph Tree {
node [shape=box] ;
0 [label="objectliteral <= 0.5\ngini = 0.5\nsamples = 27000\nvalue = [13477, 13523]\nclass = Malicious"] ;
1 [label="numericliteral <= 0.5\ngini = 0.389\nsamples = 16257\nvalue = [4303, 11954]\nclass = Malicious"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="expressionstatement <= 0.5\ngini = 0.484\nsamples = 7321\nvalue = [3006, 4315]\nclass = Malicious"] ;
1 -> 2 ;
3 [label="arguments <= 0.5\ngini = 0.407\nsamples = 3968\nvalue = [1127, 2841]\nclass = Malicious"] ;
2 -> 3 ;
4 [label="variabledeclaration <= 0.5\ngini = 0.465\nsamples = 2971\nvalue = [1090, 1881]\nclass = Malicious"] ;
3 -> 4 ;
5 [label="gini = 0.39\nsamples = 2561\nvalue = [680, 1881]\nclass = Malicious"] ;
4 -> 5 ;
6 [label="gini = 0.0\nsamples = 410\nvalue = [410, 0]\nclass = Benign"] ;
4 -> 6 ;
7 [label="literal <= 0.5\ngini = 0.071\nsamples = 997\nvalue = [37, 960]\nclass = Malicious"] ;
3 -> 7 ;
8 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
7 -> 8 ;
9 [label="elementlist <= 0.5\ngini = 0.059\nsamples = 990\nvalue = [30, 960]\nclass = Malicious"] ;
7 -> 9 ;
10 [label="expressionsequence <= 0.5\ngini = 0.053\nsamples = 987\nvalue = [27, 960]\nclass = Malicious"] ;
9 -> 10 ;
11 [label="identifiername <= 0.5\ngini = 0.102\nsamples = 500\nvalue = [27, 473]\nclass = Malicious"] ;
10 -> 11 ;
12 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
11 -> 12 ;
13 [label="gini = 0.099\nsamples = 499\nvalue = [26, 473]\nclass = Malicious"] ;
11 -> 13 ;
14 [label="gini = 0.0\nsamples = 487\nvalue = [0, 487]\nclass = Malicious"] ;
10 -> 14 ;
15 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
9 -> 15 ;
16 [label="varmodifier <= 0.5\ngini = 0.493\nsamples = 3353\nvalue = [1879, 1474]\nclass = Benign"] ;
2 -> 16 ;
17 [label="functionbody <= 0.5\ngini = 0.358\nsamples = 1889\nvalue = [1447, 442]\nclass = Benign"] ;
16 -> 17 ;
18 [label="identifiername <= 0.5\ngini = 0.427\nsamples = 1431\nvalue = [989, 442]\nclass = Benign"] ;
17 -> 18 ;
19 [label="gini = 0.0\nsamples = 355\nvalue = [355, 0]\nclass = Benign"] ;
18 -> 19 ;
20 [label="arguments <= 0.5\ngini = 0.484\nsamples = 1076\nvalue = [634, 442]\nclass = Benign"] ;
18 -> 20 ;
21 [label="gini = 0.0\nsamples = 156\nvalue = [156, 0]\nclass = Benign"] ;
20 -> 21 ;
22 [label="ifstatement <= 0.5\ngini = 0.499\nsamples = 920\nvalue = [478, 442]\nclass = Benign"] ;
20 -> 22 ;
23 [label="arrayliteral <= 0.5\ngini = 0.5\nsamples = 863\nvalue = [421, 442]\nclass = Malicious"] ;
22 -> 23 ;
24 [label="literal <= 0.5\ngini = 0.496\nsamples = 808\nvalue = [366, 442]\nclass = Malicious"] ;
23 -> 24 ;
25 [label="gini = 0.0\nsamples = 24\nvalue = [24, 0]\nclass = Benign"] ;
24 -> 25 ;
26 [label="statementlist <= 0.5\ngini = 0.492\nsamples = 784\nvalue = [342, 442]\nclass = Malicious"] ;
24 -> 26 ;
27 [label="gini = 0.491\nsamples = 781\nvalue = [339, 442]\nclass = Malicious"] ;
26 -> 27 ;
28 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
26 -> 28 ;
29 [label="gini = 0.0\nsamples = 55\nvalue = [55, 0]\nclass = Benign"] ;
23 -> 29 ;
30 [label="gini = 0.0\nsamples = 57\nvalue = [57, 0]\nclass = Benign"] ;
22 -> 30 ;
31 [label="gini = 0.0\nsamples = 458\nvalue = [458, 0]\nclass = Benign"] ;
17 -> 31 ;
32 [label="identifiername <= 0.5\ngini = 0.416\nsamples = 1464\nvalue = [432, 1032]\nclass = Malicious"] ;
16 -> 32 ;
33 [label="arguments <= 0.5\ngini = 0.077\nsamples = 827\nvalue = [33, 794]\nclass = Malicious"] ;
32 -> 33 ;
34 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
33 -> 34 ;
35 [label="withstatement <= 0.5\ngini = 0.068\nsamples = 823\nvalue = [29, 794]\nclass = Malicious"] ;
33 -> 35 ;
36 [label="returnstatement <= 0.5\ngini = 0.064\nsamples = 821\nvalue = [27, 794]\nclass = Malicious"] ;
35 -> 36 ;
37 [label="assignmentoperator <= 0.5\ngini = 0.056\nsamples = 794\nvalue = [23, 771]\nclass = Malicious"] ;
36 -> 37 ;
38 [label="gini = 0.06\nsamples = 739\nvalue = [23, 716]\nclass = Malicious"] ;
37 -> 38 ;
39 [label="gini = 0.0\nsamples = 55\nvalue = [0, 55]\nclass = Malicious"] ;
37 -> 39 ;
40 [label="assignmentoperator <= 0.5\ngini = 0.252\nsamples = 27\nvalue = [4, 23]\nclass = Malicious"] ;
36 -> 40 ;
41 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
40 -> 41 ;
42 [label="gini = 0.147\nsamples = 25\nvalue = [2, 23]\nclass = Malicious"] ;
40 -> 42 ;
43 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
35 -> 43 ;
44 [label="returnstatement <= 0.5\ngini = 0.468\nsamples = 637\nvalue = [399, 238]\nclass = Benign"] ;
32 -> 44 ;
45 [label="elementlist <= 0.5\ngini = 0.015\nsamples = 387\nvalue = [384, 3]\nclass = Benign"] ;
44 -> 45 ;
46 [label="functionbody <= 0.5\ngini = 0.011\nsamples = 378\nvalue = [376, 2]\nclass = Benign"] ;
45 -> 46 ;
47 [label="assignmentoperator <= 0.5\ngini = 0.022\nsamples = 181\nvalue = [179, 2]\nclass = Benign"] ;
46 -> 47 ;
48 [label="arguments <= 0.5\ngini = 0.042\nsamples = 93\nvalue = [91, 2]\nclass = Benign"] ;
47 -> 48 ;
49 [label="gini = 0.0\nsamples = 26\nvalue = [26, 0]\nclass = Benign"] ;
48 -> 49 ;
50 [label="arrayliteral <= 0.5\ngini = 0.058\nsamples = 67\nvalue = [65, 2]\nclass = Benign"] ;
48 -> 50 ;
51 [label="trystatement <= 0.5\ngini = 0.061\nsamples = 63\nvalue = [61, 2]\nclass = Benign"] ;
50 -> 51 ;
52 [label="ifstatement <= 0.5\ngini = 0.063\nsamples = 61\nvalue = [59, 2]\nclass = Benign"] ;
51 -> 52 ;
53 [label="gini = 0.069\nsamples = 28\nvalue = [27, 1]\nclass = Benign"] ;
52 -> 53 ;
54 [label="block <= 0.5\ngini = 0.059\nsamples = 33\nvalue = [32, 1]\nclass = Benign"] ;
52 -> 54 ;
55 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
54 -> 55 ;
56 [label="gini = 0.064\nsamples = 30\nvalue = [29, 1]\nclass = Benign"] ;
54 -> 56 ;
57 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
51 -> 57 ;
58 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
50 -> 58 ;
59 [label="gini = 0.0\nsamples = 88\nvalue = [88, 0]\nclass = Benign"] ;
47 -> 59 ;
60 [label="gini = 0.0\nsamples = 197\nvalue = [197, 0]\nclass = Benign"] ;
46 -> 60 ;
61 [label="block <= 0.5\ngini = 0.198\nsamples = 9\nvalue = [8, 1]\nclass = Benign"] ;
45 -> 61 ;
62 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
61 -> 62 ;
63 [label="functionbody <= 0.5\ngini = 0.375\nsamples = 4\nvalue = [3, 1]\nclass = Benign"] ;
61 -> 63 ;
64 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
63 -> 64 ;
65 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
63 -> 65 ;
66 [label="statementlist <= 0.5\ngini = 0.113\nsamples = 250\nvalue = [15, 235]\nclass = Malicious"] ;
44 -> 66 ;
67 [label="formalparameterlist <= 0.5\ngini = 0.071\nsamples = 244\nvalue = [9, 235]\nclass = Malicious"] ;
66 -> 67 ;
68 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
67 -> 68 ;
69 [label="gini = 0.064\nsamples = 243\nvalue = [8, 235]\nclass = Malicious"] ;
67 -> 69 ;
70 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
66 -> 70 ;
71 [label="expressionstatement <= 0.5\ngini = 0.248\nsamples = 8936\nvalue = [1297, 7639]\nclass = Malicious"] ;
1 -> 71 ;
72 [label="gini = 0.0\nsamples = 268\nvalue = [268, 0]\nclass = Benign"] ;
71 -> 72 ;
73 [label="variablestatement <= 0.5\ngini = 0.209\nsamples = 8668\nvalue = [1029, 7639]\nclass = Malicious"] ;
71 -> 73 ;
74 [label="returnstatement <= 0.5\ngini = 0.396\nsamples = 1455\nvalue = [396, 1059]\nclass = Malicious"] ;
73 -> 74 ;
75 [label="ifstatement <= 0.5\ngini = 0.486\nsamples = 934\nvalue = [389, 545]\nclass = Malicious"] ;
74 -> 75 ;
76 [label="arguments <= 0.5\ngini = 0.4\nsamples = 448\nvalue = [324, 124]\nclass = Benign"] ;
75 -> 76 ;
77 [label="gini = 0.0\nsamples = 98\nvalue = [98, 0]\nclass = Benign"] ;
76 -> 77 ;
78 [label="functionbody <= 0.5\ngini = 0.458\nsamples = 350\nvalue = [226, 124]\nclass = Benign"] ;
76 -> 78 ;
79 [label="identifiername <= 0.5\ngini = 0.499\nsamples = 258\nvalue = [134, 124]\nclass = Benign"] ;
78 -> 79 ;
80 [label="elementlist <= 0.5\ngini = 0.121\nsamples = 31\nvalue = [29, 2]\nclass = Benign"] ;
79 -> 80 ;
81 [label="gini = 0.0\nsamples = 29\nvalue = [29, 0]\nclass = Benign"] ;
80 -> 81 ;
82 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
80 -> 82 ;
83 [label="emptystatement <= 0.5\ngini = 0.497\nsamples = 227\nvalue = [105, 122]\nclass = Malicious"] ;
79 -> 83 ;
84 [label="arrayliteral <= 0.5\ngini = 0.489\nsamples = 213\nvalue = [91, 122]\nclass = Malicious"] ;
83 -> 84 ;
85 [label="catchproduction <= 0.5\ngini = 0.485\nsamples = 208\nvalue = [86, 122]\nclass = Malicious"] ;
84 -> 85 ;
86 [label="assignmentoperator <= 0.5\ngini = 0.484\nsamples = 207\nvalue = [85, 122]\nclass = Malicious"] ;
85 -> 86 ;
87 [label="gini = 0.483\nsamples = 206\nvalue = [84, 122]\nclass = Malicious"] ;
86 -> 87 ;
88 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
86 -> 88 ;
89 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
85 -> 89 ;
90 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
84 -> 90 ;
91 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
83 -> 91 ;
92 [label="gini = 0.0\nsamples = 92\nvalue = [92, 0]\nclass = Benign"] ;
78 -> 92 ;
93 [label="statementlist <= 0.5\ngini = 0.232\nsamples = 486\nvalue = [65, 421]\nclass = Malicious"] ;
75 -> 93 ;
94 [label="identifiername <= 0.5\ngini = 0.005\nsamples = 422\nvalue = [1, 421]\nclass = Malicious"] ;
93 -> 94 ;
95 [label="gini = 0.0\nsamples = 133\nvalue = [0, 133]\nclass = Malicious"] ;
94 -> 95 ;
96 [label="gini = 0.007\nsamples = 289\nvalue = [1, 288]\nclass = Malicious"] ;
94 -> 96 ;
97 [label="gini = 0.0\nsamples = 64\nvalue = [64, 0]\nclass = Benign"] ;
93 -> 97 ;
98 [label="identifiername <= 0.5\ngini = 0.027\nsamples = 521\nvalue = [7, 514]\nclass = Malicious"] ;
74 -> 98 ;
99 [label="gini = 0.0\nsamples = 514\nvalue = [0, 514]\nclass = Malicious"] ;
98 -> 99 ;
100 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
98 -> 100 ;
101 [label="arguments <= 0.5\ngini = 0.16\nsamples = 7213\nvalue = [633, 6580]\nclass = Malicious"] ;
73 -> 101 ;
102 [label="gini = 0.0\nsamples = 109\nvalue = [109, 0]\nclass = Benign"] ;
101 -> 102 ;
103 [label="elementlist <= 0.5\ngini = 0.137\nsamples = 7104\nvalue = [524, 6580]\nclass = Malicious"] ;
101 -> 103 ;
104 [label="do_for_while_statement <= 0.5\ngini = 0.24\nsamples = 3348\nvalue = [467, 2881]\nclass = Malicious"] ;
103 -> 104 ;
105 [label="returnstatement <= 0.5\ngini = 0.204\nsamples = 3075\nvalue = [355, 2720]\nclass = Malicious"] ;
104 -> 105 ;
106 [label="functionbody <= 0.5\ngini = 0.296\nsamples = 1287\nvalue = [232, 1055]\nclass = Malicious"] ;
105 -> 106 ;
107 [label="emptystatement <= 0.5\ngini = 0.138\nsamples = 1072\nvalue = [80, 992]\nclass = Malicious"] ;
106 -> 107 ;
108 [label="identifiername <= 0.5\ngini = 0.135\nsamples = 1070\nvalue = [78, 992]\nclass = Malicious"] ;
107 -> 108 ;
109 [label="gini = 0.077\nsamples = 451\nvalue = [18, 433]\nclass = Malicious"] ;
108 -> 109 ;
110 [label="catchproduction <= 0.5\ngini = 0.175\nsamples = 619\nvalue = [60, 559]\nclass = Malicious"] ;
108 -> 110 ;
111 [label="assignmentoperator <= 0.5\ngini = 0.171\nsamples = 615\nvalue = [58, 557]\nclass = Malicious"] ;
110 -> 111 ;
112 [label="ifstatement <= 0.5\ngini = 0.169\nsamples = 613\nvalue = [57, 556]\nclass = Malicious"] ;
111 -> 112 ;
113 [label="gini = 0.154\nsamples = 417\nvalue = [35, 382]\nclass = Malicious"] ;
112 -> 113 ;
114 [label="statementlist <= 0.5\ngini = 0.199\nsamples = 196\nvalue = [22, 174]\nclass = Malicious"] ;
112 -> 114 ;
115 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
114 -> 115 ;
116 [label="gini = 0.162\nsamples = 191\nvalue = [17, 174]\nclass = Malicious"] ;
114 -> 116 ;
117 [label="statementlist <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
111 -> 117 ;
118 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
117 -> 118 ;
119 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
117 -> 119 ;
120 [label="ifstatement <= 0.5\ngini = 0.5\nsamples = 4\nvalue = [2, 2]\nclass = Benign"] ;
110 -> 120 ;
121 [label="gini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
120 -> 121 ;
122 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
120 -> 122 ;
123 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
107 -> 123 ;
124 [label="emptystatement <= 0.5\ngini = 0.414\nsamples = 215\nvalue = [152, 63]\nclass = Benign"] ;
106 -> 124 ;
125 [label="formalparameterarg <= 0.5\ngini = 0.127\nsamples = 162\nvalue = [151, 11]\nclass = Benign"] ;
124 -> 125 ;
126 [label="gini = 0.0\nsamples = 125\nvalue = [125, 0]\nclass = Benign"] ;
125 -> 126 ;
127 [label="statementlist <= 0.5\ngini = 0.418\nsamples = 37\nvalue = [26, 11]\nclass = Benign"] ;
125 -> 127 ;
128 [label="arrayliteral <= 0.5\ngini = 0.475\nsamples = 18\nvalue = [7, 11]\nclass = Malicious"] ;
127 -> 128 ;
129 [label="gini = 0.457\nsamples = 17\nvalue = [6, 11]\nclass = Malicious"] ;
128 -> 129 ;
130 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
128 -> 130 ;
131 [label="gini = 0.0\nsamples = 19\nvalue = [19, 0]\nclass = Benign"] ;
127 -> 131 ;
132 [label="statementlist <= 0.5\ngini = 0.037\nsamples = 53\nvalue = [1, 52]\nclass = Malicious"] ;
124 -> 132 ;
133 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
132 -> 133 ;
134 [label="gini = 0.0\nsamples = 52\nvalue = [0, 52]\nclass = Malicious"] ;
132 -> 134 ;
135 [label="statementlist <= 0.5\ngini = 0.128\nsamples = 1788\nvalue = [123, 1665]\nclass = Malicious"] ;
105 -> 135 ;
136 [label="formalparameterlist <= 0.5\ngini = 0.037\nsamples = 854\nvalue = [16, 838]\nclass = Malicious"] ;
135 -> 136 ;
137 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
136 -> 137 ;
138 [label="ifstatement <= 0.5\ngini = 0.035\nsamples = 853\nvalue = [15, 838]\nclass = Malicious"] ;
136 -> 138 ;
139 [label="gini = 0.0\nsamples = 13\nvalue = [0, 13]\nclass = Malicious"] ;
138 -> 139 ;
140 [label="gini = 0.035\nsamples = 840\nvalue = [15, 825]\nclass = Malicious"] ;
138 -> 140 ;
141 [label="identifiername <= 0.5\ngini = 0.203\nsamples = 934\nvalue = [107, 827]\nclass = Malicious"] ;
135 -> 141 ;
142 [label="gini = 0.0\nsamples = 230\nvalue = [0, 230]\nclass = Malicious"] ;
141 -> 142 ;
143 [label="formalparameterarg <= 0.5\ngini = 0.258\nsamples = 704\nvalue = [107, 597]\nclass = Malicious"] ;
141 -> 143 ;
144 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
143 -> 144 ;
145 [label="emptystatement <= 0.5\ngini = 0.254\nsamples = 702\nvalue = [105, 597]\nclass = Malicious"] ;
143 -> 145 ;
146 [label="gini = 0.253\nsamples = 700\nvalue = [104, 596]\nclass = Malicious"] ;
145 -> 146 ;
147 [label="trystatement <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
145 -> 147 ;
148 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
147 -> 148 ;
149 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
147 -> 149 ;
150 [label="assignmentoperator <= 0.5\ngini = 0.484\nsamples = 273\nvalue = [112, 161]\nclass = Malicious"] ;
104 -> 150 ;
151 [label="emptystatement <= 0.5\ngini = 0.243\nsamples = 127\nvalue = [109, 18]\nclass = Benign"] ;
150 -> 151 ;
152 [label="gini = 0.0\nsamples = 109\nvalue = [109, 0]\nclass = Benign"] ;
151 -> 152 ;
153 [label="gini = 0.0\nsamples = 18\nvalue = [0, 18]\nclass = Malicious"] ;
151 -> 153 ;
154 [label="ifstatement <= 0.5\ngini = 0.04\nsamples = 146\nvalue = [3, 143]\nclass = Malicious"] ;
150 -> 154 ;
155 [label="emptystatement <= 0.5\ngini = 0.014\nsamples = 138\nvalue = [1, 137]\nclass = Malicious"] ;
154 -> 155 ;
156 [label="functionbody <= 0.5\ngini = 0.08\nsamples = 24\nvalue = [1, 23]\nclass = Malicious"] ;
155 -> 156 ;
157 [label="statementlist <= 0.5\ngini = 0.124\nsamples = 15\nvalue = [1, 14]\nclass = Malicious"] ;
156 -> 157 ;
158 [label="gini = 0.0\nsamples = 6\nvalue = [0, 6]\nclass = Malicious"] ;
157 -> 158 ;
159 [label="arrayliteral <= 0.5\ngini = 0.198\nsamples = 9\nvalue = [1, 8]\nclass = Malicious"] ;
157 -> 159 ;
160 [label="gini = 0.219\nsamples = 8\nvalue = [1, 7]\nclass = Malicious"] ;
159 -> 160 ;
161 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
159 -> 161 ;
162 [label="gini = 0.0\nsamples = 9\nvalue = [0, 9]\nclass = Malicious"] ;
156 -> 162 ;
163 [label="gini = 0.0\nsamples = 114\nvalue = [0, 114]\nclass = Malicious"] ;
155 -> 163 ;
164 [label="emptystatement <= 0.5\ngini = 0.375\nsamples = 8\nvalue = [2, 6]\nclass = Malicious"] ;
154 -> 164 ;
165 [label="catchproduction <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [2, 1]\nclass = Benign"] ;
164 -> 165 ;
166 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
165 -> 166 ;
167 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
165 -> 167 ;
168 [label="gini = 0.0\nsamples = 5\nvalue = [0, 5]\nclass = Malicious"] ;
164 -> 168 ;
169 [label="functionbody <= 0.5\ngini = 0.03\nsamples = 3756\nvalue = [57, 3699]\nclass = Malicious"] ;
103 -> 169 ;
170 [label="ifstatement <= 0.5\ngini = 0.002\nsamples = 2889\nvalue = [3, 2886]\nclass = Malicious"] ;
169 -> 170 ;
171 [label="do_for_while_statement <= 0.5\ngini = 0.009\nsamples = 430\nvalue = [2, 428]\nclass = Malicious"] ;
170 -> 171 ;
172 [label="identifiername <= 0.5\ngini = 0.245\nsamples = 14\nvalue = [2, 12]\nclass = Malicious"] ;
171 -> 172 ;
173 [label="gini = 0.0\nsamples = 12\nvalue = [0, 12]\nclass = Malicious"] ;
172 -> 173 ;
174 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
172 -> 174 ;
175 [label="gini = 0.0\nsamples = 416\nvalue = [0, 416]\nclass = Malicious"] ;
171 -> 175 ;
176 [label="emptystatement <= 0.5\ngini = 0.001\nsamples = 2459\nvalue = [1, 2458]\nclass = Malicious"] ;
170 -> 176 ;
177 [label="block <= 0.5\ngini = 0.002\nsamples = 997\nvalue = [1, 996]\nclass = Malicious"] ;
176 -> 177 ;
178 [label="gini = 0.0\nsamples = 757\nvalue = [0, 757]\nclass = Malicious"] ;
177 -> 178 ;
179 [label="identifiername <= 0.5\ngini = 0.008\nsamples = 240\nvalue = [1, 239]\nclass = Malicious"] ;
177 -> 179 ;
180 [label="gini = 0.0\nsamples = 24\nvalue = [0, 24]\nclass = Malicious"] ;
179 -> 180 ;
181 [label="caseblock <= 0.5\ngini = 0.009\nsamples = 216\nvalue = [1, 215]\nclass = Malicious"] ;
179 -> 181 ;
182 [label="gini = 0.009\nsamples = 212\nvalue = [1, 211]\nclass = Malicious"] ;
181 -> 182 ;
183 [label="gini = 0.0\nsamples = 4\nvalue = [0, 4]\nclass = Malicious"] ;
181 -> 183 ;
184 [label="gini = 0.0\nsamples = 1462\nvalue = [0, 1462]\nclass = Malicious"] ;
176 -> 184 ;
185 [label="returnstatement <= 0.5\ngini = 0.117\nsamples = 867\nvalue = [54, 813]\nclass = Malicious"] ;
169 -> 185 ;
186 [label="catchproduction <= 0.5\ngini = 0.473\nsamples = 128\nvalue = [49, 79]\nclass = Malicious"] ;
185 -> 186 ;
187 [label="gini = 0.0\nsamples = 49\nvalue = [49, 0]\nclass = Benign"] ;
186 -> 187 ;
188 [label="gini = 0.0\nsamples = 79\nvalue = [0, 79]\nclass = Malicious"] ;
186 -> 188 ;
189 [label="breakstatement <= 0.5\ngini = 0.013\nsamples = 739\nvalue = [5, 734]\nclass = Malicious"] ;
185 -> 189 ;
190 [label="identifiername <= 0.5\ngini = 0.008\nsamples = 737\nvalue = [3, 734]\nclass = Malicious"] ;
189 -> 190 ;
191 [label="gini = 0.0\nsamples = 524\nvalue = [0, 524]\nclass = Malicious"] ;
190 -> 191 ;
192 [label="assignmentoperator <= 0.5\ngini = 0.028\nsamples = 213\nvalue = [3, 210]\nclass = Malicious"] ;
190 -> 192 ;
193 [label="formalparameterarg <= 0.5\ngini = 0.444\nsamples = 6\nvalue = [2, 4]\nclass = Malicious"] ;
192 -> 193 ;
194 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
193 -> 194 ;
195 [label="statementlist <= 0.5\ngini = 0.32\nsamples = 5\nvalue = [1, 4]\nclass = Malicious"] ;
193 -> 195 ;
196 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
195 -> 196 ;
197 [label="gini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
195 -> 197 ;
198 [label="formalparameterlist <= 0.5\ngini = 0.01\nsamples = 207\nvalue = [1, 206]\nclass = Malicious"] ;
192 -> 198 ;
199 [label="gini = 0.0\nsamples = 206\nvalue = [0, 206]\nclass = Malicious"] ;
198 -> 199 ;
200 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
198 -> 200 ;
201 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
189 -> 201 ;
202 [label="do_for_while_statement <= 0.5\ngini = 0.249\nsamples = 10743\nvalue = [9174, 1569]\nclass = Benign"] ;
0 -> 202 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
203 [label="trystatement <= 0.5\ngini = 0.001\nsamples = 8949\nvalue = [8946, 3]\nclass = Benign"] ;
202 -> 203 ;
204 [label="gini = 0.0\nsamples = 8837\nvalue = [8837, 0]\nclass = Benign"] ;
203 -> 204 ;
205 [label="functionbody <= 0.5\ngini = 0.052\nsamples = 112\nvalue = [109, 3]\nclass = Benign"] ;
203 -> 205 ;
206 [label="arrayliteral <= 0.5\ngini = 0.097\nsamples = 59\nvalue = [56, 3]\nclass = Benign"] ;
205 -> 206 ;
207 [label="varmodifier <= 0.5\ngini = 0.26\nsamples = 13\nvalue = [11, 2]\nclass = Benign"] ;
206 -> 207 ;
208 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
207 -> 208 ;
209 [label="ifstatement <= 0.5\ngini = 0.48\nsamples = 5\nvalue = [3, 2]\nclass = Benign"] ;
207 -> 209 ;
210 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
209 -> 210 ;
211 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
209 -> 211 ;
212 [label="ifstatement <= 0.5\ngini = 0.043\nsamples = 46\nvalue = [45, 1]\nclass = Benign"] ;
206 -> 212 ;
213 [label="gini = 0.0\nsamples = 23\nvalue = [23, 0]\nclass = Benign"] ;
212 -> 213 ;
214 [label="variabledeclarationlist <= 0.5\ngini = 0.083\nsamples = 23\nvalue = [22, 1]\nclass = Benign"] ;
212 -> 214 ;
215 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
214 -> 215 ;
216 [label="elementlist <= 0.5\ngini = 0.124\nsamples = 15\nvalue = [14, 1]\nclass = Benign"] ;
214 -> 216 ;
217 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
216 -> 217 ;
218 [label="gini = 0.133\nsamples = 14\nvalue = [13, 1]\nclass = Benign"] ;
216 -> 218 ;
219 [label="gini = 0.0\nsamples = 53\nvalue = [53, 0]\nclass = Benign"] ;
205 -> 219 ;
220 [label="identifiername <= 0.5\ngini = 0.222\nsamples = 1794\nvalue = [228, 1566]\nclass = Malicious"] ;
202 -> 220 ;
221 [label="gini = 0.0\nsamples = 1511\nvalue = [0, 1511]\nclass = Malicious"] ;
220 -> 221 ;
222 [label="trystatement <= 0.5\ngini = 0.313\nsamples = 283\nvalue = [228, 55]\nclass = Benign"] ;
220 -> 222 ;
223 [label="property_rules <= 0.5\ngini = 0.01\nsamples = 205\nvalue = [204, 1]\nclass = Benign"] ;
222 -> 223 ;
224 [label="emptystatement <= 0.5\ngini = 0.124\nsamples = 15\nvalue = [14, 1]\nclass = Benign"] ;
223 -> 224 ;
225 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
224 -> 225 ;
226 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
224 -> 226 ;
227 [label="gini = 0.0\nsamples = 190\nvalue = [190, 0]\nclass = Benign"] ;
223 -> 227 ;
228 [label="defaultclause <= 0.5\ngini = 0.426\nsamples = 78\nvalue = [24, 54]\nclass = Malicious"] ;
222 -> 228 ;
229 [label="breakstatement <= 0.5\ngini = 0.498\nsamples = 51\nvalue = [24, 27]\nclass = Malicious"] ;
228 -> 229 ;
230 [label="gini = 0.0\nsamples = 22\nvalue = [22, 0]\nclass = Benign"] ;
229 -> 230 ;
231 [label="caseclause <= 0.5\ngini = 0.128\nsamples = 29\nvalue = [2, 27]\nclass = Malicious"] ;
229 -> 231 ;
232 [label="gini = 0.0\nsamples = 27\nvalue = [0, 27]\nclass = Malicious"] ;
231 -> 232 ;
233 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
231 -> 233 ;
234 [label="gini = 0.0\nsamples = 27\nvalue = [0, 27]\nclass = Malicious"] ;
228 -> 234 ;
}
