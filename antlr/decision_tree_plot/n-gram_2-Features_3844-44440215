digraph Tree {
node [shape=box] ;
0 [label="expression_statement-objectliteral <= 0.5\ngini = 0.5\nsamples = 27000\nvalue = [13463, 13537]\nclass = Malicious"] ;
1 [label="literal-arguments <= 0.5\ngini = 0.385\nsamples = 16239\nvalue = [4233, 12006]\nclass = Malicious"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="identifiername-identifiername <= 0.5\ngini = 0.47\nsamples = 11168\nvalue = [4227, 6941]\nclass = Malicious"] ;
1 -> 2 ;
3 [label="expression_statement-arguments <= 0.5\ngini = 0.433\nsamples = 10142\nvalue = [3208, 6934]\nclass = Malicious"] ;
2 -> 3 ;
4 [label="sourceelement-statement <= 0.5\ngini = 0.493\nsamples = 5499\nvalue = [2416, 3083]\nclass = Malicious"] ;
3 -> 4 ;
5 [label="gini = 0.388\nsamples = 2577\nvalue = [680, 1897]\nclass = Malicious"] ;
4 -> 5 ;
6 [label="returnstatement-expressionsequence <= 0.5\ngini = 0.482\nsamples = 2922\nvalue = [1736, 1186]\nclass = Benign"] ;
4 -> 6 ;
7 [label="literal-identifiername <= 0.5\ngini = 0.408\nsamples = 2430\nvalue = [1735, 695]\nclass = Benign"] ;
6 -> 7 ;
8 [label="arguments-expression_statement <= 0.5\ngini = 0.223\nsamples = 1835\nvalue = [1601, 234]\nclass = Benign"] ;
7 -> 8 ;
9 [label="gini = 0.0\nsamples = 1128\nvalue = [1128, 0]\nclass = Benign"] ;
8 -> 9 ;
10 [label="variablestatement-varmodifier <= 0.5\ngini = 0.443\nsamples = 707\nvalue = [473, 234]\nclass = Benign"] ;
8 -> 10 ;
11 [label="identifiername-arguments <= 0.5\ngini = 0.005\nsamples = 373\nvalue = [372, 1]\nclass = Benign"] ;
10 -> 11 ;
12 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
11 -> 12 ;
13 [label="gini = 0.0\nsamples = 372\nvalue = [372, 0]\nclass = Benign"] ;
11 -> 13 ;
14 [label="numericliteral-eos <= 0.5\ngini = 0.422\nsamples = 334\nvalue = [101, 233]\nclass = Malicious"] ;
10 -> 14 ;
15 [label="gini = 0.0\nsamples = 87\nvalue = [87, 0]\nclass = Benign"] ;
14 -> 15 ;
16 [label="literal-expression_statement <= 0.5\ngini = 0.107\nsamples = 247\nvalue = [14, 233]\nclass = Malicious"] ;
14 -> 16 ;
17 [label="expression_statement-eos <= 0.5\ngini = 0.017\nsamples = 227\nvalue = [2, 225]\nclass = Malicious"] ;
16 -> 17 ;
18 [label="gini = 0.0\nsamples = 225\nvalue = [0, 225]\nclass = Malicious"] ;
17 -> 18 ;
19 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
17 -> 19 ;
20 [label="numericliteral-expressionsequence <= 0.5\ngini = 0.48\nsamples = 20\nvalue = [12, 8]\nclass = Benign"] ;
16 -> 20 ;
21 [label="gini = 0.0\nsamples = 12\nvalue = [12, 0]\nclass = Benign"] ;
20 -> 21 ;
22 [label="gini = 0.0\nsamples = 8\nvalue = [0, 8]\nclass = Malicious"] ;
20 -> 22 ;
23 [label="expression_statement-identifiername <= 0.5\ngini = 0.349\nsamples = 595\nvalue = [134, 461]\nclass = Malicious"] ;
7 -> 23 ;
24 [label="literal-expression_statement <= 0.5\ngini = 0.004\nsamples = 462\nvalue = [1, 461]\nclass = Malicious"] ;
23 -> 24 ;
25 [label="gini = 0.0\nsamples = 461\nvalue = [0, 461]\nclass = Malicious"] ;
24 -> 25 ;
26 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
24 -> 26 ;
27 [label="gini = 0.0\nsamples = 133\nvalue = [133, 0]\nclass = Benign"] ;
23 -> 27 ;
28 [label="numericliteral-eos <= 0.5\ngini = 0.004\nsamples = 492\nvalue = [1, 491]\nclass = Malicious"] ;
6 -> 28 ;
29 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
28 -> 29 ;
30 [label="gini = 0.0\nsamples = 491\nvalue = [0, 491]\nclass = Malicious"] ;
28 -> 30 ;
31 [label="variabledeclaration-expression_statement <= 0.5\ngini = 0.283\nsamples = 4643\nvalue = [792, 3851]\nclass = Malicious"] ;
3 -> 31 ;
32 [label="literal-expression_statement <= 0.5\ngini = 0.484\nsamples = 1035\nvalue = [610, 425]\nclass = Benign"] ;
31 -> 32 ;
33 [label="expression_statement-eos <= 0.5\ngini = 0.437\nsamples = 627\nvalue = [202, 425]\nclass = Malicious"] ;
32 -> 33 ;
34 [label="arguments-identifiername <= 0.5\ngini = 0.499\nsamples = 351\nvalue = [184, 167]\nclass = Benign"] ;
33 -> 34 ;
35 [label="gini = 0.0\nsamples = 174\nvalue = [174, 0]\nclass = Benign"] ;
34 -> 35 ;
36 [label="arguments-eos <= 0.5\ngini = 0.107\nsamples = 177\nvalue = [10, 167]\nclass = Malicious"] ;
34 -> 36 ;
37 [label="expression_statement-functionbody <= 0.5\ngini = 0.035\nsamples = 170\nvalue = [3, 167]\nclass = Malicious"] ;
36 -> 37 ;
38 [label="gini = 0.0\nsamples = 167\nvalue = [0, 167]\nclass = Malicious"] ;
37 -> 38 ;
39 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
37 -> 39 ;
40 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
36 -> 40 ;
41 [label="functionbody-sourceelements <= 0.5\ngini = 0.122\nsamples = 276\nvalue = [18, 258]\nclass = Malicious"] ;
33 -> 41 ;
42 [label="gini = 0.0\nsamples = 258\nvalue = [0, 258]\nclass = Malicious"] ;
41 -> 42 ;
43 [label="gini = 0.0\nsamples = 18\nvalue = [18, 0]\nclass = Benign"] ;
41 -> 43 ;
44 [label="gini = 0.0\nsamples = 408\nvalue = [408, 0]\nclass = Benign"] ;
32 -> 44 ;
45 [label="expression_statement-functionbody <= 0.5\ngini = 0.096\nsamples = 3608\nvalue = [182, 3426]\nclass = Malicious"] ;
31 -> 45 ;
46 [label="statement-expressionstatement <= 0.5\ngini = 0.055\nsamples = 3367\nvalue = [95, 3272]\nclass = Malicious"] ;
45 -> 46 ;
47 [label="block-statementlist <= 0.5\ngini = 0.111\nsamples = 17\nvalue = [16, 1]\nclass = Benign"] ;
46 -> 47 ;
48 [label="gini = 0.0\nsamples = 16\nvalue = [16, 0]\nclass = Benign"] ;
47 -> 48 ;
49 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
47 -> 49 ;
50 [label="arguments-expression_statement <= 0.5\ngini = 0.046\nsamples = 3350\nvalue = [79, 3271]\nclass = Malicious"] ;
46 -> 50 ;
51 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
50 -> 51 ;
52 [label="eos-arguments <= 0.5\ngini = 0.042\nsamples = 3343\nvalue = [72, 3271]\nclass = Malicious"] ;
50 -> 52 ;
53 [label="literal-expression_statement <= 0.5\ngini = 0.039\nsamples = 3337\nvalue = [67, 3270]\nclass = Malicious"] ;
52 -> 53 ;
54 [label="expression_statement-identifiername <= 0.5\ngini = 0.227\nsamples = 299\nvalue = [39, 260]\nclass = Malicious"] ;
53 -> 54 ;
55 [label="assignmentoperator-expression_statement <= 0.5\ngini = 0.452\nsamples = 55\nvalue = [36, 19]\nclass = Benign"] ;
54 -> 55 ;
56 [label="arguments-identifiername <= 0.5\ngini = 0.053\nsamples = 37\nvalue = [36, 1]\nclass = Benign"] ;
55 -> 56 ;
57 [label="gini = 0.0\nsamples = 36\nvalue = [36, 0]\nclass = Benign"] ;
56 -> 57 ;
58 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
56 -> 58 ;
59 [label="gini = 0.0\nsamples = 18\nvalue = [0, 18]\nclass = Malicious"] ;
55 -> 59 ;
60 [label="literal-numericliteral <= 0.5\ngini = 0.024\nsamples = 244\nvalue = [3, 241]\nclass = Malicious"] ;
54 -> 60 ;
61 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
60 -> 61 ;
62 [label="variabledeclaration-eos <= 0.5\ngini = 0.008\nsamples = 242\nvalue = [1, 241]\nclass = Malicious"] ;
60 -> 62 ;
63 [label="gini = 0.0\nsamples = 241\nvalue = [0, 241]\nclass = Malicious"] ;
62 -> 63 ;
64 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
62 -> 64 ;
65 [label="identifiername-eos <= 0.5\ngini = 0.018\nsamples = 3038\nvalue = [28, 3010]\nclass = Malicious"] ;
53 -> 65 ;
66 [label="statement-withstatement <= 0.5\ngini = 0.015\nsamples = 3012\nvalue = [22, 2990]\nclass = Malicious"] ;
65 -> 66 ;
67 [label="identifiername-expression_statement <= 0.5\ngini = 0.014\nsamples = 3011\nvalue = [21, 2990]\nclass = Malicious"] ;
66 -> 67 ;
68 [label="eos-catchproduction <= 0.5\ngini = 0.009\nsamples = 2906\nvalue = [13, 2893]\nclass = Malicious"] ;
67 -> 68 ;
69 [label="expression_statement-assignmentoperator <= 0.5\ngini = 0.008\nsamples = 2903\nvalue = [12, 2891]\nclass = Malicious"] ;
68 -> 69 ;
70 [label="numericliteral-eos <= 0.5\ngini = 0.008\nsamples = 2900\nvalue = [11, 2889]\nclass = Malicious"] ;
69 -> 70 ;
71 [label="statementlist-statement <= 0.5\ngini = 0.015\nsamples = 1450\nvalue = [11, 1439]\nclass = Malicious"] ;
70 -> 71 ;
72 [label="expression_statement-identifiername <= 0.5\ngini = 0.01\nsamples = 1445\nvalue = [7, 1438]\nclass = Malicious"] ;
71 -> 72 ;
73 [label="expression_statement-eos <= 0.5\ngini = 0.002\nsamples = 1044\nvalue = [1, 1043]\nclass = Malicious"] ;
72 -> 73 ;
74 [label="gini = 0.003\nsamples = 667\nvalue = [1, 666]\nclass = Malicious"] ;
73 -> 74 ;
75 [label="gini = 0.0\nsamples = 377\nvalue = [0, 377]\nclass = Malicious"] ;
73 -> 75 ;
76 [label="returnstatement-expressionsequence <= 0.5\ngini = 0.029\nsamples = 401\nvalue = [6, 395]\nclass = Malicious"] ;
72 -> 76 ;
77 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
76 -> 77 ;
78 [label="gini = 0.0\nsamples = 395\nvalue = [0, 395]\nclass = Malicious"] ;
76 -> 78 ;
79 [label="expression_statement-expressionsequence <= 0.5\ngini = 0.32\nsamples = 5\nvalue = [4, 1]\nclass = Benign"] ;
71 -> 79 ;
80 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
79 -> 80 ;
81 [label="functionbody-sourceelements <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
79 -> 81 ;
82 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
81 -> 82 ;
83 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
81 -> 83 ;
84 [label="gini = 0.0\nsamples = 1450\nvalue = [0, 1450]\nclass = Malicious"] ;
70 -> 84 ;
85 [label="arguments-identifiername <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
69 -> 85 ;
86 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
85 -> 86 ;
87 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
85 -> 87 ;
88 [label="numericliteral-expressionsequence <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
68 -> 88 ;
89 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
88 -> 89 ;
90 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
88 -> 90 ;
91 [label="statement-do_for_while_statement <= 0.5\ngini = 0.141\nsamples = 105\nvalue = [8, 97]\nclass = Malicious"] ;
67 -> 91 ;
92 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
91 -> 92 ;
93 [label="gini = 0.0\nsamples = 97\nvalue = [0, 97]\nclass = Malicious"] ;
91 -> 93 ;
94 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
66 -> 94 ;
95 [label="eos-statement <= 0.5\ngini = 0.355\nsamples = 26\nvalue = [6, 20]\nclass = Malicious"] ;
65 -> 95 ;
96 [label="identifiername-expressionsequence <= 0.5\ngini = 0.408\nsamples = 7\nvalue = [5, 2]\nclass = Benign"] ;
95 -> 96 ;
97 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
96 -> 97 ;
98 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
96 -> 98 ;
99 [label="returnstatement-eos <= 0.5\ngini = 0.1\nsamples = 19\nvalue = [1, 18]\nclass = Malicious"] ;
95 -> 99 ;
100 [label="gini = 0.0\nsamples = 18\nvalue = [0, 18]\nclass = Malicious"] ;
99 -> 100 ;
101 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
99 -> 101 ;
102 [label="expression_statement-statement <= 0.5\ngini = 0.278\nsamples = 6\nvalue = [5, 1]\nclass = Benign"] ;
52 -> 102 ;
103 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
102 -> 103 ;
104 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
102 -> 104 ;
105 [label="expression_statement-assignmentoperator <= 0.5\ngini = 0.461\nsamples = 241\nvalue = [87, 154]\nclass = Malicious"] ;
45 -> 105 ;
106 [label="statement-emptystatement <= 0.5\ngini = 0.023\nsamples = 85\nvalue = [84, 1]\nclass = Benign"] ;
105 -> 106 ;
107 [label="gini = 0.0\nsamples = 84\nvalue = [84, 0]\nclass = Benign"] ;
106 -> 107 ;
108 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
106 -> 108 ;
109 [label="formalparameterarg-formalparameterarg <= 0.5\ngini = 0.038\nsamples = 156\nvalue = [3, 153]\nclass = Malicious"] ;
105 -> 109 ;
110 [label="literal-eos <= 0.5\ngini = 0.013\nsamples = 153\nvalue = [1, 152]\nclass = Malicious"] ;
109 -> 110 ;
111 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
110 -> 111 ;
112 [label="gini = 0.0\nsamples = 152\nvalue = [0, 152]\nclass = Malicious"] ;
110 -> 112 ;
113 [label="expression_statement-arrayliteral <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [2, 1]\nclass = Benign"] ;
109 -> 113 ;
114 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
113 -> 114 ;
115 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
113 -> 115 ;
116 [label="breakstatement-eos <= 0.5\ngini = 0.014\nsamples = 1026\nvalue = [1019, 7]\nclass = Benign"] ;
2 -> 116 ;
117 [label="expression_statement-assignmentoperator <= 0.5\ngini = 0.004\nsamples = 1021\nvalue = [1019, 2]\nclass = Benign"] ;
116 -> 117 ;
118 [label="numericliteral-expression_statement <= 0.5\ngini = 0.002\nsamples = 1020\nvalue = [1019, 1]\nclass = Benign"] ;
117 -> 118 ;
119 [label="gini = 0.0\nsamples = 909\nvalue = [909, 0]\nclass = Benign"] ;
118 -> 119 ;
120 [label="literal-expression_statement <= 0.5\ngini = 0.018\nsamples = 111\nvalue = [110, 1]\nclass = Benign"] ;
118 -> 120 ;
121 [label="expression_statement-eos <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [2, 1]\nclass = Benign"] ;
120 -> 121 ;
122 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
121 -> 122 ;
123 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
121 -> 123 ;
124 [label="gini = 0.0\nsamples = 108\nvalue = [108, 0]\nclass = Benign"] ;
120 -> 124 ;
125 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
117 -> 125 ;
126 [label="gini = 0.0\nsamples = 5\nvalue = [0, 5]\nclass = Malicious"] ;
116 -> 126 ;
127 [label="eos-arguments <= 0.5\ngini = 0.002\nsamples = 5071\nvalue = [6, 5065]\nclass = Malicious"] ;
1 -> 127 ;
128 [label="arguments-expression_statement <= 0.5\ngini = 0.001\nsamples = 5068\nvalue = [3, 5065]\nclass = Malicious"] ;
127 -> 128 ;
129 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
128 -> 129 ;
130 [label="literal-eos <= 0.5\ngini = 0.0\nsamples = 5066\nvalue = [1, 5065]\nclass = Malicious"] ;
128 -> 130 ;
131 [label="variabledeclaration-expression_statement <= 0.5\ngini = 0.011\nsamples = 173\nvalue = [1, 172]\nclass = Malicious"] ;
130 -> 131 ;
132 [label="gini = 0.0\nsamples = 172\nvalue = [0, 172]\nclass = Malicious"] ;
131 -> 132 ;
133 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
131 -> 133 ;
134 [label="gini = 0.0\nsamples = 4893\nvalue = [0, 4893]\nclass = Malicious"] ;
130 -> 134 ;
135 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
127 -> 135 ;
136 [label="do_for_while_statement-expressionsequence <= 0.5\ngini = 0.244\nsamples = 10761\nvalue = [9230, 1531]\nclass = Benign"] ;
0 -> 136 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
137 [label="numericliteral-arguments <= 0.5\ngini = 0.007\nsamples = 9225\nvalue = [9194, 31]\nclass = Benign"] ;
136 -> 137 ;
138 [label="literal-arguments <= 0.5\ngini = 0.001\nsamples = 9197\nvalue = [9194, 3]\nclass = Benign"] ;
137 -> 138 ;
139 [label="gini = 0.0\nsamples = 9180\nvalue = [9180, 0]\nclass = Benign"] ;
138 -> 139 ;
140 [label="functionbody-sourceelements <= 0.5\ngini = 0.291\nsamples = 17\nvalue = [14, 3]\nclass = Benign"] ;
138 -> 140 ;
141 [label="gini = 0.0\nsamples = 3\nvalue = [0, 3]\nclass = Malicious"] ;
140 -> 141 ;
142 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
140 -> 142 ;
143 [label="gini = 0.0\nsamples = 28\nvalue = [0, 28]\nclass = Malicious"] ;
137 -> 143 ;
144 [label="objectliteral-eos <= 0.5\ngini = 0.046\nsamples = 1536\nvalue = [36, 1500]\nclass = Malicious"] ;
136 -> 144 ;
145 [label="literal-expressionsequence <= 0.5\ngini = 0.007\nsamples = 1504\nvalue = [5, 1499]\nclass = Malicious"] ;
144 -> 145 ;
146 [label="statement-trystatement <= 0.5\ngini = 0.5\nsamples = 10\nvalue = [5, 5]\nclass = Benign"] ;
145 -> 146 ;
147 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
146 -> 147 ;
148 [label="gini = 0.0\nsamples = 5\nvalue = [0, 5]\nclass = Malicious"] ;
146 -> 148 ;
149 [label="gini = 0.0\nsamples = 1494\nvalue = [0, 1494]\nclass = Malicious"] ;
145 -> 149 ;
150 [label="statement-emptystatement <= 0.5\ngini = 0.061\nsamples = 32\nvalue = [31, 1]\nclass = Benign"] ;
144 -> 150 ;
151 [label="gini = 0.0\nsamples = 31\nvalue = [31, 0]\nclass = Benign"] ;
150 -> 151 ;
152 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
150 -> 152 ;
}
