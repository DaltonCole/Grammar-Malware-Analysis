digraph Tree {
node [shape=box] ;
0 [label="objectliteral <= 0.5\ngini = 0.5\nsamples = 27000\nvalue = [13469, 13531]\nclass = Malicious"] ;
1 [label="memberindexexpression <= 0.5\ngini = 0.389\nsamples = 16289\nvalue = [4314, 11975]\nclass = Malicious"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="newexpression <= 0.5\ngini = 0.48\nsamples = 9716\nvalue = [3896, 5820]\nclass = Malicious"] ;
1 -> 2 ;
3 [label="statement <= 0.5\ngini = 0.498\nsamples = 7693\nvalue = [3603, 4090]\nclass = Malicious"] ;
2 -> 3 ;
4 [label="gini = 0.4\nsamples = 2597\nvalue = [717, 1880]\nclass = Malicious"] ;
3 -> 4 ;
5 [label="numericliteral <= 0.5\ngini = 0.491\nsamples = 5096\nvalue = [2886, 2210]\nclass = Benign"] ;
3 -> 5 ;
6 [label="expressionsequence <= 0.5\ngini = 0.372\nsamples = 2842\nvalue = [2140, 702]\nclass = Benign"] ;
5 -> 6 ;
7 [label="argumentsexpression <= 0.5\ngini = 0.5\nsamples = 901\nvalue = [438, 463]\nclass = Malicious"] ;
6 -> 7 ;
8 [label="gini = 0.0\nsamples = 421\nvalue = [421, 0]\nclass = Benign"] ;
7 -> 8 ;
9 [label="identifierexpression <= 0.5\ngini = 0.068\nsamples = 480\nvalue = [17, 463]\nclass = Malicious"] ;
7 -> 9 ;
10 [label="gini = 0.0\nsamples = 463\nvalue = [0, 463]\nclass = Malicious"] ;
9 -> 10 ;
11 [label="gini = 0.0\nsamples = 17\nvalue = [17, 0]\nclass = Benign"] ;
9 -> 11 ;
12 [label="assignmentexpression <= 0.5\ngini = 0.216\nsamples = 1941\nvalue = [1702, 239]\nclass = Benign"] ;
6 -> 12 ;
13 [label="functionbody <= 0.5\ngini = 0.291\nsamples = 1234\nvalue = [1016, 218]\nclass = Benign"] ;
12 -> 13 ;
14 [label="ifstatement <= 0.5\ngini = 0.387\nsamples = 769\nvalue = [567, 202]\nclass = Benign"] ;
13 -> 14 ;
15 [label="literal <= 0.5\ngini = 0.412\nsamples = 697\nvalue = [495, 202]\nclass = Benign"] ;
14 -> 15 ;
16 [label="gini = 0.0\nsamples = 53\nvalue = [53, 0]\nclass = Benign"] ;
15 -> 16 ;
17 [label="arrayliteralexpression <= 0.5\ngini = 0.431\nsamples = 644\nvalue = [442, 202]\nclass = Benign"] ;
15 -> 17 ;
18 [label="assignmentoperator <= 0.5\ngini = 0.448\nsamples = 597\nvalue = [395, 202]\nclass = Benign"] ;
17 -> 18 ;
19 [label="memberdotexpression <= 0.5\ngini = 0.441\nsamples = 586\nvalue = [394, 192]\nclass = Benign"] ;
18 -> 19 ;
20 [label="additiveexpression <= 0.5\ngini = 0.252\nsamples = 135\nvalue = [115, 20]\nclass = Benign"] ;
19 -> 20 ;
21 [label="gini = 0.0\nsamples = 115\nvalue = [115, 0]\nclass = Benign"] ;
20 -> 21 ;
22 [label="gini = 0.0\nsamples = 20\nvalue = [0, 20]\nclass = Malicious"] ;
20 -> 22 ;
23 [label="additiveexpression <= 0.5\ngini = 0.472\nsamples = 451\nvalue = [279, 172]\nclass = Benign"] ;
19 -> 23 ;
24 [label="statementlist <= 0.5\ngini = 0.478\nsamples = 436\nvalue = [264, 172]\nclass = Benign"] ;
23 -> 24 ;
25 [label="logicalorexpression <= 0.5\ngini = 0.479\nsamples = 432\nvalue = [260, 172]\nclass = Benign"] ;
24 -> 25 ;
26 [label="variabledeclarationlist <= 0.5\ngini = 0.48\nsamples = 430\nvalue = [258, 172]\nclass = Benign"] ;
25 -> 26 ;
27 [label="parenthesizedexpression <= 0.5\ngini = 0.481\nsamples = 425\nvalue = [254, 171]\nclass = Benign"] ;
26 -> 27 ;
28 [label="logicalandexpression <= 0.5\ngini = 0.481\nsamples = 424\nvalue = [253, 171]\nclass = Benign"] ;
27 -> 28 ;
29 [label="gini = 0.482\nsamples = 423\nvalue = [252, 171]\nclass = Benign"] ;
28 -> 29 ;
30 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
28 -> 30 ;
31 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
27 -> 31 ;
32 [label="gini = 0.32\nsamples = 5\nvalue = [4, 1]\nclass = Benign"] ;
26 -> 32 ;
33 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
25 -> 33 ;
34 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
24 -> 34 ;
35 [label="gini = 0.0\nsamples = 15\nvalue = [15, 0]\nclass = Benign"] ;
23 -> 35 ;
36 [label="variabledeclarationlist <= 0.5\ngini = 0.165\nsamples = 11\nvalue = [1, 10]\nclass = Malicious"] ;
18 -> 36 ;
37 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
36 -> 37 ;
38 [label="gini = 0.0\nsamples = 10\nvalue = [0, 10]\nclass = Malicious"] ;
36 -> 38 ;
39 [label="gini = 0.0\nsamples = 47\nvalue = [47, 0]\nclass = Benign"] ;
17 -> 39 ;
40 [label="gini = 0.0\nsamples = 72\nvalue = [72, 0]\nclass = Benign"] ;
14 -> 40 ;
41 [label="assignmentoperatorexpression <= 0.5\ngini = 0.066\nsamples = 465\nvalue = [449, 16]\nclass = Benign"] ;
13 -> 41 ;
42 [label="gini = 0.0\nsamples = 446\nvalue = [446, 0]\nclass = Benign"] ;
41 -> 42 ;
43 [label="returnstatement <= 0.5\ngini = 0.266\nsamples = 19\nvalue = [3, 16]\nclass = Malicious"] ;
41 -> 43 ;
44 [label="gini = 0.0\nsamples = 7\nvalue = [0, 7]\nclass = Malicious"] ;
43 -> 44 ;
45 [label="gini = 0.375\nsamples = 12\nvalue = [3, 9]\nclass = Malicious"] ;
43 -> 45 ;
46 [label="returnstatement <= 0.5\ngini = 0.058\nsamples = 707\nvalue = [686, 21]\nclass = Benign"] ;
12 -> 46 ;
47 [label="emptystatement <= 0.5\ngini = 0.026\nsamples = 683\nvalue = [674, 9]\nclass = Benign"] ;
46 -> 47 ;
48 [label="assignmentoperator <= 0.5\ngini = 0.015\nsamples = 677\nvalue = [672, 5]\nclass = Benign"] ;
47 -> 48 ;
49 [label="gini = 0.0\nsamples = 605\nvalue = [605, 0]\nclass = Benign"] ;
48 -> 49 ;
50 [label="identifiername <= 0.5\ngini = 0.129\nsamples = 72\nvalue = [67, 5]\nclass = Benign"] ;
48 -> 50 ;
51 [label="gini = 0.0\nsamples = 5\nvalue = [0, 5]\nclass = Malicious"] ;
50 -> 51 ;
52 [label="gini = 0.0\nsamples = 67\nvalue = [67, 0]\nclass = Benign"] ;
50 -> 52 ;
53 [label="thisexpression <= 0.5\ngini = 0.444\nsamples = 6\nvalue = [2, 4]\nclass = Malicious"] ;
47 -> 53 ;
54 [label="gini = 0.0\nsamples = 4\nvalue = [0, 4]\nclass = Malicious"] ;
53 -> 54 ;
55 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
53 -> 55 ;
56 [label="assignmentoperator <= 0.5\ngini = 0.5\nsamples = 24\nvalue = [12, 12]\nclass = Benign"] ;
46 -> 56 ;
57 [label="gini = 0.0\nsamples = 12\nvalue = [12, 0]\nclass = Benign"] ;
56 -> 57 ;
58 [label="gini = 0.0\nsamples = 12\nvalue = [0, 12]\nclass = Malicious"] ;
56 -> 58 ;
59 [label="parenthesizedexpression <= 0.5\ngini = 0.443\nsamples = 2254\nvalue = [746, 1508]\nclass = Malicious"] ;
5 -> 59 ;
60 [label="argumentsexpression <= 0.5\ngini = 0.498\nsamples = 1300\nvalue = [686, 614]\nclass = Benign"] ;
59 -> 60 ;
61 [label="gini = 0.0\nsamples = 317\nvalue = [317, 0]\nclass = Benign"] ;
60 -> 61 ;
62 [label="functionbody <= 0.5\ngini = 0.469\nsamples = 983\nvalue = [369, 614]\nclass = Malicious"] ;
60 -> 62 ;
63 [label="block <= 0.5\ngini = 0.373\nsamples = 817\nvalue = [203, 614]\nclass = Malicious"] ;
62 -> 63 ;
64 [label="variablestatement <= 0.5\ngini = 0.335\nsamples = 780\nvalue = [166, 614]\nclass = Malicious"] ;
63 -> 64 ;
65 [label="equalityexpression <= 0.5\ngini = 0.458\nsamples = 391\nvalue = [139, 252]\nclass = Malicious"] ;
64 -> 65 ;
66 [label="memberdotexpression <= 0.5\ngini = 0.497\nsamples = 259\nvalue = [139, 120]\nclass = Benign"] ;
65 -> 66 ;
67 [label="gini = 0.0\nsamples = 33\nvalue = [33, 0]\nclass = Benign"] ;
66 -> 67 ;
68 [label="additiveexpression <= 0.5\ngini = 0.498\nsamples = 226\nvalue = [106, 120]\nclass = Malicious"] ;
66 -> 68 ;
69 [label="logicalandexpression <= 0.5\ngini = 0.489\nsamples = 209\nvalue = [89, 120]\nclass = Malicious"] ;
68 -> 69 ;
70 [label="arrayliteral <= 0.5\ngini = 0.482\nsamples = 202\nvalue = [82, 120]\nclass = Malicious"] ;
69 -> 70 ;
71 [label="assignmentexpression <= 0.5\ngini = 0.475\nsamples = 196\nvalue = [76, 120]\nclass = Malicious"] ;
70 -> 71 ;
72 [label="gini = 0.469\nsamples = 192\nvalue = [72, 120]\nclass = Malicious"] ;
71 -> 72 ;
73 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
71 -> 73 ;
74 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
70 -> 74 ;
75 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
69 -> 75 ;
76 [label="gini = 0.0\nsamples = 17\nvalue = [17, 0]\nclass = Benign"] ;
68 -> 76 ;
77 [label="gini = 0.0\nsamples = 132\nvalue = [0, 132]\nclass = Malicious"] ;
65 -> 77 ;
78 [label="identifiername <= 0.5\ngini = 0.129\nsamples = 389\nvalue = [27, 362]\nclass = Malicious"] ;
64 -> 78 ;
79 [label="gini = 0.0\nsamples = 10\nvalue = [10, 0]\nclass = Benign"] ;
78 -> 79 ;
80 [label="multiplicativeexpression <= 0.5\ngini = 0.086\nsamples = 379\nvalue = [17, 362]\nclass = Malicious"] ;
78 -> 80 ;
81 [label="assignmentexpression <= 0.5\ngini = 0.057\nsamples = 373\nvalue = [11, 362]\nclass = Malicious"] ;
80 -> 81 ;
82 [label="expressionsequence <= 0.5\ngini = 0.037\nsamples = 369\nvalue = [7, 362]\nclass = Malicious"] ;
81 -> 82 ;
83 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
82 -> 83 ;
84 [label="thisexpression <= 0.5\ngini = 0.032\nsamples = 368\nvalue = [6, 362]\nclass = Malicious"] ;
82 -> 84 ;
85 [label="arrayliteralexpression <= 0.5\ngini = 0.027\nsamples = 367\nvalue = [5, 362]\nclass = Malicious"] ;
84 -> 85 ;
86 [label="additiveexpression <= 0.5\ngini = 0.022\nsamples = 366\nvalue = [4, 362]\nclass = Malicious"] ;
85 -> 86 ;
87 [label="gini = 0.035\nsamples = 226\nvalue = [4, 222]\nclass = Malicious"] ;
86 -> 87 ;
88 [label="gini = 0.0\nsamples = 140\nvalue = [0, 140]\nclass = Malicious"] ;
86 -> 88 ;
89 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
85 -> 89 ;
90 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
84 -> 90 ;
91 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
81 -> 91 ;
92 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
80 -> 92 ;
93 [label="gini = 0.0\nsamples = 37\nvalue = [37, 0]\nclass = Benign"] ;
63 -> 93 ;
94 [label="gini = 0.0\nsamples = 166\nvalue = [166, 0]\nclass = Benign"] ;
62 -> 94 ;
95 [label="assignmentexpression <= 0.5\ngini = 0.118\nsamples = 954\nvalue = [60, 894]\nclass = Malicious"] ;
59 -> 95 ;
96 [label="forvarstatement <= 0.5\ngini = 0.045\nsamples = 43\nvalue = [42, 1]\nclass = Benign"] ;
95 -> 96 ;
97 [label="gini = 0.0\nsamples = 42\nvalue = [42, 0]\nclass = Benign"] ;
96 -> 97 ;
98 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
96 -> 98 ;
99 [label="formalparameterlist <= 0.5\ngini = 0.039\nsamples = 911\nvalue = [18, 893]\nclass = Malicious"] ;
95 -> 99 ;
100 [label="logicalorexpression <= 0.5\ngini = 0.009\nsamples = 897\nvalue = [4, 893]\nclass = Malicious"] ;
99 -> 100 ;
101 [label="thisexpression <= 0.5\ngini = 0.004\nsamples = 895\nvalue = [2, 893]\nclass = Malicious"] ;
100 -> 101 ;
102 [label="relationalexpression <= 0.5\ngini = 0.002\nsamples = 894\nvalue = [1, 893]\nclass = Malicious"] ;
101 -> 102 ;
103 [label="gini = 0.0\nsamples = 885\nvalue = [0, 885]\nclass = Malicious"] ;
102 -> 103 ;
104 [label="assignmentoperator <= 0.5\ngini = 0.198\nsamples = 9\nvalue = [1, 8]\nclass = Malicious"] ;
102 -> 104 ;
105 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
104 -> 105 ;
106 [label="gini = 0.0\nsamples = 8\nvalue = [0, 8]\nclass = Malicious"] ;
104 -> 106 ;
107 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
101 -> 107 ;
108 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
100 -> 108 ;
109 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
99 -> 109 ;
110 [label="assignmentexpression <= 0.5\ngini = 0.248\nsamples = 2023\nvalue = [293, 1730]\nclass = Malicious"] ;
2 -> 110 ;
111 [label="variabledeclaration <= 0.5\ngini = 0.055\nsamples = 1779\nvalue = [50, 1729]\nclass = Malicious"] ;
110 -> 111 ;
112 [label="gini = 0.0\nsamples = 16\nvalue = [16, 0]\nclass = Benign"] ;
111 -> 112 ;
113 [label="block <= 0.5\ngini = 0.038\nsamples = 1763\nvalue = [34, 1729]\nclass = Malicious"] ;
111 -> 113 ;
114 [label="expressionstatement <= 0.5\ngini = 0.025\nsamples = 1750\nvalue = [22, 1728]\nclass = Malicious"] ;
113 -> 114 ;
115 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
114 -> 115 ;
116 [label="literal <= 0.5\ngini = 0.015\nsamples = 1741\nvalue = [13, 1728]\nclass = Malicious"] ;
114 -> 116 ;
117 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
116 -> 117 ;
118 [label="additiveexpression <= 0.5\ngini = 0.013\nsamples = 1739\nvalue = [11, 1728]\nclass = Malicious"] ;
116 -> 118 ;
119 [label="arrayliteralexpression <= 0.5\ngini = 0.009\nsamples = 1734\nvalue = [8, 1726]\nclass = Malicious"] ;
118 -> 119 ;
120 [label="memberdotexpression <= 0.5\ngini = 0.008\nsamples = 1733\nvalue = [7, 1726]\nclass = Malicious"] ;
119 -> 120 ;
121 [label="gini = 0.0\nsamples = 1109\nvalue = [0, 1109]\nclass = Malicious"] ;
120 -> 121 ;
122 [label="numericliteral <= 0.5\ngini = 0.022\nsamples = 624\nvalue = [7, 617]\nclass = Malicious"] ;
120 -> 122 ;
123 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
122 -> 123 ;
124 [label="formalparameterarg <= 0.5\ngini = 0.01\nsamples = 620\nvalue = [3, 617]\nclass = Malicious"] ;
122 -> 124 ;
125 [label="gini = 0.42\nsamples = 10\nvalue = [3, 7]\nclass = Malicious"] ;
124 -> 125 ;
126 [label="gini = 0.0\nsamples = 610\nvalue = [0, 610]\nclass = Malicious"] ;
124 -> 126 ;
127 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
119 -> 127 ;
128 [label="numericliteral <= 0.5\ngini = 0.48\nsamples = 5\nvalue = [3, 2]\nclass = Benign"] ;
118 -> 128 ;
129 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
128 -> 129 ;
130 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
128 -> 130 ;
131 [label="parenthesizedexpression <= 0.5\ngini = 0.142\nsamples = 13\nvalue = [12, 1]\nclass = Benign"] ;
113 -> 131 ;
132 [label="gini = 0.0\nsamples = 12\nvalue = [12, 0]\nclass = Benign"] ;
131 -> 132 ;
133 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
131 -> 133 ;
134 [label="assignmentoperatorexpression <= 0.5\ngini = 0.008\nsamples = 244\nvalue = [243, 1]\nclass = Benign"] ;
110 -> 134 ;
135 [label="gini = 0.0\nsamples = 243\nvalue = [243, 0]\nclass = Benign"] ;
134 -> 135 ;
136 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
134 -> 136 ;
137 [label="argumentsexpression <= 0.5\ngini = 0.119\nsamples = 6573\nvalue = [418, 6155]\nclass = Malicious"] ;
1 -> 137 ;
138 [label="gini = 0.0\nsamples = 133\nvalue = [133, 0]\nclass = Benign"] ;
137 -> 138 ;
139 [label="logicalorexpression <= 0.5\ngini = 0.085\nsamples = 6440\nvalue = [285, 6155]\nclass = Malicious"] ;
137 -> 139 ;
140 [label="forvarinstatement <= 0.5\ngini = 0.066\nsamples = 6373\nvalue = [218, 6155]\nclass = Malicious"] ;
139 -> 140 ;
141 [label="deleteexpression <= 0.5\ngini = 0.05\nsamples = 6316\nvalue = [161, 6155]\nclass = Malicious"] ;
140 -> 141 ;
142 [label="notexpression <= 0.5\ngini = 0.045\nsamples = 6300\nvalue = [145, 6155]\nclass = Malicious"] ;
141 -> 142 ;
143 [label="ternaryexpression <= 0.5\ngini = 0.04\nsamples = 6276\nvalue = [129, 6147]\nclass = Malicious"] ;
142 -> 143 ;
144 [label="typeofexpression <= 0.5\ngini = 0.039\nsamples = 6271\nvalue = [124, 6147]\nclass = Malicious"] ;
143 -> 144 ;
145 [label="preincrementexpression <= 0.5\ngini = 0.038\nsamples = 6264\nvalue = [120, 6144]\nclass = Malicious"] ;
144 -> 145 ;
146 [label="elementlist <= 0.5\ngini = 0.037\nsamples = 6262\nvalue = [118, 6144]\nclass = Malicious"] ;
145 -> 146 ;
147 [label="assignmentexpression <= 0.5\ngini = 0.07\nsamples = 2747\nvalue = [100, 2647]\nclass = Malicious"] ;
146 -> 147 ;
148 [label="forvarstatement <= 0.5\ngini = 0.01\nsamples = 2302\nvalue = [12, 2290]\nclass = Malicious"] ;
147 -> 148 ;
149 [label="multiplicativeexpression <= 0.5\ngini = 0.009\nsamples = 2278\nvalue = [10, 2268]\nclass = Malicious"] ;
148 -> 149 ;
150 [label="variabledeclaration <= 0.5\ngini = 0.008\nsamples = 2277\nvalue = [9, 2268]\nclass = Malicious"] ;
149 -> 150 ;
151 [label="statementlist <= 0.5\ngini = 0.03\nsamples = 463\nvalue = [7, 456]\nclass = Malicious"] ;
150 -> 151 ;
152 [label="functionbody <= 0.5\ngini = 0.026\nsamples = 462\nvalue = [6, 456]\nclass = Malicious"] ;
151 -> 152 ;
153 [label="memberdotexpression <= 0.5\ngini = 0.021\nsamples = 461\nvalue = [5, 456]\nclass = Malicious"] ;
152 -> 153 ;
154 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
153 -> 154 ;
155 [label="newexpression <= 0.5\ngini = 0.017\nsamples = 460\nvalue = [4, 456]\nclass = Malicious"] ;
153 -> 155 ;
156 [label="numericliteral <= 0.5\ngini = 0.013\nsamples = 459\nvalue = [3, 456]\nclass = Malicious"] ;
155 -> 156 ;
157 [label="gini = 0.0\nsamples = 283\nvalue = [0, 283]\nclass = Malicious"] ;
156 -> 157 ;
158 [label="relationalexpression <= 0.5\ngini = 0.034\nsamples = 176\nvalue = [3, 173]\nclass = Malicious"] ;
156 -> 158 ;
159 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
158 -> 159 ;
160 [label="gini = 0.0\nsamples = 173\nvalue = [0, 173]\nclass = Malicious"] ;
158 -> 160 ;
161 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
155 -> 161 ;
162 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
152 -> 162 ;
163 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
151 -> 163 ;
164 [label="formalparameterarg <= 0.5\ngini = 0.002\nsamples = 1814\nvalue = [2, 1812]\nclass = Malicious"] ;
150 -> 164 ;
165 [label="memberdotexpression <= 0.5\ngini = 0.008\nsamples = 491\nvalue = [2, 489]\nclass = Malicious"] ;
164 -> 165 ;
166 [label="gini = 0.0\nsamples = 489\nvalue = [0, 489]\nclass = Malicious"] ;
165 -> 166 ;
167 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
165 -> 167 ;
168 [label="gini = 0.0\nsamples = 1323\nvalue = [0, 1323]\nclass = Malicious"] ;
164 -> 168 ;
169 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
149 -> 169 ;
170 [label="emptystatement <= 0.5\ngini = 0.153\nsamples = 24\nvalue = [2, 22]\nclass = Malicious"] ;
148 -> 170 ;
171 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
170 -> 171 ;
172 [label="gini = 0.0\nsamples = 22\nvalue = [0, 22]\nclass = Malicious"] ;
170 -> 172 ;
173 [label="relationalexpression <= 0.5\ngini = 0.317\nsamples = 445\nvalue = [88, 357]\nclass = Malicious"] ;
147 -> 173 ;
174 [label="thisexpression <= 0.5\ngini = 0.488\nsamples = 189\nvalue = [80, 109]\nclass = Malicious"] ;
173 -> 174 ;
175 [label="newexpression <= 0.5\ngini = 0.377\nsamples = 103\nvalue = [77, 26]\nclass = Benign"] ;
174 -> 175 ;
176 [label="gini = 0.0\nsamples = 69\nvalue = [69, 0]\nclass = Benign"] ;
175 -> 176 ;
177 [label="formalparameterlist <= 0.5\ngini = 0.36\nsamples = 34\nvalue = [8, 26]\nclass = Malicious"] ;
175 -> 177 ;
178 [label="assignmentoperatorexpression <= 0.5\ngini = 0.397\nsamples = 11\nvalue = [8, 3]\nclass = Benign"] ;
177 -> 178 ;
179 [label="block <= 0.5\ngini = 0.198\nsamples = 9\nvalue = [8, 1]\nclass = Benign"] ;
178 -> 179 ;
180 [label="identifiername <= 0.5\ngini = 0.278\nsamples = 6\nvalue = [5, 1]\nclass = Benign"] ;
179 -> 180 ;
181 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
180 -> 181 ;
182 [label="functionexpression <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [2, 1]\nclass = Benign"] ;
180 -> 182 ;
183 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
182 -> 183 ;
184 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
182 -> 184 ;
185 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
179 -> 185 ;
186 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
178 -> 186 ;
187 [label="gini = 0.0\nsamples = 23\nvalue = [0, 23]\nclass = Malicious"] ;
177 -> 187 ;
188 [label="formalparameterarg <= 0.5\ngini = 0.067\nsamples = 86\nvalue = [3, 83]\nclass = Malicious"] ;
174 -> 188 ;
189 [label="returnstatement <= 0.5\ngini = 0.024\nsamples = 83\nvalue = [1, 82]\nclass = Malicious"] ;
188 -> 189 ;
190 [label="gini = 0.0\nsamples = 82\nvalue = [0, 82]\nclass = Malicious"] ;
189 -> 190 ;
191 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
189 -> 191 ;
192 [label="newexpression <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [2, 1]\nclass = Benign"] ;
188 -> 192 ;
193 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
192 -> 193 ;
194 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
192 -> 194 ;
195 [label="functionexpression <= 0.5\ngini = 0.061\nsamples = 256\nvalue = [8, 248]\nclass = Malicious"] ;
173 -> 195 ;
196 [label="additiveexpression <= 0.5\ngini = 0.008\nsamples = 239\nvalue = [1, 238]\nclass = Malicious"] ;
195 -> 196 ;
197 [label="thisexpression <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
196 -> 197 ;
198 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
197 -> 198 ;
199 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
197 -> 199 ;
200 [label="gini = 0.0\nsamples = 237\nvalue = [0, 237]\nclass = Malicious"] ;
196 -> 200 ;
201 [label="memberdotexpression <= 0.5\ngini = 0.484\nsamples = 17\nvalue = [7, 10]\nclass = Malicious"] ;
195 -> 201 ;
202 [label="gini = 0.0\nsamples = 10\nvalue = [0, 10]\nclass = Malicious"] ;
201 -> 202 ;
203 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
201 -> 203 ;
204 [label="forstatement <= 0.5\ngini = 0.01\nsamples = 3515\nvalue = [18, 3497]\nclass = Malicious"] ;
146 -> 204 ;
205 [label="variabledeclarationlist <= 0.5\ngini = 0.009\nsamples = 3513\nvalue = [16, 3497]\nclass = Malicious"] ;
204 -> 205 ;
206 [label="functionexpression <= 0.5\ngini = 0.5\nsamples = 4\nvalue = [2, 2]\nclass = Benign"] ;
205 -> 206 ;
207 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
206 -> 207 ;
208 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
206 -> 208 ;
209 [label="functionexpression <= 0.5\ngini = 0.008\nsamples = 3509\nvalue = [14, 3495]\nclass = Malicious"] ;
205 -> 209 ;
210 [label="gini = 0.0\nsamples = 2669\nvalue = [0, 2669]\nclass = Malicious"] ;
209 -> 210 ;
211 [label="returnstatement <= 0.5\ngini = 0.033\nsamples = 840\nvalue = [14, 826]\nclass = Malicious"] ;
209 -> 211 ;
212 [label="trystatement <= 0.5\ngini = 0.247\nsamples = 97\nvalue = [14, 83]\nclass = Malicious"] ;
211 -> 212 ;
213 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
212 -> 213 ;
214 [label="gini = 0.0\nsamples = 83\nvalue = [0, 83]\nclass = Malicious"] ;
212 -> 214 ;
215 [label="gini = 0.0\nsamples = 743\nvalue = [0, 743]\nclass = Malicious"] ;
211 -> 215 ;
216 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
204 -> 216 ;
217 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
145 -> 217 ;
218 [label="functionexpression <= 0.5\ngini = 0.49\nsamples = 7\nvalue = [4, 3]\nclass = Benign"] ;
144 -> 218 ;
219 [label="gini = 0.0\nsamples = 3\nvalue = [0, 3]\nclass = Malicious"] ;
218 -> 219 ;
220 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
218 -> 220 ;
221 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
143 -> 221 ;
222 [label="trystatement <= 0.5\ngini = 0.444\nsamples = 24\nvalue = [16, 8]\nclass = Benign"] ;
142 -> 222 ;
223 [label="gini = 0.0\nsamples = 15\nvalue = [15, 0]\nclass = Benign"] ;
222 -> 223 ;
224 [label="postincrementexpression <= 0.5\ngini = 0.198\nsamples = 9\nvalue = [1, 8]\nclass = Malicious"] ;
222 -> 224 ;
225 [label="gini = 0.0\nsamples = 8\nvalue = [0, 8]\nclass = Malicious"] ;
224 -> 225 ;
226 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
224 -> 226 ;
227 [label="gini = 0.0\nsamples = 16\nvalue = [16, 0]\nclass = Benign"] ;
141 -> 227 ;
228 [label="gini = 0.0\nsamples = 57\nvalue = [57, 0]\nclass = Benign"] ;
140 -> 228 ;
229 [label="gini = 0.0\nsamples = 67\nvalue = [67, 0]\nclass = Benign"] ;
139 -> 229 ;
230 [label="forstatement <= 0.5\ngini = 0.248\nsamples = 10711\nvalue = [9155, 1556]\nclass = Benign"] ;
0 -> 230 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
231 [label="bitshiftexpression <= 0.5\ngini = 0.012\nsamples = 9179\nvalue = [9122, 57]\nclass = Benign"] ;
230 -> 231 ;
232 [label="whilestatement <= 0.5\ngini = 0.001\nsamples = 9127\nvalue = [9122, 5]\nclass = Benign"] ;
231 -> 232 ;
233 [label="trystatement <= 0.5\ngini = 0.001\nsamples = 9122\nvalue = [9118, 4]\nclass = Benign"] ;
232 -> 233 ;
234 [label="multiplicativeexpression <= 0.5\ngini = 0.0\nsamples = 9010\nvalue = [9009, 1]\nclass = Benign"] ;
233 -> 234 ;
235 [label="gini = 0.0\nsamples = 8923\nvalue = [8923, 0]\nclass = Benign"] ;
234 -> 235 ;
236 [label="propertyexpressionassignment <= 0.5\ngini = 0.023\nsamples = 87\nvalue = [86, 1]\nclass = Benign"] ;
234 -> 236 ;
237 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
236 -> 237 ;
238 [label="gini = 0.0\nsamples = 86\nvalue = [86, 0]\nclass = Benign"] ;
236 -> 238 ;
239 [label="memberdotexpression <= 0.5\ngini = 0.052\nsamples = 112\nvalue = [109, 3]\nclass = Benign"] ;
233 -> 239 ;
240 [label="gini = 0.0\nsamples = 3\nvalue = [0, 3]\nclass = Malicious"] ;
239 -> 240 ;
241 [label="gini = 0.0\nsamples = 109\nvalue = [109, 0]\nclass = Benign"] ;
239 -> 241 ;
242 [label="notexpression <= 0.5\ngini = 0.32\nsamples = 5\nvalue = [4, 1]\nclass = Benign"] ;
232 -> 242 ;
243 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
242 -> 243 ;
244 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
242 -> 244 ;
245 [label="gini = 0.0\nsamples = 52\nvalue = [0, 52]\nclass = Malicious"] ;
231 -> 245 ;
246 [label="formalparameterlist <= 0.5\ngini = 0.042\nsamples = 1532\nvalue = [33, 1499]\nclass = Malicious"] ;
230 -> 246 ;
247 [label="postincrementexpression <= 0.5\ngini = 0.003\nsamples = 1501\nvalue = [2, 1499]\nclass = Malicious"] ;
246 -> 247 ;
248 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
247 -> 248 ;
249 [label="gini = 0.0\nsamples = 1499\nvalue = [0, 1499]\nclass = Malicious"] ;
247 -> 249 ;
250 [label="gini = 0.0\nsamples = 31\nvalue = [31, 0]\nclass = Benign"] ;
246 -> 250 ;
}
