digraph Tree {
node [shape=box] ;
0 [label="objectliteral <= 0.5\ngini = 0.5\nsamples = 27000\nvalue = [13503, 13497]\nclass = Benign"] ;
1 [label="numericliteral <= 0.5\ngini = 0.391\nsamples = 16293\nvalue = [4337, 11956]\nclass = Malicious"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="expressionstatement <= 0.5\ngini = 0.485\nsamples = 7315\nvalue = [3030, 4285]\nclass = Malicious"] ;
1 -> 2 ;
3 [label="arguments <= 0.5\ngini = 0.412\nsamples = 3985\nvalue = [1155, 2830]\nclass = Malicious"] ;
2 -> 3 ;
4 [label="variabledeclaration <= 0.5\ngini = 0.469\nsamples = 2989\nvalue = [1121, 1868]\nclass = Malicious"] ;
3 -> 4 ;
5 [label="gini = 0.398\nsamples = 2573\nvalue = [705, 1868]\nclass = Malicious"] ;
4 -> 5 ;
6 [label="gini = 0.0\nsamples = 416\nvalue = [416, 0]\nclass = Benign"] ;
4 -> 6 ;
7 [label="literal <= 0.5\ngini = 0.066\nsamples = 996\nvalue = [34, 962]\nclass = Malicious"] ;
3 -> 7 ;
8 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
7 -> 8 ;
9 [label="elementlist <= 0.5\ngini = 0.055\nsamples = 990\nvalue = [28, 962]\nclass = Malicious"] ;
7 -> 9 ;
10 [label="variabledeclaration <= 0.5\ngini = 0.049\nsamples = 987\nvalue = [25, 962]\nclass = Malicious"] ;
9 -> 10 ;
11 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
10 -> 11 ;
12 [label="expressionsequence <= 0.5\ngini = 0.047\nsamples = 986\nvalue = [24, 962]\nclass = Malicious"] ;
10 -> 12 ;
13 [label="identifiername <= 0.5\ngini = 0.092\nsamples = 496\nvalue = [24, 472]\nclass = Malicious"] ;
12 -> 13 ;
14 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
13 -> 14 ;
15 [label="gini = 0.089\nsamples = 495\nvalue = [23, 472]\nclass = Malicious"] ;
13 -> 15 ;
16 [label="gini = 0.0\nsamples = 490\nvalue = [0, 490]\nclass = Malicious"] ;
12 -> 16 ;
17 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
9 -> 17 ;
18 [label="variabledeclarationlist <= 0.5\ngini = 0.492\nsamples = 3330\nvalue = [1875, 1455]\nclass = Benign"] ;
2 -> 18 ;
19 [label="functionbody <= 0.5\ngini = 0.359\nsamples = 1888\nvalue = [1445, 443]\nclass = Benign"] ;
18 -> 19 ;
20 [label="identifiername <= 0.5\ngini = 0.427\nsamples = 1433\nvalue = [990, 443]\nclass = Benign"] ;
19 -> 20 ;
21 [label="gini = 0.0\nsamples = 359\nvalue = [359, 0]\nclass = Benign"] ;
20 -> 21 ;
22 [label="arguments <= 0.5\ngini = 0.485\nsamples = 1074\nvalue = [631, 443]\nclass = Benign"] ;
20 -> 22 ;
23 [label="gini = 0.0\nsamples = 156\nvalue = [156, 0]\nclass = Benign"] ;
22 -> 23 ;
24 [label="ifstatement <= 0.5\ngini = 0.499\nsamples = 918\nvalue = [475, 443]\nclass = Benign"] ;
22 -> 24 ;
25 [label="arrayliteral <= 0.5\ngini = 0.5\nsamples = 859\nvalue = [416, 443]\nclass = Malicious"] ;
24 -> 25 ;
26 [label="literal <= 0.5\ngini = 0.495\nsamples = 803\nvalue = [360, 443]\nclass = Malicious"] ;
25 -> 26 ;
27 [label="gini = 0.0\nsamples = 22\nvalue = [22, 0]\nclass = Benign"] ;
26 -> 27 ;
28 [label="block <= 0.5\ngini = 0.491\nsamples = 781\nvalue = [338, 443]\nclass = Malicious"] ;
26 -> 28 ;
29 [label="gini = 0.49\nsamples = 778\nvalue = [335, 443]\nclass = Malicious"] ;
28 -> 29 ;
30 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
28 -> 30 ;
31 [label="gini = 0.0\nsamples = 56\nvalue = [56, 0]\nclass = Benign"] ;
25 -> 31 ;
32 [label="gini = 0.0\nsamples = 59\nvalue = [59, 0]\nclass = Benign"] ;
24 -> 32 ;
33 [label="gini = 0.0\nsamples = 455\nvalue = [455, 0]\nclass = Benign"] ;
19 -> 33 ;
34 [label="identifiername <= 0.5\ngini = 0.419\nsamples = 1442\nvalue = [430, 1012]\nclass = Malicious"] ;
18 -> 34 ;
35 [label="arguments <= 0.5\ngini = 0.079\nsamples = 820\nvalue = [34, 786]\nclass = Malicious"] ;
34 -> 35 ;
36 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
35 -> 36 ;
37 [label="withstatement <= 0.5\ngini = 0.071\nsamples = 816\nvalue = [30, 786]\nclass = Malicious"] ;
35 -> 37 ;
38 [label="returnstatement <= 0.5\ngini = 0.066\nsamples = 814\nvalue = [28, 786]\nclass = Malicious"] ;
37 -> 38 ;
39 [label="assignmentoperator <= 0.5\ngini = 0.061\nsamples = 788\nvalue = [25, 763]\nclass = Malicious"] ;
38 -> 39 ;
40 [label="functionbody <= 0.5\ngini = 0.067\nsamples = 725\nvalue = [25, 700]\nclass = Malicious"] ;
39 -> 40 ;
41 [label="gini = 0.064\nsamples = 724\nvalue = [24, 700]\nclass = Malicious"] ;
40 -> 41 ;
42 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
40 -> 42 ;
43 [label="gini = 0.0\nsamples = 63\nvalue = [0, 63]\nclass = Malicious"] ;
39 -> 43 ;
44 [label="assignmentoperator <= 0.5\ngini = 0.204\nsamples = 26\nvalue = [3, 23]\nclass = Malicious"] ;
38 -> 44 ;
45 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
44 -> 45 ;
46 [label="gini = 0.08\nsamples = 24\nvalue = [1, 23]\nclass = Malicious"] ;
44 -> 46 ;
47 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
37 -> 47 ;
48 [label="returnstatement <= 0.5\ngini = 0.463\nsamples = 622\nvalue = [396, 226]\nclass = Benign"] ;
34 -> 48 ;
49 [label="functionbody <= 0.5\ngini = 0.01\nsamples = 379\nvalue = [377, 2]\nclass = Benign"] ;
48 -> 49 ;
50 [label="assignmentoperator <= 0.5\ngini = 0.021\nsamples = 189\nvalue = [187, 2]\nclass = Benign"] ;
49 -> 50 ;
51 [label="arguments <= 0.5\ngini = 0.039\nsamples = 101\nvalue = [99, 2]\nclass = Benign"] ;
50 -> 51 ;
52 [label="gini = 0.0\nsamples = 26\nvalue = [26, 0]\nclass = Benign"] ;
51 -> 52 ;
53 [label="arrayliteral <= 0.5\ngini = 0.052\nsamples = 75\nvalue = [73, 2]\nclass = Benign"] ;
51 -> 53 ;
54 [label="trystatement <= 0.5\ngini = 0.057\nsamples = 68\nvalue = [66, 2]\nclass = Benign"] ;
53 -> 54 ;
55 [label="ifstatement <= 0.5\ngini = 0.059\nsamples = 66\nvalue = [64, 2]\nclass = Benign"] ;
54 -> 55 ;
56 [label="gini = 0.067\nsamples = 29\nvalue = [28, 1]\nclass = Benign"] ;
55 -> 56 ;
57 [label="statementlist <= 0.5\ngini = 0.053\nsamples = 37\nvalue = [36, 1]\nclass = Benign"] ;
55 -> 57 ;
58 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
57 -> 58 ;
59 [label="gini = 0.059\nsamples = 33\nvalue = [32, 1]\nclass = Benign"] ;
57 -> 59 ;
60 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
54 -> 60 ;
61 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
53 -> 61 ;
62 [label="gini = 0.0\nsamples = 88\nvalue = [88, 0]\nclass = Benign"] ;
50 -> 62 ;
63 [label="gini = 0.0\nsamples = 190\nvalue = [190, 0]\nclass = Benign"] ;
49 -> 63 ;
64 [label="ifstatement <= 0.5\ngini = 0.144\nsamples = 243\nvalue = [19, 224]\nclass = Malicious"] ;
48 -> 64 ;
65 [label="formalparameterarg <= 0.5\ngini = 0.089\nsamples = 235\nvalue = [11, 224]\nclass = Malicious"] ;
64 -> 65 ;
66 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
65 -> 66 ;
67 [label="gini = 0.074\nsamples = 233\nvalue = [9, 224]\nclass = Malicious"] ;
65 -> 67 ;
68 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
64 -> 68 ;
69 [label="expressionstatement <= 0.5\ngini = 0.249\nsamples = 8978\nvalue = [1307, 7671]\nclass = Malicious"] ;
1 -> 69 ;
70 [label="gini = 0.0\nsamples = 254\nvalue = [254, 0]\nclass = Benign"] ;
69 -> 70 ;
71 [label="elementlist <= 0.5\ngini = 0.212\nsamples = 8724\nvalue = [1053, 7671]\nclass = Malicious"] ;
69 -> 71 ;
72 [label="returnstatement <= 0.5\ngini = 0.296\nsamples = 4831\nvalue = [873, 3958]\nclass = Malicious"] ;
71 -> 72 ;
73 [label="functionbody <= 0.5\ngini = 0.417\nsamples = 2475\nvalue = [732, 1743]\nclass = Malicious"] ;
72 -> 73 ;
74 [label="arguments <= 0.5\ngini = 0.324\nsamples = 2108\nvalue = [428, 1680]\nclass = Malicious"] ;
73 -> 74 ;
75 [label="gini = 0.0\nsamples = 123\nvalue = [123, 0]\nclass = Benign"] ;
74 -> 75 ;
76 [label="do_for_while_statement <= 0.5\ngini = 0.26\nsamples = 1985\nvalue = [305, 1680]\nclass = Malicious"] ;
74 -> 76 ;
77 [label="emptystatement <= 0.5\ngini = 0.228\nsamples = 1779\nvalue = [234, 1545]\nclass = Malicious"] ;
76 -> 77 ;
78 [label="varmodifier <= 0.5\ngini = 0.214\nsamples = 1759\nvalue = [214, 1545]\nclass = Malicious"] ;
77 -> 78 ;
79 [label="ifstatement <= 0.5\ngini = 0.312\nsamples = 689\nvalue = [133, 556]\nclass = Malicious"] ;
78 -> 79 ;
80 [label="identifiername <= 0.5\ngini = 0.499\nsamples = 232\nvalue = [112, 120]\nclass = Malicious"] ;
79 -> 80 ;
81 [label="gini = 0.0\nsamples = 27\nvalue = [27, 0]\nclass = Benign"] ;
80 -> 81 ;
82 [label="arrayliteral <= 0.5\ngini = 0.485\nsamples = 205\nvalue = [85, 120]\nclass = Malicious"] ;
80 -> 82 ;
83 [label="statementlist <= 0.5\ngini = 0.484\nsamples = 204\nvalue = [84, 120]\nclass = Malicious"] ;
82 -> 83 ;
84 [label="assignmentoperator <= 0.5\ngini = 0.483\nsamples = 203\nvalue = [83, 120]\nclass = Malicious"] ;
83 -> 84 ;
85 [label="gini = 0.482\nsamples = 202\nvalue = [82, 120]\nclass = Malicious"] ;
84 -> 85 ;
86 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
84 -> 86 ;
87 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
83 -> 87 ;
88 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
82 -> 88 ;
89 [label="statementlist <= 0.5\ngini = 0.088\nsamples = 457\nvalue = [21, 436]\nclass = Malicious"] ;
79 -> 89 ;
90 [label="identifiername <= 0.5\ngini = 0.014\nsamples = 439\nvalue = [3, 436]\nclass = Malicious"] ;
89 -> 90 ;
91 [label="gini = 0.0\nsamples = 139\nvalue = [0, 139]\nclass = Malicious"] ;
90 -> 91 ;
92 [label="gini = 0.02\nsamples = 300\nvalue = [3, 297]\nclass = Malicious"] ;
90 -> 92 ;
93 [label="gini = 0.0\nsamples = 18\nvalue = [18, 0]\nclass = Benign"] ;
89 -> 93 ;
94 [label="identifiername <= 0.5\ngini = 0.14\nsamples = 1070\nvalue = [81, 989]\nclass = Malicious"] ;
78 -> 94 ;
95 [label="gini = 0.076\nsamples = 458\nvalue = [18, 440]\nclass = Malicious"] ;
94 -> 95 ;
96 [label="catchproduction <= 0.5\ngini = 0.185\nsamples = 612\nvalue = [63, 549]\nclass = Malicious"] ;
94 -> 96 ;
97 [label="assignmentoperator <= 0.5\ngini = 0.181\nsamples = 608\nvalue = [61, 547]\nclass = Malicious"] ;
96 -> 97 ;
98 [label="ifstatement <= 0.5\ngini = 0.178\nsamples = 606\nvalue = [60, 546]\nclass = Malicious"] ;
97 -> 98 ;
99 [label="gini = 0.161\nsamples = 407\nvalue = [36, 371]\nclass = Malicious"] ;
98 -> 99 ;
100 [label="statementlist <= 0.5\ngini = 0.212\nsamples = 199\nvalue = [24, 175]\nclass = Malicious"] ;
98 -> 100 ;
101 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
100 -> 101 ;
102 [label="gini = 0.177\nsamples = 194\nvalue = [19, 175]\nclass = Malicious"] ;
100 -> 102 ;
103 [label="statementlist <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
97 -> 103 ;
104 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
103 -> 104 ;
105 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
103 -> 105 ;
106 [label="ifstatement <= 0.5\ngini = 0.5\nsamples = 4\nvalue = [2, 2]\nclass = Benign"] ;
96 -> 106 ;
107 [label="gini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
106 -> 107 ;
108 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
106 -> 108 ;
109 [label="gini = 0.0\nsamples = 20\nvalue = [20, 0]\nclass = Benign"] ;
77 -> 109 ;
110 [label="emptystatement <= 0.5\ngini = 0.452\nsamples = 206\nvalue = [71, 135]\nclass = Malicious"] ;
76 -> 110 ;
111 [label="ifstatement <= 0.5\ngini = 0.3\nsamples = 87\nvalue = [71, 16]\nclass = Benign"] ;
110 -> 111 ;
112 [label="statementlist <= 0.5\ngini = 0.111\nsamples = 17\nvalue = [1, 16]\nclass = Malicious"] ;
111 -> 112 ;
113 [label="gini = 0.0\nsamples = 9\nvalue = [0, 9]\nclass = Malicious"] ;
112 -> 113 ;
114 [label="arrayliteral <= 0.5\ngini = 0.219\nsamples = 8\nvalue = [1, 7]\nclass = Malicious"] ;
112 -> 114 ;
115 [label="gini = 0.245\nsamples = 7\nvalue = [1, 6]\nclass = Malicious"] ;
114 -> 115 ;
116 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
114 -> 116 ;
117 [label="gini = 0.0\nsamples = 70\nvalue = [70, 0]\nclass = Benign"] ;
111 -> 117 ;
118 [label="gini = 0.0\nsamples = 119\nvalue = [0, 119]\nclass = Malicious"] ;
110 -> 118 ;
119 [label="identifiername <= 0.5\ngini = 0.284\nsamples = 367\nvalue = [304, 63]\nclass = Benign"] ;
73 -> 119 ;
120 [label="trystatement <= 0.5\ngini = 0.233\nsamples = 52\nvalue = [7, 45]\nclass = Malicious"] ;
119 -> 120 ;
121 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
120 -> 121 ;
122 [label="gini = 0.0\nsamples = 45\nvalue = [0, 45]\nclass = Malicious"] ;
120 -> 122 ;
123 [label="emptystatement <= 0.5\ngini = 0.108\nsamples = 315\nvalue = [297, 18]\nclass = Benign"] ;
119 -> 123 ;
124 [label="formalparameterlist <= 0.5\ngini = 0.073\nsamples = 289\nvalue = [278, 11]\nclass = Benign"] ;
123 -> 124 ;
125 [label="gini = 0.0\nsamples = 193\nvalue = [193, 0]\nclass = Benign"] ;
124 -> 125 ;
126 [label="block <= 0.5\ngini = 0.203\nsamples = 96\nvalue = [85, 11]\nclass = Benign"] ;
124 -> 126 ;
127 [label="variabledeclaration <= 0.5\ngini = 0.477\nsamples = 28\nvalue = [17, 11]\nclass = Benign"] ;
126 -> 127 ;
128 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
127 -> 128 ;
129 [label="arrayliteral <= 0.5\ngini = 0.488\nsamples = 19\nvalue = [8, 11]\nclass = Malicious"] ;
127 -> 129 ;
130 [label="gini = 0.475\nsamples = 18\nvalue = [7, 11]\nclass = Malicious"] ;
129 -> 130 ;
131 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
129 -> 131 ;
132 [label="gini = 0.0\nsamples = 68\nvalue = [68, 0]\nclass = Benign"] ;
126 -> 132 ;
133 [label="trystatement <= 0.5\ngini = 0.393\nsamples = 26\nvalue = [19, 7]\nclass = Benign"] ;
123 -> 133 ;
134 [label="gini = 0.0\nsamples = 19\nvalue = [19, 0]\nclass = Benign"] ;
133 -> 134 ;
135 [label="gini = 0.0\nsamples = 7\nvalue = [0, 7]\nclass = Malicious"] ;
133 -> 135 ;
136 [label="statementlist <= 0.5\ngini = 0.113\nsamples = 2356\nvalue = [141, 2215]\nclass = Malicious"] ;
72 -> 136 ;
137 [label="arguments <= 0.5\ngini = 0.026\nsamples = 1369\nvalue = [18, 1351]\nclass = Malicious"] ;
136 -> 137 ;
138 [label="gini = 0.0\nsamples = 497\nvalue = [0, 497]\nclass = Malicious"] ;
137 -> 138 ;
139 [label="formalparameterarg <= 0.5\ngini = 0.04\nsamples = 872\nvalue = [18, 854]\nclass = Malicious"] ;
137 -> 139 ;
140 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
139 -> 140 ;
141 [label="ifstatement <= 0.5\ngini = 0.034\nsamples = 869\nvalue = [15, 854]\nclass = Malicious"] ;
139 -> 141 ;
142 [label="gini = 0.0\nsamples = 12\nvalue = [0, 12]\nclass = Malicious"] ;
141 -> 142 ;
143 [label="gini = 0.034\nsamples = 857\nvalue = [15, 842]\nclass = Malicious"] ;
141 -> 143 ;
144 [label="identifiername <= 0.5\ngini = 0.218\nsamples = 987\nvalue = [123, 864]\nclass = Malicious"] ;
136 -> 144 ;
145 [label="gini = 0.0\nsamples = 256\nvalue = [0, 256]\nclass = Malicious"] ;
144 -> 145 ;
146 [label="do_for_while_statement <= 0.5\ngini = 0.28\nsamples = 731\nvalue = [123, 608]\nclass = Malicious"] ;
144 -> 146 ;
147 [label="formalparameterarg <= 0.5\ngini = 0.269\nsamples = 723\nvalue = [116, 607]\nclass = Malicious"] ;
146 -> 147 ;
148 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
147 -> 148 ;
149 [label="variabledeclarationlist <= 0.5\ngini = 0.265\nsamples = 720\nvalue = [113, 607]\nclass = Malicious"] ;
147 -> 149 ;
150 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
149 -> 150 ;
151 [label="arrayliteral <= 0.5\ngini = 0.261\nsamples = 718\nvalue = [111, 607]\nclass = Malicious"] ;
149 -> 151 ;
152 [label="emptystatement <= 0.5\ngini = 0.26\nsamples = 717\nvalue = [110, 607]\nclass = Malicious"] ;
151 -> 152 ;
153 [label="gini = 0.258\nsamples = 715\nvalue = [109, 606]\nclass = Malicious"] ;
152 -> 153 ;
154 [label="catchproduction <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
152 -> 154 ;
155 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
154 -> 155 ;
156 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
154 -> 156 ;
157 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
151 -> 157 ;
158 [label="catchproduction <= 0.5\ngini = 0.219\nsamples = 8\nvalue = [7, 1]\nclass = Benign"] ;
146 -> 158 ;
159 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
158 -> 159 ;
160 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
158 -> 160 ;
161 [label="arguments <= 0.5\ngini = 0.088\nsamples = 3893\nvalue = [180, 3713]\nclass = Malicious"] ;
71 -> 161 ;
162 [label="gini = 0.0\nsamples = 82\nvalue = [82, 0]\nclass = Benign"] ;
161 -> 162 ;
163 [label="varmodifier <= 0.5\ngini = 0.05\nsamples = 3811\nvalue = [98, 3713]\nclass = Malicious"] ;
161 -> 163 ;
164 [label="identifiername <= 0.5\ngini = 0.114\nsamples = 33\nvalue = [31, 2]\nclass = Benign"] ;
163 -> 164 ;
165 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
164 -> 165 ;
166 [label="gini = 0.0\nsamples = 31\nvalue = [31, 0]\nclass = Benign"] ;
164 -> 166 ;
167 [label="functionbody <= 0.5\ngini = 0.035\nsamples = 3778\nvalue = [67, 3711]\nclass = Malicious"] ;
163 -> 167 ;
168 [label="ifstatement <= 0.5\ngini = 0.002\nsamples = 2898\nvalue = [3, 2895]\nclass = Malicious"] ;
167 -> 168 ;
169 [label="block <= 0.5\ngini = 0.009\nsamples = 450\nvalue = [2, 448]\nclass = Malicious"] ;
168 -> 169 ;
170 [label="identifiername <= 0.5\ngini = 0.219\nsamples = 16\nvalue = [2, 14]\nclass = Malicious"] ;
169 -> 170 ;
171 [label="gini = 0.0\nsamples = 14\nvalue = [0, 14]\nclass = Malicious"] ;
170 -> 171 ;
172 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
170 -> 172 ;
173 [label="gini = 0.0\nsamples = 434\nvalue = [0, 434]\nclass = Malicious"] ;
169 -> 173 ;
174 [label="emptystatement <= 0.5\ngini = 0.001\nsamples = 2448\nvalue = [1, 2447]\nclass = Malicious"] ;
168 -> 174 ;
175 [label="statementlist <= 0.5\ngini = 0.002\nsamples = 991\nvalue = [1, 990]\nclass = Malicious"] ;
174 -> 175 ;
176 [label="gini = 0.0\nsamples = 754\nvalue = [0, 754]\nclass = Malicious"] ;
175 -> 176 ;
177 [label="identifiername <= 0.5\ngini = 0.008\nsamples = 237\nvalue = [1, 236]\nclass = Malicious"] ;
175 -> 177 ;
178 [label="gini = 0.0\nsamples = 21\nvalue = [0, 21]\nclass = Malicious"] ;
177 -> 178 ;
179 [label="switchstatement <= 0.5\ngini = 0.009\nsamples = 216\nvalue = [1, 215]\nclass = Malicious"] ;
177 -> 179 ;
180 [label="gini = 0.009\nsamples = 213\nvalue = [1, 212]\nclass = Malicious"] ;
179 -> 180 ;
181 [label="gini = 0.0\nsamples = 3\nvalue = [0, 3]\nclass = Malicious"] ;
179 -> 181 ;
182 [label="gini = 0.0\nsamples = 1457\nvalue = [0, 1457]\nclass = Malicious"] ;
174 -> 182 ;
183 [label="returnstatement <= 0.5\ngini = 0.135\nsamples = 880\nvalue = [64, 816]\nclass = Malicious"] ;
167 -> 183 ;
184 [label="trystatement <= 0.5\ngini = 0.48\nsamples = 145\nvalue = [58, 87]\nclass = Malicious"] ;
183 -> 184 ;
185 [label="gini = 0.0\nsamples = 58\nvalue = [58, 0]\nclass = Benign"] ;
184 -> 185 ;
186 [label="gini = 0.0\nsamples = 87\nvalue = [0, 87]\nclass = Malicious"] ;
184 -> 186 ;
187 [label="breakstatement <= 0.5\ngini = 0.016\nsamples = 735\nvalue = [6, 729]\nclass = Malicious"] ;
183 -> 187 ;
188 [label="identifiername <= 0.5\ngini = 0.011\nsamples = 733\nvalue = [4, 729]\nclass = Malicious"] ;
187 -> 188 ;
189 [label="gini = 0.0\nsamples = 528\nvalue = [0, 528]\nclass = Malicious"] ;
188 -> 189 ;
190 [label="assignmentoperator <= 0.5\ngini = 0.038\nsamples = 205\nvalue = [4, 201]\nclass = Malicious"] ;
188 -> 190 ;
191 [label="block <= 0.5\ngini = 0.5\nsamples = 6\nvalue = [3, 3]\nclass = Benign"] ;
190 -> 191 ;
192 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
191 -> 192 ;
193 [label="formalparameterarg <= 0.5\ngini = 0.375\nsamples = 4\nvalue = [3, 1]\nclass = Benign"] ;
191 -> 193 ;
194 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
193 -> 194 ;
195 [label="gini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
193 -> 195 ;
196 [label="formalparameterarg <= 0.5\ngini = 0.01\nsamples = 199\nvalue = [1, 198]\nclass = Malicious"] ;
190 -> 196 ;
197 [label="gini = 0.0\nsamples = 198\nvalue = [0, 198]\nclass = Malicious"] ;
196 -> 197 ;
198 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
196 -> 198 ;
199 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
187 -> 199 ;
200 [label="do_for_while_statement <= 0.5\ngini = 0.246\nsamples = 10707\nvalue = [9166, 1541]\nclass = Benign"] ;
0 -> 200 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
201 [label="trystatement <= 0.5\ngini = 0.001\nsamples = 8951\nvalue = [8948, 3]\nclass = Benign"] ;
200 -> 201 ;
202 [label="gini = 0.0\nsamples = 8848\nvalue = [8848, 0]\nclass = Benign"] ;
201 -> 202 ;
203 [label="functionbody <= 0.5\ngini = 0.057\nsamples = 103\nvalue = [100, 3]\nclass = Benign"] ;
201 -> 203 ;
204 [label="arrayliteral <= 0.5\ngini = 0.103\nsamples = 55\nvalue = [52, 3]\nclass = Benign"] ;
203 -> 204 ;
205 [label="variablestatement <= 0.5\ngini = 0.346\nsamples = 9\nvalue = [7, 2]\nclass = Benign"] ;
204 -> 205 ;
206 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
205 -> 206 ;
207 [label="ifstatement <= 0.5\ngini = 0.5\nsamples = 4\nvalue = [2, 2]\nclass = Benign"] ;
205 -> 207 ;
208 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
207 -> 208 ;
209 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
207 -> 209 ;
210 [label="ifstatement <= 0.5\ngini = 0.043\nsamples = 46\nvalue = [45, 1]\nclass = Benign"] ;
204 -> 210 ;
211 [label="gini = 0.0\nsamples = 22\nvalue = [22, 0]\nclass = Benign"] ;
210 -> 211 ;
212 [label="variabledeclaration <= 0.5\ngini = 0.08\nsamples = 24\nvalue = [23, 1]\nclass = Benign"] ;
210 -> 212 ;
213 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
212 -> 213 ;
214 [label="elementlist <= 0.5\ngini = 0.124\nsamples = 15\nvalue = [14, 1]\nclass = Benign"] ;
212 -> 214 ;
215 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
214 -> 215 ;
216 [label="gini = 0.133\nsamples = 14\nvalue = [13, 1]\nclass = Benign"] ;
214 -> 216 ;
217 [label="gini = 0.0\nsamples = 48\nvalue = [48, 0]\nclass = Benign"] ;
203 -> 217 ;
218 [label="identifiername <= 0.5\ngini = 0.217\nsamples = 1756\nvalue = [218, 1538]\nclass = Malicious"] ;
200 -> 218 ;
219 [label="gini = 0.0\nsamples = 1481\nvalue = [0, 1481]\nclass = Malicious"] ;
218 -> 219 ;
220 [label="catchproduction <= 0.5\ngini = 0.329\nsamples = 275\nvalue = [218, 57]\nclass = Benign"] ;
218 -> 220 ;
221 [label="property_rules <= 0.5\ngini = 0.01\nsamples = 193\nvalue = [192, 1]\nclass = Benign"] ;
220 -> 221 ;
222 [label="assignmentoperator <= 0.5\ngini = 0.142\nsamples = 13\nvalue = [12, 1]\nclass = Benign"] ;
221 -> 222 ;
223 [label="gini = 0.0\nsamples = 12\nvalue = [12, 0]\nclass = Benign"] ;
222 -> 223 ;
224 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
222 -> 224 ;
225 [label="gini = 0.0\nsamples = 180\nvalue = [180, 0]\nclass = Benign"] ;
221 -> 225 ;
226 [label="assignmentoperator <= 0.5\ngini = 0.433\nsamples = 82\nvalue = [26, 56]\nclass = Malicious"] ;
220 -> 226 ;
227 [label="breakstatement <= 0.5\ngini = 0.36\nsamples = 17\nvalue = [13, 4]\nclass = Benign"] ;
226 -> 227 ;
228 [label="gini = 0.0\nsamples = 13\nvalue = [13, 0]\nclass = Benign"] ;
227 -> 228 ;
229 [label="gini = 0.0\nsamples = 4\nvalue = [0, 4]\nclass = Malicious"] ;
227 -> 229 ;
230 [label="defaultclause <= 0.5\ngini = 0.32\nsamples = 65\nvalue = [13, 52]\nclass = Malicious"] ;
226 -> 230 ;
231 [label="breakstatement <= 0.5\ngini = 0.444\nsamples = 39\nvalue = [13, 26]\nclass = Malicious"] ;
230 -> 231 ;
232 [label="gini = 0.0\nsamples = 10\nvalue = [10, 0]\nclass = Benign"] ;
231 -> 232 ;
233 [label="emptystatement <= 0.5\ngini = 0.185\nsamples = 29\nvalue = [3, 26]\nclass = Malicious"] ;
231 -> 233 ;
234 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
233 -> 234 ;
235 [label="gini = 0.0\nsamples = 26\nvalue = [0, 26]\nclass = Malicious"] ;
233 -> 235 ;
236 [label="gini = 0.0\nsamples = 26\nvalue = [0, 26]\nclass = Malicious"] ;
230 -> 236 ;
}
