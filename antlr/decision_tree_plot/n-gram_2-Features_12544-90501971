digraph Tree {
node [shape=box] ;
0 [label="objectliteralexpression-objectliteral <= 0.5\ngini = 0.5\nsamples = 27000\nvalue = [13488, 13512]\nclass = Malicious"] ;
1 [label="argumentsexpression-memberindexexpression <= 0.5\ngini = 0.387\nsamples = 16247\nvalue = [4264, 11983]\nclass = Malicious"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="identifiername-identifiername <= 0.5\ngini = 0.474\nsamples = 11022\nvalue = [4255, 6767]\nclass = Malicious"] ;
1 -> 2 ;
3 [label="variabledeclaration-newexpression <= 0.5\ngini = 0.44\nsamples = 10053\nvalue = [3291, 6762]\nclass = Malicious"] ;
2 -> 3 ;
4 [label="literal-identifierexpression <= 0.5\ngini = 0.485\nsamples = 7776\nvalue = [3210, 4566]\nclass = Malicious"] ;
3 -> 4 ;
5 [label="expressionsequence-literalexpression <= 0.5\ngini = 0.469\nsamples = 7262\nvalue = [2732, 4530]\nclass = Malicious"] ;
4 -> 5 ;
6 [label="sourceelement-statement <= 0.5\ngini = 0.495\nsamples = 5835\nvalue = [2635, 3200]\nclass = Malicious"] ;
5 -> 6 ;
7 [label="gini = 0.399\nsamples = 2587\nvalue = [711, 1876]\nclass = Malicious"] ;
6 -> 7 ;
8 [label="memberdotexpression-literalexpression <= 0.5\ngini = 0.483\nsamples = 3248\nvalue = [1924, 1324]\nclass = Benign"] ;
6 -> 8 ;
9 [label="identifierexpression-eos <= 0.5\ngini = 0.429\nsamples = 2791\nvalue = [1923, 868]\nclass = Benign"] ;
8 -> 9 ;
10 [label="arguments-identifiername <= 0.5\ngini = 0.295\nsamples = 2204\nvalue = [1807, 397]\nclass = Benign"] ;
9 -> 10 ;
11 [label="numericliteral-eos <= 0.5\ngini = 0.204\nsamples = 2016\nvalue = [1783, 233]\nclass = Benign"] ;
10 -> 11 ;
12 [label="gini = 0.0\nsamples = 1312\nvalue = [1312, 0]\nclass = Benign"] ;
11 -> 12 ;
13 [label="identifiername-arguments <= 0.5\ngini = 0.443\nsamples = 704\nvalue = [471, 233]\nclass = Benign"] ;
11 -> 13 ;
14 [label="gini = 0.0\nsamples = 326\nvalue = [326, 0]\nclass = Benign"] ;
13 -> 14 ;
15 [label="variabledeclaration-literalexpression <= 0.5\ngini = 0.473\nsamples = 378\nvalue = [145, 233]\nclass = Malicious"] ;
13 -> 15 ;
16 [label="gini = 0.0\nsamples = 140\nvalue = [140, 0]\nclass = Benign"] ;
15 -> 16 ;
17 [label="block-statementlist <= 0.5\ngini = 0.041\nsamples = 238\nvalue = [5, 233]\nclass = Malicious"] ;
15 -> 17 ;
18 [label="functionexpression-functionbody <= 0.5\ngini = 0.017\nsamples = 235\nvalue = [2, 233]\nclass = Malicious"] ;
17 -> 18 ;
19 [label="numericliteral-variabledeclaration <= 0.5\ngini = 0.009\nsamples = 234\nvalue = [1, 233]\nclass = Malicious"] ;
18 -> 19 ;
20 [label="gini = 0.0\nsamples = 233\nvalue = [0, 233]\nclass = Malicious"] ;
19 -> 20 ;
21 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
19 -> 21 ;
22 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
18 -> 22 ;
23 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
17 -> 23 ;
24 [label="arguments-argumentsexpression <= 0.5\ngini = 0.223\nsamples = 188\nvalue = [24, 164]\nclass = Malicious"] ;
10 -> 24 ;
25 [label="gini = 0.0\nsamples = 23\nvalue = [23, 0]\nclass = Benign"] ;
24 -> 25 ;
26 [label="expressionsequence-relationalexpression <= 0.5\ngini = 0.012\nsamples = 165\nvalue = [1, 164]\nclass = Malicious"] ;
24 -> 26 ;
27 [label="gini = 0.0\nsamples = 164\nvalue = [0, 164]\nclass = Malicious"] ;
26 -> 27 ;
28 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
26 -> 28 ;
29 [label="memberdotexpression-argumentsexpression <= 0.5\ngini = 0.317\nsamples = 587\nvalue = [116, 471]\nclass = Malicious"] ;
9 -> 29 ;
30 [label="argumentsexpression-identifierexpression <= 0.5\ngini = 0.23\nsamples = 543\nvalue = [72, 471]\nclass = Malicious"] ;
29 -> 30 ;
31 [label="gini = 0.0\nsamples = 30\nvalue = [30, 0]\nclass = Benign"] ;
30 -> 31 ;
32 [label="variabledeclaration-eos <= 0.5\ngini = 0.15\nsamples = 513\nvalue = [42, 471]\nclass = Malicious"] ;
30 -> 32 ;
33 [label="literal-numericliteral <= 0.5\ngini = 0.116\nsamples = 502\nvalue = [31, 471]\nclass = Malicious"] ;
32 -> 33 ;
34 [label="identifierexpression-assignmentoperator <= 0.5\ngini = 0.42\nsamples = 90\nvalue = [27, 63]\nclass = Malicious"] ;
33 -> 34 ;
35 [label="gini = 0.0\nsamples = 26\nvalue = [26, 0]\nclass = Benign"] ;
34 -> 35 ;
36 [label="expressionsequence-argumentsexpression <= 0.5\ngini = 0.031\nsamples = 64\nvalue = [1, 63]\nclass = Malicious"] ;
34 -> 36 ;
37 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
36 -> 37 ;
38 [label="gini = 0.0\nsamples = 63\nvalue = [0, 63]\nclass = Malicious"] ;
36 -> 38 ;
39 [label="functionexpression-functionbody <= 0.5\ngini = 0.019\nsamples = 412\nvalue = [4, 408]\nclass = Malicious"] ;
33 -> 39 ;
40 [label="gini = 0.0\nsamples = 408\nvalue = [0, 408]\nclass = Malicious"] ;
39 -> 40 ;
41 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
39 -> 41 ;
42 [label="gini = 0.0\nsamples = 11\nvalue = [11, 0]\nclass = Benign"] ;
32 -> 42 ;
43 [label="gini = 0.0\nsamples = 44\nvalue = [44, 0]\nclass = Benign"] ;
29 -> 43 ;
44 [label="literal-literalexpression <= 0.5\ngini = 0.004\nsamples = 457\nvalue = [1, 456]\nclass = Malicious"] ;
8 -> 44 ;
45 [label="gini = 0.0\nsamples = 456\nvalue = [0, 456]\nclass = Malicious"] ;
44 -> 45 ;
46 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
44 -> 46 ;
47 [label="eos-sourceelement <= 0.5\ngini = 0.127\nsamples = 1427\nvalue = [97, 1330]\nclass = Malicious"] ;
5 -> 47 ;
48 [label="gini = 0.0\nsamples = 41\nvalue = [41, 0]\nclass = Benign"] ;
47 -> 48 ;
49 [label="memberindexexpression-memberdotexpression <= 0.5\ngini = 0.078\nsamples = 1386\nvalue = [56, 1330]\nclass = Malicious"] ;
47 -> 49 ;
50 [label="literal-numericliteral <= 0.5\ngini = 0.043\nsamples = 1360\nvalue = [30, 1330]\nclass = Malicious"] ;
49 -> 50 ;
51 [label="assignmentoperatorexpression-identifierexpression <= 0.5\ngini = 0.498\nsamples = 32\nvalue = [17, 15]\nclass = Benign"] ;
50 -> 51 ;
52 [label="gini = 0.0\nsamples = 17\nvalue = [17, 0]\nclass = Benign"] ;
51 -> 52 ;
53 [label="gini = 0.0\nsamples = 15\nvalue = [0, 15]\nclass = Malicious"] ;
51 -> 53 ;
54 [label="arrayliteral-variabledeclaration <= 0.5\ngini = 0.019\nsamples = 1328\nvalue = [13, 1315]\nclass = Malicious"] ;
50 -> 54 ;
55 [label="memberindexexpression-argumentsexpression <= 0.5\ngini = 0.011\nsamples = 1322\nvalue = [7, 1315]\nclass = Malicious"] ;
54 -> 55 ;
56 [label="literal-memberindexexpression <= 0.5\ngini = 0.006\nsamples = 1319\nvalue = [4, 1315]\nclass = Malicious"] ;
55 -> 56 ;
57 [label="identifiername-statement <= 0.5\ngini = 0.003\nsamples = 1317\nvalue = [2, 1315]\nclass = Malicious"] ;
56 -> 57 ;
58 [label="arguments-functionexpression <= 0.5\ngini = 0.002\nsamples = 1316\nvalue = [1, 1315]\nclass = Malicious"] ;
57 -> 58 ;
59 [label="gini = 0.0\nsamples = 1315\nvalue = [0, 1315]\nclass = Malicious"] ;
58 -> 59 ;
60 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
58 -> 60 ;
61 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
57 -> 61 ;
62 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
56 -> 62 ;
63 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
55 -> 63 ;
64 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
54 -> 64 ;
65 [label="gini = 0.0\nsamples = 26\nvalue = [26, 0]\nclass = Benign"] ;
49 -> 65 ;
66 [label="identifierexpression-identifierexpression <= 0.5\ngini = 0.13\nsamples = 514\nvalue = [478, 36]\nclass = Benign"] ;
4 -> 66 ;
67 [label="block-statement <= 0.5\ngini = 0.004\nsamples = 475\nvalue = [474, 1]\nclass = Benign"] ;
66 -> 67 ;
68 [label="gini = 0.0\nsamples = 474\nvalue = [474, 0]\nclass = Benign"] ;
67 -> 68 ;
69 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
67 -> 69 ;
70 [label="assignmentexpression-identifierexpression <= 0.5\ngini = 0.184\nsamples = 39\nvalue = [4, 35]\nclass = Malicious"] ;
66 -> 70 ;
71 [label="gini = 0.0\nsamples = 35\nvalue = [0, 35]\nclass = Malicious"] ;
70 -> 71 ;
72 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
70 -> 72 ;
73 [label="identifierexpression-literalexpression <= 0.5\ngini = 0.069\nsamples = 2277\nvalue = [81, 2196]\nclass = Malicious"] ;
3 -> 73 ;
74 [label="assignmentexpression-memberdotexpression <= 0.5\ngini = 0.022\nsamples = 2201\nvalue = [25, 2176]\nclass = Malicious"] ;
73 -> 74 ;
75 [label="expressionstatement-expressionsequence <= 0.5\ngini = 0.014\nsamples = 2192\nvalue = [16, 2176]\nclass = Malicious"] ;
74 -> 75 ;
76 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
75 -> 76 ;
77 [label="additiveexpression-literalexpression <= 0.5\ngini = 0.009\nsamples = 2186\nvalue = [10, 2176]\nclass = Malicious"] ;
75 -> 77 ;
78 [label="argumentsexpression-argumentsexpression <= 0.5\ngini = 0.006\nsamples = 2183\nvalue = [7, 2176]\nclass = Malicious"] ;
77 -> 78 ;
79 [label="arguments-literalexpression <= 0.5\ngini = 0.005\nsamples = 2182\nvalue = [6, 2176]\nclass = Malicious"] ;
78 -> 79 ;
80 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
79 -> 80 ;
81 [label="literal-identifierexpression <= 0.5\ngini = 0.005\nsamples = 2181\nvalue = [5, 2176]\nclass = Malicious"] ;
79 -> 81 ;
82 [label="arguments-eos <= 0.5\ngini = 0.004\nsamples = 2180\nvalue = [4, 2176]\nclass = Malicious"] ;
81 -> 82 ;
83 [label="numericliteral-literalexpression <= 0.5\ngini = 0.001\nsamples = 1560\nvalue = [1, 1559]\nclass = Malicious"] ;
82 -> 83 ;
84 [label="gini = 0.0\nsamples = 1128\nvalue = [0, 1128]\nclass = Malicious"] ;
83 -> 84 ;
85 [label="numericliteral-eos <= 0.5\ngini = 0.005\nsamples = 432\nvalue = [1, 431]\nclass = Malicious"] ;
83 -> 85 ;
86 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
85 -> 86 ;
87 [label="gini = 0.0\nsamples = 431\nvalue = [0, 431]\nclass = Malicious"] ;
85 -> 87 ;
88 [label="literal-numericliteral <= 0.5\ngini = 0.01\nsamples = 620\nvalue = [3, 617]\nclass = Malicious"] ;
82 -> 88 ;
89 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
88 -> 89 ;
90 [label="gini = 0.0\nsamples = 617\nvalue = [0, 617]\nclass = Malicious"] ;
88 -> 90 ;
91 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
81 -> 91 ;
92 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
78 -> 92 ;
93 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
77 -> 93 ;
94 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
74 -> 94 ;
95 [label="additiveexpression-additiveexpression <= 0.5\ngini = 0.388\nsamples = 76\nvalue = [56, 20]\nclass = Benign"] ;
73 -> 95 ;
96 [label="expressionsequence-assignmentoperatorexpression <= 0.5\ngini = 0.07\nsamples = 55\nvalue = [53, 2]\nclass = Benign"] ;
95 -> 96 ;
97 [label="gini = 0.0\nsamples = 53\nvalue = [53, 0]\nclass = Benign"] ;
96 -> 97 ;
98 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
96 -> 98 ;
99 [label="literal-literalexpression <= 0.5\ngini = 0.245\nsamples = 21\nvalue = [3, 18]\nclass = Malicious"] ;
95 -> 99 ;
100 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
99 -> 100 ;
101 [label="identifiername-additiveexpression <= 0.5\ngini = 0.1\nsamples = 19\nvalue = [1, 18]\nclass = Malicious"] ;
99 -> 101 ;
102 [label="gini = 0.0\nsamples = 18\nvalue = [0, 18]\nclass = Malicious"] ;
101 -> 102 ;
103 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
101 -> 103 ;
104 [label="emptystatement-catchproduction <= 0.5\ngini = 0.01\nsamples = 969\nvalue = [964, 5]\nclass = Benign"] ;
2 -> 104 ;
105 [label="bitxorexpression-argumentsexpression <= 0.5\ngini = 0.002\nsamples = 965\nvalue = [964, 1]\nclass = Benign"] ;
104 -> 105 ;
106 [label="gini = 0.0\nsamples = 964\nvalue = [964, 0]\nclass = Benign"] ;
105 -> 106 ;
107 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
105 -> 107 ;
108 [label="gini = 0.0\nsamples = 4\nvalue = [0, 4]\nclass = Malicious"] ;
104 -> 108 ;
109 [label="eos-arguments <= 0.5\ngini = 0.003\nsamples = 5225\nvalue = [9, 5216]\nclass = Malicious"] ;
1 -> 109 ;
110 [label="literal-eos <= 0.5\ngini = 0.001\nsamples = 5218\nvalue = [2, 5216]\nclass = Malicious"] ;
109 -> 110 ;
111 [label="eos-sourceelement <= 0.5\ngini = 0.02\nsamples = 200\nvalue = [2, 198]\nclass = Malicious"] ;
110 -> 111 ;
112 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
111 -> 112 ;
113 [label="gini = 0.0\nsamples = 198\nvalue = [0, 198]\nclass = Malicious"] ;
111 -> 113 ;
114 [label="gini = 0.0\nsamples = 5018\nvalue = [0, 5018]\nclass = Malicious"] ;
110 -> 114 ;
115 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
109 -> 115 ;
116 [label="statement-forstatement <= 0.5\ngini = 0.244\nsamples = 10753\nvalue = [9224, 1529]\nclass = Benign"] ;
0 -> 116 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
117 [label="bitshiftexpression-identifierexpression <= 0.5\ngini = 0.012\nsamples = 9235\nvalue = [9179, 56]\nclass = Benign"] ;
116 -> 117 ;
118 [label="memberindexexpression-objectliteralexpression <= 0.5\ngini = 0.001\nsamples = 9185\nvalue = [9179, 6]\nclass = Benign"] ;
117 -> 118 ;
119 [label="memberdotexpression-objectliteralexpression <= 0.5\ngini = 0.001\nsamples = 9182\nvalue = [9179, 3]\nclass = Benign"] ;
118 -> 119 ;
120 [label="assignmentoperator-parenthesizedexpression <= 0.5\ngini = 0.0\nsamples = 9180\nvalue = [9179, 1]\nclass = Benign"] ;
119 -> 120 ;
121 [label="gini = 0.0\nsamples = 9179\nvalue = [9179, 0]\nclass = Benign"] ;
120 -> 121 ;
122 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
120 -> 122 ;
123 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
119 -> 123 ;
124 [label="gini = 0.0\nsamples = 3\nvalue = [0, 3]\nclass = Malicious"] ;
118 -> 124 ;
125 [label="gini = 0.0\nsamples = 50\nvalue = [0, 50]\nclass = Malicious"] ;
117 -> 125 ;
126 [label="eos-eos <= 0.5\ngini = 0.058\nsamples = 1518\nvalue = [45, 1473]\nclass = Malicious"] ;
116 -> 126 ;
127 [label="gini = 0.0\nsamples = 1473\nvalue = [0, 1473]\nclass = Malicious"] ;
126 -> 127 ;
128 [label="gini = 0.0\nsamples = 45\nvalue = [45, 0]\nclass = Benign"] ;
126 -> 128 ;
}
