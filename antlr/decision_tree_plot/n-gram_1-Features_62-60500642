digraph Tree {
node [shape=box] ;
0 [label="objectliteral <= 0.5\ngini = 0.5\nsamples = 27000\nvalue = [13506, 13494]\nclass = Benign"] ;
1 [label="numericliteral <= 0.5\ngini = 0.392\nsamples = 16283\nvalue = [4350, 11933]\nclass = Malicious"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="expressionstatement <= 0.5\ngini = 0.485\nsamples = 7339\nvalue = [3036, 4303]\nclass = Malicious"] ;
1 -> 2 ;
3 [label="arguments <= 0.5\ngini = 0.41\nsamples = 3970\nvalue = [1144, 2826]\nclass = Malicious"] ;
2 -> 3 ;
4 [label="sourceelement <= 0.5\ngini = 0.467\nsamples = 2980\nvalue = [1106, 1874]\nclass = Malicious"] ;
3 -> 4 ;
5 [label="gini = 0.398\nsamples = 2582\nvalue = [708, 1874]\nclass = Malicious"] ;
4 -> 5 ;
6 [label="gini = 0.0\nsamples = 398\nvalue = [398, 0]\nclass = Benign"] ;
4 -> 6 ;
7 [label="literal <= 0.5\ngini = 0.074\nsamples = 990\nvalue = [38, 952]\nclass = Malicious"] ;
3 -> 7 ;
8 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
7 -> 8 ;
9 [label="arrayliteral <= 0.5\ngini = 0.061\nsamples = 983\nvalue = [31, 952]\nclass = Malicious"] ;
7 -> 9 ;
10 [label="variablestatement <= 0.5\ngini = 0.054\nsamples = 979\nvalue = [27, 952]\nclass = Malicious"] ;
9 -> 10 ;
11 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
10 -> 11 ;
12 [label="expressionsequence <= 0.5\ngini = 0.052\nsamples = 978\nvalue = [26, 952]\nclass = Malicious"] ;
10 -> 12 ;
13 [label="gini = 0.101\nsamples = 487\nvalue = [26, 461]\nclass = Malicious"] ;
12 -> 13 ;
14 [label="gini = 0.0\nsamples = 491\nvalue = [0, 491]\nclass = Malicious"] ;
12 -> 14 ;
15 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
9 -> 15 ;
16 [label="varmodifier <= 0.5\ngini = 0.492\nsamples = 3369\nvalue = [1892, 1477]\nclass = Benign"] ;
2 -> 16 ;
17 [label="functionbody <= 0.5\ngini = 0.361\nsamples = 1906\nvalue = [1455, 451]\nclass = Benign"] ;
16 -> 17 ;
18 [label="identifiername <= 0.5\ngini = 0.427\nsamples = 1461\nvalue = [1010, 451]\nclass = Benign"] ;
17 -> 18 ;
19 [label="gini = 0.0\nsamples = 367\nvalue = [367, 0]\nclass = Benign"] ;
18 -> 19 ;
20 [label="arrayliteral <= 0.5\ngini = 0.485\nsamples = 1094\nvalue = [643, 451]\nclass = Benign"] ;
18 -> 20 ;
21 [label="ifstatement <= 0.5\ngini = 0.499\nsamples = 935\nvalue = [484, 451]\nclass = Benign"] ;
20 -> 21 ;
22 [label="arguments <= 0.5\ngini = 0.499\nsamples = 868\nvalue = [417, 451]\nclass = Malicious"] ;
21 -> 22 ;
23 [label="gini = 0.0\nsamples = 58\nvalue = [58, 0]\nclass = Benign"] ;
22 -> 23 ;
24 [label="literal <= 0.5\ngini = 0.494\nsamples = 810\nvalue = [359, 451]\nclass = Malicious"] ;
22 -> 24 ;
25 [label="gini = 0.0\nsamples = 24\nvalue = [24, 0]\nclass = Benign"] ;
24 -> 25 ;
26 [label="trystatement <= 0.5\ngini = 0.489\nsamples = 786\nvalue = [335, 451]\nclass = Malicious"] ;
24 -> 26 ;
27 [label="gini = 0.488\nsamples = 783\nvalue = [332, 451]\nclass = Malicious"] ;
26 -> 27 ;
28 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
26 -> 28 ;
29 [label="gini = 0.0\nsamples = 67\nvalue = [67, 0]\nclass = Benign"] ;
21 -> 29 ;
30 [label="gini = 0.0\nsamples = 159\nvalue = [159, 0]\nclass = Benign"] ;
20 -> 30 ;
31 [label="gini = 0.0\nsamples = 445\nvalue = [445, 0]\nclass = Benign"] ;
17 -> 31 ;
32 [label="identifiername <= 0.5\ngini = 0.419\nsamples = 1463\nvalue = [437, 1026]\nclass = Malicious"] ;
16 -> 32 ;
33 [label="arguments <= 0.5\ngini = 0.085\nsamples = 830\nvalue = [37, 793]\nclass = Malicious"] ;
32 -> 33 ;
34 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
33 -> 34 ;
35 [label="withstatement <= 0.5\ngini = 0.077\nsamples = 826\nvalue = [33, 793]\nclass = Malicious"] ;
33 -> 35 ;
36 [label="returnstatement <= 0.5\ngini = 0.072\nsamples = 824\nvalue = [31, 793]\nclass = Malicious"] ;
35 -> 36 ;
37 [label="assignmentoperator <= 0.5\ngini = 0.065\nsamples = 798\nvalue = [27, 771]\nclass = Malicious"] ;
36 -> 37 ;
38 [label="functionbody <= 0.5\ngini = 0.071\nsamples = 735\nvalue = [27, 708]\nclass = Malicious"] ;
37 -> 38 ;
39 [label="gini = 0.068\nsamples = 734\nvalue = [26, 708]\nclass = Malicious"] ;
38 -> 39 ;
40 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
38 -> 40 ;
41 [label="gini = 0.0\nsamples = 63\nvalue = [0, 63]\nclass = Malicious"] ;
37 -> 41 ;
42 [label="assignmentoperator <= 0.5\ngini = 0.26\nsamples = 26\nvalue = [4, 22]\nclass = Malicious"] ;
36 -> 42 ;
43 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
42 -> 43 ;
44 [label="gini = 0.153\nsamples = 24\nvalue = [2, 22]\nclass = Malicious"] ;
42 -> 44 ;
45 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
35 -> 45 ;
46 [label="returnstatement <= 0.5\ngini = 0.465\nsamples = 633\nvalue = [400, 233]\nclass = Benign"] ;
32 -> 46 ;
47 [label="elementlist <= 0.5\ngini = 0.015\nsamples = 387\nvalue = [384, 3]\nclass = Benign"] ;
46 -> 47 ;
48 [label="functionbody <= 0.5\ngini = 0.011\nsamples = 377\nvalue = [375, 2]\nclass = Benign"] ;
47 -> 48 ;
49 [label="assignmentoperator <= 0.5\ngini = 0.021\nsamples = 187\nvalue = [185, 2]\nclass = Benign"] ;
48 -> 49 ;
50 [label="arguments <= 0.5\ngini = 0.04\nsamples = 99\nvalue = [97, 2]\nclass = Benign"] ;
49 -> 50 ;
51 [label="gini = 0.0\nsamples = 25\nvalue = [25, 0]\nclass = Benign"] ;
50 -> 51 ;
52 [label="arrayliteral <= 0.5\ngini = 0.053\nsamples = 74\nvalue = [72, 2]\nclass = Benign"] ;
50 -> 52 ;
53 [label="catchproduction <= 0.5\ngini = 0.055\nsamples = 71\nvalue = [69, 2]\nclass = Benign"] ;
52 -> 53 ;
54 [label="ifstatement <= 0.5\ngini = 0.056\nsamples = 69\nvalue = [67, 2]\nclass = Benign"] ;
53 -> 54 ;
55 [label="gini = 0.062\nsamples = 31\nvalue = [30, 1]\nclass = Benign"] ;
54 -> 55 ;
56 [label="block <= 0.5\ngini = 0.051\nsamples = 38\nvalue = [37, 1]\nclass = Benign"] ;
54 -> 56 ;
57 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
56 -> 57 ;
58 [label="gini = 0.057\nsamples = 34\nvalue = [33, 1]\nclass = Benign"] ;
56 -> 58 ;
59 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
53 -> 59 ;
60 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
52 -> 60 ;
61 [label="gini = 0.0\nsamples = 88\nvalue = [88, 0]\nclass = Benign"] ;
49 -> 61 ;
62 [label="gini = 0.0\nsamples = 190\nvalue = [190, 0]\nclass = Benign"] ;
48 -> 62 ;
63 [label="ifstatement <= 0.5\ngini = 0.18\nsamples = 10\nvalue = [9, 1]\nclass = Benign"] ;
47 -> 63 ;
64 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
63 -> 64 ;
65 [label="functionbody <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [2, 1]\nclass = Benign"] ;
63 -> 65 ;
66 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
65 -> 66 ;
67 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
65 -> 67 ;
68 [label="ifstatement <= 0.5\ngini = 0.122\nsamples = 246\nvalue = [16, 230]\nclass = Malicious"] ;
46 -> 68 ;
69 [label="formalparameterlist <= 0.5\ngini = 0.065\nsamples = 238\nvalue = [8, 230]\nclass = Malicious"] ;
68 -> 69 ;
70 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
69 -> 70 ;
71 [label="gini = 0.057\nsamples = 237\nvalue = [7, 230]\nclass = Malicious"] ;
69 -> 71 ;
72 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
68 -> 72 ;
73 [label="expressionstatement <= 0.5\ngini = 0.251\nsamples = 8944\nvalue = [1314, 7630]\nclass = Malicious"] ;
1 -> 73 ;
74 [label="gini = 0.0\nsamples = 264\nvalue = [264, 0]\nclass = Benign"] ;
73 -> 74 ;
75 [label="variablestatement <= 0.5\ngini = 0.213\nsamples = 8680\nvalue = [1050, 7630]\nclass = Malicious"] ;
73 -> 75 ;
76 [label="returnstatement <= 0.5\ngini = 0.404\nsamples = 1413\nvalue = [397, 1016]\nclass = Malicious"] ;
75 -> 76 ;
77 [label="ifstatement <= 0.5\ngini = 0.488\nsamples = 922\nvalue = [390, 532]\nclass = Malicious"] ;
76 -> 77 ;
78 [label="functionbody <= 0.5\ngini = 0.392\nsamples = 441\nvalue = [323, 118]\nclass = Benign"] ;
77 -> 78 ;
79 [label="arguments <= 0.5\ngini = 0.449\nsamples = 346\nvalue = [228, 118]\nclass = Benign"] ;
78 -> 79 ;
80 [label="gini = 0.0\nsamples = 92\nvalue = [92, 0]\nclass = Benign"] ;
79 -> 80 ;
81 [label="identifiername <= 0.5\ngini = 0.497\nsamples = 254\nvalue = [136, 118]\nclass = Benign"] ;
79 -> 81 ;
82 [label="arrayliteral <= 0.5\ngini = 0.133\nsamples = 28\nvalue = [26, 2]\nclass = Benign"] ;
81 -> 82 ;
83 [label="gini = 0.0\nsamples = 26\nvalue = [26, 0]\nclass = Benign"] ;
82 -> 83 ;
84 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
82 -> 84 ;
85 [label="emptystatement <= 0.5\ngini = 0.5\nsamples = 226\nvalue = [110, 116]\nclass = Malicious"] ;
81 -> 85 ;
86 [label="arrayliteral <= 0.5\ngini = 0.495\nsamples = 211\nvalue = [95, 116]\nclass = Malicious"] ;
85 -> 86 ;
87 [label="statementlist <= 0.5\ngini = 0.492\nsamples = 206\nvalue = [90, 116]\nclass = Malicious"] ;
86 -> 87 ;
88 [label="gini = 0.491\nsamples = 205\nvalue = [89, 116]\nclass = Malicious"] ;
87 -> 88 ;
89 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
87 -> 89 ;
90 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
86 -> 90 ;
91 [label="gini = 0.0\nsamples = 15\nvalue = [15, 0]\nclass = Benign"] ;
85 -> 91 ;
92 [label="gini = 0.0\nsamples = 95\nvalue = [95, 0]\nclass = Benign"] ;
78 -> 92 ;
93 [label="block <= 0.5\ngini = 0.24\nsamples = 481\nvalue = [67, 414]\nclass = Malicious"] ;
77 -> 93 ;
94 [label="identifiername <= 0.5\ngini = 0.014\nsamples = 417\nvalue = [3, 414]\nclass = Malicious"] ;
93 -> 94 ;
95 [label="gini = 0.0\nsamples = 133\nvalue = [0, 133]\nclass = Malicious"] ;
94 -> 95 ;
96 [label="gini = 0.021\nsamples = 284\nvalue = [3, 281]\nclass = Malicious"] ;
94 -> 96 ;
97 [label="gini = 0.0\nsamples = 64\nvalue = [64, 0]\nclass = Benign"] ;
93 -> 97 ;
98 [label="identifiername <= 0.5\ngini = 0.028\nsamples = 491\nvalue = [7, 484]\nclass = Malicious"] ;
76 -> 98 ;
99 [label="gini = 0.0\nsamples = 484\nvalue = [0, 484]\nclass = Malicious"] ;
98 -> 99 ;
100 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
98 -> 100 ;
101 [label="arguments <= 0.5\ngini = 0.164\nsamples = 7267\nvalue = [653, 6614]\nclass = Malicious"] ;
75 -> 101 ;
102 [label="gini = 0.0\nsamples = 109\nvalue = [109, 0]\nclass = Benign"] ;
101 -> 102 ;
103 [label="elementlist <= 0.5\ngini = 0.14\nsamples = 7158\nvalue = [544, 6614]\nclass = Malicious"] ;
101 -> 103 ;
104 [label="returnstatement <= 0.5\ngini = 0.243\nsamples = 3381\nvalue = [478, 2903]\nclass = Malicious"] ;
103 -> 104 ;
105 [label="functionbody <= 0.5\ngini = 0.355\nsamples = 1514\nvalue = [350, 1164]\nclass = Malicious"] ;
104 -> 105 ;
106 [label="ifstatement <= 0.5\ngini = 0.214\nsamples = 1250\nvalue = [152, 1098]\nclass = Malicious"] ;
105 -> 106 ;
107 [label="trystatement <= 0.5\ngini = 0.112\nsamples = 973\nvalue = [58, 915]\nclass = Malicious"] ;
106 -> 107 ;
108 [label="identifiername <= 0.5\ngini = 0.124\nsamples = 871\nvalue = [58, 813]\nclass = Malicious"] ;
107 -> 108 ;
109 [label="statementlist <= 0.5\ngini = 0.085\nsamples = 450\nvalue = [20, 430]\nclass = Malicious"] ;
108 -> 109 ;
110 [label="gini = 0.085\nsamples = 449\nvalue = [20, 429]\nclass = Malicious"] ;
109 -> 110 ;
111 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
109 -> 111 ;
112 [label="assignmentoperator <= 0.5\ngini = 0.164\nsamples = 421\nvalue = [38, 383]\nclass = Malicious"] ;
108 -> 112 ;
113 [label="gini = 0.168\nsamples = 401\nvalue = [37, 364]\nclass = Malicious"] ;
112 -> 113 ;
114 [label="statementlist <= 0.5\ngini = 0.095\nsamples = 20\nvalue = [1, 19]\nclass = Malicious"] ;
112 -> 114 ;
115 [label="gini = 0.0\nsamples = 11\nvalue = [0, 11]\nclass = Malicious"] ;
114 -> 115 ;
116 [label="arrayliteral <= 0.5\ngini = 0.198\nsamples = 9\nvalue = [1, 8]\nclass = Malicious"] ;
114 -> 116 ;
117 [label="gini = 0.219\nsamples = 8\nvalue = [1, 7]\nclass = Malicious"] ;
116 -> 117 ;
118 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
116 -> 118 ;
119 [label="gini = 0.0\nsamples = 102\nvalue = [0, 102]\nclass = Malicious"] ;
107 -> 119 ;
120 [label="do_for_while_statement <= 0.5\ngini = 0.448\nsamples = 277\nvalue = [94, 183]\nclass = Malicious"] ;
106 -> 120 ;
121 [label="block <= 0.5\ngini = 0.229\nsamples = 190\nvalue = [25, 165]\nclass = Malicious"] ;
120 -> 121 ;
122 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
121 -> 122 ;
123 [label="emptystatement <= 0.5\ngini = 0.2\nsamples = 186\nvalue = [21, 165]\nclass = Malicious"] ;
121 -> 123 ;
124 [label="trystatement <= 0.5\ngini = 0.177\nsamples = 183\nvalue = [18, 165]\nclass = Malicious"] ;
123 -> 124 ;
125 [label="assignmentoperator <= 0.5\ngini = 0.169\nsamples = 182\nvalue = [17, 165]\nclass = Malicious"] ;
124 -> 125 ;
126 [label="gini = 0.161\nsamples = 181\nvalue = [16, 165]\nclass = Malicious"] ;
125 -> 126 ;
127 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
125 -> 127 ;
128 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
124 -> 128 ;
129 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
123 -> 129 ;
130 [label="emptystatement <= 0.5\ngini = 0.328\nsamples = 87\nvalue = [69, 18]\nclass = Benign"] ;
120 -> 130 ;
131 [label="gini = 0.0\nsamples = 69\nvalue = [69, 0]\nclass = Benign"] ;
130 -> 131 ;
132 [label="gini = 0.0\nsamples = 18\nvalue = [0, 18]\nclass = Malicious"] ;
130 -> 132 ;
133 [label="emptystatement <= 0.5\ngini = 0.375\nsamples = 264\nvalue = [198, 66]\nclass = Benign"] ;
105 -> 133 ;
134 [label="formalparameterarg <= 0.5\ngini = 0.084\nsamples = 206\nvalue = [197, 9]\nclass = Benign"] ;
133 -> 134 ;
135 [label="gini = 0.0\nsamples = 144\nvalue = [144, 0]\nclass = Benign"] ;
134 -> 135 ;
136 [label="block <= 0.5\ngini = 0.248\nsamples = 62\nvalue = [53, 9]\nclass = Benign"] ;
134 -> 136 ;
137 [label="arrayliteral <= 0.5\ngini = 0.498\nsamples = 17\nvalue = [8, 9]\nclass = Malicious"] ;
136 -> 137 ;
138 [label="gini = 0.492\nsamples = 16\nvalue = [7, 9]\nclass = Malicious"] ;
137 -> 138 ;
139 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
137 -> 139 ;
140 [label="gini = 0.0\nsamples = 45\nvalue = [45, 0]\nclass = Benign"] ;
136 -> 140 ;
141 [label="catchproduction <= 0.5\ngini = 0.034\nsamples = 58\nvalue = [1, 57]\nclass = Malicious"] ;
133 -> 141 ;
142 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
141 -> 142 ;
143 [label="gini = 0.0\nsamples = 57\nvalue = [0, 57]\nclass = Malicious"] ;
141 -> 143 ;
144 [label="block <= 0.5\ngini = 0.128\nsamples = 1867\nvalue = [128, 1739]\nclass = Malicious"] ;
104 -> 144 ;
145 [label="ifstatement <= 0.5\ngini = 0.027\nsamples = 880\nvalue = [12, 868]\nclass = Malicious"] ;
144 -> 145 ;
146 [label="gini = 0.0\nsamples = 14\nvalue = [0, 14]\nclass = Malicious"] ;
145 -> 146 ;
147 [label="gini = 0.027\nsamples = 866\nvalue = [12, 854]\nclass = Malicious"] ;
145 -> 147 ;
148 [label="identifiername <= 0.5\ngini = 0.207\nsamples = 987\nvalue = [116, 871]\nclass = Malicious"] ;
144 -> 148 ;
149 [label="gini = 0.0\nsamples = 251\nvalue = [0, 251]\nclass = Malicious"] ;
148 -> 149 ;
150 [label="do_for_while_statement <= 0.5\ngini = 0.266\nsamples = 736\nvalue = [116, 620]\nclass = Malicious"] ;
148 -> 150 ;
151 [label="formalparameterlist <= 0.5\ngini = 0.254\nsamples = 725\nvalue = [108, 617]\nclass = Malicious"] ;
150 -> 151 ;
152 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
151 -> 152 ;
153 [label="arrayliteral <= 0.5\ngini = 0.249\nsamples = 722\nvalue = [105, 617]\nclass = Malicious"] ;
151 -> 153 ;
154 [label="emptystatement <= 0.5\ngini = 0.247\nsamples = 721\nvalue = [104, 617]\nclass = Malicious"] ;
153 -> 154 ;
155 [label="gini = 0.245\nsamples = 719\nvalue = [103, 616]\nclass = Malicious"] ;
154 -> 155 ;
156 [label="trystatement <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
154 -> 156 ;
157 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
156 -> 157 ;
158 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
156 -> 158 ;
159 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
153 -> 159 ;
160 [label="trystatement <= 0.5\ngini = 0.397\nsamples = 11\nvalue = [8, 3]\nclass = Benign"] ;
150 -> 160 ;
161 [label="assignmentoperator <= 0.5\ngini = 0.198\nsamples = 9\nvalue = [8, 1]\nclass = Benign"] ;
160 -> 161 ;
162 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
161 -> 162 ;
163 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
161 -> 163 ;
164 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
160 -> 164 ;
165 [label="functionbody <= 0.5\ngini = 0.034\nsamples = 3777\nvalue = [66, 3711]\nclass = Malicious"] ;
103 -> 165 ;
166 [label="ifstatement <= 0.5\ngini = 0.002\nsamples = 2874\nvalue = [3, 2871]\nclass = Malicious"] ;
165 -> 166 ;
167 [label="do_for_while_statement <= 0.5\ngini = 0.009\nsamples = 436\nvalue = [2, 434]\nclass = Malicious"] ;
166 -> 167 ;
168 [label="identifiername <= 0.5\ngini = 0.231\nsamples = 15\nvalue = [2, 13]\nclass = Malicious"] ;
167 -> 168 ;
169 [label="gini = 0.0\nsamples = 13\nvalue = [0, 13]\nclass = Malicious"] ;
168 -> 169 ;
170 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
168 -> 170 ;
171 [label="gini = 0.0\nsamples = 421\nvalue = [0, 421]\nclass = Malicious"] ;
167 -> 171 ;
172 [label="emptystatement <= 0.5\ngini = 0.001\nsamples = 2438\nvalue = [1, 2437]\nclass = Malicious"] ;
166 -> 172 ;
173 [label="block <= 0.5\ngini = 0.002\nsamples = 999\nvalue = [1, 998]\nclass = Malicious"] ;
172 -> 173 ;
174 [label="gini = 0.0\nsamples = 766\nvalue = [0, 766]\nclass = Malicious"] ;
173 -> 174 ;
175 [label="identifiername <= 0.5\ngini = 0.009\nsamples = 233\nvalue = [1, 232]\nclass = Malicious"] ;
173 -> 175 ;
176 [label="gini = 0.0\nsamples = 24\nvalue = [0, 24]\nclass = Malicious"] ;
175 -> 176 ;
177 [label="caseclauses <= 0.5\ngini = 0.01\nsamples = 209\nvalue = [1, 208]\nclass = Malicious"] ;
175 -> 177 ;
178 [label="gini = 0.01\nsamples = 206\nvalue = [1, 205]\nclass = Malicious"] ;
177 -> 178 ;
179 [label="gini = 0.0\nsamples = 3\nvalue = [0, 3]\nclass = Malicious"] ;
177 -> 179 ;
180 [label="gini = 0.0\nsamples = 1439\nvalue = [0, 1439]\nclass = Malicious"] ;
172 -> 180 ;
181 [label="returnstatement <= 0.5\ngini = 0.13\nsamples = 903\nvalue = [63, 840]\nclass = Malicious"] ;
165 -> 181 ;
182 [label="emptystatement <= 0.5\ngini = 0.486\nsamples = 139\nvalue = [58, 81]\nclass = Malicious"] ;
181 -> 182 ;
183 [label="gini = 0.0\nsamples = 58\nvalue = [58, 0]\nclass = Benign"] ;
182 -> 183 ;
184 [label="gini = 0.0\nsamples = 81\nvalue = [0, 81]\nclass = Malicious"] ;
182 -> 184 ;
185 [label="breakstatement <= 0.5\ngini = 0.013\nsamples = 764\nvalue = [5, 759]\nclass = Malicious"] ;
181 -> 185 ;
186 [label="identifiername <= 0.5\ngini = 0.008\nsamples = 762\nvalue = [3, 759]\nclass = Malicious"] ;
185 -> 186 ;
187 [label="gini = 0.0\nsamples = 546\nvalue = [0, 546]\nclass = Malicious"] ;
186 -> 187 ;
188 [label="assignmentoperator <= 0.5\ngini = 0.027\nsamples = 216\nvalue = [3, 213]\nclass = Malicious"] ;
186 -> 188 ;
189 [label="formalparameterlist <= 0.5\ngini = 0.49\nsamples = 7\nvalue = [3, 4]\nclass = Malicious"] ;
188 -> 189 ;
190 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
189 -> 190 ;
191 [label="ifstatement <= 0.5\ngini = 0.32\nsamples = 5\nvalue = [1, 4]\nclass = Malicious"] ;
189 -> 191 ;
192 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
191 -> 192 ;
193 [label="gini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
191 -> 193 ;
194 [label="gini = 0.0\nsamples = 209\nvalue = [0, 209]\nclass = Malicious"] ;
188 -> 194 ;
195 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
185 -> 195 ;
196 [label="do_for_while_statement <= 0.5\ngini = 0.249\nsamples = 10717\nvalue = [9156, 1561]\nclass = Benign"] ;
0 -> 196 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
197 [label="trystatement <= 0.5\ngini = 0.001\nsamples = 8938\nvalue = [8935, 3]\nclass = Benign"] ;
196 -> 197 ;
198 [label="gini = 0.0\nsamples = 8832\nvalue = [8832, 0]\nclass = Benign"] ;
197 -> 198 ;
199 [label="functionbody <= 0.5\ngini = 0.055\nsamples = 106\nvalue = [103, 3]\nclass = Benign"] ;
197 -> 199 ;
200 [label="arrayliteral <= 0.5\ngini = 0.098\nsamples = 58\nvalue = [55, 3]\nclass = Benign"] ;
199 -> 200 ;
201 [label="variabledeclaration <= 0.5\ngini = 0.278\nsamples = 12\nvalue = [10, 2]\nclass = Benign"] ;
200 -> 201 ;
202 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
201 -> 202 ;
203 [label="ifstatement <= 0.5\ngini = 0.48\nsamples = 5\nvalue = [3, 2]\nclass = Benign"] ;
201 -> 203 ;
204 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
203 -> 204 ;
205 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
203 -> 205 ;
206 [label="elementlist <= 0.5\ngini = 0.043\nsamples = 46\nvalue = [45, 1]\nclass = Benign"] ;
200 -> 206 ;
207 [label="gini = 0.0\nsamples = 22\nvalue = [22, 0]\nclass = Benign"] ;
206 -> 207 ;
208 [label="variablestatement <= 0.5\ngini = 0.08\nsamples = 24\nvalue = [23, 1]\nclass = Benign"] ;
206 -> 208 ;
209 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
208 -> 209 ;
210 [label="gini = 0.124\nsamples = 15\nvalue = [14, 1]\nclass = Benign"] ;
208 -> 210 ;
211 [label="gini = 0.0\nsamples = 48\nvalue = [48, 0]\nclass = Benign"] ;
199 -> 211 ;
212 [label="identifiername <= 0.5\ngini = 0.218\nsamples = 1779\nvalue = [221, 1558]\nclass = Malicious"] ;
196 -> 212 ;
213 [label="gini = 0.0\nsamples = 1497\nvalue = [0, 1497]\nclass = Malicious"] ;
212 -> 213 ;
214 [label="catchproduction <= 0.5\ngini = 0.339\nsamples = 282\nvalue = [221, 61]\nclass = Benign"] ;
212 -> 214 ;
215 [label="propertyname <= 0.5\ngini = 0.01\nsamples = 197\nvalue = [196, 1]\nclass = Benign"] ;
214 -> 215 ;
216 [label="emptystatement <= 0.5\ngini = 0.124\nsamples = 15\nvalue = [14, 1]\nclass = Benign"] ;
215 -> 216 ;
217 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
216 -> 217 ;
218 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
216 -> 218 ;
219 [label="gini = 0.0\nsamples = 182\nvalue = [182, 0]\nclass = Benign"] ;
215 -> 219 ;
220 [label="finallyproduction <= 0.5\ngini = 0.415\nsamples = 85\nvalue = [25, 60]\nclass = Malicious"] ;
214 -> 220 ;
221 [label="breakstatement <= 0.5\ngini = 0.494\nsamples = 56\nvalue = [25, 31]\nclass = Malicious"] ;
220 -> 221 ;
222 [label="gini = 0.0\nsamples = 22\nvalue = [22, 0]\nclass = Benign"] ;
221 -> 222 ;
223 [label="emptystatement <= 0.5\ngini = 0.161\nsamples = 34\nvalue = [3, 31]\nclass = Malicious"] ;
221 -> 223 ;
224 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
223 -> 224 ;
225 [label="gini = 0.0\nsamples = 31\nvalue = [0, 31]\nclass = Malicious"] ;
223 -> 225 ;
226 [label="gini = 0.0\nsamples = 29\nvalue = [0, 29]\nclass = Malicious"] ;
220 -> 226 ;
}
