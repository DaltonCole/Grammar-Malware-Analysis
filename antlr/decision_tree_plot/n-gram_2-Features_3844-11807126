digraph Tree {
node [shape=box] ;
0 [label="expression_statement-objectliteral <= 0.5\ngini = 0.5\nsamples = 27000\nvalue = [13495, 13505]\nclass = Malicious"] ;
1 [label="literal-arguments <= 0.5\ngini = 0.389\nsamples = 16226\nvalue = [4286, 11940]\nclass = Malicious"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="identifiername-identifiername <= 0.5\ngini = 0.472\nsamples = 11218\nvalue = [4281, 6937]\nclass = Malicious"] ;
1 -> 2 ;
3 [label="expression_statement-arguments <= 0.5\ngini = 0.435\nsamples = 10181\nvalue = [3251, 6930]\nclass = Malicious"] ;
2 -> 3 ;
4 [label="sourceelement-statement <= 0.5\ngini = 0.494\nsamples = 5527\nvalue = [2449, 3078]\nclass = Malicious"] ;
3 -> 4 ;
5 [label="gini = 0.393\nsamples = 2569\nvalue = [690, 1879]\nclass = Malicious"] ;
4 -> 5 ;
6 [label="returnstatement-expressionsequence <= 0.5\ngini = 0.482\nsamples = 2958\nvalue = [1759, 1199]\nclass = Benign"] ;
4 -> 6 ;
7 [label="literal-identifiername <= 0.5\ngini = 0.408\nsamples = 2462\nvalue = [1758, 704]\nclass = Benign"] ;
6 -> 7 ;
8 [label="arguments-expression_statement <= 0.5\ngini = 0.223\nsamples = 1865\nvalue = [1627, 238]\nclass = Benign"] ;
7 -> 8 ;
9 [label="gini = 0.0\nsamples = 1158\nvalue = [1158, 0]\nclass = Benign"] ;
8 -> 9 ;
10 [label="numericliteral-eos <= 0.5\ngini = 0.447\nsamples = 707\nvalue = [469, 238]\nclass = Benign"] ;
8 -> 10 ;
11 [label="gini = 0.0\nsamples = 374\nvalue = [374, 0]\nclass = Benign"] ;
10 -> 11 ;
12 [label="eos-sourceelement <= 0.5\ngini = 0.408\nsamples = 333\nvalue = [95, 238]\nclass = Malicious"] ;
10 -> 12 ;
13 [label="gini = 0.0\nsamples = 83\nvalue = [83, 0]\nclass = Benign"] ;
12 -> 13 ;
14 [label="literal-expression_statement <= 0.5\ngini = 0.091\nsamples = 250\nvalue = [12, 238]\nclass = Malicious"] ;
12 -> 14 ;
15 [label="identifiername-expression_statement <= 0.5\ngini = 0.017\nsamples = 230\nvalue = [2, 228]\nclass = Malicious"] ;
14 -> 15 ;
16 [label="gini = 0.0\nsamples = 228\nvalue = [0, 228]\nclass = Malicious"] ;
15 -> 16 ;
17 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
15 -> 17 ;
18 [label="identifiername-arguments <= 0.5\ngini = 0.5\nsamples = 20\nvalue = [10, 10]\nclass = Benign"] ;
14 -> 18 ;
19 [label="gini = 0.0\nsamples = 10\nvalue = [0, 10]\nclass = Malicious"] ;
18 -> 19 ;
20 [label="gini = 0.0\nsamples = 10\nvalue = [10, 0]\nclass = Benign"] ;
18 -> 20 ;
21 [label="expression_statement-identifiername <= 0.5\ngini = 0.343\nsamples = 597\nvalue = [131, 466]\nclass = Malicious"] ;
7 -> 21 ;
22 [label="literal-expression_statement <= 0.5\ngini = 0.004\nsamples = 467\nvalue = [1, 466]\nclass = Malicious"] ;
21 -> 22 ;
23 [label="gini = 0.0\nsamples = 466\nvalue = [0, 466]\nclass = Malicious"] ;
22 -> 23 ;
24 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
22 -> 24 ;
25 [label="gini = 0.0\nsamples = 130\nvalue = [130, 0]\nclass = Benign"] ;
21 -> 25 ;
26 [label="arguments-expression_statement <= 0.5\ngini = 0.004\nsamples = 496\nvalue = [1, 495]\nclass = Malicious"] ;
6 -> 26 ;
27 [label="gini = 0.0\nsamples = 495\nvalue = [0, 495]\nclass = Malicious"] ;
26 -> 27 ;
28 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
26 -> 28 ;
29 [label="variabledeclaration-expression_statement <= 0.5\ngini = 0.285\nsamples = 4654\nvalue = [802, 3852]\nclass = Malicious"] ;
3 -> 29 ;
30 [label="literal-expression_statement <= 0.5\ngini = 0.482\nsamples = 1049\nvalue = [624, 425]\nclass = Benign"] ;
29 -> 30 ;
31 [label="expression_statement-eos <= 0.5\ngini = 0.435\nsamples = 625\nvalue = [200, 425]\nclass = Malicious"] ;
30 -> 31 ;
32 [label="arguments-identifiername <= 0.5\ngini = 0.498\nsamples = 346\nvalue = [183, 163]\nclass = Benign"] ;
31 -> 32 ;
33 [label="gini = 0.0\nsamples = 172\nvalue = [172, 0]\nclass = Benign"] ;
32 -> 33 ;
34 [label="arguments-eos <= 0.5\ngini = 0.118\nsamples = 174\nvalue = [11, 163]\nclass = Malicious"] ;
32 -> 34 ;
35 [label="eos-eos <= 0.5\ngini = 0.035\nsamples = 166\nvalue = [3, 163]\nclass = Malicious"] ;
34 -> 35 ;
36 [label="gini = 0.0\nsamples = 163\nvalue = [0, 163]\nclass = Malicious"] ;
35 -> 36 ;
37 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
35 -> 37 ;
38 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
34 -> 38 ;
39 [label="functionbody-sourceelements <= 0.5\ngini = 0.114\nsamples = 279\nvalue = [17, 262]\nclass = Malicious"] ;
31 -> 39 ;
40 [label="gini = 0.0\nsamples = 262\nvalue = [0, 262]\nclass = Malicious"] ;
39 -> 40 ;
41 [label="gini = 0.0\nsamples = 17\nvalue = [17, 0]\nclass = Benign"] ;
39 -> 41 ;
42 [label="gini = 0.0\nsamples = 424\nvalue = [424, 0]\nclass = Benign"] ;
30 -> 42 ;
43 [label="expression_statement-functionbody <= 0.5\ngini = 0.094\nsamples = 3605\nvalue = [178, 3427]\nclass = Malicious"] ;
29 -> 43 ;
44 [label="statement-expressionstatement <= 0.5\ngini = 0.053\nsamples = 3364\nvalue = [92, 3272]\nclass = Malicious"] ;
43 -> 44 ;
45 [label="statement-block <= 0.5\ngini = 0.117\nsamples = 16\nvalue = [15, 1]\nclass = Benign"] ;
44 -> 45 ;
46 [label="gini = 0.0\nsamples = 15\nvalue = [15, 0]\nclass = Benign"] ;
45 -> 46 ;
47 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
45 -> 47 ;
48 [label="arguments-expression_statement <= 0.5\ngini = 0.045\nsamples = 3348\nvalue = [77, 3271]\nclass = Malicious"] ;
44 -> 48 ;
49 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
48 -> 49 ;
50 [label="eos-arguments <= 0.5\ngini = 0.04\nsamples = 3340\nvalue = [69, 3271]\nclass = Malicious"] ;
48 -> 50 ;
51 [label="literal-expression_statement <= 0.5\ngini = 0.038\nsamples = 3334\nvalue = [64, 3270]\nclass = Malicious"] ;
50 -> 51 ;
52 [label="expression_statement-identifiername <= 0.5\ngini = 0.226\nsamples = 293\nvalue = [38, 255]\nclass = Malicious"] ;
51 -> 52 ;
53 [label="assignmentoperator-expression_statement <= 0.5\ngini = 0.449\nsamples = 53\nvalue = [35, 18]\nclass = Benign"] ;
52 -> 53 ;
54 [label="arguments-identifiername <= 0.5\ngini = 0.054\nsamples = 36\nvalue = [35, 1]\nclass = Benign"] ;
53 -> 54 ;
55 [label="gini = 0.0\nsamples = 35\nvalue = [35, 0]\nclass = Benign"] ;
54 -> 55 ;
56 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
54 -> 56 ;
57 [label="gini = 0.0\nsamples = 17\nvalue = [0, 17]\nclass = Malicious"] ;
53 -> 57 ;
58 [label="literal-numericliteral <= 0.5\ngini = 0.025\nsamples = 240\nvalue = [3, 237]\nclass = Malicious"] ;
52 -> 58 ;
59 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
58 -> 59 ;
60 [label="variabledeclaration-eos <= 0.5\ngini = 0.008\nsamples = 238\nvalue = [1, 237]\nclass = Malicious"] ;
58 -> 60 ;
61 [label="gini = 0.0\nsamples = 237\nvalue = [0, 237]\nclass = Malicious"] ;
60 -> 61 ;
62 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
60 -> 62 ;
63 [label="identifiername-eos <= 0.5\ngini = 0.017\nsamples = 3041\nvalue = [26, 3015]\nclass = Malicious"] ;
51 -> 63 ;
64 [label="withstatement-expressionsequence <= 0.5\ngini = 0.013\nsamples = 3012\nvalue = [20, 2992]\nclass = Malicious"] ;
63 -> 64 ;
65 [label="identifiername-expression_statement <= 0.5\ngini = 0.013\nsamples = 3011\nvalue = [19, 2992]\nclass = Malicious"] ;
64 -> 65 ;
66 [label="eos-catchproduction <= 0.5\ngini = 0.008\nsamples = 2905\nvalue = [11, 2894]\nclass = Malicious"] ;
65 -> 66 ;
67 [label="assignmentoperator-expression_statement <= 0.5\ngini = 0.007\nsamples = 2902\nvalue = [10, 2892]\nclass = Malicious"] ;
66 -> 67 ;
68 [label="identifiername-arguments <= 0.5\ngini = 0.006\nsamples = 2899\nvalue = [9, 2890]\nclass = Malicious"] ;
67 -> 68 ;
69 [label="gini = 0.0\nsamples = 1519\nvalue = [0, 1519]\nclass = Malicious"] ;
68 -> 69 ;
70 [label="literal-numericliteral <= 0.5\ngini = 0.013\nsamples = 1380\nvalue = [9, 1371]\nclass = Malicious"] ;
68 -> 70 ;
71 [label="expression_statement-expressionsequence <= 0.5\ngini = 0.278\nsamples = 6\nvalue = [5, 1]\nclass = Benign"] ;
70 -> 71 ;
72 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
71 -> 72 ;
73 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
71 -> 73 ;
74 [label="numericliteral-eos <= 0.5\ngini = 0.006\nsamples = 1374\nvalue = [4, 1370]\nclass = Malicious"] ;
70 -> 74 ;
75 [label="literal-identifiername <= 0.5\ngini = 0.02\nsamples = 403\nvalue = [4, 399]\nclass = Malicious"] ;
74 -> 75 ;
76 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
75 -> 76 ;
77 [label="block-statementlist <= 0.5\ngini = 0.005\nsamples = 400\nvalue = [1, 399]\nclass = Malicious"] ;
75 -> 77 ;
78 [label="gini = 0.0\nsamples = 399\nvalue = [0, 399]\nclass = Malicious"] ;
77 -> 78 ;
79 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
77 -> 79 ;
80 [label="gini = 0.0\nsamples = 971\nvalue = [0, 971]\nclass = Malicious"] ;
74 -> 80 ;
81 [label="statement-emptystatement <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
67 -> 81 ;
82 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
81 -> 82 ;
83 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
81 -> 83 ;
84 [label="eos-statement <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
66 -> 84 ;
85 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
84 -> 85 ;
86 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
84 -> 86 ;
87 [label="expression_statement-expressionsequence <= 0.5\ngini = 0.14\nsamples = 106\nvalue = [8, 98]\nclass = Malicious"] ;
65 -> 87 ;
88 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
87 -> 88 ;
89 [label="gini = 0.0\nsamples = 98\nvalue = [0, 98]\nclass = Malicious"] ;
87 -> 89 ;
90 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
64 -> 90 ;
91 [label="eos-statement <= 0.5\ngini = 0.328\nsamples = 29\nvalue = [6, 23]\nclass = Malicious"] ;
63 -> 91 ;
92 [label="numericliteral-eos <= 0.5\ngini = 0.408\nsamples = 7\nvalue = [5, 2]\nclass = Benign"] ;
91 -> 92 ;
93 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
92 -> 93 ;
94 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
92 -> 94 ;
95 [label="literal-numericliteral <= 0.5\ngini = 0.087\nsamples = 22\nvalue = [1, 21]\nclass = Malicious"] ;
91 -> 95 ;
96 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
95 -> 96 ;
97 [label="gini = 0.0\nsamples = 21\nvalue = [0, 21]\nclass = Malicious"] ;
95 -> 97 ;
98 [label="literal-expression_statement <= 0.5\ngini = 0.278\nsamples = 6\nvalue = [5, 1]\nclass = Benign"] ;
50 -> 98 ;
99 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
98 -> 99 ;
100 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
98 -> 100 ;
101 [label="expression_statement-assignmentoperator <= 0.5\ngini = 0.459\nsamples = 241\nvalue = [86, 155]\nclass = Malicious"] ;
43 -> 101 ;
102 [label="statement-emptystatement <= 0.5\ngini = 0.024\nsamples = 84\nvalue = [83, 1]\nclass = Benign"] ;
101 -> 102 ;
103 [label="gini = 0.0\nsamples = 83\nvalue = [83, 0]\nclass = Benign"] ;
102 -> 103 ;
104 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
102 -> 104 ;
105 [label="formalparameterarg-formalparameterarg <= 0.5\ngini = 0.037\nsamples = 157\nvalue = [3, 154]\nclass = Malicious"] ;
101 -> 105 ;
106 [label="literal-eos <= 0.5\ngini = 0.013\nsamples = 154\nvalue = [1, 153]\nclass = Malicious"] ;
105 -> 106 ;
107 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
106 -> 107 ;
108 [label="gini = 0.0\nsamples = 153\nvalue = [0, 153]\nclass = Malicious"] ;
106 -> 108 ;
109 [label="emptystatement-sourceelement <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [2, 1]\nclass = Benign"] ;
105 -> 109 ;
110 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
109 -> 110 ;
111 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
109 -> 111 ;
112 [label="statement-breakstatement <= 0.5\ngini = 0.013\nsamples = 1037\nvalue = [1030, 7]\nclass = Benign"] ;
2 -> 112 ;
113 [label="expression_statement-assignmentoperator <= 0.5\ngini = 0.004\nsamples = 1032\nvalue = [1030, 2]\nclass = Benign"] ;
112 -> 113 ;
114 [label="numericliteral-expression_statement <= 0.5\ngini = 0.002\nsamples = 1029\nvalue = [1028, 1]\nclass = Benign"] ;
113 -> 114 ;
115 [label="gini = 0.0\nsamples = 921\nvalue = [921, 0]\nclass = Benign"] ;
114 -> 115 ;
116 [label="literal-expression_statement <= 0.5\ngini = 0.018\nsamples = 108\nvalue = [107, 1]\nclass = Benign"] ;
114 -> 116 ;
117 [label="expression_statement-statement <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [2, 1]\nclass = Benign"] ;
116 -> 117 ;
118 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
117 -> 118 ;
119 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
117 -> 119 ;
120 [label="gini = 0.0\nsamples = 105\nvalue = [105, 0]\nclass = Benign"] ;
116 -> 120 ;
121 [label="expression_statement-formalparameterlist <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [2, 1]\nclass = Benign"] ;
113 -> 121 ;
122 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
121 -> 122 ;
123 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
121 -> 123 ;
124 [label="gini = 0.0\nsamples = 5\nvalue = [0, 5]\nclass = Malicious"] ;
112 -> 124 ;
125 [label="arguments-expression_statement <= 0.5\ngini = 0.002\nsamples = 5008\nvalue = [5, 5003]\nclass = Malicious"] ;
1 -> 125 ;
126 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
125 -> 126 ;
127 [label="eos-arguments <= 0.5\ngini = 0.001\nsamples = 5006\nvalue = [3, 5003]\nclass = Malicious"] ;
125 -> 127 ;
128 [label="literal-eos <= 0.5\ngini = 0.0\nsamples = 5004\nvalue = [1, 5003]\nclass = Malicious"] ;
127 -> 128 ;
129 [label="literal-expression_statement <= 0.5\ngini = 0.011\nsamples = 174\nvalue = [1, 173]\nclass = Malicious"] ;
128 -> 129 ;
130 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
129 -> 130 ;
131 [label="gini = 0.0\nsamples = 173\nvalue = [0, 173]\nclass = Malicious"] ;
129 -> 131 ;
132 [label="gini = 0.0\nsamples = 4830\nvalue = [0, 4830]\nclass = Malicious"] ;
128 -> 132 ;
133 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
127 -> 133 ;
134 [label="do_for_while_statement-expressionsequence <= 0.5\ngini = 0.248\nsamples = 10774\nvalue = [9209, 1565]\nclass = Benign"] ;
0 -> 134 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
135 [label="identifiername-caseblock <= 0.5\ngini = 0.006\nsamples = 9205\nvalue = [9176, 29]\nclass = Benign"] ;
134 -> 135 ;
136 [label="literal-arguments <= 0.5\ngini = 0.001\nsamples = 9179\nvalue = [9176, 3]\nclass = Benign"] ;
135 -> 136 ;
137 [label="gini = 0.0\nsamples = 9162\nvalue = [9162, 0]\nclass = Benign"] ;
136 -> 137 ;
138 [label="literal-expressionsequence <= 0.5\ngini = 0.291\nsamples = 17\nvalue = [14, 3]\nclass = Benign"] ;
136 -> 138 ;
139 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
138 -> 139 ;
140 [label="gini = 0.0\nsamples = 3\nvalue = [0, 3]\nclass = Malicious"] ;
138 -> 140 ;
141 [label="gini = 0.0\nsamples = 26\nvalue = [0, 26]\nclass = Malicious"] ;
135 -> 141 ;
142 [label="objectliteral-eos <= 0.5\ngini = 0.041\nsamples = 1569\nvalue = [33, 1536]\nclass = Malicious"] ;
134 -> 142 ;
143 [label="literal-expressionsequence <= 0.5\ngini = 0.004\nsamples = 1538\nvalue = [3, 1535]\nclass = Malicious"] ;
142 -> 143 ;
144 [label="numericliteral-statement <= 0.5\ngini = 0.49\nsamples = 7\nvalue = [3, 4]\nclass = Malicious"] ;
143 -> 144 ;
145 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
144 -> 145 ;
146 [label="gini = 0.0\nsamples = 4\nvalue = [0, 4]\nclass = Malicious"] ;
144 -> 146 ;
147 [label="gini = 0.0\nsamples = 1531\nvalue = [0, 1531]\nclass = Malicious"] ;
143 -> 147 ;
148 [label="emptystatement-sourceelement <= 0.5\ngini = 0.062\nsamples = 31\nvalue = [30, 1]\nclass = Benign"] ;
142 -> 148 ;
149 [label="gini = 0.0\nsamples = 30\nvalue = [30, 0]\nclass = Benign"] ;
148 -> 149 ;
150 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
148 -> 150 ;
}
