digraph Tree {
node [shape=box] ;
0 [label="litereral_stuff-property_rules <= 0.5\ngini = 0.5\nsamples = 27000\nvalue = [13501, 13499]\nclass = Benign"] ;
1 [label="identifiername-identifiername <= 0.5\ngini = 0.405\nsamples = 16685\nvalue = [4712, 11973]\nclass = Malicious"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="expression_statement-expressionsequence <= 0.5\ngini = 0.352\nsamples = 15320\nvalue = [3489, 11831]\nclass = Malicious"] ;
1 -> 2 ;
3 [label="sourceElement_stuff-expressionstatement <= 0.5\ngini = 0.471\nsamples = 8092\nvalue = [3077, 5015]\nclass = Malicious"] ;
2 -> 3 ;
4 [label="argument_stuff-expression_statement <= 0.5\ngini = 0.409\nsamples = 6008\nvalue = [1722, 4286]\nclass = Malicious"] ;
3 -> 4 ;
5 [label="variable_stuff-varmodifier <= 0.5\ngini = 0.49\nsamples = 3324\nvalue = [1424, 1900]\nclass = Malicious"] ;
4 -> 5 ;
6 [label="expressionsequence-expression_statement <= 0.5\ngini = 0.389\nsamples = 2582\nvalue = [682, 1900]\nclass = Malicious"] ;
5 -> 6 ;
7 [label="gini = 0.385\nsamples = 2569\nvalue = [669, 1900]\nclass = Malicious"] ;
6 -> 7 ;
8 [label="gini = 0.0\nsamples = 13\nvalue = [13, 0]\nclass = Benign"] ;
6 -> 8 ;
9 [label="gini = 0.0\nsamples = 742\nvalue = [742, 0]\nclass = Benign"] ;
5 -> 9 ;
10 [label="expression_statement-withstatement <= 0.5\ngini = 0.197\nsamples = 2684\nvalue = [298, 2386]\nclass = Malicious"] ;
4 -> 10 ;
11 [label="expression_statement-identifiername <= 0.5\ngini = 0.133\nsamples = 2570\nvalue = [184, 2386]\nclass = Malicious"] ;
10 -> 11 ;
12 [label="literal-catchproduction <= 0.5\ngini = 0.039\nsamples = 2296\nvalue = [46, 2250]\nclass = Malicious"] ;
11 -> 12 ;
13 [label="expression_statement-variable_stuff <= 0.5\ngini = 0.037\nsamples = 2293\nvalue = [43, 2250]\nclass = Malicious"] ;
12 -> 13 ;
14 [label="numericliteral-expression_statement <= 0.5\ngini = 0.029\nsamples = 2238\nvalue = [33, 2205]\nclass = Malicious"] ;
13 -> 14 ;
15 [label="literal-variable_stuff <= 0.5\ngini = 0.027\nsamples = 2236\nvalue = [31, 2205]\nclass = Malicious"] ;
14 -> 15 ;
16 [label="literal-expressionstatement <= 0.5\ngini = 0.06\nsamples = 618\nvalue = [19, 599]\nclass = Malicious"] ;
15 -> 16 ;
17 [label="literal-expression_statement <= 0.5\ngini = 0.007\nsamples = 600\nvalue = [2, 598]\nclass = Malicious"] ;
16 -> 17 ;
18 [label="gini = 0.0\nsamples = 598\nvalue = [0, 598]\nclass = Malicious"] ;
17 -> 18 ;
19 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
17 -> 19 ;
20 [label="identifiername-argument_stuff <= 0.5\ngini = 0.105\nsamples = 18\nvalue = [17, 1]\nclass = Benign"] ;
16 -> 20 ;
21 [label="gini = 0.0\nsamples = 17\nvalue = [17, 0]\nclass = Benign"] ;
20 -> 21 ;
22 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
20 -> 22 ;
23 [label="literal-expression_statement <= 0.5\ngini = 0.015\nsamples = 1618\nvalue = [12, 1606]\nclass = Malicious"] ;
15 -> 23 ;
24 [label="expressionstatement-expressionsequence <= 0.5\ngini = 0.039\nsamples = 502\nvalue = [10, 492]\nclass = Malicious"] ;
23 -> 24 ;
25 [label="gini = 0.0\nsamples = 479\nvalue = [0, 479]\nclass = Malicious"] ;
24 -> 25 ;
26 [label="assignmentoperator-expression_statement <= 0.5\ngini = 0.491\nsamples = 23\nvalue = [10, 13]\nclass = Malicious"] ;
24 -> 26 ;
27 [label="gini = 0.0\nsamples = 10\nvalue = [10, 0]\nclass = Benign"] ;
26 -> 27 ;
28 [label="gini = 0.0\nsamples = 13\nvalue = [0, 13]\nclass = Malicious"] ;
26 -> 28 ;
29 [label="literal-expressionstatement <= 0.5\ngini = 0.004\nsamples = 1116\nvalue = [2, 1114]\nclass = Malicious"] ;
23 -> 29 ;
30 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
29 -> 30 ;
31 [label="gini = 0.0\nsamples = 1114\nvalue = [0, 1114]\nclass = Malicious"] ;
29 -> 31 ;
32 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
14 -> 32 ;
33 [label="expressionsequence-expression_statement <= 0.5\ngini = 0.298\nsamples = 55\nvalue = [10, 45]\nclass = Malicious"] ;
13 -> 33 ;
34 [label="gini = 0.0\nsamples = 10\nvalue = [10, 0]\nclass = Benign"] ;
33 -> 34 ;
35 [label="gini = 0.0\nsamples = 45\nvalue = [0, 45]\nclass = Malicious"] ;
33 -> 35 ;
36 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
12 -> 36 ;
37 [label="expression_statement-expressionstatement <= 0.5\ngini = 0.5\nsamples = 274\nvalue = [138, 136]\nclass = Benign"] ;
11 -> 37 ;
38 [label="numericliteral-variable_stuff <= 0.5\ngini = 0.131\nsamples = 128\nvalue = [119, 9]\nclass = Benign"] ;
37 -> 38 ;
39 [label="gini = 0.0\nsamples = 115\nvalue = [115, 0]\nclass = Benign"] ;
38 -> 39 ;
40 [label="literal-expressionstatement <= 0.5\ngini = 0.426\nsamples = 13\nvalue = [4, 9]\nclass = Malicious"] ;
38 -> 40 ;
41 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
40 -> 41 ;
42 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.18\nsamples = 10\nvalue = [1, 9]\nclass = Malicious"] ;
40 -> 42 ;
43 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
42 -> 43 ;
44 [label="gini = 0.0\nsamples = 9\nvalue = [0, 9]\nclass = Malicious"] ;
42 -> 44 ;
45 [label="ifstatement-expressionsequence <= 0.5\ngini = 0.226\nsamples = 146\nvalue = [19, 127]\nclass = Malicious"] ;
37 -> 45 ;
46 [label="argument_stuff-expressionstatement <= 0.5\ngini = 0.073\nsamples = 132\nvalue = [5, 127]\nclass = Malicious"] ;
45 -> 46 ;
47 [label="literal-expression_statement <= 0.5\ngini = 0.016\nsamples = 128\nvalue = [1, 127]\nclass = Malicious"] ;
46 -> 47 ;
48 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
47 -> 48 ;
49 [label="gini = 0.0\nsamples = 127\nvalue = [0, 127]\nclass = Malicious"] ;
47 -> 49 ;
50 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
46 -> 50 ;
51 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
45 -> 51 ;
52 [label="gini = 0.0\nsamples = 114\nvalue = [114, 0]\nclass = Benign"] ;
10 -> 52 ;
53 [label="argument_stuff-identifiername <= 0.5\ngini = 0.455\nsamples = 2084\nvalue = [1355, 729]\nclass = Benign"] ;
3 -> 53 ;
54 [label="numericliteral-variable_stuff <= 0.5\ngini = 0.334\nsamples = 1688\nvalue = [1331, 357]\nclass = Benign"] ;
53 -> 54 ;
55 [label="numericliteral-expressionstatement <= 0.5\ngini = 0.173\nsamples = 1422\nvalue = [1286, 136]\nclass = Benign"] ;
54 -> 55 ;
56 [label="expression_statement-assignmentoperator <= 0.5\ngini = 0.02\nsamples = 1181\nvalue = [1169, 12]\nclass = Benign"] ;
55 -> 56 ;
57 [label="gini = 0.0\nsamples = 1166\nvalue = [1166, 0]\nclass = Benign"] ;
56 -> 57 ;
58 [label="literal-returnstatement <= 0.5\ngini = 0.32\nsamples = 15\nvalue = [3, 12]\nclass = Malicious"] ;
56 -> 58 ;
59 [label="expression_statement-identifiername <= 0.5\ngini = 0.142\nsamples = 13\nvalue = [1, 12]\nclass = Malicious"] ;
58 -> 59 ;
60 [label="gini = 0.0\nsamples = 12\nvalue = [0, 12]\nclass = Malicious"] ;
59 -> 60 ;
61 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
59 -> 61 ;
62 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
58 -> 62 ;
63 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.5\nsamples = 241\nvalue = [117, 124]\nclass = Malicious"] ;
55 -> 63 ;
64 [label="gini = 0.0\nsamples = 62\nvalue = [62, 0]\nclass = Benign"] ;
63 -> 64 ;
65 [label="literal-expressionstatement <= 0.5\ngini = 0.426\nsamples = 179\nvalue = [55, 124]\nclass = Malicious"] ;
63 -> 65 ;
66 [label="gini = 0.0\nsamples = 41\nvalue = [41, 0]\nclass = Benign"] ;
65 -> 66 ;
67 [label="sourceElement_stuff-sourceElement_stuff <= 0.5\ngini = 0.182\nsamples = 138\nvalue = [14, 124]\nclass = Malicious"] ;
65 -> 67 ;
68 [label="gini = 0.0\nsamples = 124\nvalue = [0, 124]\nclass = Malicious"] ;
67 -> 68 ;
69 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
67 -> 69 ;
70 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.281\nsamples = 266\nvalue = [45, 221]\nclass = Malicious"] ;
54 -> 70 ;
71 [label="identifiername-expression_statement <= 0.5\ngini = 0.075\nsamples = 230\nvalue = [9, 221]\nclass = Malicious"] ;
70 -> 71 ;
72 [label="gini = 0.0\nsamples = 221\nvalue = [0, 221]\nclass = Malicious"] ;
71 -> 72 ;
73 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
71 -> 73 ;
74 [label="gini = 0.0\nsamples = 36\nvalue = [36, 0]\nclass = Benign"] ;
70 -> 74 ;
75 [label="expression_statement-sourceElement_stuff <= 0.5\ngini = 0.114\nsamples = 396\nvalue = [24, 372]\nclass = Malicious"] ;
53 -> 75 ;
76 [label="literal-identifiername <= 0.5\ngini = 0.041\nsamples = 380\nvalue = [8, 372]\nclass = Malicious"] ;
75 -> 76 ;
77 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
76 -> 77 ;
78 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.011\nsamples = 374\nvalue = [2, 372]\nclass = Malicious"] ;
76 -> 78 ;
79 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
78 -> 79 ;
80 [label="gini = 0.0\nsamples = 372\nvalue = [0, 372]\nclass = Malicious"] ;
78 -> 80 ;
81 [label="gini = 0.0\nsamples = 16\nvalue = [16, 0]\nclass = Benign"] ;
75 -> 81 ;
82 [label="withstatement-expressionsequence <= 0.5\ngini = 0.108\nsamples = 7228\nvalue = [412, 6816]\nclass = Malicious"] ;
2 -> 82 ;
83 [label="litereral_stuff-expressionstatement <= 0.5\ngini = 0.094\nsamples = 7172\nvalue = [356, 6816]\nclass = Malicious"] ;
82 -> 83 ;
84 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.082\nsamples = 7120\nvalue = [304, 6816]\nclass = Malicious"] ;
83 -> 84 ;
85 [label="literal-returnstatement <= 0.5\ngini = 0.401\nsamples = 695\nvalue = [193, 502]\nclass = Malicious"] ;
84 -> 85 ;
86 [label="numericliteral-argument_stuff <= 0.5\ngini = 0.088\nsamples = 174\nvalue = [166, 8]\nclass = Benign"] ;
85 -> 86 ;
87 [label="gini = 0.0\nsamples = 166\nvalue = [166, 0]\nclass = Benign"] ;
86 -> 87 ;
88 [label="gini = 0.0\nsamples = 8\nvalue = [0, 8]\nclass = Malicious"] ;
86 -> 88 ;
89 [label="litereral_stuff-returnstatement <= 0.5\ngini = 0.098\nsamples = 521\nvalue = [27, 494]\nclass = Malicious"] ;
85 -> 89 ;
90 [label="gini = 0.0\nsamples = 494\nvalue = [0, 494]\nclass = Malicious"] ;
89 -> 90 ;
91 [label="gini = 0.0\nsamples = 27\nvalue = [27, 0]\nclass = Benign"] ;
89 -> 91 ;
92 [label="argument_stuff-ifstatement <= 0.5\ngini = 0.034\nsamples = 6425\nvalue = [111, 6314]\nclass = Malicious"] ;
84 -> 92 ;
93 [label="variable_stuff-expressionsequence <= 0.5\ngini = 0.029\nsamples = 6407\nvalue = [94, 6313]\nclass = Malicious"] ;
92 -> 93 ;
94 [label="argument_stuff-expression_statement <= 0.5\ngini = 0.025\nsamples = 6393\nvalue = [80, 6313]\nclass = Malicious"] ;
93 -> 94 ;
95 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
94 -> 95 ;
96 [label="numericliteral-identifiername <= 0.5\ngini = 0.023\nsamples = 6387\nvalue = [74, 6313]\nclass = Malicious"] ;
94 -> 96 ;
97 [label="formalParameterArg_stuff-formalParameterArg_stuff <= 0.5\ngini = 0.015\nsamples = 6281\nvalue = [48, 6233]\nclass = Malicious"] ;
96 -> 97 ;
98 [label="numericliteral-ifstatement <= 0.5\ngini = 0.012\nsamples = 6251\nvalue = [39, 6212]\nclass = Malicious"] ;
97 -> 98 ;
99 [label="litereral_stuff-expressionsequence <= 0.5\ngini = 0.009\nsamples = 6209\nvalue = [29, 6180]\nclass = Malicious"] ;
98 -> 99 ;
100 [label="returnstatement-expressionstatement <= 0.5\ngini = 0.009\nsamples = 6207\nvalue = [27, 6180]\nclass = Malicious"] ;
99 -> 100 ;
101 [label="litereral_stuff-identifiername <= 0.5\ngini = 0.008\nsamples = 6205\nvalue = [25, 6180]\nclass = Malicious"] ;
100 -> 101 ;
102 [label="expression_statement-ifstatement <= 0.5\ngini = 0.008\nsamples = 6204\nvalue = [24, 6180]\nclass = Malicious"] ;
101 -> 102 ;
103 [label="expression_statement-sourceElement_stuff <= 0.5\ngini = 0.007\nsamples = 6197\nvalue = [22, 6175]\nclass = Malicious"] ;
102 -> 103 ;
104 [label="identifiername-variable_stuff <= 0.5\ngini = 0.003\nsamples = 5611\nvalue = [8, 5603]\nclass = Malicious"] ;
103 -> 104 ;
105 [label="ifstatement-expressionsequence <= 0.5\ngini = 0.002\nsamples = 5605\nvalue = [7, 5598]\nclass = Malicious"] ;
104 -> 105 ;
106 [label="identifiername-expressionstatement <= 0.5\ngini = 0.011\nsamples = 1068\nvalue = [6, 1062]\nclass = Malicious"] ;
105 -> 106 ;
107 [label="argument_stuff-expressionstatement <= 0.5\ngini = 0.009\nsamples = 1066\nvalue = [5, 1061]\nclass = Malicious"] ;
106 -> 107 ;
108 [label="literal-expressionsequence <= 0.5\ngini = 0.006\nsamples = 1053\nvalue = [3, 1050]\nclass = Malicious"] ;
107 -> 108 ;
109 [label="identifiername-argument_stuff <= 0.5\ngini = 0.004\nsamples = 1050\nvalue = [2, 1048]\nclass = Malicious"] ;
108 -> 109 ;
110 [label="literal-variable_stuff <= 0.5\ngini = 0.124\nsamples = 15\nvalue = [1, 14]\nclass = Malicious"] ;
109 -> 110 ;
111 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
110 -> 111 ;
112 [label="gini = 0.0\nsamples = 14\nvalue = [0, 14]\nclass = Malicious"] ;
110 -> 112 ;
113 [label="identifiername-expression_statement <= 0.5\ngini = 0.002\nsamples = 1035\nvalue = [1, 1034]\nclass = Malicious"] ;
109 -> 113 ;
114 [label="gini = 0.0\nsamples = 930\nvalue = [0, 930]\nclass = Malicious"] ;
113 -> 114 ;
115 [label="numericliteral-variable_stuff <= 0.5\ngini = 0.019\nsamples = 105\nvalue = [1, 104]\nclass = Malicious"] ;
113 -> 115 ;
116 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
115 -> 116 ;
117 [label="gini = 0.0\nsamples = 104\nvalue = [0, 104]\nclass = Malicious"] ;
115 -> 117 ;
118 [label="expression_statement-identifiername <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
108 -> 118 ;
119 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
118 -> 119 ;
120 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
118 -> 120 ;
121 [label="element_stuff-expression_statement <= 0.5\ngini = 0.26\nsamples = 13\nvalue = [2, 11]\nclass = Malicious"] ;
107 -> 121 ;
122 [label="expression_statement-identifiername <= 0.5\ngini = 0.153\nsamples = 12\nvalue = [1, 11]\nclass = Malicious"] ;
121 -> 122 ;
123 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
122 -> 123 ;
124 [label="gini = 0.0\nsamples = 11\nvalue = [0, 11]\nclass = Malicious"] ;
122 -> 124 ;
125 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
121 -> 125 ;
126 [label="expression_statement-variable_stuff <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
106 -> 126 ;
127 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
126 -> 127 ;
128 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
126 -> 128 ;
129 [label="expression_statement-variable_stuff <= 0.5\ngini = 0.0\nsamples = 4537\nvalue = [1, 4536]\nclass = Malicious"] ;
105 -> 129 ;
130 [label="gini = 0.0\nsamples = 4230\nvalue = [0, 4230]\nclass = Malicious"] ;
129 -> 130 ;
131 [label="expression_statement-litereral_stuff <= 0.5\ngini = 0.006\nsamples = 307\nvalue = [1, 306]\nclass = Malicious"] ;
129 -> 131 ;
132 [label="identifiername-expressionsequence <= 0.5\ngini = 0.278\nsamples = 6\nvalue = [1, 5]\nclass = Malicious"] ;
131 -> 132 ;
133 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
132 -> 133 ;
134 [label="gini = 0.0\nsamples = 5\nvalue = [0, 5]\nclass = Malicious"] ;
132 -> 134 ;
135 [label="gini = 0.0\nsamples = 301\nvalue = [0, 301]\nclass = Malicious"] ;
131 -> 135 ;
136 [label="argument_stuff-expressionstatement <= 0.5\ngini = 0.278\nsamples = 6\nvalue = [1, 5]\nclass = Malicious"] ;
104 -> 136 ;
137 [label="gini = 0.0\nsamples = 5\nvalue = [0, 5]\nclass = Malicious"] ;
136 -> 137 ;
138 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
136 -> 138 ;
139 [label="literal-variable_stuff <= 0.5\ngini = 0.047\nsamples = 586\nvalue = [14, 572]\nclass = Malicious"] ;
103 -> 139 ;
140 [label="literal-trystatement <= 0.5\ngini = 0.133\nsamples = 14\nvalue = [13, 1]\nclass = Benign"] ;
139 -> 140 ;
141 [label="gini = 0.0\nsamples = 13\nvalue = [13, 0]\nclass = Benign"] ;
140 -> 141 ;
142 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
140 -> 142 ;
143 [label="literal-ifstatement <= 0.5\ngini = 0.003\nsamples = 572\nvalue = [1, 571]\nclass = Malicious"] ;
139 -> 143 ;
144 [label="gini = 0.0\nsamples = 571\nvalue = [0, 571]\nclass = Malicious"] ;
143 -> 144 ;
145 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
143 -> 145 ;
146 [label="sourceElement_stuff-expressionstatement <= 0.5\ngini = 0.408\nsamples = 7\nvalue = [2, 5]\nclass = Malicious"] ;
102 -> 146 ;
147 [label="gini = 0.0\nsamples = 5\nvalue = [0, 5]\nclass = Malicious"] ;
146 -> 147 ;
148 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
146 -> 148 ;
149 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
101 -> 149 ;
150 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
100 -> 150 ;
151 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
99 -> 151 ;
152 [label="expression_statement-sourceElement_stuff <= 0.5\ngini = 0.363\nsamples = 42\nvalue = [10, 32]\nclass = Malicious"] ;
98 -> 152 ;
153 [label="gini = 0.0\nsamples = 32\nvalue = [0, 32]\nclass = Malicious"] ;
152 -> 153 ;
154 [label="gini = 0.0\nsamples = 10\nvalue = [10, 0]\nclass = Benign"] ;
152 -> 154 ;
155 [label="literal-numericliteral <= 0.5\ngini = 0.42\nsamples = 30\nvalue = [9, 21]\nclass = Malicious"] ;
97 -> 155 ;
156 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
155 -> 156 ;
157 [label="gini = 0.0\nsamples = 21\nvalue = [0, 21]\nclass = Malicious"] ;
155 -> 157 ;
158 [label="numericliteral-do_for_while_statement <= 0.5\ngini = 0.37\nsamples = 106\nvalue = [26, 80]\nclass = Malicious"] ;
96 -> 158 ;
159 [label="gini = 0.0\nsamples = 26\nvalue = [26, 0]\nclass = Benign"] ;
158 -> 159 ;
160 [label="gini = 0.0\nsamples = 80\nvalue = [0, 80]\nclass = Malicious"] ;
158 -> 160 ;
161 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
93 -> 161 ;
162 [label="sourceElement_stuff-expressionstatement <= 0.5\ngini = 0.105\nsamples = 18\nvalue = [17, 1]\nclass = Benign"] ;
92 -> 162 ;
163 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
162 -> 163 ;
164 [label="gini = 0.0\nsamples = 17\nvalue = [17, 0]\nclass = Benign"] ;
162 -> 164 ;
165 [label="gini = 0.0\nsamples = 52\nvalue = [52, 0]\nclass = Benign"] ;
83 -> 165 ;
166 [label="gini = 0.0\nsamples = 56\nvalue = [56, 0]\nclass = Benign"] ;
82 -> 166 ;
167 [label="literal-trystatement <= 0.5\ngini = 0.186\nsamples = 1365\nvalue = [1223, 142]\nclass = Benign"] ;
1 -> 167 ;
168 [label="continue_break_statement-catchproduction <= 0.5\ngini = 0.008\nsamples = 1227\nvalue = [1222, 5]\nclass = Benign"] ;
167 -> 168 ;
169 [label="continue_break_statement-variable_stuff <= 0.5\ngini = 0.005\nsamples = 1225\nvalue = [1222, 3]\nclass = Benign"] ;
168 -> 169 ;
170 [label="expression_statement-assignmentoperator <= 0.5\ngini = 0.003\nsamples = 1224\nvalue = [1222, 2]\nclass = Benign"] ;
169 -> 170 ;
171 [label="argument_stuff-variable_stuff <= 0.5\ngini = 0.002\nsamples = 1219\nvalue = [1218, 1]\nclass = Benign"] ;
170 -> 171 ;
172 [label="gini = 0.0\nsamples = 1163\nvalue = [1163, 0]\nclass = Benign"] ;
171 -> 172 ;
173 [label="literal-expression_statement <= 0.5\ngini = 0.035\nsamples = 56\nvalue = [55, 1]\nclass = Benign"] ;
171 -> 173 ;
174 [label="literal-variable_stuff <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
173 -> 174 ;
175 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
174 -> 175 ;
176 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
174 -> 176 ;
177 [label="gini = 0.0\nsamples = 54\nvalue = [54, 0]\nclass = Benign"] ;
173 -> 177 ;
178 [label="identifiername-expression_statement <= 0.5\ngini = 0.32\nsamples = 5\nvalue = [4, 1]\nclass = Benign"] ;
170 -> 178 ;
179 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
178 -> 179 ;
180 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
178 -> 180 ;
181 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
169 -> 181 ;
182 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
168 -> 182 ;
183 [label="literal-identifiername <= 0.5\ngini = 0.014\nsamples = 138\nvalue = [1, 137]\nclass = Malicious"] ;
167 -> 183 ;
184 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
183 -> 184 ;
185 [label="gini = 0.0\nsamples = 137\nvalue = [0, 137]\nclass = Malicious"] ;
183 -> 185 ;
186 [label="do_for_while_statement-expressionsequence <= 0.5\ngini = 0.252\nsamples = 10315\nvalue = [8789, 1526]\nclass = Benign"] ;
0 -> 186 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
187 [label="literal-finallyproduction <= 0.5\ngini = 0.006\nsamples = 8781\nvalue = [8753, 28]\nclass = Benign"] ;
186 -> 187 ;
188 [label="expression_statement-catchproduction <= 0.5\ngini = 0.001\nsamples = 8756\nvalue = [8753, 3]\nclass = Benign"] ;
187 -> 188 ;
189 [label="gini = 0.0\nsamples = 8742\nvalue = [8742, 0]\nclass = Benign"] ;
188 -> 189 ;
190 [label="literal-argument_stuff <= 0.5\ngini = 0.337\nsamples = 14\nvalue = [11, 3]\nclass = Benign"] ;
188 -> 190 ;
191 [label="gini = 0.0\nsamples = 11\nvalue = [11, 0]\nclass = Benign"] ;
190 -> 191 ;
192 [label="gini = 0.0\nsamples = 3\nvalue = [0, 3]\nclass = Malicious"] ;
190 -> 192 ;
193 [label="gini = 0.0\nsamples = 25\nvalue = [0, 25]\nclass = Malicious"] ;
187 -> 193 ;
194 [label="numericliteral-property_rules <= 0.5\ngini = 0.046\nsamples = 1534\nvalue = [36, 1498]\nclass = Malicious"] ;
186 -> 194 ;
195 [label="expression_statement-property_rules <= 0.5\ngini = 0.007\nsamples = 1503\nvalue = [5, 1498]\nclass = Malicious"] ;
194 -> 195 ;
196 [label="identifiername-throwstatement <= 0.5\ngini = 0.003\nsamples = 1500\nvalue = [2, 1498]\nclass = Malicious"] ;
195 -> 196 ;
197 [label="gini = 0.0\nsamples = 1498\nvalue = [0, 1498]\nclass = Malicious"] ;
196 -> 197 ;
198 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
196 -> 198 ;
199 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
195 -> 199 ;
200 [label="gini = 0.0\nsamples = 31\nvalue = [31, 0]\nclass = Benign"] ;
194 -> 200 ;
}
