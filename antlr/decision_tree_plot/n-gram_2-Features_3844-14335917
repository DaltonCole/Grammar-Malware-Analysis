digraph Tree {
node [shape=box] ;
0 [label="expression_statement-objectliteral <= 0.5\ngini = 0.5\nsamples = 27000\nvalue = [13505, 13495]\nclass = Benign"] ;
1 [label="literal-arguments <= 0.5\ngini = 0.388\nsamples = 16181\nvalue = [4253, 11928]\nclass = Malicious"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="identifiername-identifiername <= 0.5\ngini = 0.472\nsamples = 11126\nvalue = [4248, 6878]\nclass = Malicious"] ;
1 -> 2 ;
3 [label="expression_statement-arguments <= 0.5\ngini = 0.435\nsamples = 10101\nvalue = [3226, 6875]\nclass = Malicious"] ;
2 -> 3 ;
4 [label="sourceelement-statement <= 0.5\ngini = 0.493\nsamples = 5494\nvalue = [2422, 3072]\nclass = Malicious"] ;
3 -> 4 ;
5 [label="gini = 0.391\nsamples = 2557\nvalue = [682, 1875]\nclass = Malicious"] ;
4 -> 5 ;
6 [label="returnstatement-expressionsequence <= 0.5\ngini = 0.483\nsamples = 2937\nvalue = [1740, 1197]\nclass = Benign"] ;
4 -> 6 ;
7 [label="literal-identifiername <= 0.5\ngini = 0.409\nsamples = 2438\nvalue = [1739, 699]\nclass = Benign"] ;
6 -> 7 ;
8 [label="arguments-expression_statement <= 0.5\ngini = 0.222\nsamples = 1842\nvalue = [1608, 234]\nclass = Benign"] ;
7 -> 8 ;
9 [label="gini = 0.0\nsamples = 1145\nvalue = [1145, 0]\nclass = Benign"] ;
8 -> 9 ;
10 [label="numericliteral-eos <= 0.5\ngini = 0.446\nsamples = 697\nvalue = [463, 234]\nclass = Benign"] ;
8 -> 10 ;
11 [label="gini = 0.0\nsamples = 362\nvalue = [362, 0]\nclass = Benign"] ;
10 -> 11 ;
12 [label="eos-sourceelement <= 0.5\ngini = 0.421\nsamples = 335\nvalue = [101, 234]\nclass = Malicious"] ;
10 -> 12 ;
13 [label="gini = 0.0\nsamples = 85\nvalue = [85, 0]\nclass = Benign"] ;
12 -> 13 ;
14 [label="literal-expression_statement <= 0.5\ngini = 0.12\nsamples = 250\nvalue = [16, 234]\nclass = Malicious"] ;
12 -> 14 ;
15 [label="identifiername-expression_statement <= 0.5\ngini = 0.017\nsamples = 227\nvalue = [2, 225]\nclass = Malicious"] ;
14 -> 15 ;
16 [label="gini = 0.0\nsamples = 225\nvalue = [0, 225]\nclass = Malicious"] ;
15 -> 16 ;
17 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
15 -> 17 ;
18 [label="literal-expressionsequence <= 0.5\ngini = 0.476\nsamples = 23\nvalue = [14, 9]\nclass = Benign"] ;
14 -> 18 ;
19 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
18 -> 19 ;
20 [label="gini = 0.0\nsamples = 9\nvalue = [0, 9]\nclass = Malicious"] ;
18 -> 20 ;
21 [label="expression_statement-identifiername <= 0.5\ngini = 0.343\nsamples = 596\nvalue = [131, 465]\nclass = Malicious"] ;
7 -> 21 ;
22 [label="literal-expression_statement <= 0.5\ngini = 0.004\nsamples = 466\nvalue = [1, 465]\nclass = Malicious"] ;
21 -> 22 ;
23 [label="gini = 0.0\nsamples = 465\nvalue = [0, 465]\nclass = Malicious"] ;
22 -> 23 ;
24 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
22 -> 24 ;
25 [label="gini = 0.0\nsamples = 130\nvalue = [130, 0]\nclass = Benign"] ;
21 -> 25 ;
26 [label="expression_statement-expressionsequence <= 0.5\ngini = 0.004\nsamples = 499\nvalue = [1, 498]\nclass = Malicious"] ;
6 -> 26 ;
27 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
26 -> 27 ;
28 [label="gini = 0.0\nsamples = 498\nvalue = [0, 498]\nclass = Malicious"] ;
26 -> 28 ;
29 [label="variabledeclaration-expression_statement <= 0.5\ngini = 0.288\nsamples = 4607\nvalue = [804, 3803]\nclass = Malicious"] ;
3 -> 29 ;
30 [label="literal-expression_statement <= 0.5\ngini = 0.479\nsamples = 1042\nvalue = [628, 414]\nclass = Benign"] ;
29 -> 30 ;
31 [label="expression_statement-functionbody <= 0.5\ngini = 0.436\nsamples = 610\nvalue = [196, 414]\nclass = Malicious"] ;
30 -> 31 ;
32 [label="expression_statement-eos <= 0.5\ngini = 0.367\nsamples = 546\nvalue = [132, 414]\nclass = Malicious"] ;
31 -> 32 ;
33 [label="arguments-identifiername <= 0.5\ngini = 0.494\nsamples = 296\nvalue = [132, 164]\nclass = Malicious"] ;
32 -> 33 ;
34 [label="gini = 0.0\nsamples = 128\nvalue = [128, 0]\nclass = Benign"] ;
33 -> 34 ;
35 [label="arguments-eos <= 0.5\ngini = 0.046\nsamples = 168\nvalue = [4, 164]\nclass = Malicious"] ;
33 -> 35 ;
36 [label="gini = 0.0\nsamples = 164\nvalue = [0, 164]\nclass = Malicious"] ;
35 -> 36 ;
37 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
35 -> 37 ;
38 [label="gini = 0.0\nsamples = 250\nvalue = [0, 250]\nclass = Malicious"] ;
32 -> 38 ;
39 [label="gini = 0.0\nsamples = 64\nvalue = [64, 0]\nclass = Benign"] ;
31 -> 39 ;
40 [label="gini = 0.0\nsamples = 432\nvalue = [432, 0]\nclass = Benign"] ;
30 -> 40 ;
41 [label="expression_statement-functionbody <= 0.5\ngini = 0.094\nsamples = 3565\nvalue = [176, 3389]\nclass = Malicious"] ;
29 -> 41 ;
42 [label="expressionstatement-expressionsequence <= 0.5\ngini = 0.053\nsamples = 3321\nvalue = [90, 3231]\nclass = Malicious"] ;
41 -> 42 ;
43 [label="block-statementlist <= 0.5\ngini = 0.133\nsamples = 14\nvalue = [13, 1]\nclass = Benign"] ;
42 -> 43 ;
44 [label="gini = 0.0\nsamples = 13\nvalue = [13, 0]\nclass = Benign"] ;
43 -> 44 ;
45 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
43 -> 45 ;
46 [label="arguments-expression_statement <= 0.5\ngini = 0.045\nsamples = 3307\nvalue = [77, 3230]\nclass = Malicious"] ;
42 -> 46 ;
47 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
46 -> 47 ;
48 [label="eos-arguments <= 0.5\ngini = 0.042\nsamples = 3300\nvalue = [70, 3230]\nclass = Malicious"] ;
46 -> 48 ;
49 [label="literal-expression_statement <= 0.5\ngini = 0.039\nsamples = 3294\nvalue = [65, 3229]\nclass = Malicious"] ;
48 -> 49 ;
50 [label="expression_statement-identifiername <= 0.5\ngini = 0.224\nsamples = 303\nvalue = [39, 264]\nclass = Malicious"] ;
49 -> 50 ;
51 [label="assignmentoperator-expression_statement <= 0.5\ngini = 0.452\nsamples = 55\nvalue = [36, 19]\nclass = Benign"] ;
50 -> 51 ;
52 [label="arguments-identifiername <= 0.5\ngini = 0.053\nsamples = 37\nvalue = [36, 1]\nclass = Benign"] ;
51 -> 52 ;
53 [label="gini = 0.0\nsamples = 36\nvalue = [36, 0]\nclass = Benign"] ;
52 -> 53 ;
54 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
52 -> 54 ;
55 [label="gini = 0.0\nsamples = 18\nvalue = [0, 18]\nclass = Malicious"] ;
51 -> 55 ;
56 [label="literal-numericliteral <= 0.5\ngini = 0.024\nsamples = 248\nvalue = [3, 245]\nclass = Malicious"] ;
50 -> 56 ;
57 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
56 -> 57 ;
58 [label="variabledeclaration-eos <= 0.5\ngini = 0.008\nsamples = 246\nvalue = [1, 245]\nclass = Malicious"] ;
56 -> 58 ;
59 [label="gini = 0.0\nsamples = 245\nvalue = [0, 245]\nclass = Malicious"] ;
58 -> 59 ;
60 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
58 -> 60 ;
61 [label="identifiername-expression_statement <= 0.5\ngini = 0.017\nsamples = 2991\nvalue = [26, 2965]\nclass = Malicious"] ;
49 -> 61 ;
62 [label="withstatement-expressionsequence <= 0.5\ngini = 0.009\nsamples = 2861\nvalue = [13, 2848]\nclass = Malicious"] ;
61 -> 62 ;
63 [label="eos-catchproduction <= 0.5\ngini = 0.008\nsamples = 2860\nvalue = [12, 2848]\nclass = Malicious"] ;
62 -> 63 ;
64 [label="expression_statement-assignmentoperator <= 0.5\ngini = 0.008\nsamples = 2857\nvalue = [11, 2846]\nclass = Malicious"] ;
63 -> 64 ;
65 [label="numericliteral-eos <= 0.5\ngini = 0.007\nsamples = 2855\nvalue = [10, 2845]\nclass = Malicious"] ;
64 -> 65 ;
66 [label="statementlist-statement <= 0.5\ngini = 0.014\nsamples = 1453\nvalue = [10, 1443]\nclass = Malicious"] ;
65 -> 66 ;
67 [label="expression_statement-identifiername <= 0.5\ngini = 0.01\nsamples = 1447\nvalue = [7, 1440]\nclass = Malicious"] ;
66 -> 67 ;
68 [label="expression_statement-eos <= 0.5\ngini = 0.002\nsamples = 1055\nvalue = [1, 1054]\nclass = Malicious"] ;
67 -> 68 ;
69 [label="gini = 0.003\nsamples = 678\nvalue = [1, 677]\nclass = Malicious"] ;
68 -> 69 ;
70 [label="gini = 0.0\nsamples = 377\nvalue = [0, 377]\nclass = Malicious"] ;
68 -> 70 ;
71 [label="expression_statement-formalparameterlist <= 0.5\ngini = 0.03\nsamples = 392\nvalue = [6, 386]\nclass = Malicious"] ;
67 -> 71 ;
72 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
71 -> 72 ;
73 [label="gini = 0.0\nsamples = 386\nvalue = [0, 386]\nclass = Malicious"] ;
71 -> 73 ;
74 [label="identifiername-eos <= 0.5\ngini = 0.5\nsamples = 6\nvalue = [3, 3]\nclass = Benign"] ;
66 -> 74 ;
75 [label="expression_statement-eos <= 0.5\ngini = 0.375\nsamples = 4\nvalue = [3, 1]\nclass = Benign"] ;
74 -> 75 ;
76 [label="arguments-eos <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
75 -> 76 ;
77 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
76 -> 77 ;
78 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
76 -> 78 ;
79 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
75 -> 79 ;
80 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
74 -> 80 ;
81 [label="gini = 0.0\nsamples = 1402\nvalue = [0, 1402]\nclass = Malicious"] ;
65 -> 81 ;
82 [label="block-statementlist <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
64 -> 82 ;
83 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
82 -> 83 ;
84 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
82 -> 84 ;
85 [label="statement-returnstatement <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
63 -> 85 ;
86 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
85 -> 86 ;
87 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
85 -> 87 ;
88 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
62 -> 88 ;
89 [label="expression_statement-expressionsequence <= 0.5\ngini = 0.18\nsamples = 130\nvalue = [13, 117]\nclass = Malicious"] ;
61 -> 89 ;
90 [label="gini = 0.0\nsamples = 10\nvalue = [10, 0]\nclass = Benign"] ;
89 -> 90 ;
91 [label="literal-eos <= 0.5\ngini = 0.049\nsamples = 120\nvalue = [3, 117]\nclass = Malicious"] ;
89 -> 91 ;
92 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
91 -> 92 ;
93 [label="gini = 0.0\nsamples = 117\nvalue = [0, 117]\nclass = Malicious"] ;
91 -> 93 ;
94 [label="returnstatement-expressionsequence <= 0.5\ngini = 0.278\nsamples = 6\nvalue = [5, 1]\nclass = Benign"] ;
48 -> 94 ;
95 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
94 -> 95 ;
96 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
94 -> 96 ;
97 [label="assignmentoperator-expression_statement <= 0.5\ngini = 0.456\nsamples = 244\nvalue = [86, 158]\nclass = Malicious"] ;
41 -> 97 ;
98 [label="emptystatement-sourceelement <= 0.5\ngini = 0.023\nsamples = 85\nvalue = [84, 1]\nclass = Benign"] ;
97 -> 98 ;
99 [label="gini = 0.0\nsamples = 84\nvalue = [84, 0]\nclass = Benign"] ;
98 -> 99 ;
100 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
98 -> 100 ;
101 [label="literal-eos <= 0.5\ngini = 0.025\nsamples = 159\nvalue = [2, 157]\nclass = Malicious"] ;
97 -> 101 ;
102 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
101 -> 102 ;
103 [label="formalparameterarg-formalparameterarg <= 0.5\ngini = 0.013\nsamples = 158\nvalue = [1, 157]\nclass = Malicious"] ;
101 -> 103 ;
104 [label="gini = 0.0\nsamples = 156\nvalue = [0, 156]\nclass = Malicious"] ;
103 -> 104 ;
105 [label="literal-identifiername <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
103 -> 105 ;
106 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
105 -> 106 ;
107 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
105 -> 107 ;
108 [label="emptystatement-catchproduction <= 0.5\ngini = 0.006\nsamples = 1025\nvalue = [1022, 3]\nclass = Benign"] ;
2 -> 108 ;
109 [label="numericliteral-expression_statement <= 0.5\ngini = 0.002\nsamples = 1023\nvalue = [1022, 1]\nclass = Benign"] ;
108 -> 109 ;
110 [label="gini = 0.0\nsamples = 913\nvalue = [913, 0]\nclass = Benign"] ;
109 -> 110 ;
111 [label="literal-expression_statement <= 0.5\ngini = 0.018\nsamples = 110\nvalue = [109, 1]\nclass = Benign"] ;
109 -> 111 ;
112 [label="identifiername-eos <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [2, 1]\nclass = Benign"] ;
111 -> 112 ;
113 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
112 -> 113 ;
114 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
112 -> 114 ;
115 [label="gini = 0.0\nsamples = 107\nvalue = [107, 0]\nclass = Benign"] ;
111 -> 115 ;
116 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
108 -> 116 ;
117 [label="eos-arguments <= 0.5\ngini = 0.002\nsamples = 5055\nvalue = [5, 5050]\nclass = Malicious"] ;
1 -> 117 ;
118 [label="arguments-expression_statement <= 0.5\ngini = 0.001\nsamples = 5052\nvalue = [2, 5050]\nclass = Malicious"] ;
117 -> 118 ;
119 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
118 -> 119 ;
120 [label="gini = 0.0\nsamples = 5050\nvalue = [0, 5050]\nclass = Malicious"] ;
118 -> 120 ;
121 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
117 -> 121 ;
122 [label="do_for_while_statement-expressionsequence <= 0.5\ngini = 0.248\nsamples = 10819\nvalue = [9252, 1567]\nclass = Benign"] ;
0 -> 122 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
123 [label="identifiername-caseblock <= 0.5\ngini = 0.007\nsamples = 9249\nvalue = [9217, 32]\nclass = Benign"] ;
122 -> 123 ;
124 [label="literal-arguments <= 0.5\ngini = 0.001\nsamples = 9221\nvalue = [9217, 4]\nclass = Benign"] ;
123 -> 124 ;
125 [label="gini = 0.0\nsamples = 9204\nvalue = [9204, 0]\nclass = Benign"] ;
124 -> 125 ;
126 [label="literal-expressionsequence <= 0.5\ngini = 0.36\nsamples = 17\nvalue = [13, 4]\nclass = Benign"] ;
124 -> 126 ;
127 [label="gini = 0.0\nsamples = 13\nvalue = [13, 0]\nclass = Benign"] ;
126 -> 127 ;
128 [label="gini = 0.0\nsamples = 4\nvalue = [0, 4]\nclass = Malicious"] ;
126 -> 128 ;
129 [label="gini = 0.0\nsamples = 28\nvalue = [0, 28]\nclass = Malicious"] ;
123 -> 129 ;
130 [label="literal-expressionsequence <= 0.5\ngini = 0.044\nsamples = 1570\nvalue = [35, 1535]\nclass = Malicious"] ;
122 -> 130 ;
131 [label="statement-emptystatement <= 0.5\ngini = 0.193\nsamples = 37\nvalue = [33, 4]\nclass = Benign"] ;
130 -> 131 ;
132 [label="gini = 0.0\nsamples = 33\nvalue = [33, 0]\nclass = Benign"] ;
131 -> 132 ;
133 [label="gini = 0.0\nsamples = 4\nvalue = [0, 4]\nclass = Malicious"] ;
131 -> 133 ;
134 [label="expression_statement-property_rules <= 0.5\ngini = 0.003\nsamples = 1533\nvalue = [2, 1531]\nclass = Malicious"] ;
130 -> 134 ;
135 [label="gini = 0.0\nsamples = 1531\nvalue = [0, 1531]\nclass = Malicious"] ;
134 -> 135 ;
136 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
134 -> 136 ;
}
