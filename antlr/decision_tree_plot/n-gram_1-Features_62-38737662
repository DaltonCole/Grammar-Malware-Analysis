digraph Tree {
node [shape=box] ;
0 [label="objectliteral <= 0.5\ngini = 0.5\nsamples = 27000\nvalue = [13454, 13546]\nclass = Malicious"] ;
1 [label="numericliteral <= 0.5\ngini = 0.388\nsamples = 16269\nvalue = [4286, 11983]\nclass = Malicious"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="expressionstatement <= 0.5\ngini = 0.484\nsamples = 7314\nvalue = [3005, 4309]\nclass = Malicious"] ;
1 -> 2 ;
3 [label="arguments <= 0.5\ngini = 0.406\nsamples = 3984\nvalue = [1128, 2856]\nclass = Malicious"] ;
2 -> 3 ;
4 [label="sourceelement <= 0.5\ngini = 0.463\nsamples = 2997\nvalue = [1092, 1905]\nclass = Malicious"] ;
3 -> 4 ;
5 [label="gini = 0.39\nsamples = 2592\nvalue = [687, 1905]\nclass = Malicious"] ;
4 -> 5 ;
6 [label="gini = 0.0\nsamples = 405\nvalue = [405, 0]\nclass = Benign"] ;
4 -> 6 ;
7 [label="literal <= 0.5\ngini = 0.07\nsamples = 987\nvalue = [36, 951]\nclass = Malicious"] ;
3 -> 7 ;
8 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
7 -> 8 ;
9 [label="elementlist <= 0.5\ngini = 0.056\nsamples = 979\nvalue = [28, 951]\nclass = Malicious"] ;
7 -> 9 ;
10 [label="variabledeclarationlist <= 0.5\ngini = 0.05\nsamples = 976\nvalue = [25, 951]\nclass = Malicious"] ;
9 -> 10 ;
11 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
10 -> 11 ;
12 [label="expressionsequence <= 0.5\ngini = 0.048\nsamples = 975\nvalue = [24, 951]\nclass = Malicious"] ;
10 -> 12 ;
13 [label="identifiername <= 0.5\ngini = 0.092\nsamples = 494\nvalue = [24, 470]\nclass = Malicious"] ;
12 -> 13 ;
14 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
13 -> 14 ;
15 [label="gini = 0.089\nsamples = 493\nvalue = [23, 470]\nclass = Malicious"] ;
13 -> 15 ;
16 [label="gini = 0.0\nsamples = 481\nvalue = [0, 481]\nclass = Malicious"] ;
12 -> 16 ;
17 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
9 -> 17 ;
18 [label="variabledeclaration <= 0.5\ngini = 0.492\nsamples = 3330\nvalue = [1877, 1453]\nclass = Benign"] ;
2 -> 18 ;
19 [label="functionbody <= 0.5\ngini = 0.359\nsamples = 1907\nvalue = [1460, 447]\nclass = Benign"] ;
18 -> 19 ;
20 [label="identifiername <= 0.5\ngini = 0.427\nsamples = 1444\nvalue = [997, 447]\nclass = Benign"] ;
19 -> 20 ;
21 [label="gini = 0.0\nsamples = 366\nvalue = [366, 0]\nclass = Benign"] ;
20 -> 21 ;
22 [label="arguments <= 0.5\ngini = 0.485\nsamples = 1078\nvalue = [631, 447]\nclass = Benign"] ;
20 -> 22 ;
23 [label="gini = 0.0\nsamples = 158\nvalue = [158, 0]\nclass = Benign"] ;
22 -> 23 ;
24 [label="ifstatement <= 0.5\ngini = 0.5\nsamples = 920\nvalue = [473, 447]\nclass = Benign"] ;
22 -> 24 ;
25 [label="arrayliteral <= 0.5\ngini = 0.499\nsamples = 858\nvalue = [411, 447]\nclass = Malicious"] ;
24 -> 25 ;
26 [label="literal <= 0.5\ngini = 0.493\nsamples = 802\nvalue = [355, 447]\nclass = Malicious"] ;
25 -> 26 ;
27 [label="gini = 0.0\nsamples = 22\nvalue = [22, 0]\nclass = Benign"] ;
26 -> 27 ;
28 [label="trystatement <= 0.5\ngini = 0.489\nsamples = 780\nvalue = [333, 447]\nclass = Malicious"] ;
26 -> 28 ;
29 [label="gini = 0.489\nsamples = 777\nvalue = [330, 447]\nclass = Malicious"] ;
28 -> 29 ;
30 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
28 -> 30 ;
31 [label="gini = 0.0\nsamples = 56\nvalue = [56, 0]\nclass = Benign"] ;
25 -> 31 ;
32 [label="gini = 0.0\nsamples = 62\nvalue = [62, 0]\nclass = Benign"] ;
24 -> 32 ;
33 [label="gini = 0.0\nsamples = 463\nvalue = [463, 0]\nclass = Benign"] ;
19 -> 33 ;
34 [label="identifiername <= 0.5\ngini = 0.414\nsamples = 1423\nvalue = [417, 1006]\nclass = Malicious"] ;
18 -> 34 ;
35 [label="arguments <= 0.5\ngini = 0.077\nsamples = 802\nvalue = [32, 770]\nclass = Malicious"] ;
34 -> 35 ;
36 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
35 -> 36 ;
37 [label="withstatement <= 0.5\ngini = 0.07\nsamples = 799\nvalue = [29, 770]\nclass = Malicious"] ;
35 -> 37 ;
38 [label="returnstatement <= 0.5\ngini = 0.065\nsamples = 797\nvalue = [27, 770]\nclass = Malicious"] ;
37 -> 38 ;
39 [label="assignmentoperator <= 0.5\ngini = 0.062\nsamples = 776\nvalue = [25, 751]\nclass = Malicious"] ;
38 -> 39 ;
40 [label="functionbody <= 0.5\ngini = 0.068\nsamples = 714\nvalue = [25, 689]\nclass = Malicious"] ;
39 -> 40 ;
41 [label="gini = 0.065\nsamples = 713\nvalue = [24, 689]\nclass = Malicious"] ;
40 -> 41 ;
42 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
40 -> 42 ;
43 [label="gini = 0.0\nsamples = 62\nvalue = [0, 62]\nclass = Malicious"] ;
39 -> 43 ;
44 [label="gini = 0.172\nsamples = 21\nvalue = [2, 19]\nclass = Malicious"] ;
38 -> 44 ;
45 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
37 -> 45 ;
46 [label="returnstatement <= 0.5\ngini = 0.471\nsamples = 621\nvalue = [385, 236]\nclass = Benign"] ;
34 -> 46 ;
47 [label="elementlist <= 0.5\ngini = 0.011\nsamples = 373\nvalue = [371, 2]\nclass = Benign"] ;
46 -> 47 ;
48 [label="functionbody <= 0.5\ngini = 0.006\nsamples = 361\nvalue = [360, 1]\nclass = Benign"] ;
47 -> 48 ;
49 [label="assignmentoperator <= 0.5\ngini = 0.012\nsamples = 172\nvalue = [171, 1]\nclass = Benign"] ;
48 -> 49 ;
50 [label="block <= 0.5\ngini = 0.023\nsamples = 87\nvalue = [86, 1]\nclass = Benign"] ;
49 -> 50 ;
51 [label="arguments <= 0.5\ngini = 0.04\nsamples = 49\nvalue = [48, 1]\nclass = Benign"] ;
50 -> 51 ;
52 [label="gini = 0.0\nsamples = 17\nvalue = [17, 0]\nclass = Benign"] ;
51 -> 52 ;
53 [label="arrayliteral <= 0.5\ngini = 0.061\nsamples = 32\nvalue = [31, 1]\nclass = Benign"] ;
51 -> 53 ;
54 [label="ifstatement <= 0.5\ngini = 0.069\nsamples = 28\nvalue = [27, 1]\nclass = Benign"] ;
53 -> 54 ;
55 [label="gini = 0.08\nsamples = 24\nvalue = [23, 1]\nclass = Benign"] ;
54 -> 55 ;
56 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
54 -> 56 ;
57 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
53 -> 57 ;
58 [label="gini = 0.0\nsamples = 38\nvalue = [38, 0]\nclass = Benign"] ;
50 -> 58 ;
59 [label="gini = 0.0\nsamples = 85\nvalue = [85, 0]\nclass = Benign"] ;
49 -> 59 ;
60 [label="gini = 0.0\nsamples = 189\nvalue = [189, 0]\nclass = Benign"] ;
48 -> 60 ;
61 [label="statementlist <= 0.5\ngini = 0.153\nsamples = 12\nvalue = [11, 1]\nclass = Benign"] ;
47 -> 61 ;
62 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
61 -> 62 ;
63 [label="functionbody <= 0.5\ngini = 0.375\nsamples = 4\nvalue = [3, 1]\nclass = Benign"] ;
61 -> 63 ;
64 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
63 -> 64 ;
65 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
63 -> 65 ;
66 [label="ifstatement <= 0.5\ngini = 0.107\nsamples = 248\nvalue = [14, 234]\nclass = Malicious"] ;
46 -> 66 ;
67 [label="formalparameterlist <= 0.5\ngini = 0.064\nsamples = 242\nvalue = [8, 234]\nclass = Malicious"] ;
66 -> 67 ;
68 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
67 -> 68 ;
69 [label="gini = 0.049\nsamples = 240\nvalue = [6, 234]\nclass = Malicious"] ;
67 -> 69 ;
70 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
66 -> 70 ;
71 [label="expressionstatement <= 0.5\ngini = 0.245\nsamples = 8955\nvalue = [1281, 7674]\nclass = Malicious"] ;
1 -> 71 ;
72 [label="gini = 0.0\nsamples = 257\nvalue = [257, 0]\nclass = Benign"] ;
71 -> 72 ;
73 [label="variabledeclarationlist <= 0.5\ngini = 0.208\nsamples = 8698\nvalue = [1024, 7674]\nclass = Malicious"] ;
71 -> 73 ;
74 [label="returnstatement <= 0.5\ngini = 0.389\nsamples = 1436\nvalue = [380, 1056]\nclass = Malicious"] ;
73 -> 74 ;
75 [label="ifstatement <= 0.5\ngini = 0.481\nsamples = 927\nvalue = [372, 555]\nclass = Malicious"] ;
74 -> 75 ;
76 [label="functionbody <= 0.5\ngini = 0.406\nsamples = 430\nvalue = [308, 122]\nclass = Benign"] ;
75 -> 76 ;
77 [label="arguments <= 0.5\ngini = 0.46\nsamples = 340\nvalue = [218, 122]\nclass = Benign"] ;
76 -> 77 ;
78 [label="gini = 0.0\nsamples = 85\nvalue = [85, 0]\nclass = Benign"] ;
77 -> 78 ;
79 [label="identifiername <= 0.5\ngini = 0.499\nsamples = 255\nvalue = [133, 122]\nclass = Benign"] ;
77 -> 79 ;
80 [label="elementlist <= 0.5\ngini = 0.077\nsamples = 25\nvalue = [24, 1]\nclass = Benign"] ;
79 -> 80 ;
81 [label="gini = 0.0\nsamples = 24\nvalue = [24, 0]\nclass = Benign"] ;
80 -> 81 ;
82 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
80 -> 82 ;
83 [label="emptystatement <= 0.5\ngini = 0.499\nsamples = 230\nvalue = [109, 121]\nclass = Malicious"] ;
79 -> 83 ;
84 [label="arrayliteral <= 0.5\ngini = 0.491\nsamples = 214\nvalue = [93, 121]\nclass = Malicious"] ;
83 -> 84 ;
85 [label="trystatement <= 0.5\ngini = 0.489\nsamples = 211\nvalue = [90, 121]\nclass = Malicious"] ;
84 -> 85 ;
86 [label="assignmentoperator <= 0.5\ngini = 0.488\nsamples = 210\nvalue = [89, 121]\nclass = Malicious"] ;
85 -> 86 ;
87 [label="gini = 0.488\nsamples = 209\nvalue = [88, 121]\nclass = Malicious"] ;
86 -> 87 ;
88 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
86 -> 88 ;
89 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
85 -> 89 ;
90 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
84 -> 90 ;
91 [label="gini = 0.0\nsamples = 16\nvalue = [16, 0]\nclass = Benign"] ;
83 -> 91 ;
92 [label="gini = 0.0\nsamples = 90\nvalue = [90, 0]\nclass = Benign"] ;
76 -> 92 ;
93 [label="block <= 0.5\ngini = 0.224\nsamples = 497\nvalue = [64, 433]\nclass = Malicious"] ;
75 -> 93 ;
94 [label="identifiername <= 0.5\ngini = 0.014\nsamples = 436\nvalue = [3, 433]\nclass = Malicious"] ;
93 -> 94 ;
95 [label="gini = 0.0\nsamples = 136\nvalue = [0, 136]\nclass = Malicious"] ;
94 -> 95 ;
96 [label="gini = 0.02\nsamples = 300\nvalue = [3, 297]\nclass = Malicious"] ;
94 -> 96 ;
97 [label="gini = 0.0\nsamples = 61\nvalue = [61, 0]\nclass = Benign"] ;
93 -> 97 ;
98 [label="identifiername <= 0.5\ngini = 0.031\nsamples = 509\nvalue = [8, 501]\nclass = Malicious"] ;
74 -> 98 ;
99 [label="gini = 0.0\nsamples = 501\nvalue = [0, 501]\nclass = Malicious"] ;
98 -> 99 ;
100 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
98 -> 100 ;
101 [label="arguments <= 0.5\ngini = 0.162\nsamples = 7262\nvalue = [644, 6618]\nclass = Malicious"] ;
73 -> 101 ;
102 [label="gini = 0.0\nsamples = 109\nvalue = [109, 0]\nclass = Benign"] ;
101 -> 102 ;
103 [label="elementlist <= 0.5\ngini = 0.138\nsamples = 7153\nvalue = [535, 6618]\nclass = Malicious"] ;
101 -> 103 ;
104 [label="do_for_while_statement <= 0.5\ngini = 0.241\nsamples = 3381\nvalue = [474, 2907]\nclass = Malicious"] ;
103 -> 104 ;
105 [label="returnstatement <= 0.5\ngini = 0.207\nsamples = 3108\nvalue = [364, 2744]\nclass = Malicious"] ;
104 -> 105 ;
106 [label="functionbody <= 0.5\ngini = 0.302\nsamples = 1283\nvalue = [238, 1045]\nclass = Malicious"] ;
105 -> 106 ;
107 [label="assignmentoperator <= 0.5\ngini = 0.143\nsamples = 1062\nvalue = [82, 980]\nclass = Malicious"] ;
106 -> 107 ;
108 [label="identifiername <= 0.5\ngini = 0.14\nsamples = 1060\nvalue = [80, 980]\nclass = Malicious"] ;
107 -> 108 ;
109 [label="gini = 0.081\nsamples = 449\nvalue = [19, 430]\nclass = Malicious"] ;
108 -> 109 ;
110 [label="catchproduction <= 0.5\ngini = 0.18\nsamples = 611\nvalue = [61, 550]\nclass = Malicious"] ;
108 -> 110 ;
111 [label="ifstatement <= 0.5\ngini = 0.176\nsamples = 607\nvalue = [59, 548]\nclass = Malicious"] ;
110 -> 111 ;
112 [label="gini = 0.157\nsamples = 409\nvalue = [35, 374]\nclass = Malicious"] ;
111 -> 112 ;
113 [label="block <= 0.5\ngini = 0.213\nsamples = 198\nvalue = [24, 174]\nclass = Malicious"] ;
111 -> 113 ;
114 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
113 -> 114 ;
115 [label="gini = 0.178\nsamples = 193\nvalue = [19, 174]\nclass = Malicious"] ;
113 -> 115 ;
116 [label="ifstatement <= 0.5\ngini = 0.5\nsamples = 4\nvalue = [2, 2]\nclass = Benign"] ;
110 -> 116 ;
117 [label="gini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
116 -> 117 ;
118 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
116 -> 118 ;
119 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
107 -> 119 ;
120 [label="emptystatement <= 0.5\ngini = 0.415\nsamples = 221\nvalue = [156, 65]\nclass = Benign"] ;
106 -> 120 ;
121 [label="formalparameterlist <= 0.5\ngini = 0.114\nsamples = 165\nvalue = [155, 10]\nclass = Benign"] ;
120 -> 121 ;
122 [label="gini = 0.0\nsamples = 127\nvalue = [127, 0]\nclass = Benign"] ;
121 -> 122 ;
123 [label="ifstatement <= 0.5\ngini = 0.388\nsamples = 38\nvalue = [28, 10]\nclass = Benign"] ;
121 -> 123 ;
124 [label="arrayliteral <= 0.5\ngini = 0.494\nsamples = 18\nvalue = [8, 10]\nclass = Malicious"] ;
123 -> 124 ;
125 [label="gini = 0.484\nsamples = 17\nvalue = [7, 10]\nclass = Malicious"] ;
124 -> 125 ;
126 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
124 -> 126 ;
127 [label="gini = 0.0\nsamples = 20\nvalue = [20, 0]\nclass = Benign"] ;
123 -> 127 ;
128 [label="block <= 0.5\ngini = 0.035\nsamples = 56\nvalue = [1, 55]\nclass = Malicious"] ;
120 -> 128 ;
129 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
128 -> 129 ;
130 [label="gini = 0.0\nsamples = 55\nvalue = [0, 55]\nclass = Malicious"] ;
128 -> 130 ;
131 [label="statementlist <= 0.5\ngini = 0.129\nsamples = 1825\nvalue = [126, 1699]\nclass = Malicious"] ;
105 -> 131 ;
132 [label="formalparameterlist <= 0.5\ngini = 0.038\nsamples = 875\nvalue = [17, 858]\nclass = Malicious"] ;
131 -> 132 ;
133 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
132 -> 133 ;
134 [label="ifstatement <= 0.5\ngini = 0.036\nsamples = 874\nvalue = [16, 858]\nclass = Malicious"] ;
132 -> 134 ;
135 [label="gini = 0.0\nsamples = 14\nvalue = [0, 14]\nclass = Malicious"] ;
134 -> 135 ;
136 [label="gini = 0.037\nsamples = 860\nvalue = [16, 844]\nclass = Malicious"] ;
134 -> 136 ;
137 [label="identifiername <= 0.5\ngini = 0.203\nsamples = 950\nvalue = [109, 841]\nclass = Malicious"] ;
131 -> 137 ;
138 [label="gini = 0.0\nsamples = 228\nvalue = [0, 228]\nclass = Malicious"] ;
137 -> 138 ;
139 [label="formalparameterlist <= 0.5\ngini = 0.256\nsamples = 722\nvalue = [109, 613]\nclass = Malicious"] ;
137 -> 139 ;
140 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
139 -> 140 ;
141 [label="arrayliteral <= 0.5\ngini = 0.253\nsamples = 720\nvalue = [107, 613]\nclass = Malicious"] ;
139 -> 141 ;
142 [label="emptystatement <= 0.5\ngini = 0.251\nsamples = 719\nvalue = [106, 613]\nclass = Malicious"] ;
141 -> 142 ;
143 [label="gini = 0.25\nsamples = 717\nvalue = [105, 612]\nclass = Malicious"] ;
142 -> 143 ;
144 [label="trystatement <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
142 -> 144 ;
145 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
144 -> 145 ;
146 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
144 -> 146 ;
147 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
141 -> 147 ;
148 [label="assignmentoperator <= 0.5\ngini = 0.481\nsamples = 273\nvalue = [110, 163]\nclass = Malicious"] ;
104 -> 148 ;
149 [label="emptystatement <= 0.5\ngini = 0.216\nsamples = 122\nvalue = [107, 15]\nclass = Benign"] ;
148 -> 149 ;
150 [label="gini = 0.0\nsamples = 107\nvalue = [107, 0]\nclass = Benign"] ;
149 -> 150 ;
151 [label="gini = 0.0\nsamples = 15\nvalue = [0, 15]\nclass = Malicious"] ;
149 -> 151 ;
152 [label="ifstatement <= 0.5\ngini = 0.039\nsamples = 151\nvalue = [3, 148]\nclass = Malicious"] ;
148 -> 152 ;
153 [label="emptystatement <= 0.5\ngini = 0.014\nsamples = 142\nvalue = [1, 141]\nclass = Malicious"] ;
152 -> 153 ;
154 [label="formalparameterlist <= 0.5\ngini = 0.077\nsamples = 25\nvalue = [1, 24]\nclass = Malicious"] ;
153 -> 154 ;
155 [label="statementlist <= 0.5\ngini = 0.124\nsamples = 15\nvalue = [1, 14]\nclass = Malicious"] ;
154 -> 155 ;
156 [label="gini = 0.0\nsamples = 7\nvalue = [0, 7]\nclass = Malicious"] ;
155 -> 156 ;
157 [label="arrayliteral <= 0.5\ngini = 0.219\nsamples = 8\nvalue = [1, 7]\nclass = Malicious"] ;
155 -> 157 ;
158 [label="gini = 0.245\nsamples = 7\nvalue = [1, 6]\nclass = Malicious"] ;
157 -> 158 ;
159 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
157 -> 159 ;
160 [label="gini = 0.0\nsamples = 10\nvalue = [0, 10]\nclass = Malicious"] ;
154 -> 160 ;
161 [label="gini = 0.0\nsamples = 117\nvalue = [0, 117]\nclass = Malicious"] ;
153 -> 161 ;
162 [label="emptystatement <= 0.5\ngini = 0.346\nsamples = 9\nvalue = [2, 7]\nclass = Malicious"] ;
152 -> 162 ;
163 [label="formalparameterarg <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [2, 1]\nclass = Benign"] ;
162 -> 163 ;
164 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
163 -> 164 ;
165 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
163 -> 165 ;
166 [label="gini = 0.0\nsamples = 6\nvalue = [0, 6]\nclass = Malicious"] ;
162 -> 166 ;
167 [label="functionbody <= 0.5\ngini = 0.032\nsamples = 3772\nvalue = [61, 3711]\nclass = Malicious"] ;
103 -> 167 ;
168 [label="do_for_while_statement <= 0.5\ngini = 0.001\nsamples = 2878\nvalue = [2, 2876]\nclass = Malicious"] ;
167 -> 168 ;
169 [label="ifstatement <= 0.5\ngini = 0.003\nsamples = 1298\nvalue = [2, 1296]\nclass = Malicious"] ;
168 -> 169 ;
170 [label="identifiername <= 0.5\ngini = 0.165\nsamples = 11\nvalue = [1, 10]\nclass = Malicious"] ;
169 -> 170 ;
171 [label="gini = 0.0\nsamples = 10\nvalue = [0, 10]\nclass = Malicious"] ;
170 -> 171 ;
172 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
170 -> 172 ;
173 [label="block <= 0.5\ngini = 0.002\nsamples = 1287\nvalue = [1, 1286]\nclass = Malicious"] ;
169 -> 173 ;
174 [label="gini = 0.0\nsamples = 766\nvalue = [0, 766]\nclass = Malicious"] ;
173 -> 174 ;
175 [label="emptystatement <= 0.5\ngini = 0.004\nsamples = 521\nvalue = [1, 520]\nclass = Malicious"] ;
173 -> 175 ;
176 [label="identifiername <= 0.5\ngini = 0.008\nsamples = 242\nvalue = [1, 241]\nclass = Malicious"] ;
175 -> 176 ;
177 [label="gini = 0.0\nsamples = 25\nvalue = [0, 25]\nclass = Malicious"] ;
176 -> 177 ;
178 [label="switchstatement <= 0.5\ngini = 0.009\nsamples = 217\nvalue = [1, 216]\nclass = Malicious"] ;
176 -> 178 ;
179 [label="gini = 0.009\nsamples = 213\nvalue = [1, 212]\nclass = Malicious"] ;
178 -> 179 ;
180 [label="gini = 0.0\nsamples = 4\nvalue = [0, 4]\nclass = Malicious"] ;
178 -> 180 ;
181 [label="gini = 0.0\nsamples = 279\nvalue = [0, 279]\nclass = Malicious"] ;
175 -> 181 ;
182 [label="gini = 0.0\nsamples = 1580\nvalue = [0, 1580]\nclass = Malicious"] ;
168 -> 182 ;
183 [label="returnstatement <= 0.5\ngini = 0.123\nsamples = 894\nvalue = [59, 835]\nclass = Malicious"] ;
167 -> 183 ;
184 [label="emptystatement <= 0.5\ngini = 0.465\nsamples = 144\nvalue = [53, 91]\nclass = Malicious"] ;
183 -> 184 ;
185 [label="gini = 0.0\nsamples = 53\nvalue = [53, 0]\nclass = Benign"] ;
184 -> 185 ;
186 [label="gini = 0.0\nsamples = 91\nvalue = [0, 91]\nclass = Malicious"] ;
184 -> 186 ;
187 [label="breakstatement <= 0.5\ngini = 0.016\nsamples = 750\nvalue = [6, 744]\nclass = Malicious"] ;
183 -> 187 ;
188 [label="identifiername <= 0.5\ngini = 0.011\nsamples = 748\nvalue = [4, 744]\nclass = Malicious"] ;
187 -> 188 ;
189 [label="gini = 0.0\nsamples = 532\nvalue = [0, 532]\nclass = Malicious"] ;
188 -> 189 ;
190 [label="assignmentoperator <= 0.5\ngini = 0.036\nsamples = 216\nvalue = [4, 212]\nclass = Malicious"] ;
188 -> 190 ;
191 [label="formalparameterlist <= 0.5\ngini = 0.5\nsamples = 6\nvalue = [3, 3]\nclass = Benign"] ;
190 -> 191 ;
192 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
191 -> 192 ;
193 [label="statementlist <= 0.5\ngini = 0.375\nsamples = 4\nvalue = [1, 3]\nclass = Malicious"] ;
191 -> 193 ;
194 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
193 -> 194 ;
195 [label="gini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
193 -> 195 ;
196 [label="formalparameterarg <= 0.5\ngini = 0.009\nsamples = 210\nvalue = [1, 209]\nclass = Malicious"] ;
190 -> 196 ;
197 [label="gini = 0.0\nsamples = 209\nvalue = [0, 209]\nclass = Malicious"] ;
196 -> 197 ;
198 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
196 -> 198 ;
199 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
187 -> 199 ;
200 [label="do_for_while_statement <= 0.5\ngini = 0.249\nsamples = 10731\nvalue = [9168, 1563]\nclass = Benign"] ;
0 -> 200 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
201 [label="trystatement <= 0.5\ngini = 0.001\nsamples = 8944\nvalue = [8941, 3]\nclass = Benign"] ;
200 -> 201 ;
202 [label="gini = 0.0\nsamples = 8838\nvalue = [8838, 0]\nclass = Benign"] ;
201 -> 202 ;
203 [label="functionbody <= 0.5\ngini = 0.055\nsamples = 106\nvalue = [103, 3]\nclass = Benign"] ;
201 -> 203 ;
204 [label="arrayliteral <= 0.5\ngini = 0.094\nsamples = 61\nvalue = [58, 3]\nclass = Benign"] ;
203 -> 204 ;
205 [label="variablestatement <= 0.5\ngini = 0.26\nsamples = 13\nvalue = [11, 2]\nclass = Benign"] ;
204 -> 205 ;
206 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
205 -> 206 ;
207 [label="ifstatement <= 0.5\ngini = 0.48\nsamples = 5\nvalue = [3, 2]\nclass = Benign"] ;
205 -> 207 ;
208 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
207 -> 208 ;
209 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
207 -> 209 ;
210 [label="ifstatement <= 0.5\ngini = 0.041\nsamples = 48\nvalue = [47, 1]\nclass = Benign"] ;
204 -> 210 ;
211 [label="gini = 0.0\nsamples = 23\nvalue = [23, 0]\nclass = Benign"] ;
210 -> 211 ;
212 [label="variabledeclarationlist <= 0.5\ngini = 0.077\nsamples = 25\nvalue = [24, 1]\nclass = Benign"] ;
210 -> 212 ;
213 [label="gini = 0.0\nsamples = 10\nvalue = [10, 0]\nclass = Benign"] ;
212 -> 213 ;
214 [label="elementlist <= 0.5\ngini = 0.124\nsamples = 15\nvalue = [14, 1]\nclass = Benign"] ;
212 -> 214 ;
215 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
214 -> 215 ;
216 [label="gini = 0.133\nsamples = 14\nvalue = [13, 1]\nclass = Benign"] ;
214 -> 216 ;
217 [label="gini = 0.0\nsamples = 45\nvalue = [45, 0]\nclass = Benign"] ;
203 -> 217 ;
218 [label="identifiername <= 0.5\ngini = 0.222\nsamples = 1787\nvalue = [227, 1560]\nclass = Malicious"] ;
200 -> 218 ;
219 [label="gini = 0.0\nsamples = 1500\nvalue = [0, 1500]\nclass = Malicious"] ;
218 -> 219 ;
220 [label="catchproduction <= 0.5\ngini = 0.331\nsamples = 287\nvalue = [227, 60]\nclass = Benign"] ;
218 -> 220 ;
221 [label="property_rules <= 0.5\ngini = 0.01\nsamples = 204\nvalue = [203, 1]\nclass = Benign"] ;
220 -> 221 ;
222 [label="emptystatement <= 0.5\ngini = 0.117\nsamples = 16\nvalue = [15, 1]\nclass = Benign"] ;
221 -> 222 ;
223 [label="gini = 0.0\nsamples = 15\nvalue = [15, 0]\nclass = Benign"] ;
222 -> 223 ;
224 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
222 -> 224 ;
225 [label="gini = 0.0\nsamples = 188\nvalue = [188, 0]\nclass = Benign"] ;
221 -> 225 ;
226 [label="assignmentoperator <= 0.5\ngini = 0.411\nsamples = 83\nvalue = [24, 59]\nclass = Malicious"] ;
220 -> 226 ;
227 [label="breakstatement <= 0.5\ngini = 0.432\nsamples = 19\nvalue = [13, 6]\nclass = Benign"] ;
226 -> 227 ;
228 [label="gini = 0.0\nsamples = 13\nvalue = [13, 0]\nclass = Benign"] ;
227 -> 228 ;
229 [label="gini = 0.0\nsamples = 6\nvalue = [0, 6]\nclass = Malicious"] ;
227 -> 229 ;
230 [label="defaultclause <= 0.5\ngini = 0.285\nsamples = 64\nvalue = [11, 53]\nclass = Malicious"] ;
226 -> 230 ;
231 [label="breakstatement <= 0.5\ngini = 0.418\nsamples = 37\nvalue = [11, 26]\nclass = Malicious"] ;
230 -> 231 ;
232 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
231 -> 232 ;
233 [label="emptystatement <= 0.5\ngini = 0.133\nsamples = 28\nvalue = [2, 26]\nclass = Malicious"] ;
231 -> 233 ;
234 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
233 -> 234 ;
235 [label="gini = 0.0\nsamples = 26\nvalue = [0, 26]\nclass = Malicious"] ;
233 -> 235 ;
236 [label="gini = 0.0\nsamples = 27\nvalue = [0, 27]\nclass = Malicious"] ;
230 -> 236 ;
}
