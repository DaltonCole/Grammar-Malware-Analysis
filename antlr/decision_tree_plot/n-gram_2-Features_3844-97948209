digraph Tree {
node [shape=box] ;
0 [label="expression_statement-objectliteral <= 0.5\ngini = 0.5\nsamples = 27000\nvalue = [13465, 13535]\nclass = Malicious"] ;
1 [label="literal-arguments <= 0.5\ngini = 0.387\nsamples = 16219\nvalue = [4249, 11970]\nclass = Malicious"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="identifiername-identifiername <= 0.5\ngini = 0.471\nsamples = 11163\nvalue = [4243, 6920]\nclass = Malicious"] ;
1 -> 2 ;
3 [label="expression_statement-arguments <= 0.5\ngini = 0.433\nsamples = 10122\nvalue = [3208, 6914]\nclass = Malicious"] ;
2 -> 3 ;
4 [label="expression_statement-identifiername <= 0.5\ngini = 0.493\nsamples = 5472\nvalue = [2406, 3066]\nclass = Malicious"] ;
3 -> 4 ;
5 [label="statement-variablestatement <= 0.5\ngini = 0.461\nsamples = 4454\nvalue = [1605, 2849]\nclass = Malicious"] ;
4 -> 5 ;
6 [label="returnstatement-expressionsequence <= 0.5\ngini = 0.393\nsamples = 3253\nvalue = [874, 2379]\nclass = Malicious"] ;
5 -> 6 ;
7 [label="sourceelement-statement <= 0.5\ngini = 0.434\nsamples = 2746\nvalue = [874, 1872]\nclass = Malicious"] ;
6 -> 7 ;
8 [label="gini = 0.395\nsamples = 2566\nvalue = [696, 1870]\nclass = Malicious"] ;
7 -> 8 ;
9 [label="arguments-eos <= 0.5\ngini = 0.022\nsamples = 180\nvalue = [178, 2]\nclass = Benign"] ;
7 -> 9 ;
10 [label="gini = 0.0\nsamples = 178\nvalue = [178, 0]\nclass = Benign"] ;
9 -> 10 ;
11 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
9 -> 11 ;
12 [label="gini = 0.0\nsamples = 507\nvalue = [0, 507]\nclass = Malicious"] ;
6 -> 12 ;
13 [label="arguments-expression_statement <= 0.5\ngini = 0.476\nsamples = 1201\nvalue = [731, 470]\nclass = Benign"] ;
5 -> 13 ;
14 [label="gini = 0.0\nsamples = 730\nvalue = [730, 0]\nclass = Benign"] ;
13 -> 14 ;
15 [label="literal-expression_statement <= 0.5\ngini = 0.004\nsamples = 471\nvalue = [1, 470]\nclass = Malicious"] ;
13 -> 15 ;
16 [label="gini = 0.0\nsamples = 463\nvalue = [0, 463]\nclass = Malicious"] ;
15 -> 16 ;
17 [label="arguments-eos <= 0.5\ngini = 0.219\nsamples = 8\nvalue = [1, 7]\nclass = Malicious"] ;
15 -> 17 ;
18 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
17 -> 18 ;
19 [label="gini = 0.0\nsamples = 7\nvalue = [0, 7]\nclass = Malicious"] ;
17 -> 19 ;
20 [label="numericliteral-eos <= 0.5\ngini = 0.335\nsamples = 1018\nvalue = [801, 217]\nclass = Benign"] ;
4 -> 20 ;
21 [label="gini = 0.0\nsamples = 631\nvalue = [631, 0]\nclass = Benign"] ;
20 -> 21 ;
22 [label="variabledeclaration-expression_statement <= 0.5\ngini = 0.493\nsamples = 387\nvalue = [170, 217]\nclass = Malicious"] ;
20 -> 22 ;
23 [label="gini = 0.0\nsamples = 137\nvalue = [137, 0]\nclass = Benign"] ;
22 -> 23 ;
24 [label="identifiername-arguments <= 0.5\ngini = 0.229\nsamples = 250\nvalue = [33, 217]\nclass = Malicious"] ;
22 -> 24 ;
25 [label="gini = 0.0\nsamples = 17\nvalue = [17, 0]\nclass = Benign"] ;
24 -> 25 ;
26 [label="literal-expression_statement <= 0.5\ngini = 0.128\nsamples = 233\nvalue = [16, 217]\nclass = Malicious"] ;
24 -> 26 ;
27 [label="identifiername-expression_statement <= 0.5\ngini = 0.027\nsamples = 220\nvalue = [3, 217]\nclass = Malicious"] ;
26 -> 27 ;
28 [label="gini = 0.0\nsamples = 217\nvalue = [0, 217]\nclass = Malicious"] ;
27 -> 28 ;
29 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
27 -> 29 ;
30 [label="gini = 0.0\nsamples = 13\nvalue = [13, 0]\nclass = Benign"] ;
26 -> 30 ;
31 [label="variabledeclaration-expression_statement <= 0.5\ngini = 0.285\nsamples = 4650\nvalue = [802, 3848]\nclass = Malicious"] ;
3 -> 31 ;
32 [label="literal-expression_statement <= 0.5\ngini = 0.485\nsamples = 1058\nvalue = [622, 436]\nclass = Benign"] ;
31 -> 32 ;
33 [label="expression_statement-functionbody <= 0.5\ngini = 0.427\nsamples = 631\nvalue = [195, 436]\nclass = Malicious"] ;
32 -> 33 ;
34 [label="identifiername-expression_statement <= 0.5\ngini = 0.354\nsamples = 566\nvalue = [130, 436]\nclass = Malicious"] ;
33 -> 34 ;
35 [label="arguments-eos <= 0.5\ngini = 0.275\nsamples = 522\nvalue = [86, 436]\nclass = Malicious"] ;
34 -> 35 ;
36 [label="numericliteral-expression_statement <= 0.5\ngini = 0.21\nsamples = 495\nvalue = [59, 436]\nclass = Malicious"] ;
35 -> 36 ;
37 [label="expression_statement-identifiername <= 0.5\ngini = 0.173\nsamples = 482\nvalue = [46, 436]\nclass = Malicious"] ;
36 -> 37 ;
38 [label="numericliteral-statement <= 0.5\ngini = 0.371\nsamples = 179\nvalue = [44, 135]\nclass = Malicious"] ;
37 -> 38 ;
39 [label="gini = 0.0\nsamples = 44\nvalue = [44, 0]\nclass = Benign"] ;
38 -> 39 ;
40 [label="gini = 0.0\nsamples = 135\nvalue = [0, 135]\nclass = Malicious"] ;
38 -> 40 ;
41 [label="arguments-identifiername <= 0.5\ngini = 0.013\nsamples = 303\nvalue = [2, 301]\nclass = Malicious"] ;
37 -> 41 ;
42 [label="literal-numericliteral <= 0.5\ngini = 0.031\nsamples = 129\nvalue = [2, 127]\nclass = Malicious"] ;
41 -> 42 ;
43 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
42 -> 43 ;
44 [label="gini = 0.0\nsamples = 127\nvalue = [0, 127]\nclass = Malicious"] ;
42 -> 44 ;
45 [label="gini = 0.0\nsamples = 174\nvalue = [0, 174]\nclass = Malicious"] ;
41 -> 45 ;
46 [label="gini = 0.0\nsamples = 13\nvalue = [13, 0]\nclass = Benign"] ;
36 -> 46 ;
47 [label="gini = 0.0\nsamples = 27\nvalue = [27, 0]\nclass = Benign"] ;
35 -> 47 ;
48 [label="gini = 0.0\nsamples = 44\nvalue = [44, 0]\nclass = Benign"] ;
34 -> 48 ;
49 [label="gini = 0.0\nsamples = 65\nvalue = [65, 0]\nclass = Benign"] ;
33 -> 49 ;
50 [label="gini = 0.0\nsamples = 427\nvalue = [427, 0]\nclass = Benign"] ;
32 -> 50 ;
51 [label="expression_statement-functionbody <= 0.5\ngini = 0.095\nsamples = 3592\nvalue = [180, 3412]\nclass = Malicious"] ;
31 -> 51 ;
52 [label="expressionstatement-expressionsequence <= 0.5\ngini = 0.052\nsamples = 3344\nvalue = [90, 3254]\nclass = Malicious"] ;
51 -> 52 ;
53 [label="literal-statement <= 0.5\ngini = 0.133\nsamples = 14\nvalue = [13, 1]\nclass = Benign"] ;
52 -> 53 ;
54 [label="gini = 0.0\nsamples = 13\nvalue = [13, 0]\nclass = Benign"] ;
53 -> 54 ;
55 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
53 -> 55 ;
56 [label="arguments-expression_statement <= 0.5\ngini = 0.045\nsamples = 3330\nvalue = [77, 3253]\nclass = Malicious"] ;
52 -> 56 ;
57 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
56 -> 57 ;
58 [label="eos-arguments <= 0.5\ngini = 0.042\nsamples = 3324\nvalue = [71, 3253]\nclass = Malicious"] ;
56 -> 58 ;
59 [label="literal-expression_statement <= 0.5\ngini = 0.038\nsamples = 3317\nvalue = [65, 3252]\nclass = Malicious"] ;
58 -> 59 ;
60 [label="expression_statement-identifiername <= 0.5\ngini = 0.226\nsamples = 293\nvalue = [38, 255]\nclass = Malicious"] ;
59 -> 60 ;
61 [label="assignmentoperator-expression_statement <= 0.5\ngini = 0.436\nsamples = 53\nvalue = [36, 17]\nclass = Benign"] ;
60 -> 61 ;
62 [label="arguments-identifiername <= 0.5\ngini = 0.053\nsamples = 37\nvalue = [36, 1]\nclass = Benign"] ;
61 -> 62 ;
63 [label="gini = 0.0\nsamples = 36\nvalue = [36, 0]\nclass = Benign"] ;
62 -> 63 ;
64 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
62 -> 64 ;
65 [label="gini = 0.0\nsamples = 16\nvalue = [0, 16]\nclass = Malicious"] ;
61 -> 65 ;
66 [label="literal-numericliteral <= 0.5\ngini = 0.017\nsamples = 240\nvalue = [2, 238]\nclass = Malicious"] ;
60 -> 66 ;
67 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
66 -> 67 ;
68 [label="variabledeclaration-eos <= 0.5\ngini = 0.008\nsamples = 239\nvalue = [1, 238]\nclass = Malicious"] ;
66 -> 68 ;
69 [label="gini = 0.0\nsamples = 238\nvalue = [0, 238]\nclass = Malicious"] ;
68 -> 69 ;
70 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
68 -> 70 ;
71 [label="identifiername-expression_statement <= 0.5\ngini = 0.018\nsamples = 3024\nvalue = [27, 2997]\nclass = Malicious"] ;
59 -> 71 ;
72 [label="withstatement-expressionsequence <= 0.5\ngini = 0.01\nsamples = 2899\nvalue = [14, 2885]\nclass = Malicious"] ;
71 -> 72 ;
73 [label="identifiername-eos <= 0.5\ngini = 0.009\nsamples = 2898\nvalue = [13, 2885]\nclass = Malicious"] ;
72 -> 73 ;
74 [label="catchproduction-block <= 0.5\ngini = 0.008\nsamples = 2896\nvalue = [12, 2884]\nclass = Malicious"] ;
73 -> 74 ;
75 [label="numericliteral-eos <= 0.5\ngini = 0.008\nsamples = 2893\nvalue = [11, 2882]\nclass = Malicious"] ;
74 -> 75 ;
76 [label="block-statementlist <= 0.5\ngini = 0.015\nsamples = 1474\nvalue = [11, 1463]\nclass = Malicious"] ;
75 -> 76 ;
77 [label="expression_statement-identifiername <= 0.5\ngini = 0.009\nsamples = 1469\nvalue = [7, 1462]\nclass = Malicious"] ;
76 -> 77 ;
78 [label="expression_statement-eos <= 0.5\ngini = 0.002\nsamples = 1069\nvalue = [1, 1068]\nclass = Malicious"] ;
77 -> 78 ;
79 [label="gini = 0.003\nsamples = 684\nvalue = [1, 683]\nclass = Malicious"] ;
78 -> 79 ;
80 [label="gini = 0.0\nsamples = 385\nvalue = [0, 385]\nclass = Malicious"] ;
78 -> 80 ;
81 [label="formalparameterlist-formalparameterarg <= 0.5\ngini = 0.03\nsamples = 400\nvalue = [6, 394]\nclass = Malicious"] ;
77 -> 81 ;
82 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
81 -> 82 ;
83 [label="gini = 0.0\nsamples = 394\nvalue = [0, 394]\nclass = Malicious"] ;
81 -> 83 ;
84 [label="expression_statement-expressionsequence <= 0.5\ngini = 0.32\nsamples = 5\nvalue = [4, 1]\nclass = Benign"] ;
76 -> 84 ;
85 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
84 -> 85 ;
86 [label="literal-numericliteral <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
84 -> 86 ;
87 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
86 -> 87 ;
88 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
86 -> 88 ;
89 [label="gini = 0.0\nsamples = 1419\nvalue = [0, 1419]\nclass = Malicious"] ;
75 -> 89 ;
90 [label="emptystatement-sourceelement <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
74 -> 90 ;
91 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
90 -> 91 ;
92 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
90 -> 92 ;
93 [label="arguments-identifiername <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
73 -> 93 ;
94 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
93 -> 94 ;
95 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
93 -> 95 ;
96 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
72 -> 96 ;
97 [label="expression_statement-expressionsequence <= 0.5\ngini = 0.186\nsamples = 125\nvalue = [13, 112]\nclass = Malicious"] ;
71 -> 97 ;
98 [label="gini = 0.0\nsamples = 11\nvalue = [11, 0]\nclass = Benign"] ;
97 -> 98 ;
99 [label="literal-eos <= 0.5\ngini = 0.034\nsamples = 114\nvalue = [2, 112]\nclass = Malicious"] ;
97 -> 99 ;
100 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
99 -> 100 ;
101 [label="gini = 0.0\nsamples = 112\nvalue = [0, 112]\nclass = Malicious"] ;
99 -> 101 ;
102 [label="identifiername-statement <= 0.5\ngini = 0.245\nsamples = 7\nvalue = [6, 1]\nclass = Benign"] ;
58 -> 102 ;
103 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
102 -> 103 ;
104 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
102 -> 104 ;
105 [label="expression_statement-assignmentoperator <= 0.5\ngini = 0.462\nsamples = 248\nvalue = [90, 158]\nclass = Malicious"] ;
51 -> 105 ;
106 [label="emptystatement-sourceelement <= 0.5\ngini = 0.022\nsamples = 89\nvalue = [88, 1]\nclass = Benign"] ;
105 -> 106 ;
107 [label="gini = 0.0\nsamples = 88\nvalue = [88, 0]\nclass = Benign"] ;
106 -> 107 ;
108 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
106 -> 108 ;
109 [label="literal-eos <= 0.5\ngini = 0.025\nsamples = 159\nvalue = [2, 157]\nclass = Malicious"] ;
105 -> 109 ;
110 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
109 -> 110 ;
111 [label="formalparameterarg-formalparameterarg <= 0.5\ngini = 0.013\nsamples = 158\nvalue = [1, 157]\nclass = Malicious"] ;
109 -> 111 ;
112 [label="gini = 0.0\nsamples = 156\nvalue = [0, 156]\nclass = Malicious"] ;
111 -> 112 ;
113 [label="eos-catchproduction <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
111 -> 113 ;
114 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
113 -> 114 ;
115 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
113 -> 115 ;
116 [label="breakstatement-eos <= 0.5\ngini = 0.011\nsamples = 1041\nvalue = [1035, 6]\nclass = Benign"] ;
2 -> 116 ;
117 [label="expression_statement-assignmentoperator <= 0.5\ngini = 0.004\nsamples = 1037\nvalue = [1035, 2]\nclass = Benign"] ;
116 -> 117 ;
118 [label="numericliteral-expression_statement <= 0.5\ngini = 0.002\nsamples = 1034\nvalue = [1033, 1]\nclass = Benign"] ;
117 -> 118 ;
119 [label="gini = 0.0\nsamples = 921\nvalue = [921, 0]\nclass = Benign"] ;
118 -> 119 ;
120 [label="literal-expression_statement <= 0.5\ngini = 0.018\nsamples = 113\nvalue = [112, 1]\nclass = Benign"] ;
118 -> 120 ;
121 [label="expression_statement-arrayliteral <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
120 -> 121 ;
122 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
121 -> 122 ;
123 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
121 -> 123 ;
124 [label="gini = 0.0\nsamples = 111\nvalue = [111, 0]\nclass = Benign"] ;
120 -> 124 ;
125 [label="functionbody-sourceelements <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [2, 1]\nclass = Benign"] ;
117 -> 125 ;
126 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
125 -> 126 ;
127 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
125 -> 127 ;
128 [label="gini = 0.0\nsamples = 4\nvalue = [0, 4]\nclass = Malicious"] ;
116 -> 128 ;
129 [label="eos-arguments <= 0.5\ngini = 0.002\nsamples = 5056\nvalue = [6, 5050]\nclass = Malicious"] ;
1 -> 129 ;
130 [label="arguments-expression_statement <= 0.5\ngini = 0.001\nsamples = 5053\nvalue = [3, 5050]\nclass = Malicious"] ;
129 -> 130 ;
131 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
130 -> 131 ;
132 [label="literal-eos <= 0.5\ngini = 0.0\nsamples = 5051\nvalue = [1, 5050]\nclass = Malicious"] ;
130 -> 132 ;
133 [label="functionbody-sourceelements <= 0.5\ngini = 0.012\nsamples = 172\nvalue = [1, 171]\nclass = Malicious"] ;
132 -> 133 ;
134 [label="gini = 0.0\nsamples = 171\nvalue = [0, 171]\nclass = Malicious"] ;
133 -> 134 ;
135 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
133 -> 135 ;
136 [label="gini = 0.0\nsamples = 4879\nvalue = [0, 4879]\nclass = Malicious"] ;
132 -> 136 ;
137 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
129 -> 137 ;
138 [label="do_for_while_statement-expressionsequence <= 0.5\ngini = 0.248\nsamples = 10781\nvalue = [9216, 1565]\nclass = Benign"] ;
0 -> 138 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
139 [label="eos-finallyproduction <= 0.5\ngini = 0.007\nsamples = 9210\nvalue = [9179, 31]\nclass = Benign"] ;
138 -> 139 ;
140 [label="literal-arguments <= 0.5\ngini = 0.001\nsamples = 9182\nvalue = [9179, 3]\nclass = Benign"] ;
139 -> 140 ;
141 [label="gini = 0.0\nsamples = 9167\nvalue = [9167, 0]\nclass = Benign"] ;
140 -> 141 ;
142 [label="literal-expressionsequence <= 0.5\ngini = 0.32\nsamples = 15\nvalue = [12, 3]\nclass = Benign"] ;
140 -> 142 ;
143 [label="gini = 0.0\nsamples = 12\nvalue = [12, 0]\nclass = Benign"] ;
142 -> 143 ;
144 [label="gini = 0.0\nsamples = 3\nvalue = [0, 3]\nclass = Malicious"] ;
142 -> 144 ;
145 [label="gini = 0.0\nsamples = 28\nvalue = [0, 28]\nclass = Malicious"] ;
139 -> 145 ;
146 [label="literal-expressionsequence <= 0.5\ngini = 0.046\nsamples = 1571\nvalue = [37, 1534]\nclass = Malicious"] ;
138 -> 146 ;
147 [label="statement-emptystatement <= 0.5\ngini = 0.214\nsamples = 41\nvalue = [36, 5]\nclass = Benign"] ;
146 -> 147 ;
148 [label="gini = 0.0\nsamples = 36\nvalue = [36, 0]\nclass = Benign"] ;
147 -> 148 ;
149 [label="gini = 0.0\nsamples = 5\nvalue = [0, 5]\nclass = Malicious"] ;
147 -> 149 ;
150 [label="caseclause-expressionsequence <= 0.5\ngini = 0.001\nsamples = 1530\nvalue = [1, 1529]\nclass = Malicious"] ;
146 -> 150 ;
151 [label="gini = 0.0\nsamples = 1529\nvalue = [0, 1529]\nclass = Malicious"] ;
150 -> 151 ;
152 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
150 -> 152 ;
}
