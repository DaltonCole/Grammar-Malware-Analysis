digraph Tree {
node [shape=box] ;
0 [label="objectliteral <= 0.5\ngini = 0.5\nsamples = 27000\nvalue = [13513, 13487]\nclass = Benign"] ;
1 [label="memberindexexpression <= 0.5\ngini = 0.39\nsamples = 16268\nvalue = [4324, 11944]\nclass = Malicious"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="newexpression <= 0.5\ngini = 0.481\nsamples = 9743\nvalue = [3925, 5818]\nclass = Malicious"] ;
1 -> 2 ;
3 [label="sourceelement <= 0.5\ngini = 0.498\nsamples = 7712\nvalue = [3621, 4091]\nclass = Malicious"] ;
2 -> 3 ;
4 [label="gini = 0.399\nsamples = 2590\nvalue = [713, 1877]\nclass = Malicious"] ;
3 -> 4 ;
5 [label="numericliteral <= 0.5\ngini = 0.491\nsamples = 5122\nvalue = [2908, 2214]\nclass = Benign"] ;
3 -> 5 ;
6 [label="identifierexpression <= 0.5\ngini = 0.371\nsamples = 2853\nvalue = [2151, 702]\nclass = Benign"] ;
5 -> 6 ;
7 [label="arguments <= 0.5\ngini = 0.499\nsamples = 910\nvalue = [438, 472]\nclass = Malicious"] ;
6 -> 7 ;
8 [label="gini = 0.0\nsamples = 436\nvalue = [436, 0]\nclass = Benign"] ;
7 -> 8 ;
9 [label="parenthesizedexpression <= 0.5\ngini = 0.008\nsamples = 474\nvalue = [2, 472]\nclass = Malicious"] ;
7 -> 9 ;
10 [label="gini = 0.0\nsamples = 472\nvalue = [0, 472]\nclass = Malicious"] ;
9 -> 10 ;
11 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
9 -> 11 ;
12 [label="assignmentexpression <= 0.5\ngini = 0.209\nsamples = 1943\nvalue = [1713, 230]\nclass = Benign"] ;
6 -> 12 ;
13 [label="functionexpression <= 0.5\ngini = 0.281\nsamples = 1228\nvalue = [1020, 208]\nclass = Benign"] ;
12 -> 13 ;
14 [label="ifstatement <= 0.5\ngini = 0.379\nsamples = 772\nvalue = [576, 196]\nclass = Benign"] ;
13 -> 14 ;
15 [label="literalexpression <= 0.5\ngini = 0.402\nsamples = 702\nvalue = [506, 196]\nclass = Benign"] ;
14 -> 15 ;
16 [label="gini = 0.0\nsamples = 56\nvalue = [56, 0]\nclass = Benign"] ;
15 -> 16 ;
17 [label="arrayliteral <= 0.5\ngini = 0.423\nsamples = 646\nvalue = [450, 196]\nclass = Benign"] ;
15 -> 17 ;
18 [label="assignmentoperator <= 0.5\ngini = 0.439\nsamples = 602\nvalue = [406, 196]\nclass = Benign"] ;
17 -> 18 ;
19 [label="memberdotexpression <= 0.5\ngini = 0.433\nsamples = 593\nvalue = [405, 188]\nclass = Benign"] ;
18 -> 19 ;
20 [label="additiveexpression <= 0.5\ngini = 0.266\nsamples = 133\nvalue = [112, 21]\nclass = Benign"] ;
19 -> 20 ;
21 [label="gini = 0.0\nsamples = 112\nvalue = [112, 0]\nclass = Benign"] ;
20 -> 21 ;
22 [label="gini = 0.0\nsamples = 21\nvalue = [0, 21]\nclass = Malicious"] ;
20 -> 22 ;
23 [label="variabledeclarationlist <= 0.5\ngini = 0.462\nsamples = 460\nvalue = [293, 167]\nclass = Benign"] ;
19 -> 23 ;
24 [label="additiveexpression <= 0.5\ngini = 0.477\nsamples = 422\nvalue = [256, 166]\nclass = Benign"] ;
23 -> 24 ;
25 [label="parenthesizedexpression <= 0.5\ngini = 0.479\nsamples = 417\nvalue = [251, 166]\nclass = Benign"] ;
24 -> 25 ;
26 [label="logicalandexpression <= 0.5\ngini = 0.48\nsamples = 415\nvalue = [249, 166]\nclass = Benign"] ;
25 -> 26 ;
27 [label="logicalorexpression <= 0.5\ngini = 0.481\nsamples = 413\nvalue = [247, 166]\nclass = Benign"] ;
26 -> 27 ;
28 [label="statementlist <= 0.5\ngini = 0.482\nsamples = 411\nvalue = [245, 166]\nclass = Benign"] ;
27 -> 28 ;
29 [label="gini = 0.482\nsamples = 410\nvalue = [244, 166]\nclass = Benign"] ;
28 -> 29 ;
30 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
28 -> 30 ;
31 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
27 -> 31 ;
32 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
26 -> 32 ;
33 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
25 -> 33 ;
34 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
24 -> 34 ;
35 [label="expressionstatement <= 0.5\ngini = 0.051\nsamples = 38\nvalue = [37, 1]\nclass = Benign"] ;
23 -> 35 ;
36 [label="gini = 0.0\nsamples = 18\nvalue = [18, 0]\nclass = Benign"] ;
35 -> 36 ;
37 [label="additiveexpression <= 0.5\ngini = 0.095\nsamples = 20\nvalue = [19, 1]\nclass = Benign"] ;
35 -> 37 ;
38 [label="statementlist <= 0.5\ngini = 0.165\nsamples = 11\nvalue = [10, 1]\nclass = Benign"] ;
37 -> 38 ;
39 [label="gini = 0.245\nsamples = 7\nvalue = [6, 1]\nclass = Benign"] ;
38 -> 39 ;
40 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
38 -> 40 ;
41 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
37 -> 41 ;
42 [label="identifiername <= 0.5\ngini = 0.198\nsamples = 9\nvalue = [1, 8]\nclass = Malicious"] ;
18 -> 42 ;
43 [label="gini = 0.0\nsamples = 8\nvalue = [0, 8]\nclass = Malicious"] ;
42 -> 43 ;
44 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
42 -> 44 ;
45 [label="gini = 0.0\nsamples = 44\nvalue = [44, 0]\nclass = Benign"] ;
17 -> 45 ;
46 [label="gini = 0.0\nsamples = 70\nvalue = [70, 0]\nclass = Benign"] ;
14 -> 46 ;
47 [label="assignmentoperatorexpression <= 0.5\ngini = 0.051\nsamples = 456\nvalue = [444, 12]\nclass = Benign"] ;
13 -> 47 ;
48 [label="gini = 0.0\nsamples = 442\nvalue = [442, 0]\nclass = Benign"] ;
47 -> 48 ;
49 [label="returnstatement <= 0.5\ngini = 0.245\nsamples = 14\nvalue = [2, 12]\nclass = Malicious"] ;
47 -> 49 ;
50 [label="gini = 0.0\nsamples = 5\nvalue = [0, 5]\nclass = Malicious"] ;
49 -> 50 ;
51 [label="gini = 0.346\nsamples = 9\nvalue = [2, 7]\nclass = Malicious"] ;
49 -> 51 ;
52 [label="returnstatement <= 0.5\ngini = 0.06\nsamples = 715\nvalue = [693, 22]\nclass = Benign"] ;
12 -> 52 ;
53 [label="emptystatement <= 0.5\ngini = 0.026\nsamples = 688\nvalue = [679, 9]\nclass = Benign"] ;
52 -> 53 ;
54 [label="assignmentoperator <= 0.5\ngini = 0.015\nsamples = 682\nvalue = [677, 5]\nclass = Benign"] ;
53 -> 54 ;
55 [label="gini = 0.0\nsamples = 602\nvalue = [602, 0]\nclass = Benign"] ;
54 -> 55 ;
56 [label="memberdotexpression <= 0.5\ngini = 0.117\nsamples = 80\nvalue = [75, 5]\nclass = Benign"] ;
54 -> 56 ;
57 [label="gini = 0.0\nsamples = 5\nvalue = [0, 5]\nclass = Malicious"] ;
56 -> 57 ;
58 [label="gini = 0.0\nsamples = 75\nvalue = [75, 0]\nclass = Benign"] ;
56 -> 58 ;
59 [label="thisexpression <= 0.5\ngini = 0.444\nsamples = 6\nvalue = [2, 4]\nclass = Malicious"] ;
53 -> 59 ;
60 [label="gini = 0.0\nsamples = 4\nvalue = [0, 4]\nclass = Malicious"] ;
59 -> 60 ;
61 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
59 -> 61 ;
62 [label="memberdotexpression <= 0.5\ngini = 0.499\nsamples = 27\nvalue = [14, 13]\nclass = Benign"] ;
52 -> 62 ;
63 [label="gini = 0.0\nsamples = 13\nvalue = [0, 13]\nclass = Malicious"] ;
62 -> 63 ;
64 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
62 -> 64 ;
65 [label="parenthesizedexpression <= 0.5\ngini = 0.445\nsamples = 2269\nvalue = [757, 1512]\nclass = Malicious"] ;
5 -> 65 ;
66 [label="arguments <= 0.5\ngini = 0.499\nsamples = 1323\nvalue = [697, 626]\nclass = Benign"] ;
65 -> 66 ;
67 [label="gini = 0.0\nsamples = 324\nvalue = [324, 0]\nclass = Benign"] ;
66 -> 67 ;
68 [label="functionbody <= 0.5\ngini = 0.468\nsamples = 999\nvalue = [373, 626]\nclass = Malicious"] ;
66 -> 68 ;
69 [label="block <= 0.5\ngini = 0.367\nsamples = 826\nvalue = [200, 626]\nclass = Malicious"] ;
68 -> 69 ;
70 [label="variablestatement <= 0.5\ngini = 0.332\nsamples = 793\nvalue = [167, 626]\nclass = Malicious"] ;
69 -> 70 ;
71 [label="equalityexpression <= 0.5\ngini = 0.451\nsamples = 401\nvalue = [138, 263]\nclass = Malicious"] ;
70 -> 71 ;
72 [label="identifiername <= 0.5\ngini = 0.499\nsamples = 262\nvalue = [138, 124]\nclass = Benign"] ;
71 -> 72 ;
73 [label="gini = 0.0\nsamples = 32\nvalue = [32, 0]\nclass = Benign"] ;
72 -> 73 ;
74 [label="additiveexpression <= 0.5\ngini = 0.497\nsamples = 230\nvalue = [106, 124]\nclass = Malicious"] ;
72 -> 74 ;
75 [label="logicalandexpression <= 0.5\ngini = 0.484\nsamples = 210\nvalue = [86, 124]\nclass = Malicious"] ;
74 -> 75 ;
76 [label="arrayliteral <= 0.5\ngini = 0.475\nsamples = 203\nvalue = [79, 124]\nclass = Malicious"] ;
75 -> 76 ;
77 [label="assignmentexpression <= 0.5\ngini = 0.468\nsamples = 198\nvalue = [74, 124]\nclass = Malicious"] ;
76 -> 77 ;
78 [label="gini = 0.461\nsamples = 194\nvalue = [70, 124]\nclass = Malicious"] ;
77 -> 78 ;
79 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
77 -> 79 ;
80 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
76 -> 80 ;
81 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
75 -> 81 ;
82 [label="gini = 0.0\nsamples = 20\nvalue = [20, 0]\nclass = Benign"] ;
74 -> 82 ;
83 [label="gini = 0.0\nsamples = 139\nvalue = [0, 139]\nclass = Malicious"] ;
71 -> 83 ;
84 [label="identifiername <= 0.5\ngini = 0.137\nsamples = 392\nvalue = [29, 363]\nclass = Malicious"] ;
70 -> 84 ;
85 [label="gini = 0.0\nsamples = 10\nvalue = [10, 0]\nclass = Benign"] ;
84 -> 85 ;
86 [label="multiplicativeexpression <= 0.5\ngini = 0.095\nsamples = 382\nvalue = [19, 363]\nclass = Malicious"] ;
84 -> 86 ;
87 [label="assignmentexpression <= 0.5\ngini = 0.067\nsamples = 376\nvalue = [13, 363]\nclass = Malicious"] ;
86 -> 87 ;
88 [label="expressionsequence <= 0.5\ngini = 0.042\nsamples = 371\nvalue = [8, 363]\nclass = Malicious"] ;
87 -> 88 ;
89 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
88 -> 89 ;
90 [label="thisexpression <= 0.5\ngini = 0.037\nsamples = 370\nvalue = [7, 363]\nclass = Malicious"] ;
88 -> 90 ;
91 [label="arrayliteralexpression <= 0.5\ngini = 0.032\nsamples = 369\nvalue = [6, 363]\nclass = Malicious"] ;
90 -> 91 ;
92 [label="additiveexpression <= 0.5\ngini = 0.027\nsamples = 368\nvalue = [5, 363]\nclass = Malicious"] ;
91 -> 92 ;
93 [label="gini = 0.042\nsamples = 231\nvalue = [5, 226]\nclass = Malicious"] ;
92 -> 93 ;
94 [label="gini = 0.0\nsamples = 137\nvalue = [0, 137]\nclass = Malicious"] ;
92 -> 94 ;
95 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
91 -> 95 ;
96 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
90 -> 96 ;
97 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
87 -> 97 ;
98 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
86 -> 98 ;
99 [label="gini = 0.0\nsamples = 33\nvalue = [33, 0]\nclass = Benign"] ;
69 -> 99 ;
100 [label="gini = 0.0\nsamples = 173\nvalue = [173, 0]\nclass = Benign"] ;
68 -> 100 ;
101 [label="assignmentexpression <= 0.5\ngini = 0.119\nsamples = 946\nvalue = [60, 886]\nclass = Malicious"] ;
65 -> 101 ;
102 [label="postincrementexpression <= 0.5\ngini = 0.044\nsamples = 44\nvalue = [43, 1]\nclass = Benign"] ;
101 -> 102 ;
103 [label="gini = 0.0\nsamples = 43\nvalue = [43, 0]\nclass = Benign"] ;
102 -> 103 ;
104 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
102 -> 104 ;
105 [label="formalparameterlist <= 0.5\ngini = 0.037\nsamples = 902\nvalue = [17, 885]\nclass = Malicious"] ;
101 -> 105 ;
106 [label="logicalorexpression <= 0.5\ngini = 0.009\nsamples = 889\nvalue = [4, 885]\nclass = Malicious"] ;
105 -> 106 ;
107 [label="multiplicativeexpression <= 0.5\ngini = 0.004\nsamples = 887\nvalue = [2, 885]\nclass = Malicious"] ;
106 -> 107 ;
108 [label="relationalexpression <= 0.5\ngini = 0.002\nsamples = 886\nvalue = [1, 885]\nclass = Malicious"] ;
107 -> 108 ;
109 [label="gini = 0.0\nsamples = 877\nvalue = [0, 877]\nclass = Malicious"] ;
108 -> 109 ;
110 [label="logicalandexpression <= 0.5\ngini = 0.198\nsamples = 9\nvalue = [1, 8]\nclass = Malicious"] ;
108 -> 110 ;
111 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
110 -> 111 ;
112 [label="gini = 0.0\nsamples = 8\nvalue = [0, 8]\nclass = Malicious"] ;
110 -> 112 ;
113 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
107 -> 113 ;
114 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
106 -> 114 ;
115 [label="gini = 0.0\nsamples = 13\nvalue = [13, 0]\nclass = Benign"] ;
105 -> 115 ;
116 [label="assignmentexpression <= 0.5\ngini = 0.255\nsamples = 2031\nvalue = [304, 1727]\nclass = Malicious"] ;
2 -> 116 ;
117 [label="arrayliteral <= 0.5\ngini = 0.057\nsamples = 1778\nvalue = [52, 1726]\nclass = Malicious"] ;
116 -> 117 ;
118 [label="literalexpression <= 0.5\ngini = 0.04\nsamples = 1762\nvalue = [36, 1726]\nclass = Malicious"] ;
117 -> 118 ;
119 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
118 -> 119 ;
120 [label="expressionsequence <= 0.5\ngini = 0.025\nsamples = 1748\nvalue = [22, 1726]\nclass = Malicious"] ;
118 -> 120 ;
121 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
120 -> 121 ;
122 [label="variabledeclarationlist <= 0.5\ngini = 0.019\nsamples = 1743\nvalue = [17, 1726]\nclass = Malicious"] ;
120 -> 122 ;
123 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
122 -> 123 ;
124 [label="statementlist <= 0.5\ngini = 0.015\nsamples = 1739\nvalue = [13, 1726]\nclass = Malicious"] ;
122 -> 124 ;
125 [label="additiveexpression <= 0.5\ngini = 0.01\nsamples = 1733\nvalue = [9, 1724]\nclass = Malicious"] ;
124 -> 125 ;
126 [label="memberdotexpression <= 0.5\ngini = 0.007\nsamples = 1727\nvalue = [6, 1721]\nclass = Malicious"] ;
125 -> 126 ;
127 [label="gini = 0.0\nsamples = 1112\nvalue = [0, 1112]\nclass = Malicious"] ;
126 -> 127 ;
128 [label="numericliteral <= 0.5\ngini = 0.019\nsamples = 615\nvalue = [6, 609]\nclass = Malicious"] ;
126 -> 128 ;
129 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
128 -> 129 ;
130 [label="equalityexpression <= 0.5\ngini = 0.01\nsamples = 612\nvalue = [3, 609]\nclass = Malicious"] ;
128 -> 130 ;
131 [label="gini = 0.42\nsamples = 10\nvalue = [3, 7]\nclass = Malicious"] ;
130 -> 131 ;
132 [label="gini = 0.0\nsamples = 602\nvalue = [0, 602]\nclass = Malicious"] ;
130 -> 132 ;
133 [label="numericliteral <= 0.5\ngini = 0.5\nsamples = 6\nvalue = [3, 3]\nclass = Benign"] ;
125 -> 133 ;
134 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
133 -> 134 ;
135 [label="gini = 0.0\nsamples = 3\nvalue = [0, 3]\nclass = Malicious"] ;
133 -> 135 ;
136 [label="additiveexpression <= 0.5\ngini = 0.444\nsamples = 6\nvalue = [4, 2]\nclass = Benign"] ;
124 -> 136 ;
137 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
136 -> 137 ;
138 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
136 -> 138 ;
139 [label="gini = 0.0\nsamples = 16\nvalue = [16, 0]\nclass = Benign"] ;
117 -> 139 ;
140 [label="forvarstatement <= 0.5\ngini = 0.008\nsamples = 253\nvalue = [252, 1]\nclass = Benign"] ;
116 -> 140 ;
141 [label="gini = 0.0\nsamples = 252\nvalue = [252, 0]\nclass = Benign"] ;
140 -> 141 ;
142 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
140 -> 142 ;
143 [label="argumentsexpression <= 0.5\ngini = 0.115\nsamples = 6525\nvalue = [399, 6126]\nclass = Malicious"] ;
1 -> 143 ;
144 [label="gini = 0.0\nsamples = 131\nvalue = [131, 0]\nclass = Benign"] ;
143 -> 144 ;
145 [label="logicalorexpression <= 0.5\ngini = 0.08\nsamples = 6394\nvalue = [268, 6126]\nclass = Malicious"] ;
143 -> 145 ;
146 [label="forvarinstatement <= 0.5\ngini = 0.064\nsamples = 6335\nvalue = [209, 6126]\nclass = Malicious"] ;
145 -> 146 ;
147 [label="deleteexpression <= 0.5\ngini = 0.047\nsamples = 6276\nvalue = [150, 6126]\nclass = Malicious"] ;
146 -> 147 ;
148 [label="ternaryexpression <= 0.5\ngini = 0.042\nsamples = 6261\nvalue = [135, 6126]\nclass = Malicious"] ;
147 -> 148 ;
149 [label="notexpression <= 0.5\ngini = 0.039\nsamples = 6252\nvalue = [126, 6126]\nclass = Malicious"] ;
148 -> 149 ;
150 [label="typeofexpression <= 0.5\ngini = 0.037\nsamples = 6232\nvalue = [117, 6115]\nclass = Malicious"] ;
149 -> 150 ;
151 [label="preincrementexpression <= 0.5\ngini = 0.036\nsamples = 6225\nvalue = [113, 6112]\nclass = Malicious"] ;
150 -> 151 ;
152 [label="elementlist <= 0.5\ngini = 0.035\nsamples = 6223\nvalue = [111, 6112]\nclass = Malicious"] ;
151 -> 152 ;
153 [label="assignmentexpression <= 0.5\ngini = 0.068\nsamples = 2705\nvalue = [95, 2610]\nclass = Malicious"] ;
152 -> 153 ;
154 [label="postincrementexpression <= 0.5\ngini = 0.011\nsamples = 2268\nvalue = [13, 2255]\nclass = Malicious"] ;
153 -> 154 ;
155 [label="multiplicativeexpression <= 0.5\ngini = 0.01\nsamples = 2245\nvalue = [11, 2234]\nclass = Malicious"] ;
154 -> 155 ;
156 [label="variablestatement <= 0.5\ngini = 0.009\nsamples = 2244\nvalue = [10, 2234]\nclass = Malicious"] ;
155 -> 156 ;
157 [label="newexpression <= 0.5\ngini = 0.035\nsamples = 455\nvalue = [8, 447]\nclass = Malicious"] ;
156 -> 157 ;
158 [label="functionexpression <= 0.5\ngini = 0.026\nsamples = 453\nvalue = [6, 447]\nclass = Malicious"] ;
157 -> 158 ;
159 [label="memberdotexpression <= 0.5\ngini = 0.022\nsamples = 452\nvalue = [5, 447]\nclass = Malicious"] ;
158 -> 159 ;
160 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
159 -> 160 ;
161 [label="block <= 0.5\ngini = 0.018\nsamples = 451\nvalue = [4, 447]\nclass = Malicious"] ;
159 -> 161 ;
162 [label="numericliteral <= 0.5\ngini = 0.013\nsamples = 450\nvalue = [3, 447]\nclass = Malicious"] ;
161 -> 162 ;
163 [label="gini = 0.0\nsamples = 280\nvalue = [0, 280]\nclass = Malicious"] ;
162 -> 163 ;
164 [label="additiveexpression <= 0.5\ngini = 0.035\nsamples = 170\nvalue = [3, 167]\nclass = Malicious"] ;
162 -> 164 ;
165 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
164 -> 165 ;
166 [label="gini = 0.0\nsamples = 167\nvalue = [0, 167]\nclass = Malicious"] ;
164 -> 166 ;
167 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
161 -> 167 ;
168 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
158 -> 168 ;
169 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
157 -> 169 ;
170 [label="newexpression <= 0.5\ngini = 0.002\nsamples = 1789\nvalue = [2, 1787]\nclass = Malicious"] ;
156 -> 170 ;
171 [label="memberdotexpression <= 0.5\ngini = 0.008\nsamples = 491\nvalue = [2, 489]\nclass = Malicious"] ;
170 -> 171 ;
172 [label="gini = 0.0\nsamples = 489\nvalue = [0, 489]\nclass = Malicious"] ;
171 -> 172 ;
173 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
171 -> 173 ;
174 [label="gini = 0.0\nsamples = 1298\nvalue = [0, 1298]\nclass = Malicious"] ;
170 -> 174 ;
175 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
155 -> 175 ;
176 [label="emptystatement <= 0.5\ngini = 0.159\nsamples = 23\nvalue = [2, 21]\nclass = Malicious"] ;
154 -> 176 ;
177 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
176 -> 177 ;
178 [label="gini = 0.0\nsamples = 21\nvalue = [0, 21]\nclass = Malicious"] ;
176 -> 178 ;
179 [label="parenthesizedexpression <= 0.5\ngini = 0.305\nsamples = 437\nvalue = [82, 355]\nclass = Malicious"] ;
153 -> 179 ;
180 [label="relationalexpression <= 0.5\ngini = 0.166\nsamples = 351\nvalue = [32, 319]\nclass = Malicious"] ;
179 -> 180 ;
181 [label="functionbody <= 0.5\ngini = 0.392\nsamples = 97\nvalue = [26, 71]\nclass = Malicious"] ;
180 -> 181 ;
182 [label="newexpression <= 0.5\ngini = 0.32\nsamples = 25\nvalue = [20, 5]\nclass = Benign"] ;
181 -> 182 ;
183 [label="gini = 0.0\nsamples = 16\nvalue = [16, 0]\nclass = Benign"] ;
182 -> 183 ;
184 [label="varmodifier <= 0.5\ngini = 0.494\nsamples = 9\nvalue = [4, 5]\nclass = Malicious"] ;
182 -> 184 ;
185 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
184 -> 185 ;
186 [label="identifiername <= 0.5\ngini = 0.408\nsamples = 7\nvalue = [2, 5]\nclass = Malicious"] ;
184 -> 186 ;
187 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
186 -> 187 ;
188 [label="gini = 0.0\nsamples = 5\nvalue = [0, 5]\nclass = Malicious"] ;
186 -> 188 ;
189 [label="arrayliteralexpression <= 0.5\ngini = 0.153\nsamples = 72\nvalue = [6, 66]\nclass = Malicious"] ;
181 -> 189 ;
190 [label="logicalandexpression <= 0.5\ngini = 0.131\nsamples = 71\nvalue = [5, 66]\nclass = Malicious"] ;
189 -> 190 ;
191 [label="thisexpression <= 0.5\ngini = 0.108\nsamples = 70\nvalue = [4, 66]\nclass = Malicious"] ;
190 -> 191 ;
192 [label="newexpression <= 0.5\ngini = 0.269\nsamples = 25\nvalue = [4, 21]\nclass = Malicious"] ;
191 -> 192 ;
193 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
192 -> 193 ;
194 [label="gini = 0.0\nsamples = 21\nvalue = [0, 21]\nclass = Malicious"] ;
192 -> 194 ;
195 [label="gini = 0.0\nsamples = 45\nvalue = [0, 45]\nclass = Malicious"] ;
191 -> 195 ;
196 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
190 -> 196 ;
197 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
189 -> 197 ;
198 [label="functionbody <= 0.5\ngini = 0.046\nsamples = 254\nvalue = [6, 248]\nclass = Malicious"] ;
180 -> 198 ;
199 [label="additiveexpression <= 0.5\ngini = 0.008\nsamples = 240\nvalue = [1, 239]\nclass = Malicious"] ;
198 -> 199 ;
200 [label="thisexpression <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
199 -> 200 ;
201 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
200 -> 201 ;
202 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
200 -> 202 ;
203 [label="gini = 0.0\nsamples = 238\nvalue = [0, 238]\nclass = Malicious"] ;
199 -> 203 ;
204 [label="memberdotexpression <= 0.5\ngini = 0.459\nsamples = 14\nvalue = [5, 9]\nclass = Malicious"] ;
198 -> 204 ;
205 [label="gini = 0.0\nsamples = 9\nvalue = [0, 9]\nclass = Malicious"] ;
204 -> 205 ;
206 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
204 -> 206 ;
207 [label="emptystatement <= 0.5\ngini = 0.487\nsamples = 86\nvalue = [50, 36]\nclass = Benign"] ;
179 -> 207 ;
208 [label="gini = 0.0\nsamples = 50\nvalue = [50, 0]\nclass = Benign"] ;
207 -> 208 ;
209 [label="gini = 0.0\nsamples = 36\nvalue = [0, 36]\nclass = Malicious"] ;
207 -> 209 ;
210 [label="forstatement <= 0.5\ngini = 0.009\nsamples = 3518\nvalue = [16, 3502]\nclass = Malicious"] ;
152 -> 210 ;
211 [label="variabledeclarationlist <= 0.5\ngini = 0.008\nsamples = 3516\nvalue = [14, 3502]\nclass = Malicious"] ;
210 -> 211 ;
212 [label="identifiername <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
211 -> 212 ;
213 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
212 -> 213 ;
214 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
212 -> 214 ;
215 [label="functionbody <= 0.5\ngini = 0.007\nsamples = 3513\nvalue = [13, 3500]\nclass = Malicious"] ;
211 -> 215 ;
216 [label="gini = 0.0\nsamples = 2668\nvalue = [0, 2668]\nclass = Malicious"] ;
215 -> 216 ;
217 [label="returnstatement <= 0.5\ngini = 0.03\nsamples = 845\nvalue = [13, 832]\nclass = Malicious"] ;
215 -> 217 ;
218 [label="catchproduction <= 0.5\ngini = 0.228\nsamples = 99\nvalue = [13, 86]\nclass = Malicious"] ;
217 -> 218 ;
219 [label="gini = 0.0\nsamples = 13\nvalue = [13, 0]\nclass = Benign"] ;
218 -> 219 ;
220 [label="gini = 0.0\nsamples = 86\nvalue = [0, 86]\nclass = Malicious"] ;
218 -> 220 ;
221 [label="gini = 0.0\nsamples = 746\nvalue = [0, 746]\nclass = Malicious"] ;
217 -> 221 ;
222 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
210 -> 222 ;
223 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
151 -> 223 ;
224 [label="functionbody <= 0.5\ngini = 0.49\nsamples = 7\nvalue = [4, 3]\nclass = Benign"] ;
150 -> 224 ;
225 [label="gini = 0.0\nsamples = 3\nvalue = [0, 3]\nclass = Malicious"] ;
224 -> 225 ;
226 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
224 -> 226 ;
227 [label="emptystatement <= 0.5\ngini = 0.495\nsamples = 20\nvalue = [9, 11]\nclass = Malicious"] ;
149 -> 227 ;
228 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
227 -> 228 ;
229 [label="gini = 0.0\nsamples = 11\nvalue = [0, 11]\nclass = Malicious"] ;
227 -> 229 ;
230 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
148 -> 230 ;
231 [label="gini = 0.0\nsamples = 15\nvalue = [15, 0]\nclass = Benign"] ;
147 -> 231 ;
232 [label="gini = 0.0\nsamples = 59\nvalue = [59, 0]\nclass = Benign"] ;
146 -> 232 ;
233 [label="gini = 0.0\nsamples = 59\nvalue = [59, 0]\nclass = Benign"] ;
145 -> 233 ;
234 [label="forstatement <= 0.5\ngini = 0.246\nsamples = 10732\nvalue = [9189, 1543]\nclass = Benign"] ;
0 -> 234 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
235 [label="bitshiftexpression <= 0.5\ngini = 0.013\nsamples = 9215\nvalue = [9155, 60]\nclass = Benign"] ;
234 -> 235 ;
236 [label="whilestatement <= 0.5\ngini = 0.001\nsamples = 9160\nvalue = [9155, 5]\nclass = Benign"] ;
235 -> 236 ;
237 [label="trystatement <= 0.5\ngini = 0.001\nsamples = 9155\nvalue = [9151, 4]\nclass = Benign"] ;
236 -> 237 ;
238 [label="multiplicativeexpression <= 0.5\ngini = 0.0\nsamples = 9044\nvalue = [9043, 1]\nclass = Benign"] ;
237 -> 238 ;
239 [label="gini = 0.0\nsamples = 8955\nvalue = [8955, 0]\nclass = Benign"] ;
238 -> 239 ;
240 [label="propertyexpressionassignment <= 0.5\ngini = 0.022\nsamples = 89\nvalue = [88, 1]\nclass = Benign"] ;
238 -> 240 ;
241 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
240 -> 241 ;
242 [label="gini = 0.0\nsamples = 88\nvalue = [88, 0]\nclass = Benign"] ;
240 -> 242 ;
243 [label="memberdotexpression <= 0.5\ngini = 0.053\nsamples = 111\nvalue = [108, 3]\nclass = Benign"] ;
237 -> 243 ;
244 [label="gini = 0.0\nsamples = 3\nvalue = [0, 3]\nclass = Malicious"] ;
243 -> 244 ;
245 [label="gini = 0.0\nsamples = 108\nvalue = [108, 0]\nclass = Benign"] ;
243 -> 245 ;
246 [label="relationalexpression <= 0.5\ngini = 0.32\nsamples = 5\nvalue = [4, 1]\nclass = Benign"] ;
236 -> 246 ;
247 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
246 -> 247 ;
248 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
246 -> 248 ;
249 [label="gini = 0.0\nsamples = 55\nvalue = [0, 55]\nclass = Malicious"] ;
235 -> 249 ;
250 [label="identifiername <= 0.5\ngini = 0.044\nsamples = 1517\nvalue = [34, 1483]\nclass = Malicious"] ;
234 -> 250 ;
251 [label="gini = 0.0\nsamples = 1480\nvalue = [0, 1480]\nclass = Malicious"] ;
250 -> 251 ;
252 [label="functionbody <= 0.5\ngini = 0.149\nsamples = 37\nvalue = [34, 3]\nclass = Benign"] ;
250 -> 252 ;
253 [label="gini = 0.0\nsamples = 3\nvalue = [0, 3]\nclass = Malicious"] ;
252 -> 253 ;
254 [label="gini = 0.0\nsamples = 34\nvalue = [34, 0]\nclass = Benign"] ;
252 -> 254 ;
}
