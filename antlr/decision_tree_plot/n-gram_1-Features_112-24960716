digraph Tree {
node [shape=box] ;
0 [label="objectliteralexpression <= 0.5\ngini = 0.5\nsamples = 27000\nvalue = [13496, 13504]\nclass = Malicious"] ;
1 [label="memberindexexpression <= 0.5\ngini = 0.391\nsamples = 16296\nvalue = [4338, 11958]\nclass = Malicious"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="newexpression <= 0.5\ngini = 0.482\nsamples = 9730\nvalue = [3931, 5799]\nclass = Malicious"] ;
1 -> 2 ;
3 [label="sourceelements <= 0.5\ngini = 0.498\nsamples = 7703\nvalue = [3628, 4075]\nclass = Malicious"] ;
2 -> 3 ;
4 [label="gini = 0.401\nsamples = 2599\nvalue = [722, 1877]\nclass = Malicious"] ;
3 -> 4 ;
5 [label="numericliteral <= 0.5\ngini = 0.49\nsamples = 5104\nvalue = [2906, 2198]\nclass = Benign"] ;
3 -> 5 ;
6 [label="identifierexpression <= 0.5\ngini = 0.368\nsamples = 2845\nvalue = [2154, 691]\nclass = Benign"] ;
5 -> 6 ;
7 [label="arguments <= 0.5\ngini = 0.5\nsamples = 904\nvalue = [446, 458]\nclass = Malicious"] ;
6 -> 7 ;
8 [label="gini = 0.0\nsamples = 444\nvalue = [444, 0]\nclass = Benign"] ;
7 -> 8 ;
9 [label="literal <= 0.5\ngini = 0.009\nsamples = 460\nvalue = [2, 458]\nclass = Malicious"] ;
7 -> 9 ;
10 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
9 -> 10 ;
11 [label="gini = 0.0\nsamples = 458\nvalue = [0, 458]\nclass = Malicious"] ;
9 -> 11 ;
12 [label="assignmentoperatorexpression <= 0.5\ngini = 0.211\nsamples = 1941\nvalue = [1708, 233]\nclass = Benign"] ;
6 -> 12 ;
13 [label="assignmentexpression <= 0.5\ngini = 0.184\nsamples = 1818\nvalue = [1632, 186]\nclass = Benign"] ;
12 -> 13 ;
14 [label="functionexpression <= 0.5\ngini = 0.261\nsamples = 1204\nvalue = [1018, 186]\nclass = Benign"] ;
13 -> 14 ;
15 [label="memberdotexpression <= 0.5\ngini = 0.366\nsamples = 770\nvalue = [584, 186]\nclass = Benign"] ;
14 -> 15 ;
16 [label="additiveexpression <= 0.5\ngini = 0.179\nsamples = 191\nvalue = [172, 19]\nclass = Benign"] ;
15 -> 16 ;
17 [label="gini = 0.0\nsamples = 158\nvalue = [158, 0]\nclass = Benign"] ;
16 -> 17 ;
18 [label="argumentsexpression <= 0.5\ngini = 0.489\nsamples = 33\nvalue = [14, 19]\nclass = Malicious"] ;
16 -> 18 ;
19 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
18 -> 19 ;
20 [label="gini = 0.0\nsamples = 19\nvalue = [0, 19]\nclass = Malicious"] ;
18 -> 20 ;
21 [label="ifstatement <= 0.5\ngini = 0.41\nsamples = 579\nvalue = [412, 167]\nclass = Benign"] ;
15 -> 21 ;
22 [label="arrayliteralexpression <= 0.5\ngini = 0.438\nsamples = 515\nvalue = [348, 167]\nclass = Benign"] ;
21 -> 22 ;
23 [label="variablestatement <= 0.5\ngini = 0.458\nsamples = 470\nvalue = [303, 167]\nclass = Benign"] ;
22 -> 23 ;
24 [label="literal <= 0.5\ngini = 0.474\nsamples = 431\nvalue = [265, 166]\nclass = Benign"] ;
23 -> 24 ;
25 [label="gini = 0.0\nsamples = 18\nvalue = [18, 0]\nclass = Benign"] ;
24 -> 25 ;
26 [label="additiveexpression <= 0.5\ngini = 0.481\nsamples = 413\nvalue = [247, 166]\nclass = Benign"] ;
24 -> 26 ;
27 [label="ternaryexpression <= 0.5\ngini = 0.483\nsamples = 407\nvalue = [241, 166]\nclass = Benign"] ;
26 -> 27 ;
28 [label="logicalorexpression <= 0.5\ngini = 0.484\nsamples = 405\nvalue = [239, 166]\nclass = Benign"] ;
27 -> 28 ;
29 [label="logicalandexpression <= 0.5\ngini = 0.484\nsamples = 403\nvalue = [237, 166]\nclass = Benign"] ;
28 -> 29 ;
30 [label="catchproduction <= 0.5\ngini = 0.485\nsamples = 401\nvalue = [235, 166]\nclass = Benign"] ;
29 -> 30 ;
31 [label="gini = 0.486\nsamples = 400\nvalue = [234, 166]\nclass = Benign"] ;
30 -> 31 ;
32 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
30 -> 32 ;
33 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
29 -> 33 ;
34 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
28 -> 34 ;
35 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
27 -> 35 ;
36 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
26 -> 36 ;
37 [label="expressionstatement <= 0.5\ngini = 0.05\nsamples = 39\nvalue = [38, 1]\nclass = Benign"] ;
23 -> 37 ;
38 [label="gini = 0.0\nsamples = 19\nvalue = [19, 0]\nclass = Benign"] ;
37 -> 38 ;
39 [label="additiveexpression <= 0.5\ngini = 0.095\nsamples = 20\nvalue = [19, 1]\nclass = Benign"] ;
37 -> 39 ;
40 [label="statementlist <= 0.5\ngini = 0.153\nsamples = 12\nvalue = [11, 1]\nclass = Benign"] ;
39 -> 40 ;
41 [label="literal <= 0.5\ngini = 0.219\nsamples = 8\nvalue = [7, 1]\nclass = Benign"] ;
40 -> 41 ;
42 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
41 -> 42 ;
43 [label="gini = 0.245\nsamples = 7\nvalue = [6, 1]\nclass = Benign"] ;
41 -> 43 ;
44 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
40 -> 44 ;
45 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
39 -> 45 ;
46 [label="gini = 0.0\nsamples = 45\nvalue = [45, 0]\nclass = Benign"] ;
22 -> 46 ;
47 [label="gini = 0.0\nsamples = 64\nvalue = [64, 0]\nclass = Benign"] ;
21 -> 47 ;
48 [label="gini = 0.0\nsamples = 434\nvalue = [434, 0]\nclass = Benign"] ;
14 -> 48 ;
49 [label="gini = 0.0\nsamples = 614\nvalue = [614, 0]\nclass = Benign"] ;
13 -> 49 ;
50 [label="memberdotexpression <= 0.5\ngini = 0.472\nsamples = 123\nvalue = [76, 47]\nclass = Benign"] ;
12 -> 50 ;
51 [label="returnstatement <= 0.5\ngini = 0.113\nsamples = 50\nvalue = [3, 47]\nclass = Malicious"] ;
50 -> 51 ;
52 [label="gini = 0.0\nsamples = 26\nvalue = [0, 26]\nclass = Malicious"] ;
51 -> 52 ;
53 [label="assignmentexpression <= 0.5\ngini = 0.219\nsamples = 24\nvalue = [3, 21]\nclass = Malicious"] ;
51 -> 53 ;
54 [label="gini = 0.375\nsamples = 12\nvalue = [3, 9]\nclass = Malicious"] ;
53 -> 54 ;
55 [label="gini = 0.0\nsamples = 12\nvalue = [0, 12]\nclass = Malicious"] ;
53 -> 55 ;
56 [label="gini = 0.0\nsamples = 73\nvalue = [73, 0]\nclass = Benign"] ;
50 -> 56 ;
57 [label="parenthesizedexpression <= 0.5\ngini = 0.444\nsamples = 2259\nvalue = [752, 1507]\nclass = Malicious"] ;
5 -> 57 ;
58 [label="arguments <= 0.5\ngini = 0.499\nsamples = 1315\nvalue = [692, 623]\nclass = Benign"] ;
57 -> 58 ;
59 [label="gini = 0.0\nsamples = 332\nvalue = [332, 0]\nclass = Benign"] ;
58 -> 59 ;
60 [label="functionbody <= 0.5\ngini = 0.464\nsamples = 983\nvalue = [360, 623]\nclass = Malicious"] ;
58 -> 60 ;
61 [label="statementlist <= 0.5\ngini = 0.368\nsamples = 823\nvalue = [200, 623]\nclass = Malicious"] ;
60 -> 61 ;
62 [label="varmodifier <= 0.5\ngini = 0.326\nsamples = 784\nvalue = [161, 623]\nclass = Malicious"] ;
61 -> 62 ;
63 [label="equalityexpression <= 0.5\ngini = 0.448\nsamples = 396\nvalue = [134, 262]\nclass = Malicious"] ;
62 -> 63 ;
64 [label="memberdotexpression <= 0.5\ngini = 0.499\nsamples = 258\nvalue = [134, 124]\nclass = Benign"] ;
63 -> 64 ;
65 [label="gini = 0.0\nsamples = 33\nvalue = [33, 0]\nclass = Benign"] ;
64 -> 65 ;
66 [label="additiveexpression <= 0.5\ngini = 0.495\nsamples = 225\nvalue = [101, 124]\nclass = Malicious"] ;
64 -> 66 ;
67 [label="logicalandexpression <= 0.5\ngini = 0.482\nsamples = 208\nvalue = [84, 124]\nclass = Malicious"] ;
66 -> 67 ;
68 [label="assignmentexpression <= 0.5\ngini = 0.473\nsamples = 201\nvalue = [77, 124]\nclass = Malicious"] ;
67 -> 68 ;
69 [label="elementlist <= 0.5\ngini = 0.466\nsamples = 197\nvalue = [73, 124]\nclass = Malicious"] ;
68 -> 69 ;
70 [label="gini = 0.461\nsamples = 194\nvalue = [70, 124]\nclass = Malicious"] ;
69 -> 70 ;
71 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
69 -> 71 ;
72 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
68 -> 72 ;
73 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
67 -> 73 ;
74 [label="gini = 0.0\nsamples = 17\nvalue = [17, 0]\nclass = Benign"] ;
66 -> 74 ;
75 [label="gini = 0.0\nsamples = 138\nvalue = [0, 138]\nclass = Malicious"] ;
63 -> 75 ;
76 [label="memberdotexpression <= 0.5\ngini = 0.129\nsamples = 388\nvalue = [27, 361]\nclass = Malicious"] ;
62 -> 76 ;
77 [label="gini = 0.0\nsamples = 10\nvalue = [10, 0]\nclass = Benign"] ;
76 -> 77 ;
78 [label="assignmentexpression <= 0.5\ngini = 0.086\nsamples = 378\nvalue = [17, 361]\nclass = Malicious"] ;
76 -> 78 ;
79 [label="multiplicativeexpression <= 0.5\ngini = 0.062\nsamples = 373\nvalue = [12, 361]\nclass = Malicious"] ;
78 -> 79 ;
80 [label="thisexpression <= 0.5\ngini = 0.037\nsamples = 368\nvalue = [7, 361]\nclass = Malicious"] ;
79 -> 80 ;
81 [label="expressionstatement <= 0.5\ngini = 0.032\nsamples = 367\nvalue = [6, 361]\nclass = Malicious"] ;
80 -> 81 ;
82 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
81 -> 82 ;
83 [label="arrayliteralexpression <= 0.5\ngini = 0.027\nsamples = 366\nvalue = [5, 361]\nclass = Malicious"] ;
81 -> 83 ;
84 [label="additiveexpression <= 0.5\ngini = 0.022\nsamples = 365\nvalue = [4, 361]\nclass = Malicious"] ;
83 -> 84 ;
85 [label="gini = 0.034\nsamples = 228\nvalue = [4, 224]\nclass = Malicious"] ;
84 -> 85 ;
86 [label="gini = 0.0\nsamples = 137\nvalue = [0, 137]\nclass = Malicious"] ;
84 -> 86 ;
87 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
83 -> 87 ;
88 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
80 -> 88 ;
89 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
79 -> 89 ;
90 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
78 -> 90 ;
91 [label="gini = 0.0\nsamples = 39\nvalue = [39, 0]\nclass = Benign"] ;
61 -> 91 ;
92 [label="gini = 0.0\nsamples = 160\nvalue = [160, 0]\nclass = Benign"] ;
60 -> 92 ;
93 [label="assignmentexpression <= 0.5\ngini = 0.119\nsamples = 944\nvalue = [60, 884]\nclass = Malicious"] ;
57 -> 93 ;
94 [label="forvarstatement <= 0.5\ngini = 0.044\nsamples = 44\nvalue = [43, 1]\nclass = Benign"] ;
93 -> 94 ;
95 [label="gini = 0.0\nsamples = 43\nvalue = [43, 0]\nclass = Benign"] ;
94 -> 95 ;
96 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
94 -> 96 ;
97 [label="formalparameterarg <= 0.5\ngini = 0.037\nsamples = 900\nvalue = [17, 883]\nclass = Malicious"] ;
93 -> 97 ;
98 [label="thisexpression <= 0.5\ngini = 0.007\nsamples = 886\nvalue = [3, 883]\nclass = Malicious"] ;
97 -> 98 ;
99 [label="unaryminusexpression <= 0.5\ngini = 0.005\nsamples = 885\nvalue = [2, 883]\nclass = Malicious"] ;
98 -> 99 ;
100 [label="relationalexpression <= 0.5\ngini = 0.002\nsamples = 884\nvalue = [1, 883]\nclass = Malicious"] ;
99 -> 100 ;
101 [label="gini = 0.0\nsamples = 873\nvalue = [0, 873]\nclass = Malicious"] ;
100 -> 101 ;
102 [label="forvarstatement <= 0.5\ngini = 0.165\nsamples = 11\nvalue = [1, 10]\nclass = Malicious"] ;
100 -> 102 ;
103 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
102 -> 103 ;
104 [label="gini = 0.0\nsamples = 10\nvalue = [0, 10]\nclass = Malicious"] ;
102 -> 104 ;
105 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
99 -> 105 ;
106 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
98 -> 106 ;
107 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
97 -> 107 ;
108 [label="assignmentexpression <= 0.5\ngini = 0.254\nsamples = 2027\nvalue = [303, 1724]\nclass = Malicious"] ;
2 -> 108 ;
109 [label="variabledeclaration <= 0.5\ngini = 0.06\nsamples = 1778\nvalue = [55, 1723]\nclass = Malicious"] ;
108 -> 109 ;
110 [label="gini = 0.0\nsamples = 17\nvalue = [17, 0]\nclass = Benign"] ;
109 -> 110 ;
111 [label="expressionstatement <= 0.5\ngini = 0.042\nsamples = 1761\nvalue = [38, 1723]\nclass = Malicious"] ;
109 -> 111 ;
112 [label="block <= 0.5\ngini = 0.133\nsamples = 14\nvalue = [13, 1]\nclass = Benign"] ;
111 -> 112 ;
113 [label="gini = 0.0\nsamples = 13\nvalue = [13, 0]\nclass = Benign"] ;
112 -> 113 ;
114 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
112 -> 114 ;
115 [label="block <= 0.5\ngini = 0.028\nsamples = 1747\nvalue = [25, 1722]\nclass = Malicious"] ;
111 -> 115 ;
116 [label="literal <= 0.5\ngini = 0.014\nsamples = 1733\nvalue = [12, 1721]\nclass = Malicious"] ;
115 -> 116 ;
117 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
116 -> 117 ;
118 [label="logicalorexpression <= 0.5\ngini = 0.01\nsamples = 1730\nvalue = [9, 1721]\nclass = Malicious"] ;
116 -> 118 ;
119 [label="elementlist <= 0.5\ngini = 0.009\nsamples = 1729\nvalue = [8, 1721]\nclass = Malicious"] ;
118 -> 119 ;
120 [label="multiplicativeexpression <= 0.5\ngini = 0.008\nsamples = 1728\nvalue = [7, 1721]\nclass = Malicious"] ;
119 -> 120 ;
121 [label="identifiername <= 0.5\ngini = 0.007\nsamples = 1727\nvalue = [6, 1721]\nclass = Malicious"] ;
120 -> 121 ;
122 [label="gini = 0.0\nsamples = 1105\nvalue = [0, 1105]\nclass = Malicious"] ;
121 -> 122 ;
123 [label="numericliteral <= 0.5\ngini = 0.019\nsamples = 622\nvalue = [6, 616]\nclass = Malicious"] ;
121 -> 123 ;
124 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
123 -> 124 ;
125 [label="equalityexpression <= 0.5\ngini = 0.01\nsamples = 619\nvalue = [3, 616]\nclass = Malicious"] ;
123 -> 125 ;
126 [label="additiveexpression <= 0.5\ngini = 0.375\nsamples = 12\nvalue = [3, 9]\nclass = Malicious"] ;
125 -> 126 ;
127 [label="gini = 0.42\nsamples = 10\nvalue = [3, 7]\nclass = Malicious"] ;
126 -> 127 ;
128 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
126 -> 128 ;
129 [label="gini = 0.0\nsamples = 607\nvalue = [0, 607]\nclass = Malicious"] ;
125 -> 129 ;
130 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
120 -> 130 ;
131 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
119 -> 131 ;
132 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
118 -> 132 ;
133 [label="additiveexpression <= 0.5\ngini = 0.133\nsamples = 14\nvalue = [13, 1]\nclass = Benign"] ;
115 -> 133 ;
134 [label="gini = 0.0\nsamples = 13\nvalue = [13, 0]\nclass = Benign"] ;
133 -> 134 ;
135 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
133 -> 135 ;
136 [label="forvarstatement <= 0.5\ngini = 0.008\nsamples = 249\nvalue = [248, 1]\nclass = Benign"] ;
108 -> 136 ;
137 [label="gini = 0.0\nsamples = 248\nvalue = [248, 0]\nclass = Benign"] ;
136 -> 137 ;
138 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
136 -> 138 ;
139 [label="arguments <= 0.5\ngini = 0.116\nsamples = 6566\nvalue = [407, 6159]\nclass = Malicious"] ;
1 -> 139 ;
140 [label="gini = 0.0\nsamples = 136\nvalue = [136, 0]\nclass = Benign"] ;
139 -> 140 ;
141 [label="logicalorexpression <= 0.5\ngini = 0.081\nsamples = 6430\nvalue = [271, 6159]\nclass = Malicious"] ;
139 -> 141 ;
142 [label="forvarinstatement <= 0.5\ngini = 0.063\nsamples = 6367\nvalue = [208, 6159]\nclass = Malicious"] ;
141 -> 142 ;
143 [label="deleteexpression <= 0.5\ngini = 0.046\nsamples = 6306\nvalue = [147, 6159]\nclass = Malicious"] ;
142 -> 143 ;
144 [label="ternaryexpression <= 0.5\ngini = 0.041\nsamples = 6290\nvalue = [131, 6159]\nclass = Malicious"] ;
143 -> 144 ;
145 [label="notexpression <= 0.5\ngini = 0.037\nsamples = 6279\nvalue = [120, 6159]\nclass = Malicious"] ;
144 -> 145 ;
146 [label="typeofexpression <= 0.5\ngini = 0.035\nsamples = 6261\nvalue = [112, 6149]\nclass = Malicious"] ;
145 -> 146 ;
147 [label="preincrementexpression <= 0.5\ngini = 0.034\nsamples = 6255\nvalue = [108, 6147]\nclass = Malicious"] ;
146 -> 147 ;
148 [label="elementlist <= 0.5\ngini = 0.033\nsamples = 6253\nvalue = [106, 6147]\nclass = Malicious"] ;
147 -> 148 ;
149 [label="assignmentexpression <= 0.5\ngini = 0.064\nsamples = 2734\nvalue = [90, 2644]\nclass = Malicious"] ;
148 -> 149 ;
150 [label="postincrementexpression <= 0.5\ngini = 0.01\nsamples = 2310\nvalue = [12, 2298]\nclass = Malicious"] ;
149 -> 150 ;
151 [label="multiplicativeexpression <= 0.5\ngini = 0.009\nsamples = 2287\nvalue = [10, 2277]\nclass = Malicious"] ;
150 -> 151 ;
152 [label="varmodifier <= 0.5\ngini = 0.008\nsamples = 2286\nvalue = [9, 2277]\nclass = Malicious"] ;
151 -> 152 ;
153 [label="newexpression <= 0.5\ngini = 0.03\nsamples = 464\nvalue = [7, 457]\nclass = Malicious"] ;
152 -> 153 ;
154 [label="block <= 0.5\ngini = 0.021\nsamples = 462\nvalue = [5, 457]\nclass = Malicious"] ;
153 -> 154 ;
155 [label="functionbody <= 0.5\ngini = 0.017\nsamples = 461\nvalue = [4, 457]\nclass = Malicious"] ;
154 -> 155 ;
156 [label="numericliteral <= 0.5\ngini = 0.013\nsamples = 460\nvalue = [3, 457]\nclass = Malicious"] ;
155 -> 156 ;
157 [label="gini = 0.0\nsamples = 283\nvalue = [0, 283]\nclass = Malicious"] ;
156 -> 157 ;
158 [label="additiveexpression <= 0.5\ngini = 0.033\nsamples = 177\nvalue = [3, 174]\nclass = Malicious"] ;
156 -> 158 ;
159 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
158 -> 159 ;
160 [label="gini = 0.0\nsamples = 174\nvalue = [0, 174]\nclass = Malicious"] ;
158 -> 160 ;
161 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
155 -> 161 ;
162 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
154 -> 162 ;
163 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
153 -> 163 ;
164 [label="returnstatement <= 0.5\ngini = 0.002\nsamples = 1822\nvalue = [2, 1820]\nclass = Malicious"] ;
152 -> 164 ;
165 [label="identifiername <= 0.5\ngini = 0.008\nsamples = 488\nvalue = [2, 486]\nclass = Malicious"] ;
164 -> 165 ;
166 [label="gini = 0.0\nsamples = 486\nvalue = [0, 486]\nclass = Malicious"] ;
165 -> 166 ;
167 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
165 -> 167 ;
168 [label="gini = 0.0\nsamples = 1334\nvalue = [0, 1334]\nclass = Malicious"] ;
164 -> 168 ;
169 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
151 -> 169 ;
170 [label="emptystatement <= 0.5\ngini = 0.159\nsamples = 23\nvalue = [2, 21]\nclass = Malicious"] ;
150 -> 170 ;
171 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
170 -> 171 ;
172 [label="gini = 0.0\nsamples = 21\nvalue = [0, 21]\nclass = Malicious"] ;
170 -> 172 ;
173 [label="parenthesizedexpression <= 0.5\ngini = 0.3\nsamples = 424\nvalue = [78, 346]\nclass = Malicious"] ;
149 -> 173 ;
174 [label="relationalexpression <= 0.5\ngini = 0.156\nsamples = 340\nvalue = [29, 311]\nclass = Malicious"] ;
173 -> 174 ;
175 [label="functionexpression <= 0.5\ngini = 0.375\nsamples = 88\nvalue = [22, 66]\nclass = Malicious"] ;
174 -> 175 ;
176 [label="newexpression <= 0.5\ngini = 0.363\nsamples = 21\nvalue = [16, 5]\nclass = Benign"] ;
175 -> 176 ;
177 [label="gini = 0.0\nsamples = 12\nvalue = [12, 0]\nclass = Benign"] ;
176 -> 177 ;
178 [label="varmodifier <= 0.5\ngini = 0.494\nsamples = 9\nvalue = [4, 5]\nclass = Malicious"] ;
176 -> 178 ;
179 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
178 -> 179 ;
180 [label="identifiername <= 0.5\ngini = 0.408\nsamples = 7\nvalue = [2, 5]\nclass = Malicious"] ;
178 -> 180 ;
181 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
180 -> 181 ;
182 [label="gini = 0.0\nsamples = 5\nvalue = [0, 5]\nclass = Malicious"] ;
180 -> 182 ;
183 [label="arrayliteral <= 0.5\ngini = 0.163\nsamples = 67\nvalue = [6, 61]\nclass = Malicious"] ;
175 -> 183 ;
184 [label="logicalandexpression <= 0.5\ngini = 0.14\nsamples = 66\nvalue = [5, 61]\nclass = Malicious"] ;
183 -> 184 ;
185 [label="statementlist <= 0.5\ngini = 0.116\nsamples = 65\nvalue = [4, 61]\nclass = Malicious"] ;
184 -> 185 ;
186 [label="assignmentoperatorexpression <= 0.5\ngini = 0.038\nsamples = 51\nvalue = [1, 50]\nclass = Malicious"] ;
185 -> 186 ;
187 [label="newexpression <= 0.5\ngini = 0.083\nsamples = 23\nvalue = [1, 22]\nclass = Malicious"] ;
186 -> 187 ;
188 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
187 -> 188 ;
189 [label="gini = 0.0\nsamples = 22\nvalue = [0, 22]\nclass = Malicious"] ;
187 -> 189 ;
190 [label="gini = 0.0\nsamples = 28\nvalue = [0, 28]\nclass = Malicious"] ;
186 -> 190 ;
191 [label="newexpression <= 0.5\ngini = 0.337\nsamples = 14\nvalue = [3, 11]\nclass = Malicious"] ;
185 -> 191 ;
192 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
191 -> 192 ;
193 [label="gini = 0.0\nsamples = 11\nvalue = [0, 11]\nclass = Malicious"] ;
191 -> 193 ;
194 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
184 -> 194 ;
195 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
183 -> 195 ;
196 [label="functionexpression <= 0.5\ngini = 0.054\nsamples = 252\nvalue = [7, 245]\nclass = Malicious"] ;
174 -> 196 ;
197 [label="gini = 0.0\nsamples = 238\nvalue = [0, 238]\nclass = Malicious"] ;
196 -> 197 ;
198 [label="memberdotexpression <= 0.5\ngini = 0.5\nsamples = 14\nvalue = [7, 7]\nclass = Benign"] ;
196 -> 198 ;
199 [label="gini = 0.0\nsamples = 7\nvalue = [0, 7]\nclass = Malicious"] ;
198 -> 199 ;
200 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
198 -> 200 ;
201 [label="emptystatement <= 0.5\ngini = 0.486\nsamples = 84\nvalue = [49, 35]\nclass = Benign"] ;
173 -> 201 ;
202 [label="gini = 0.0\nsamples = 49\nvalue = [49, 0]\nclass = Benign"] ;
201 -> 202 ;
203 [label="gini = 0.0\nsamples = 35\nvalue = [0, 35]\nclass = Malicious"] ;
201 -> 203 ;
204 [label="forstatement <= 0.5\ngini = 0.009\nsamples = 3519\nvalue = [16, 3503]\nclass = Malicious"] ;
148 -> 204 ;
205 [label="variabledeclaration <= 0.5\ngini = 0.008\nsamples = 3517\nvalue = [14, 3503]\nclass = Malicious"] ;
204 -> 205 ;
206 [label="thisexpression <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [2, 1]\nclass = Benign"] ;
205 -> 206 ;
207 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
206 -> 207 ;
208 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
206 -> 208 ;
209 [label="functionbody <= 0.5\ngini = 0.007\nsamples = 3514\nvalue = [12, 3502]\nclass = Malicious"] ;
205 -> 209 ;
210 [label="gini = 0.0\nsamples = 2670\nvalue = [0, 2670]\nclass = Malicious"] ;
209 -> 210 ;
211 [label="returnstatement <= 0.5\ngini = 0.028\nsamples = 844\nvalue = [12, 832]\nclass = Malicious"] ;
209 -> 211 ;
212 [label="emptystatement <= 0.5\ngini = 0.219\nsamples = 96\nvalue = [12, 84]\nclass = Malicious"] ;
211 -> 212 ;
213 [label="gini = 0.0\nsamples = 12\nvalue = [12, 0]\nclass = Benign"] ;
212 -> 213 ;
214 [label="gini = 0.0\nsamples = 84\nvalue = [0, 84]\nclass = Malicious"] ;
212 -> 214 ;
215 [label="gini = 0.0\nsamples = 748\nvalue = [0, 748]\nclass = Malicious"] ;
211 -> 215 ;
216 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
204 -> 216 ;
217 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
147 -> 217 ;
218 [label="functionexpression <= 0.5\ngini = 0.444\nsamples = 6\nvalue = [4, 2]\nclass = Benign"] ;
146 -> 218 ;
219 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
218 -> 219 ;
220 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
218 -> 220 ;
221 [label="memberdotexpression <= 0.5\ngini = 0.494\nsamples = 18\nvalue = [8, 10]\nclass = Malicious"] ;
145 -> 221 ;
222 [label="gini = 0.0\nsamples = 10\nvalue = [0, 10]\nclass = Malicious"] ;
221 -> 222 ;
223 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
221 -> 223 ;
224 [label="gini = 0.0\nsamples = 11\nvalue = [11, 0]\nclass = Benign"] ;
144 -> 224 ;
225 [label="gini = 0.0\nsamples = 16\nvalue = [16, 0]\nclass = Benign"] ;
143 -> 225 ;
226 [label="gini = 0.0\nsamples = 61\nvalue = [61, 0]\nclass = Benign"] ;
142 -> 226 ;
227 [label="gini = 0.0\nsamples = 63\nvalue = [63, 0]\nclass = Benign"] ;
141 -> 227 ;
228 [label="forstatement <= 0.5\ngini = 0.247\nsamples = 10704\nvalue = [9158, 1546]\nclass = Benign"] ;
0 -> 228 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
229 [label="bitshiftexpression <= 0.5\ngini = 0.013\nsamples = 9183\nvalue = [9124, 59]\nclass = Benign"] ;
228 -> 229 ;
230 [label="whilestatement <= 0.5\ngini = 0.001\nsamples = 9129\nvalue = [9124, 5]\nclass = Benign"] ;
229 -> 230 ;
231 [label="trystatement <= 0.5\ngini = 0.001\nsamples = 9123\nvalue = [9120, 3]\nclass = Benign"] ;
230 -> 231 ;
232 [label="gini = 0.0\nsamples = 9013\nvalue = [9013, 0]\nclass = Benign"] ;
231 -> 232 ;
233 [label="memberdotexpression <= 0.5\ngini = 0.053\nsamples = 110\nvalue = [107, 3]\nclass = Benign"] ;
231 -> 233 ;
234 [label="gini = 0.0\nsamples = 3\nvalue = [0, 3]\nclass = Malicious"] ;
233 -> 234 ;
235 [label="gini = 0.0\nsamples = 107\nvalue = [107, 0]\nclass = Benign"] ;
233 -> 235 ;
236 [label="notexpression <= 0.5\ngini = 0.444\nsamples = 6\nvalue = [4, 2]\nclass = Benign"] ;
230 -> 236 ;
237 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
236 -> 237 ;
238 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
236 -> 238 ;
239 [label="gini = 0.0\nsamples = 54\nvalue = [0, 54]\nclass = Malicious"] ;
229 -> 239 ;
240 [label="ifstatement <= 0.5\ngini = 0.044\nsamples = 1521\nvalue = [34, 1487]\nclass = Malicious"] ;
228 -> 240 ;
241 [label="gini = 0.0\nsamples = 1483\nvalue = [0, 1483]\nclass = Malicious"] ;
240 -> 241 ;
242 [label="emptystatement <= 0.5\ngini = 0.188\nsamples = 38\nvalue = [34, 4]\nclass = Benign"] ;
240 -> 242 ;
243 [label="gini = 0.0\nsamples = 34\nvalue = [34, 0]\nclass = Benign"] ;
242 -> 243 ;
244 [label="gini = 0.0\nsamples = 4\nvalue = [0, 4]\nclass = Malicious"] ;
242 -> 244 ;
}
