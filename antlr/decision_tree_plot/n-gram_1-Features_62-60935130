igraph Tree {
node [shape=box] ;
0 [label="objectliteral <= 0.5\ngini = 0.5\nsamples = 27000\nvalue = [13527, 13473]\nclass = Benign"] ;
1 [label="numericliteral <= 0.5\ngini = 0.392\nsamples = 16273\nvalue = [4357, 11916]\nclass = Malicious"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="expressionstatement <= 0.5\ngini = 0.486\nsamples = 7306\nvalue = [3044, 4262]\nclass = Malicious"] ;
1 -> 2 ;
3 [label="arguments <= 0.5\ngini = 0.411\nsamples = 3955\nvalue = [1142, 2813]\nclass = Malicious"] ;
2 -> 3 ;
4 [label="eos <= 0.5\ngini = 0.467\nsamples = 2976\nvalue = [1104, 1872]\nclass = Malicious"] ;
3 -> 4 ;
5 [label="gini = 0.395\nsamples = 2567\nvalue = [695, 1872]\nclass = Malicious"] ;
4 -> 5 ;
6 [label="gini = 0.0\nsamples = 409\nvalue = [409, 0]\nclass = Benign"] ;
4 -> 6 ;
7 [label="literal <= 0.5\ngini = 0.075\nsamples = 979\nvalue = [38, 941]\nclass = Malicious"] ;
3 -> 7 ;
8 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
7 -> 8 ;
9 [label="arrayliteral <= 0.5\ngini = 0.06\nsamples = 971\nvalue = [30, 941]\nclass = Malicious"] ;
7 -> 9 ;
10 [label="varmodifier <= 0.5\ngini = 0.054\nsamples = 968\nvalue = [27, 941]\nclass = Malicious"] ;
9 -> 10 ;
11 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
10 -> 11 ;
12 [label="expressionsequence <= 0.5\ngini = 0.052\nsamples = 967\nvalue = [26, 941]\nclass = Malicious"] ;
10 -> 12 ;
13 [label="identifiername <= 0.5\ngini = 0.102\nsamples = 480\nvalue = [26, 454]\nclass = Malicious"] ;
12 -> 13 ;
14 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
13 -> 14 ;
15 [label="gini = 0.099\nsamples = 479\nvalue = [25, 454]\nclass = Malicious"] ;
13 -> 15 ;
16 [label="gini = 0.0\nsamples = 487\nvalue = [0, 487]\nclass = Malicious"] ;
12 -> 16 ;
17 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
9 -> 17 ;
18 [label="variabledeclaration <= 0.5\ngini = 0.491\nsamples = 3351\nvalue = [1902, 1449]\nclass = Benign"] ;
2 -> 18 ;
19 [label="functionbody <= 0.5\ngini = 0.36\nsamples = 1910\nvalue = [1460, 450]\nclass = Benign"] ;
18 -> 19 ;
20 [label="identifiername <= 0.5\ngini = 0.428\nsamples = 1452\nvalue = [1002, 450]\nclass = Benign"] ;
19 -> 20 ;
21 [label="gini = 0.0\nsamples = 359\nvalue = [359, 0]\nclass = Benign"] ;
20 -> 21 ;
22 [label="arguments <= 0.5\ngini = 0.484\nsamples = 1093\nvalue = [643, 450]\nclass = Benign"] ;
20 -> 22 ;
23 [label="gini = 0.0\nsamples = 158\nvalue = [158, 0]\nclass = Benign"] ;
22 -> 23 ;
24 [label="ifstatement <= 0.5\ngini = 0.499\nsamples = 935\nvalue = [485, 450]\nclass = Benign"] ;
22 -> 24 ;
25 [label="arrayliteral <= 0.5\ngini = 0.5\nsamples = 874\nvalue = [424, 450]\nclass = Malicious"] ;
24 -> 25 ;
26 [label="literal <= 0.5\ngini = 0.495\nsamples = 818\nvalue = [368, 450]\nclass = Malicious"] ;
25 -> 26 ;
27 [label="gini = 0.0\nsamples = 26\nvalue = [26, 0]\nclass = Benign"] ;
26 -> 27 ;
28 [label="statementlist <= 0.5\ngini = 0.491\nsamples = 792\nvalue = [342, 450]\nclass = Malicious"] ;
26 -> 28 ;
29 [label="gini = 0.49\nsamples = 790\nvalue = [340, 450]\nclass = Malicious"] ;
28 -> 29 ;
30 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
28 -> 30 ;
31 [label="gini = 0.0\nsamples = 56\nvalue = [56, 0]\nclass = Benign"] ;
25 -> 31 ;
32 [label="gini = 0.0\nsamples = 61\nvalue = [61, 0]\nclass = Benign"] ;
24 -> 32 ;
33 [label="gini = 0.0\nsamples = 458\nvalue = [458, 0]\nclass = Benign"] ;
19 -> 33 ;
34 [label="identifiername <= 0.5\ngini = 0.425\nsamples = 1441\nvalue = [442, 999]\nclass = Malicious"] ;
18 -> 34 ;
35 [label="arguments <= 0.5\ngini = 0.082\nsamples = 818\nvalue = [35, 783]\nclass = Malicious"] ;
34 -> 35 ;
36 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
35 -> 36 ;
37 [label="withstatement <= 0.5\ngini = 0.075\nsamples = 815\nvalue = [32, 783]\nclass = Malicious"] ;
35 -> 37 ;
38 [label="returnstatement <= 0.5\ngini = 0.071\nsamples = 813\nvalue = [30, 783]\nclass = Malicious"] ;
37 -> 38 ;
39 [label="assignmentoperator <= 0.5\ngini = 0.064\nsamples = 788\nvalue = [26, 762]\nclass = Malicious"] ;
38 -> 39 ;
40 [label="functionbody <= 0.5\ngini = 0.069\nsamples = 727\nvalue = [26, 701]\nclass = Malicious"] ;
39 -> 40 ;
41 [label="gini = 0.066\nsamples = 726\nvalue = [25, 701]\nclass = Malicious"] ;
40 -> 41 ;
42 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
40 -> 42 ;
43 [label="gini = 0.0\nsamples = 61\nvalue = [0, 61]\nclass = Malicious"] ;
39 -> 43 ;
44 [label="assignmentoperator <= 0.5\ngini = 0.269\nsamples = 25\nvalue = [4, 21]\nclass = Malicious"] ;
38 -> 44 ;
45 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
44 -> 45 ;
46 [label="gini = 0.159\nsamples = 23\nvalue = [2, 21]\nclass = Malicious"] ;
44 -> 46 ;
47 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
37 -> 47 ;
48 [label="returnstatement <= 0.5\ngini = 0.453\nsamples = 623\nvalue = [407, 216]\nclass = Benign"] ;
34 -> 48 ;
49 [label="elementlist <= 0.5\ngini = 0.015\nsamples = 391\nvalue = [388, 3]\nclass = Benign"] ;
48 -> 49 ;
50 [label="functionbody <= 0.5\ngini = 0.01\nsamples = 381\nvalue = [379, 2]\nclass = Benign"] ;
49 -> 50 ;
51 [label="assignmentoperator <= 0.5\ngini = 0.021\nsamples = 190\nvalue = [188, 2]\nclass = Benign"] ;
50 -> 51 ;
52 [label="arguments <= 0.5\ngini = 0.04\nsamples = 99\nvalue = [97, 2]\nclass = Benign"] ;
51 -> 52 ;
53 [label="gini = 0.0\nsamples = 29\nvalue = [29, 0]\nclass = Benign"] ;
52 -> 53 ;
54 [label="arrayliteral <= 0.5\ngini = 0.056\nsamples = 70\nvalue = [68, 2]\nclass = Benign"] ;
52 -> 54 ;
55 [label="catchproduction <= 0.5\ngini = 0.059\nsamples = 66\nvalue = [64, 2]\nclass = Benign"] ;
54 -> 55 ;
56 [label="ifstatement <= 0.5\ngini = 0.061\nsamples = 64\nvalue = [62, 2]\nclass = Benign"] ;
55 -> 56 ;
57 [label="gini = 0.067\nsamples = 29\nvalue = [28, 1]\nclass = Benign"] ;
56 -> 57 ;
58 [label="statementlist <= 0.5\ngini = 0.056\nsamples = 35\nvalue = [34, 1]\nclass = Benign"] ;
56 -> 58 ;
59 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
58 -> 59 ;
60 [label="gini = 0.062\nsamples = 31\nvalue = [30, 1]\nclass = Benign"] ;
58 -> 60 ;
61 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
55 -> 61 ;
62 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
54 -> 62 ;
63 [label="gini = 0.0\nsamples = 91\nvalue = [91, 0]\nclass = Benign"] ;
51 -> 63 ;
64 [label="gini = 0.0\nsamples = 191\nvalue = [191, 0]\nclass = Benign"] ;
50 -> 64 ;
65 [label="functionbody <= 0.5\ngini = 0.18\nsamples = 10\nvalue = [9, 1]\nclass = Benign"] ;
49 -> 65 ;
66 [label="statementlist <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [2, 1]\nclass = Benign"] ;
65 -> 66 ;
67 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
66 -> 67 ;
68 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
66 -> 68 ;
69 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
65 -> 69 ;
70 [label="ifstatement <= 0.5\ngini = 0.15\nsamples = 232\nvalue = [19, 213]\nclass = Malicious"] ;
48 -> 70 ;
71 [label="formalparameterlist <= 0.5\ngini = 0.093\nsamples = 224\nvalue = [11, 213]\nclass = Malicious"] ;
70 -> 71 ;
72 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
71 -> 72 ;
73 [label="gini = 0.078\nsamples = 222\nvalue = [9, 213]\nclass = Malicious"] ;
71 -> 73 ;
74 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
70 -> 74 ;
75 [label="expressionstatement <= 0.5\ngini = 0.25\nsamples = 8967\nvalue = [1313, 7654]\nclass = Malicious"] ;
1 -> 75 ;
76 [label="gini = 0.0\nsamples = 261\nvalue = [261, 0]\nclass = Benign"] ;
75 -> 76 ;
77 [label="variablestatement <= 0.5\ngini = 0.212\nsamples = 8706\nvalue = [1052, 7654]\nclass = Malicious"] ;
75 -> 77 ;
78 [label="returnstatement <= 0.5\ngini = 0.4\nsamples = 1451\nvalue = [401, 1050]\nclass = Malicious"] ;
77 -> 78 ;
79 [label="ifstatement <= 0.5\ngini = 0.486\nsamples = 944\nvalue = [394, 550]\nclass = Malicious"] ;
78 -> 79 ;
80 [label="arguments <= 0.5\ngini = 0.403\nsamples = 451\nvalue = [325, 126]\nclass = Benign"] ;
79 -> 80 ;
81 [label="gini = 0.0\nsamples = 100\nvalue = [100, 0]\nclass = Benign"] ;
80 -> 81 ;
82 [label="functionbody <= 0.5\ngini = 0.46\nsamples = 351\nvalue = [225, 126]\nclass = Benign"] ;
80 -> 82 ;
83 [label="identifiername <= 0.5\ngini = 0.499\nsamples = 261\nvalue = [135, 126]\nclass = Benign"] ;
82 -> 83 ;
84 [label="arrayliteral <= 0.5\ngini = 0.128\nsamples = 29\nvalue = [27, 2]\nclass = Benign"] ;
83 -> 84 ;
85 [label="gini = 0.0\nsamples = 27\nvalue = [27, 0]\nclass = Benign"] ;
84 -> 85 ;
86 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
84 -> 86 ;
87 [label="emptystatement <= 0.5\ngini = 0.498\nsamples = 232\nvalue = [108, 124]\nclass = Malicious"] ;
83 -> 87 ;
88 [label="arrayliteral <= 0.5\ngini = 0.49\nsamples = 217\nvalue = [93, 124]\nclass = Malicious"] ;
87 -> 88 ;
89 [label="trystatement <= 0.5\ngini = 0.486\nsamples = 212\nvalue = [88, 124]\nclass = Malicious"] ;
88 -> 89 ;
90 [label="assignmentoperator <= 0.5\ngini = 0.485\nsamples = 211\nvalue = [87, 124]\nclass = Malicious"] ;
89 -> 90 ;
91 [label="gini = 0.484\nsamples = 210\nvalue = [86, 124]\nclass = Malicious"] ;
90 -> 91 ;
92 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
90 -> 92 ;
93 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
89 -> 93 ;
94 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
88 -> 94 ;
95 [label="gini = 0.0\nsamples = 15\nvalue = [15, 0]\nclass = Benign"] ;
87 -> 95 ;
96 [label="gini = 0.0\nsamples = 90\nvalue = [90, 0]\nclass = Benign"] ;
82 -> 96 ;
97 [label="statementlist <= 0.5\ngini = 0.241\nsamples = 493\nvalue = [69, 424]\nclass = Malicious"] ;
79 -> 97 ;
98 [label="identifiername <= 0.5\ngini = 0.014\nsamples = 427\nvalue = [3, 424]\nclass = Malicious"] ;
97 -> 98 ;
99 [label="gini = 0.0\nsamples = 139\nvalue = [0, 139]\nclass = Malicious"] ;
98 -> 99 ;
100 [label="gini = 0.021\nsamples = 288\nvalue = [3, 285]\nclass = Malicious"] ;
98 -> 100 ;
101 [label="gini = 0.0\nsamples = 66\nvalue = [66, 0]\nclass = Benign"] ;
97 -> 101 ;
102 [label="identifiername <= 0.5\ngini = 0.027\nsamples = 507\nvalue = [7, 500]\nclass = Malicious"] ;
78 -> 102 ;
103 [label="gini = 0.0\nsamples = 500\nvalue = [0, 500]\nclass = Malicious"] ;
102 -> 103 ;
104 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
102 -> 104 ;
105 [label="arguments <= 0.5\ngini = 0.163\nsamples = 7255\nvalue = [651, 6604]\nclass = Malicious"] ;
77 -> 105 ;
106 [label="gini = 0.0\nsamples = 109\nvalue = [109, 0]\nclass = Benign"] ;
105 -> 106 ;
107 [label="elementlist <= 0.5\ngini = 0.14\nsamples = 7146\nvalue = [542, 6604]\nclass = Malicious"] ;
105 -> 107 ;
108 [label="do_for_while_statement <= 0.5\ngini = 0.242\nsamples = 3386\nvalue = [477, 2909]\nclass = Malicious"] ;
107 -> 108 ;
109 [label="returnstatement <= 0.5\ngini = 0.207\nsamples = 3117\nvalue = [365, 2752]\nclass = Malicious"] ;
108 -> 109 ;
110 [label="functionbody <= 0.5\ngini = 0.304\nsamples = 1284\nvalue = [240, 1044]\nclass = Malicious"] ;
109 -> 110 ;
111 [label="emptystatement <= 0.5\ngini = 0.143\nsamples = 1060\nvalue = [82, 978]\nclass = Malicious"] ;
110 -> 111 ;
112 [label="identifiername <= 0.5\ngini = 0.138\nsamples = 1057\nvalue = [79, 978]\nclass = Malicious"] ;
111 -> 112 ;
113 [label="gini = 0.077\nsamples = 450\nvalue = [18, 432]\nclass = Malicious"] ;
112 -> 113 ;
114 [label="trystatement <= 0.5\ngini = 0.181\nsamples = 607\nvalue = [61, 546]\nclass = Malicious"] ;
112 -> 114 ;
115 [label="assignmentoperator <= 0.5\ngini = 0.177\nsamples = 603\nvalue = [59, 544]\nclass = Malicious"] ;
114 -> 115 ;
116 [label="ifstatement <= 0.5\ngini = 0.174\nsamples = 601\nvalue = [58, 543]\nclass = Malicious"] ;
115 -> 116 ;
117 [label="gini = 0.167\nsamples = 412\nvalue = [38, 374]\nclass = Malicious"] ;
116 -> 117 ;
118 [label="block <= 0.5\ngini = 0.189\nsamples = 189\nvalue = [20, 169]\nclass = Malicious"] ;
116 -> 118 ;
119 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
118 -> 119 ;
120 [label="gini = 0.166\nsamples = 186\nvalue = [17, 169]\nclass = Malicious"] ;
118 -> 120 ;
121 [label="ifstatement <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
115 -> 121 ;
122 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
121 -> 122 ;
123 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
121 -> 123 ;
124 [label="ifstatement <= 0.5\ngini = 0.5\nsamples = 4\nvalue = [2, 2]\nclass = Benign"] ;
114 -> 124 ;
125 [label="gini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
124 -> 125 ;
126 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
124 -> 126 ;
127 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
111 -> 127 ;
128 [label="emptystatement <= 0.5\ngini = 0.416\nsamples = 224\nvalue = [158, 66]\nclass = Benign"] ;
110 -> 128 ;
129 [label="formalparameterlist <= 0.5\ngini = 0.122\nsamples = 168\nvalue = [157, 11]\nclass = Benign"] ;
128 -> 129 ;
130 [label="gini = 0.0\nsamples = 132\nvalue = [132, 0]\nclass = Benign"] ;
129 -> 130 ;
131 [label="ifstatement <= 0.5\ngini = 0.424\nsamples = 36\nvalue = [25, 11]\nclass = Benign"] ;
129 -> 131 ;
132 [label="arrayliteral <= 0.5\ngini = 0.475\nsamples = 18\nvalue = [7, 11]\nclass = Malicious"] ;
131 -> 132 ;
133 [label="gini = 0.457\nsamples = 17\nvalue = [6, 11]\nclass = Malicious"] ;
132 -> 133 ;
134 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
132 -> 134 ;
135 [label="gini = 0.0\nsamples = 18\nvalue = [18, 0]\nclass = Benign"] ;
131 -> 135 ;
136 [label="block <= 0.5\ngini = 0.035\nsamples = 56\nvalue = [1, 55]\nclass = Malicious"] ;
128 -> 136 ;
137 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
136 -> 137 ;
138 [label="gini = 0.0\nsamples = 55\nvalue = [0, 55]\nclass = Malicious"] ;
136 -> 138 ;
139 [label="block <= 0.5\ngini = 0.127\nsamples = 1833\nvalue = [125, 1708]\nclass = Malicious"] ;
109 -> 139 ;
140 [label="formalparameterlist <= 0.5\ngini = 0.036\nsamples = 876\nvalue = [16, 860]\nclass = Malicious"] ;
139 -> 140 ;
141 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
140 -> 141 ;
142 [label="ifstatement <= 0.5\ngini = 0.034\nsamples = 875\nvalue = [15, 860]\nclass = Malicious"] ;
140 -> 142 ;
143 [label="gini = 0.0\nsamples = 13\nvalue = [0, 13]\nclass = Malicious"] ;
142 -> 143 ;
144 [label="gini = 0.034\nsamples = 862\nvalue = [15, 847]\nclass = Malicious"] ;
142 -> 144 ;
145 [label="identifiername <= 0.5\ngini = 0.202\nsamples = 957\nvalue = [109, 848]\nclass = Malicious"] ;
139 -> 145 ;
146 [label="gini = 0.0\nsamples = 221\nvalue = [0, 221]\nclass = Malicious"] ;
145 -> 146 ;
147 [label="formalparameterarg <= 0.5\ngini = 0.252\nsamples = 736\nvalue = [109, 627]\nclass = Malicious"] ;
145 -> 147 ;
148 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
147 -> 148 ;
149 [label="arrayliteral <= 0.5\ngini = 0.247\nsamples = 733\nvalue = [106, 627]\nclass = Malicious"] ;
147 -> 149 ;
150 [label="emptystatement <= 0.5\ngini = 0.246\nsamples = 732\nvalue = [105, 627]\nclass = Malicious"] ;
149 -> 150 ;
151 [label="gini = 0.244\nsamples = 730\nvalue = [104, 626]\nclass = Malicious"] ;
150 -> 151 ;
152 [label="catchproduction <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
150 -> 152 ;
153 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
152 -> 153 ;
154 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
152 -> 154 ;
155 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
149 -> 155 ;
156 [label="assignmentoperator <= 0.5\ngini = 0.486\nsamples = 269\nvalue = [112, 157]\nclass = Malicious"] ;
108 -> 156 ;
157 [label="breakstatement <= 0.5\ngini = 0.22\nsamples = 127\nvalue = [111, 16]\nclass = Benign"] ;
156 -> 157 ;
158 [label="gini = 0.0\nsamples = 111\nvalue = [111, 0]\nclass = Benign"] ;
157 -> 158 ;
159 [label="gini = 0.0\nsamples = 16\nvalue = [0, 16]\nclass = Malicious"] ;
157 -> 159 ;
160 [label="ifstatement <= 0.5\ngini = 0.014\nsamples = 142\nvalue = [1, 141]\nclass = Malicious"] ;
156 -> 160 ;
161 [label="gini = 0.0\nsamples = 135\nvalue = [0, 135]\nclass = Malicious"] ;
160 -> 161 ;
162 [label="emptystatement <= 0.5\ngini = 0.245\nsamples = 7\nvalue = [1, 6]\nclass = Malicious"] ;
160 -> 162 ;
163 [label="functionbody <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
162 -> 163 ;
164 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
163 -> 164 ;
165 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
163 -> 165 ;
166 [label="gini = 0.0\nsamples = 5\nvalue = [0, 5]\nclass = Malicious"] ;
162 -> 166 ;
167 [label="functionbody <= 0.5\ngini = 0.034\nsamples = 3760\nvalue = [65, 3695]\nclass = Malicious"] ;
107 -> 167 ;
168 [label="ifstatement <= 0.5\ngini = 0.002\nsamples = 2872\nvalue = [3, 2869]\nclass = Malicious"] ;
167 -> 168 ;
169 [label="do_for_while_statement <= 0.5\ngini = 0.009\nsamples = 422\nvalue = [2, 420]\nclass = Malicious"] ;
168 -> 169 ;
170 [label="identifiername <= 0.5\ngini = 0.26\nsamples = 13\nvalue = [2, 11]\nclass = Malicious"] ;
169 -> 170 ;
171 [label="gini = 0.0\nsamples = 11\nvalue = [0, 11]\nclass = Malicious"] ;
170 -> 171 ;
172 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
170 -> 172 ;
173 [label="gini = 0.0\nsamples = 409\nvalue = [0, 409]\nclass = Malicious"] ;
169 -> 173 ;
174 [label="emptystatement <= 0.5\ngini = 0.001\nsamples = 2450\nvalue = [1, 2449]\nclass = Malicious"] ;
168 -> 174 ;
175 [label="statementlist <= 0.5\ngini = 0.002\nsamples = 998\nvalue = [1, 997]\nclass = Malicious"] ;
174 -> 175 ;
176 [label="gini = 0.0\nsamples = 762\nvalue = [0, 762]\nclass = Malicious"] ;
175 -> 176 ;
177 [label="identifiername <= 0.5\ngini = 0.008\nsamples = 236\nvalue = [1, 235]\nclass = Malicious"] ;
175 -> 177 ;
178 [label="gini = 0.0\nsamples = 19\nvalue = [0, 19]\nclass = Malicious"] ;
177 -> 178 ;
179 [label="caseblock <= 0.5\ngini = 0.009\nsamples = 217\nvalue = [1, 216]\nclass = Malicious"] ;
177 -> 179 ;
180 [label="gini = 0.009\nsamples = 213\nvalue = [1, 212]\nclass = Malicious"] ;
179 -> 180 ;
181 [label="gini = 0.0\nsamples = 4\nvalue = [0, 4]\nclass = Malicious"] ;
179 -> 181 ;
182 [label="gini = 0.0\nsamples = 1452\nvalue = [0, 1452]\nclass = Malicious"] ;
174 -> 182 ;
183 [label="returnstatement <= 0.5\ngini = 0.13\nsamples = 888\nvalue = [62, 826]\nclass = Malicious"] ;
167 -> 183 ;
184 [label="emptystatement <= 0.5\ngini = 0.479\nsamples = 143\nvalue = [57, 86]\nclass = Malicious"] ;
183 -> 184 ;
185 [label="gini = 0.0\nsamples = 57\nvalue = [57, 0]\nclass = Benign"] ;
184 -> 185 ;
186 [label="gini = 0.0\nsamples = 86\nvalue = [0, 86]\nclass = Malicious"] ;
184 -> 186 ;
187 [label="breakstatement <= 0.5\ngini = 0.013\nsamples = 745\nvalue = [5, 740]\nclass = Malicious"] ;
183 -> 187 ;
188 [label="identifiername <= 0.5\ngini = 0.008\nsamples = 743\nvalue = [3, 740]\nclass = Malicious"] ;
187 -> 188 ;
189 [label="gini = 0.0\nsamples = 528\nvalue = [0, 528]\nclass = Malicious"] ;
188 -> 189 ;
190 [label="assignmentoperator <= 0.5\ngini = 0.028\nsamples = 215\nvalue = [3, 212]\nclass = Malicious"] ;
188 -> 190 ;
191 [label="statementlist <= 0.5\ngini = 0.48\nsamples = 5\nvalue = [2, 3]\nclass = Malicious"] ;
190 -> 191 ;
192 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
191 -> 192 ;
193 [label="formalparameterlist <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [2, 1]\nclass = Benign"] ;
191 -> 193 ;
194 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
193 -> 194 ;
195 [label="gini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
193 -> 195 ;
196 [label="formalparameterarg <= 0.5\ngini = 0.009\nsamples = 210\nvalue = [1, 209]\nclass = Malicious"] ;
190 -> 196 ;
197 [label="gini = 0.0\nsamples = 209\nvalue = [0, 209]\nclass = Malicious"] ;
196 -> 197 ;
198 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
196 -> 198 ;
199 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
187 -> 199 ;
200 [label="do_for_while_statement <= 0.5\ngini = 0.248\nsamples = 10727\nvalue = [9170, 1557]\nclass = Benign"] ;
0 -> 200 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
201 [label="catchproduction <= 0.5\ngini = 0.0\nsamples = 8954\nvalue = [8952, 2]\nclass = Benign"] ;
200 -> 201 ;
202 [label="gini = 0.0\nsamples = 8847\nvalue = [8847, 0]\nclass = Benign"] ;
201 -> 202 ;
203 [label="functionbody <= 0.5\ngini = 0.037\nsamples = 107\nvalue = [105, 2]\nclass = Benign"] ;
201 -> 203 ;
204 [label="ifstatement <= 0.5\ngini = 0.07\nsamples = 55\nvalue = [53, 2]\nclass = Benign"] ;
203 -> 204 ;
205 [label="gini = 0.0\nsamples = 25\nvalue = [25, 0]\nclass = Benign"] ;
204 -> 205 ;
206 [label="varmodifier <= 0.5\ngini = 0.124\nsamples = 30\nvalue = [28, 2]\nclass = Benign"] ;
204 -> 206 ;
207 [label="gini = 0.0\nsamples = 15\nvalue = [15, 0]\nclass = Benign"] ;
206 -> 207 ;
208 [label="arrayliteral <= 0.5\ngini = 0.231\nsamples = 15\nvalue = [13, 2]\nclass = Benign"] ;
206 -> 208 ;
209 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
208 -> 209 ;
210 [label="elementlist <= 0.5\ngini = 0.133\nsamples = 14\nvalue = [13, 1]\nclass = Benign"] ;
208 -> 210 ;
211 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
210 -> 211 ;
212 [label="gini = 0.142\nsamples = 13\nvalue = [12, 1]\nclass = Benign"] ;
210 -> 212 ;
213 [label="gini = 0.0\nsamples = 52\nvalue = [52, 0]\nclass = Benign"] ;
203 -> 213 ;
214 [label="identifiername <= 0.5\ngini = 0.216\nsamples = 1773\nvalue = [218, 1555]\nclass = Malicious"] ;
200 -> 214 ;
215 [label="gini = 0.0\nsamples = 1499\nvalue = [0, 1499]\nclass = Malicious"] ;
214 -> 215 ;
216 [label="catchproduction <= 0.5\ngini = 0.325\nsamples = 274\nvalue = [218, 56]\nclass = Benign"] ;
214 -> 216 ;
217 [label="property_rules <= 0.5\ngini = 0.01\nsamples = 194\nvalue = [193, 1]\nclass = Benign"] ;
216 -> 217 ;
218 [label="emptystatement <= 0.5\ngini = 0.124\nsamples = 15\nvalue = [14, 1]\nclass = Benign"] ;
217 -> 218 ;
219 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
218 -> 219 ;
220 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
218 -> 220 ;
221 [label="gini = 0.0\nsamples = 179\nvalue = [179, 0]\nclass = Benign"] ;
217 -> 221 ;
222 [label="assignmentoperator <= 0.5\ngini = 0.43\nsamples = 80\nvalue = [25, 55]\nclass = Malicious"] ;
216 -> 222 ;
223 [label="breakstatement <= 0.5\ngini = 0.305\nsamples = 16\nvalue = [13, 3]\nclass = Benign"] ;
222 -> 223 ;
224 [label="gini = 0.0\nsamples = 13\nvalue = [13, 0]\nclass = Benign"] ;
223 -> 224 ;
225 [label="gini = 0.0\nsamples = 3\nvalue = [0, 3]\nclass = Malicious"] ;
223 -> 225 ;
226 [label="finallyproduction <= 0.5\ngini = 0.305\nsamples = 64\nvalue = [12, 52]\nclass = Malicious"] ;
222 -> 226 ;
227 [label="breakstatement <= 0.5\ngini = 0.457\nsamples = 34\nvalue = [12, 22]\nclass = Malicious"] ;
226 -> 227 ;
228 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
227 -> 228 ;
229 [label="emptystatement <= 0.5\ngini = 0.211\nsamples = 25\nvalue = [3, 22]\nclass = Malicious"] ;
227 -> 229 ;
230 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
229 -> 230 ;
231 [label="gini = 0.0\nsamples = 22\nvalue = [0, 22]\nclass = Malicious"] ;
229 -> 231 ;
232 [label="gini = 0.0\nsamples = 30\nvalue = [0, 30]\nclass = Malicious"] ;
226 -> 232 ;
}
