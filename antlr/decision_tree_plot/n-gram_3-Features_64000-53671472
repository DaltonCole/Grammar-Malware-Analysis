digraph Tree {
node [shape=box] ;
0 [label="litereral_stuff-property_rules-propertyname <= 0.5\ngini = 0.5\nsamples = 27000\nvalue = [13524, 13476]\nclass = Benign"] ;
1 [label="expression_statement-identifiername-identifiername <= 0.5\ngini = 0.404\nsamples = 16571\nvalue = [4656, 11915]\nclass = Malicious"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="expression_statement-expressionsequence-expression_statement <= 0.5\ngini = 0.353\nsamples = 15273\nvalue = [3497, 11776]\nclass = Malicious"] ;
1 -> 2 ;
3 [label="variable_stuff-expression_statement-expression_statement <= 0.5\ngini = 0.473\nsamples = 8085\nvalue = [3098, 4987]\nclass = Malicious"] ;
2 -> 3 ;
4 [label="expression_statement-literal-expression_statement <= 0.5\ngini = 0.499\nsamples = 5359\nvalue = [2792, 2567]\nclass = Benign"] ;
3 -> 4 ;
5 [label="sourceElement_stuff-variable_stuff-varmodifier <= 0.5\ngini = 0.495\nsamples = 4655\nvalue = [2088, 2567]\nclass = Malicious"] ;
4 -> 5 ;
6 [label="sourceElement_stuff-expressionstatement-expressionsequence <= 0.5\ngini = 0.459\nsamples = 3930\nvalue = [1402, 2528]\nclass = Malicious"] ;
5 -> 6 ;
7 [label="expression_statement-expression_statement-identifiername <= 0.5\ngini = 0.394\nsamples = 2748\nvalue = [740, 2008]\nclass = Malicious"] ;
6 -> 7 ;
8 [label="numericliteral-expressionstatement-expressionsequence <= 0.5\ngini = 0.385\nsamples = 2713\nvalue = [705, 2008]\nclass = Malicious"] ;
7 -> 8 ;
9 [label="expressionstatement-expressionsequence-expression_statement <= 0.5\ngini = 0.397\nsamples = 2578\nvalue = [705, 1873]\nclass = Malicious"] ;
8 -> 9 ;
10 [label="gini = 0.395\nsamples = 2570\nvalue = [697, 1873]\nclass = Malicious"] ;
9 -> 10 ;
11 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
9 -> 11 ;
12 [label="gini = 0.0\nsamples = 135\nvalue = [0, 135]\nclass = Malicious"] ;
8 -> 12 ;
13 [label="gini = 0.0\nsamples = 35\nvalue = [35, 0]\nclass = Benign"] ;
7 -> 13 ;
14 [label="variable_stuff-expression_statement-literal <= 0.5\ngini = 0.493\nsamples = 1182\nvalue = [662, 520]\nclass = Benign"] ;
6 -> 14 ;
15 [label="argument_stuff-expression_statement-expression_statement <= 0.5\ngini = 0.423\nsamples = 941\nvalue = [655, 286]\nclass = Benign"] ;
14 -> 15 ;
16 [label="gini = 0.0\nsamples = 608\nvalue = [608, 0]\nclass = Benign"] ;
15 -> 16 ;
17 [label="identifiername-expression_statement-expression_statement <= 0.5\ngini = 0.242\nsamples = 333\nvalue = [47, 286]\nclass = Malicious"] ;
15 -> 17 ;
18 [label="expression_statement-expression_statement-identifiername <= 0.5\ngini = 0.127\nsamples = 307\nvalue = [21, 286]\nclass = Malicious"] ;
17 -> 18 ;
19 [label="gini = 0.0\nsamples = 15\nvalue = [15, 0]\nclass = Benign"] ;
18 -> 19 ;
20 [label="expression_statement-sourceElement_stuff-sourceElement_stuff <= 0.5\ngini = 0.04\nsamples = 292\nvalue = [6, 286]\nclass = Malicious"] ;
18 -> 20 ;
21 [label="expression_statement-argument_stuff-expression_statement <= 0.5\ngini = 0.021\nsamples = 289\nvalue = [3, 286]\nclass = Malicious"] ;
20 -> 21 ;
22 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
21 -> 22 ;
23 [label="gini = 0.0\nsamples = 286\nvalue = [0, 286]\nclass = Malicious"] ;
21 -> 23 ;
24 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
20 -> 24 ;
25 [label="gini = 0.0\nsamples = 26\nvalue = [26, 0]\nclass = Benign"] ;
17 -> 25 ;
26 [label="expression_statement-identifiername-expression_statement <= 0.5\ngini = 0.056\nsamples = 241\nvalue = [7, 234]\nclass = Malicious"] ;
14 -> 26 ;
27 [label="gini = 0.0\nsamples = 234\nvalue = [0, 234]\nclass = Malicious"] ;
26 -> 27 ;
28 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
26 -> 28 ;
29 [label="expression_statement-expression_statement-assignmentoperator <= 0.5\ngini = 0.102\nsamples = 725\nvalue = [686, 39]\nclass = Benign"] ;
5 -> 29 ;
30 [label="gini = 0.0\nsamples = 686\nvalue = [686, 0]\nclass = Benign"] ;
29 -> 30 ;
31 [label="gini = 0.0\nsamples = 39\nvalue = [0, 39]\nclass = Malicious"] ;
29 -> 31 ;
32 [label="gini = 0.0\nsamples = 704\nvalue = [704, 0]\nclass = Benign"] ;
4 -> 32 ;
33 [label="identifiername-expression_statement-literal <= 0.5\ngini = 0.199\nsamples = 2726\nvalue = [306, 2420]\nclass = Malicious"] ;
3 -> 33 ;
34 [label="argument_stuff-expression_statement-literal <= 0.5\ngini = 0.123\nsamples = 2590\nvalue = [170, 2420]\nclass = Malicious"] ;
33 -> 34 ;
35 [label="variable_stuff-expression_statement-variable_stuff <= 0.5\ngini = 0.354\nsamples = 87\nvalue = [67, 20]\nclass = Benign"] ;
34 -> 35 ;
36 [label="gini = 0.0\nsamples = 67\nvalue = [67, 0]\nclass = Benign"] ;
35 -> 36 ;
37 [label="gini = 0.0\nsamples = 20\nvalue = [0, 20]\nclass = Malicious"] ;
35 -> 37 ;
38 [label="expression_statement-sourceElement_stuff-sourceElement_stuff <= 0.5\ngini = 0.079\nsamples = 2503\nvalue = [103, 2400]\nclass = Malicious"] ;
34 -> 38 ;
39 [label="expression_statement-expression_statement-expression_statement <= 0.5\ngini = 0.045\nsamples = 2457\nvalue = [57, 2400]\nclass = Malicious"] ;
38 -> 39 ;
40 [label="gini = 0.0\nsamples = 10\nvalue = [10, 0]\nclass = Benign"] ;
39 -> 40 ;
41 [label="literal-expression_statement-expression_statement <= 0.5\ngini = 0.038\nsamples = 2447\nvalue = [47, 2400]\nclass = Malicious"] ;
39 -> 41 ;
42 [label="expression_statement-identifiername-variable_stuff <= 0.5\ngini = 0.028\nsamples = 2428\nvalue = [35, 2393]\nclass = Malicious"] ;
41 -> 42 ;
43 [label="argument_stuff-expression_statement-identifiername <= 0.5\ngini = 0.024\nsamples = 2423\nvalue = [30, 2393]\nclass = Malicious"] ;
42 -> 43 ;
44 [label="expression_statement-identifiername-expression_statement <= 0.5\ngini = 0.021\nsamples = 2419\nvalue = [26, 2393]\nclass = Malicious"] ;
43 -> 44 ;
45 [label="expression_statement-literal-switchstatement <= 0.5\ngini = 0.02\nsamples = 2417\nvalue = [24, 2393]\nclass = Malicious"] ;
44 -> 45 ;
46 [label="expressionsequence-expression_statement-variable_stuff <= 0.5\ngini = 0.019\nsamples = 2416\nvalue = [23, 2393]\nclass = Malicious"] ;
45 -> 46 ;
47 [label="numericliteral-variable_stuff-expression_statement <= 0.5\ngini = 0.018\nsamples = 2415\nvalue = [22, 2393]\nclass = Malicious"] ;
46 -> 47 ;
48 [label="numericliteral-expression_statement-expression_statement <= 0.5\ngini = 0.017\nsamples = 2414\nvalue = [21, 2393]\nclass = Malicious"] ;
47 -> 48 ;
49 [label="identifiername-argument_stuff-variable_stuff <= 0.5\ngini = 0.016\nsamples = 2413\nvalue = [20, 2393]\nclass = Malicious"] ;
48 -> 49 ;
50 [label="expression_statement-litereral_stuff-element_stuff <= 0.5\ngini = 0.016\nsamples = 2412\nvalue = [19, 2393]\nclass = Malicious"] ;
49 -> 50 ;
51 [label="expression_statement-identifiername-argument_stuff <= 0.5\ngini = 0.015\nsamples = 2411\nvalue = [18, 2393]\nclass = Malicious"] ;
50 -> 51 ;
52 [label="numericliteral-expression_statement-literal <= 0.5\ngini = 0.005\nsamples = 2043\nvalue = [5, 2038]\nclass = Malicious"] ;
51 -> 52 ;
53 [label="variable_stuff-expression_statement-literal <= 0.5\ngini = 0.003\nsamples = 2041\nvalue = [3, 2038]\nclass = Malicious"] ;
52 -> 53 ;
54 [label="gini = 0.0\nsamples = 1131\nvalue = [0, 1131]\nclass = Malicious"] ;
53 -> 54 ;
55 [label="expressionsequence-expression_statement-expression_statement <= 0.5\ngini = 0.007\nsamples = 910\nvalue = [3, 907]\nclass = Malicious"] ;
53 -> 55 ;
56 [label="literal-expression_statement-literal <= 0.5\ngini = 0.012\nsamples = 490\nvalue = [3, 487]\nclass = Malicious"] ;
55 -> 56 ;
57 [label="literal-expressionsequence-expression_statement <= 0.5\ngini = 0.004\nsamples = 488\nvalue = [1, 487]\nclass = Malicious"] ;
56 -> 57 ;
58 [label="gini = 0.014\nsamples = 146\nvalue = [1, 145]\nclass = Malicious"] ;
57 -> 58 ;
59 [label="gini = 0.0\nsamples = 342\nvalue = [0, 342]\nclass = Malicious"] ;
57 -> 59 ;
60 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
56 -> 60 ;
61 [label="gini = 0.0\nsamples = 420\nvalue = [0, 420]\nclass = Malicious"] ;
55 -> 61 ;
62 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
52 -> 62 ;
63 [label="expression_statement-literal-numericliteral <= 0.5\ngini = 0.068\nsamples = 368\nvalue = [13, 355]\nclass = Malicious"] ;
51 -> 63 ;
64 [label="gini = 0.0\nsamples = 13\nvalue = [13, 0]\nclass = Benign"] ;
63 -> 64 ;
65 [label="gini = 0.0\nsamples = 355\nvalue = [0, 355]\nclass = Malicious"] ;
63 -> 65 ;
66 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
50 -> 66 ;
67 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
49 -> 67 ;
68 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
48 -> 68 ;
69 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
47 -> 69 ;
70 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
46 -> 70 ;
71 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
45 -> 71 ;
72 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
44 -> 72 ;
73 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
43 -> 73 ;
74 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
42 -> 74 ;
75 [label="literal-numericliteral-variable_stuff <= 0.5\ngini = 0.465\nsamples = 19\nvalue = [12, 7]\nclass = Benign"] ;
41 -> 75 ;
76 [label="gini = 0.0\nsamples = 12\nvalue = [12, 0]\nclass = Benign"] ;
75 -> 76 ;
77 [label="gini = 0.0\nsamples = 7\nvalue = [0, 7]\nclass = Malicious"] ;
75 -> 77 ;
78 [label="gini = 0.0\nsamples = 46\nvalue = [46, 0]\nclass = Benign"] ;
38 -> 78 ;
79 [label="gini = 0.0\nsamples = 136\nvalue = [136, 0]\nclass = Benign"] ;
33 -> 79 ;
80 [label="literal-expression_statement-expressionstatement <= 0.5\ngini = 0.105\nsamples = 7188\nvalue = [399, 6789]\nclass = Malicious"] ;
2 -> 80 ;
81 [label="identifiername-expression_statement-litereral_stuff <= 0.5\ngini = 0.067\nsamples = 6877\nvalue = [237, 6640]\nclass = Malicious"] ;
80 -> 81 ;
82 [label="identifiername-expressionstatement-expressionsequence <= 0.5\ngini = 0.05\nsamples = 6816\nvalue = [176, 6640]\nclass = Malicious"] ;
81 -> 82 ;
83 [label="argument_stuff-expression_statement-sourceElement_stuff <= 0.5\ngini = 0.035\nsamples = 6757\nvalue = [119, 6638]\nclass = Malicious"] ;
82 -> 83 ;
84 [label="litereral_stuff-expressionstatement-expressionsequence <= 0.5\ngini = 0.03\nsamples = 6741\nvalue = [103, 6638]\nclass = Malicious"] ;
83 -> 84 ;
85 [label="identifiername-expression_statement-expression_statement <= 0.5\ngini = 0.026\nsamples = 6727\nvalue = [89, 6638]\nclass = Malicious"] ;
84 -> 85 ;
86 [label="argument_stuff-expression_statement-formalparameterlist <= 0.5\ngini = 0.018\nsamples = 6652\nvalue = [62, 6590]\nclass = Malicious"] ;
85 -> 86 ;
87 [label="literal-expression_statement-formalparameterlist <= 0.5\ngini = 0.017\nsamples = 6648\nvalue = [58, 6590]\nclass = Malicious"] ;
86 -> 87 ;
88 [label="expression_statement-argument_stuff-identifiername <= 0.5\ngini = 0.016\nsamples = 6643\nvalue = [54, 6589]\nclass = Malicious"] ;
87 -> 88 ;
89 [label="argument_stuff-ifstatement-expressionsequence <= 0.5\ngini = 0.015\nsamples = 6640\nvalue = [51, 6589]\nclass = Malicious"] ;
88 -> 89 ;
90 [label="expression_statement-expression_statement-argument_stuff <= 0.5\ngini = 0.014\nsamples = 6636\nvalue = [48, 6588]\nclass = Malicious"] ;
89 -> 90 ;
91 [label="returnstatement-expressionsequence-expression_statement <= 0.5\ngini = 0.123\nsamples = 545\nvalue = [36, 509]\nclass = Malicious"] ;
90 -> 91 ;
92 [label="expression_statement-expression_statement-expressionstatement <= 0.5\ngini = 0.403\nsamples = 50\nvalue = [36, 14]\nclass = Benign"] ;
91 -> 92 ;
93 [label="literal-variable_stuff-expression_statement <= 0.5\ngini = 0.053\nsamples = 37\nvalue = [36, 1]\nclass = Benign"] ;
92 -> 93 ;
94 [label="gini = 0.0\nsamples = 36\nvalue = [36, 0]\nclass = Benign"] ;
93 -> 94 ;
95 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
93 -> 95 ;
96 [label="gini = 0.0\nsamples = 13\nvalue = [0, 13]\nclass = Malicious"] ;
92 -> 96 ;
97 [label="gini = 0.0\nsamples = 495\nvalue = [0, 495]\nclass = Malicious"] ;
91 -> 97 ;
98 [label="sourceElement_stuff-sourceElement_stuff-do_for_while_statement <= 0.5\ngini = 0.004\nsamples = 6091\nvalue = [12, 6079]\nclass = Malicious"] ;
90 -> 98 ;
99 [label="identifiername-identifiername-expression_statement <= 0.5\ngini = 0.004\nsamples = 6090\nvalue = [11, 6079]\nclass = Malicious"] ;
98 -> 99 ;
100 [label="expression_statement-expression_statement-expression_statement <= 0.5\ngini = 0.003\nsamples = 6089\nvalue = [10, 6079]\nclass = Malicious"] ;
99 -> 100 ;
101 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
100 -> 101 ;
102 [label="literal-expression_statement-identifiername <= 0.5\ngini = 0.003\nsamples = 6088\nvalue = [9, 6079]\nclass = Malicious"] ;
100 -> 102 ;
103 [label="argument_stuff-expression_statement-argument_stuff <= 0.5\ngini = 0.003\nsamples = 6086\nvalue = [8, 6078]\nclass = Malicious"] ;
102 -> 103 ;
104 [label="expression_statement-literal-expression_statement <= 0.5\ngini = 0.002\nsamples = 6011\nvalue = [5, 6006]\nclass = Malicious"] ;
103 -> 104 ;
105 [label="sourceElement_stuff-ifstatement-expressionsequence <= 0.5\ngini = 0.017\nsamples = 598\nvalue = [5, 593]\nclass = Malicious"] ;
104 -> 105 ;
106 [label="sourceElement_stuff-expressionstatement-expressionsequence <= 0.5\ngini = 0.013\nsamples = 597\nvalue = [4, 593]\nclass = Malicious"] ;
105 -> 106 ;
107 [label="expression_statement-identifiername-argument_stuff <= 0.5\ngini = 0.231\nsamples = 30\nvalue = [4, 26]\nclass = Malicious"] ;
106 -> 107 ;
108 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
107 -> 108 ;
109 [label="gini = 0.0\nsamples = 26\nvalue = [0, 26]\nclass = Malicious"] ;
107 -> 109 ;
110 [label="gini = 0.0\nsamples = 567\nvalue = [0, 567]\nclass = Malicious"] ;
106 -> 110 ;
111 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
105 -> 111 ;
112 [label="gini = 0.0\nsamples = 5413\nvalue = [0, 5413]\nclass = Malicious"] ;
104 -> 112 ;
113 [label="expression_statement-ifstatement-expressionsequence <= 0.5\ngini = 0.077\nsamples = 75\nvalue = [3, 72]\nclass = Malicious"] ;
103 -> 113 ;
114 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
113 -> 114 ;
115 [label="gini = 0.0\nsamples = 72\nvalue = [0, 72]\nclass = Malicious"] ;
113 -> 115 ;
116 [label="variable_stuff-expression_statement-litereral_stuff <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
102 -> 116 ;
117 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
116 -> 117 ;
118 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
116 -> 118 ;
119 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
99 -> 119 ;
120 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
98 -> 120 ;
121 [label="expression_statement-literal-do_for_while_statement <= 0.5\ngini = 0.375\nsamples = 4\nvalue = [3, 1]\nclass = Benign"] ;
89 -> 121 ;
122 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
121 -> 122 ;
123 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
121 -> 123 ;
124 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
88 -> 124 ;
125 [label="variable_stuff-variable_stuff-expression_statement <= 0.5\ngini = 0.32\nsamples = 5\nvalue = [4, 1]\nclass = Benign"] ;
87 -> 125 ;
126 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
125 -> 126 ;
127 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
125 -> 127 ;
128 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
86 -> 128 ;
129 [label="numericliteral-variable_stuff-varmodifier <= 0.5\ngini = 0.461\nsamples = 75\nvalue = [27, 48]\nclass = Malicious"] ;
85 -> 129 ;
130 [label="literal-expression_statement-identifiername <= 0.5\ngini = 0.071\nsamples = 27\nvalue = [26, 1]\nclass = Benign"] ;
129 -> 130 ;
131 [label="gini = 0.0\nsamples = 26\nvalue = [26, 0]\nclass = Benign"] ;
130 -> 131 ;
132 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
130 -> 132 ;
133 [label="formalParameterArg_stuff-formalParameterArg_stuff-formalParameterArg_stuff <= 0.5\ngini = 0.041\nsamples = 48\nvalue = [1, 47]\nclass = Malicious"] ;
129 -> 133 ;
134 [label="gini = 0.0\nsamples = 47\nvalue = [0, 47]\nclass = Malicious"] ;
133 -> 134 ;
135 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
133 -> 135 ;
136 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
84 -> 136 ;
137 [label="gini = 0.0\nsamples = 16\nvalue = [16, 0]\nclass = Benign"] ;
83 -> 137 ;
138 [label="expression_statement-expression_statement-assignmentoperator <= 0.5\ngini = 0.065\nsamples = 59\nvalue = [57, 2]\nclass = Benign"] ;
82 -> 138 ;
139 [label="gini = 0.0\nsamples = 57\nvalue = [57, 0]\nclass = Benign"] ;
138 -> 139 ;
140 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
138 -> 140 ;
141 [label="gini = 0.0\nsamples = 61\nvalue = [61, 0]\nclass = Benign"] ;
81 -> 141 ;
142 [label="do_for_while_statement-varmodifier-variable_stuff <= 0.5\ngini = 0.499\nsamples = 311\nvalue = [162, 149]\nclass = Benign"] ;
80 -> 142 ;
143 [label="expressionsequence-expression_statement-argument_stuff <= 0.5\ngini = 0.012\nsamples = 163\nvalue = [162, 1]\nclass = Benign"] ;
142 -> 143 ;
144 [label="gini = 0.0\nsamples = 162\nvalue = [162, 0]\nclass = Benign"] ;
143 -> 144 ;
145 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
143 -> 145 ;
146 [label="gini = 0.0\nsamples = 148\nvalue = [0, 148]\nclass = Malicious"] ;
142 -> 146 ;
147 [label="numericliteral-argument_stuff-expression_statement <= 0.5\ngini = 0.191\nsamples = 1298\nvalue = [1159, 139]\nclass = Benign"] ;
1 -> 147 ;
148 [label="literal-numericliteral-continue_break_statement <= 0.5\ngini = 0.01\nsamples = 1165\nvalue = [1159, 6]\nclass = Benign"] ;
147 -> 148 ;
149 [label="literal-trystatement-variable_stuff <= 0.5\ngini = 0.007\nsamples = 1163\nvalue = [1159, 4]\nclass = Benign"] ;
148 -> 149 ;
150 [label="expression_statement-assignmentoperator-expression_statement <= 0.5\ngini = 0.003\nsamples = 1161\nvalue = [1159, 2]\nclass = Benign"] ;
149 -> 150 ;
151 [label="expressionsequence-expression_statement-argument_stuff <= 0.5\ngini = 0.002\nsamples = 1157\nvalue = [1156, 1]\nclass = Benign"] ;
150 -> 151 ;
152 [label="gini = 0.0\nsamples = 1145\nvalue = [1145, 0]\nclass = Benign"] ;
151 -> 152 ;
153 [label="identifiername-argument_stuff-expression_statement <= 0.5\ngini = 0.153\nsamples = 12\nvalue = [11, 1]\nclass = Benign"] ;
151 -> 153 ;
154 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
153 -> 154 ;
155 [label="gini = 0.0\nsamples = 11\nvalue = [11, 0]\nclass = Benign"] ;
153 -> 155 ;
156 [label="expression_statement-literal-do_for_while_statement <= 0.5\ngini = 0.375\nsamples = 4\nvalue = [3, 1]\nclass = Benign"] ;
150 -> 156 ;
157 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
156 -> 157 ;
158 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
156 -> 158 ;
159 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
149 -> 159 ;
160 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
148 -> 160 ;
161 [label="gini = 0.0\nsamples = 133\nvalue = [0, 133]\nclass = Malicious"] ;
147 -> 161 ;
162 [label="variable_stuff-variable_stuff-do_for_while_statement <= 0.5\ngini = 0.255\nsamples = 10429\nvalue = [8868, 1561]\nclass = Benign"] ;
0 -> 162 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
163 [label="numericliteral-expression_statement-returnstatement <= 0.5\ngini = 0.013\nsamples = 8921\nvalue = [8863, 58]\nclass = Benign"] ;
162 -> 163 ;
164 [label="literal-continue_break_statement-expressionstatement <= 0.5\ngini = 0.002\nsamples = 8870\nvalue = [8862, 8]\nclass = Benign"] ;
163 -> 164 ;
165 [label="literal-argument_stuff-variable_stuff <= 0.5\ngini = 0.0\nsamples = 8864\nvalue = [8862, 2]\nclass = Benign"] ;
164 -> 165 ;
166 [label="gini = 0.0\nsamples = 8862\nvalue = [8862, 0]\nclass = Benign"] ;
165 -> 166 ;
167 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
165 -> 167 ;
168 [label="gini = 0.0\nsamples = 6\nvalue = [0, 6]\nclass = Malicious"] ;
164 -> 168 ;
169 [label="trystatement-variable_stuff-varmodifier <= 0.5\ngini = 0.038\nsamples = 51\nvalue = [1, 50]\nclass = Malicious"] ;
163 -> 169 ;
170 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
169 -> 170 ;
171 [label="gini = 0.0\nsamples = 50\nvalue = [0, 50]\nclass = Malicious"] ;
169 -> 171 ;
172 [label="argument_stuff-expression_statement-sourceElement_stuff <= 0.5\ngini = 0.007\nsamples = 1508\nvalue = [5, 1503]\nclass = Malicious"] ;
162 -> 172 ;
173 [label="gini = 0.0\nsamples = 1503\nvalue = [0, 1503]\nclass = Malicious"] ;
172 -> 173 ;
174 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
172 -> 174 ;
}
