digraph Tree {
node [shape=box] ;
0 [label="litereral_stuff-property_rules <= 0.5\ngini = 0.5\nsamples = 27000\nvalue = [13503, 13497]\nclass = Benign"] ;
1 [label="identifiername-identifiername <= 0.5\ngini = 0.406\nsamples = 16668\nvalue = [4713, 11955]\nclass = Malicious"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="expression_statement-expressionsequence <= 0.5\ngini = 0.351\nsamples = 15296\nvalue = [3475, 11821]\nclass = Malicious"] ;
1 -> 2 ;
3 [label="sourceElement_stuff-expressionstatement <= 0.5\ngini = 0.471\nsamples = 8072\nvalue = [3067, 5005]\nclass = Malicious"] ;
2 -> 3 ;
4 [label="argument_stuff-expression_statement <= 0.5\ngini = 0.408\nsamples = 5971\nvalue = [1705, 4266]\nclass = Malicious"] ;
3 -> 4 ;
5 [label="varmodifier-variable_stuff <= 0.5\ngini = 0.491\nsamples = 3283\nvalue = [1416, 1867]\nclass = Malicious"] ;
4 -> 5 ;
6 [label="expression_statement-expression_statement <= 0.5\ngini = 0.395\nsamples = 2562\nvalue = [695, 1867]\nclass = Malicious"] ;
5 -> 6 ;
7 [label="gini = 0.392\nsamples = 2549\nvalue = [682, 1867]\nclass = Malicious"] ;
6 -> 7 ;
8 [label="gini = 0.0\nsamples = 13\nvalue = [13, 0]\nclass = Benign"] ;
6 -> 8 ;
9 [label="gini = 0.0\nsamples = 721\nvalue = [721, 0]\nclass = Benign"] ;
5 -> 9 ;
10 [label="withstatement-expressionsequence <= 0.5\ngini = 0.192\nsamples = 2688\nvalue = [289, 2399]\nclass = Malicious"] ;
4 -> 10 ;
11 [label="expression_statement-identifiername <= 0.5\ngini = 0.129\nsamples = 2577\nvalue = [178, 2399]\nclass = Malicious"] ;
10 -> 11 ;
12 [label="numericliteral-expression_statement <= 0.5\ngini = 0.037\nsamples = 2305\nvalue = [43, 2262]\nclass = Malicious"] ;
11 -> 12 ;
13 [label="sourceElement_stuff-trystatement <= 0.5\ngini = 0.034\nsamples = 2301\nvalue = [40, 2261]\nclass = Malicious"] ;
12 -> 13 ;
14 [label="expression_statement-variable_stuff <= 0.5\ngini = 0.033\nsamples = 2300\nvalue = [39, 2261]\nclass = Malicious"] ;
13 -> 14 ;
15 [label="expression_statement-sourceElement_stuff <= 0.5\ngini = 0.028\nsamples = 2250\nvalue = [32, 2218]\nclass = Malicious"] ;
14 -> 15 ;
16 [label="literal-variable_stuff <= 0.5\ngini = 0.026\nsamples = 2237\nvalue = [29, 2208]\nclass = Malicious"] ;
15 -> 16 ;
17 [label="literal-expressionstatement <= 0.5\ngini = 0.063\nsamples = 619\nvalue = [20, 599]\nclass = Malicious"] ;
16 -> 17 ;
18 [label="literal-expression_statement <= 0.5\ngini = 0.007\nsamples = 600\nvalue = [2, 598]\nclass = Malicious"] ;
17 -> 18 ;
19 [label="gini = 0.0\nsamples = 598\nvalue = [0, 598]\nclass = Malicious"] ;
18 -> 19 ;
20 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
18 -> 20 ;
21 [label="literal-identifiername <= 0.5\ngini = 0.1\nsamples = 19\nvalue = [18, 1]\nclass = Benign"] ;
17 -> 21 ;
22 [label="gini = 0.0\nsamples = 18\nvalue = [18, 0]\nclass = Benign"] ;
21 -> 22 ;
23 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
21 -> 23 ;
24 [label="literal-expression_statement <= 0.5\ngini = 0.011\nsamples = 1618\nvalue = [9, 1609]\nclass = Malicious"] ;
16 -> 24 ;
25 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.035\nsamples = 504\nvalue = [9, 495]\nclass = Malicious"] ;
24 -> 25 ;
26 [label="gini = 0.0\nsamples = 489\nvalue = [0, 489]\nclass = Malicious"] ;
25 -> 26 ;
27 [label="expression_statement-expressionstatement <= 0.5\ngini = 0.48\nsamples = 15\nvalue = [9, 6]\nclass = Benign"] ;
25 -> 27 ;
28 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
27 -> 28 ;
29 [label="gini = 0.0\nsamples = 6\nvalue = [0, 6]\nclass = Malicious"] ;
27 -> 29 ;
30 [label="gini = 0.0\nsamples = 1114\nvalue = [0, 1114]\nclass = Malicious"] ;
24 -> 30 ;
31 [label="assignmentoperator-expression_statement <= 0.5\ngini = 0.355\nsamples = 13\nvalue = [3, 10]\nclass = Malicious"] ;
15 -> 31 ;
32 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
31 -> 32 ;
33 [label="gini = 0.0\nsamples = 10\nvalue = [0, 10]\nclass = Malicious"] ;
31 -> 33 ;
34 [label="expressionsequence-expression_statement <= 0.5\ngini = 0.241\nsamples = 50\nvalue = [7, 43]\nclass = Malicious"] ;
14 -> 34 ;
35 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
34 -> 35 ;
36 [label="gini = 0.0\nsamples = 43\nvalue = [0, 43]\nclass = Malicious"] ;
34 -> 36 ;
37 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
13 -> 37 ;
38 [label="literal-expressionstatement <= 0.5\ngini = 0.375\nsamples = 4\nvalue = [3, 1]\nclass = Benign"] ;
12 -> 38 ;
39 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
38 -> 39 ;
40 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
38 -> 40 ;
41 [label="expression_statement-expressionstatement <= 0.5\ngini = 0.5\nsamples = 272\nvalue = [135, 137]\nclass = Malicious"] ;
11 -> 41 ;
42 [label="numericliteral-variable_stuff <= 0.5\ngini = 0.107\nsamples = 124\nvalue = [117, 7]\nclass = Benign"] ;
41 -> 42 ;
43 [label="gini = 0.0\nsamples = 114\nvalue = [114, 0]\nclass = Benign"] ;
42 -> 43 ;
44 [label="literal-expressionstatement <= 0.5\ngini = 0.42\nsamples = 10\nvalue = [3, 7]\nclass = Malicious"] ;
42 -> 44 ;
45 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
44 -> 45 ;
46 [label="gini = 0.0\nsamples = 7\nvalue = [0, 7]\nclass = Malicious"] ;
44 -> 46 ;
47 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.214\nsamples = 148\nvalue = [18, 130]\nclass = Malicious"] ;
41 -> 47 ;
48 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
47 -> 48 ;
49 [label="literal-variable_stuff <= 0.5\ngini = 0.058\nsamples = 134\nvalue = [4, 130]\nclass = Malicious"] ;
47 -> 49 ;
50 [label="identifiername-expression_statement <= 0.5\ngini = 0.015\nsamples = 131\nvalue = [1, 130]\nclass = Malicious"] ;
49 -> 50 ;
51 [label="gini = 0.0\nsamples = 130\nvalue = [0, 130]\nclass = Malicious"] ;
50 -> 51 ;
52 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
50 -> 52 ;
53 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
49 -> 53 ;
54 [label="gini = 0.0\nsamples = 111\nvalue = [111, 0]\nclass = Benign"] ;
10 -> 54 ;
55 [label="argument_stuff-identifiername <= 0.5\ngini = 0.456\nsamples = 2101\nvalue = [1362, 739]\nclass = Benign"] ;
3 -> 55 ;
56 [label="numericliteral-variable_stuff <= 0.5\ngini = 0.336\nsamples = 1708\nvalue = [1343, 365]\nclass = Benign"] ;
55 -> 56 ;
57 [label="numericliteral-expressionstatement <= 0.5\ngini = 0.169\nsamples = 1437\nvalue = [1303, 134]\nclass = Benign"] ;
56 -> 57 ;
58 [label="expression_statement-assignmentoperator <= 0.5\ngini = 0.02\nsamples = 1197\nvalue = [1185, 12]\nclass = Benign"] ;
57 -> 58 ;
59 [label="gini = 0.0\nsamples = 1184\nvalue = [1184, 0]\nclass = Benign"] ;
58 -> 59 ;
60 [label="returnstatement-expressionsequence <= 0.5\ngini = 0.142\nsamples = 13\nvalue = [1, 12]\nclass = Malicious"] ;
58 -> 60 ;
61 [label="gini = 0.0\nsamples = 12\nvalue = [0, 12]\nclass = Malicious"] ;
60 -> 61 ;
62 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
60 -> 62 ;
63 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.5\nsamples = 240\nvalue = [118, 122]\nclass = Malicious"] ;
57 -> 63 ;
64 [label="gini = 0.0\nsamples = 65\nvalue = [65, 0]\nclass = Benign"] ;
63 -> 64 ;
65 [label="literal-expressionstatement <= 0.5\ngini = 0.422\nsamples = 175\nvalue = [53, 122]\nclass = Malicious"] ;
63 -> 65 ;
66 [label="gini = 0.0\nsamples = 40\nvalue = [40, 0]\nclass = Benign"] ;
65 -> 66 ;
67 [label="expression_statement-sourceElement_stuff <= 0.5\ngini = 0.174\nsamples = 135\nvalue = [13, 122]\nclass = Malicious"] ;
65 -> 67 ;
68 [label="gini = 0.0\nsamples = 122\nvalue = [0, 122]\nclass = Malicious"] ;
67 -> 68 ;
69 [label="gini = 0.0\nsamples = 13\nvalue = [13, 0]\nclass = Benign"] ;
67 -> 69 ;
70 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.252\nsamples = 271\nvalue = [40, 231]\nclass = Malicious"] ;
56 -> 70 ;
71 [label="identifiername-expression_statement <= 0.5\ngini = 0.057\nsamples = 238\nvalue = [7, 231]\nclass = Malicious"] ;
70 -> 71 ;
72 [label="gini = 0.0\nsamples = 231\nvalue = [0, 231]\nclass = Malicious"] ;
71 -> 72 ;
73 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
71 -> 73 ;
74 [label="gini = 0.0\nsamples = 33\nvalue = [33, 0]\nclass = Benign"] ;
70 -> 74 ;
75 [label="literal-expression_statement <= 0.5\ngini = 0.092\nsamples = 393\nvalue = [19, 374]\nclass = Malicious"] ;
55 -> 75 ;
76 [label="expression_statement-literal <= 0.5\ngini = 0.036\nsamples = 381\nvalue = [7, 374]\nclass = Malicious"] ;
75 -> 76 ;
77 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
76 -> 77 ;
78 [label="expression_statement-sourceElement_stuff <= 0.5\ngini = 0.021\nsamples = 378\nvalue = [4, 374]\nclass = Malicious"] ;
76 -> 78 ;
79 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.005\nsamples = 375\nvalue = [1, 374]\nclass = Malicious"] ;
78 -> 79 ;
80 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
79 -> 80 ;
81 [label="gini = 0.0\nsamples = 374\nvalue = [0, 374]\nclass = Malicious"] ;
79 -> 81 ;
82 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
78 -> 82 ;
83 [label="gini = 0.0\nsamples = 12\nvalue = [12, 0]\nclass = Benign"] ;
75 -> 83 ;
84 [label="sourceElement_stuff-withstatement <= 0.5\ngini = 0.107\nsamples = 7224\nvalue = [408, 6816]\nclass = Malicious"] ;
2 -> 84 ;
85 [label="expression_statement-argument_stuff <= 0.5\ngini = 0.094\nsamples = 7170\nvalue = [354, 6816]\nclass = Malicious"] ;
84 -> 85 ;
86 [label="literal-returnstatement <= 0.5\ngini = 0.414\nsamples = 707\nvalue = [207, 500]\nclass = Malicious"] ;
85 -> 86 ;
87 [label="numericliteral-argument_stuff <= 0.5\ngini = 0.082\nsamples = 187\nvalue = [179, 8]\nclass = Benign"] ;
86 -> 87 ;
88 [label="gini = 0.0\nsamples = 179\nvalue = [179, 0]\nclass = Benign"] ;
87 -> 88 ;
89 [label="gini = 0.0\nsamples = 8\nvalue = [0, 8]\nclass = Malicious"] ;
87 -> 89 ;
90 [label="variable_stuff-variable_stuff <= 0.5\ngini = 0.102\nsamples = 520\nvalue = [28, 492]\nclass = Malicious"] ;
86 -> 90 ;
91 [label="gini = 0.0\nsamples = 492\nvalue = [0, 492]\nclass = Malicious"] ;
90 -> 91 ;
92 [label="gini = 0.0\nsamples = 28\nvalue = [28, 0]\nclass = Benign"] ;
90 -> 92 ;
93 [label="litereral_stuff-expressionstatement <= 0.5\ngini = 0.044\nsamples = 6463\nvalue = [147, 6316]\nclass = Malicious"] ;
85 -> 93 ;
94 [label="argument_stuff-ifstatement <= 0.5\ngini = 0.034\nsamples = 6426\nvalue = [110, 6316]\nclass = Malicious"] ;
93 -> 94 ;
95 [label="variable_stuff-expressionsequence <= 0.5\ngini = 0.029\nsamples = 6408\nvalue = [93, 6315]\nclass = Malicious"] ;
94 -> 95 ;
96 [label="argument_stuff-expression_statement <= 0.5\ngini = 0.024\nsamples = 6394\nvalue = [79, 6315]\nclass = Malicious"] ;
95 -> 96 ;
97 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
96 -> 97 ;
98 [label="numericliteral-identifiername <= 0.5\ngini = 0.023\nsamples = 6388\nvalue = [73, 6315]\nclass = Malicious"] ;
96 -> 98 ;
99 [label="formalParameterArg_stuff-formalParameterArg_stuff <= 0.5\ngini = 0.015\nsamples = 6287\nvalue = [48, 6239]\nclass = Malicious"] ;
98 -> 99 ;
100 [label="numericliteral-ifstatement <= 0.5\ngini = 0.012\nsamples = 6258\nvalue = [39, 6219]\nclass = Malicious"] ;
99 -> 100 ;
101 [label="returnstatement-expressionstatement <= 0.5\ngini = 0.009\nsamples = 6212\nvalue = [28, 6184]\nclass = Malicious"] ;
100 -> 101 ;
102 [label="litereral_stuff-expressionsequence <= 0.5\ngini = 0.008\nsamples = 6210\nvalue = [26, 6184]\nclass = Malicious"] ;
101 -> 102 ;
103 [label="litereral_stuff-identifiername <= 0.5\ngini = 0.008\nsamples = 6208\nvalue = [24, 6184]\nclass = Malicious"] ;
102 -> 103 ;
104 [label="returnstatement-ifstatement <= 0.5\ngini = 0.007\nsamples = 6207\nvalue = [23, 6184]\nclass = Malicious"] ;
103 -> 104 ;
105 [label="expression_statement-ifstatement <= 0.5\ngini = 0.007\nsamples = 6206\nvalue = [22, 6184]\nclass = Malicious"] ;
104 -> 105 ;
106 [label="expression_statement-sourceElement_stuff <= 0.5\ngini = 0.006\nsamples = 6198\nvalue = [20, 6178]\nclass = Malicious"] ;
105 -> 106 ;
107 [label="identifiername-variable_stuff <= 0.5\ngini = 0.002\nsamples = 5623\nvalue = [7, 5616]\nclass = Malicious"] ;
106 -> 107 ;
108 [label="ifstatement-expressionsequence <= 0.5\ngini = 0.002\nsamples = 5616\nvalue = [6, 5610]\nclass = Malicious"] ;
107 -> 108 ;
109 [label="identifiername-expressionstatement <= 0.5\ngini = 0.009\nsamples = 1071\nvalue = [5, 1066]\nclass = Malicious"] ;
108 -> 109 ;
110 [label="argument_stuff-expressionstatement <= 0.5\ngini = 0.007\nsamples = 1069\nvalue = [4, 1065]\nclass = Malicious"] ;
109 -> 110 ;
111 [label="literal-expressionsequence <= 0.5\ngini = 0.004\nsamples = 1058\nvalue = [2, 1056]\nclass = Malicious"] ;
110 -> 111 ;
112 [label="identifiername-argument_stuff <= 0.5\ngini = 0.002\nsamples = 1055\nvalue = [1, 1054]\nclass = Malicious"] ;
111 -> 112 ;
113 [label="variable_stuff-variable_stuff <= 0.5\ngini = 0.117\nsamples = 16\nvalue = [1, 15]\nclass = Malicious"] ;
112 -> 113 ;
114 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
113 -> 114 ;
115 [label="gini = 0.0\nsamples = 15\nvalue = [0, 15]\nclass = Malicious"] ;
113 -> 115 ;
116 [label="gini = 0.0\nsamples = 1039\nvalue = [0, 1039]\nclass = Malicious"] ;
112 -> 116 ;
117 [label="expression_statement-formalparameterlist <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
111 -> 117 ;
118 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
117 -> 118 ;
119 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
117 -> 119 ;
120 [label="numericliteral-expressionstatement <= 0.5\ngini = 0.298\nsamples = 11\nvalue = [2, 9]\nclass = Malicious"] ;
110 -> 120 ;
121 [label="sourceElement_stuff-returnstatement <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [2, 1]\nclass = Benign"] ;
120 -> 121 ;
122 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
121 -> 122 ;
123 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
121 -> 123 ;
124 [label="gini = 0.0\nsamples = 8\nvalue = [0, 8]\nclass = Malicious"] ;
120 -> 124 ;
125 [label="expression_statement-variable_stuff <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
109 -> 125 ;
126 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
125 -> 126 ;
127 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
125 -> 127 ;
128 [label="expression_statement-variable_stuff <= 0.5\ngini = 0.0\nsamples = 4545\nvalue = [1, 4544]\nclass = Malicious"] ;
108 -> 128 ;
129 [label="gini = 0.0\nsamples = 4232\nvalue = [0, 4232]\nclass = Malicious"] ;
128 -> 129 ;
130 [label="numericliteral-expression_statement <= 0.5\ngini = 0.006\nsamples = 313\nvalue = [1, 312]\nclass = Malicious"] ;
128 -> 130 ;
131 [label="gini = 0.0\nsamples = 308\nvalue = [0, 308]\nclass = Malicious"] ;
130 -> 131 ;
132 [label="formalparameterlist-formalParameterArg_stuff <= 0.5\ngini = 0.32\nsamples = 5\nvalue = [1, 4]\nclass = Malicious"] ;
130 -> 132 ;
133 [label="gini = 0.0\nsamples = 4\nvalue = [0, 4]\nclass = Malicious"] ;
132 -> 133 ;
134 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
132 -> 134 ;
135 [label="argument_stuff-expressionstatement <= 0.5\ngini = 0.245\nsamples = 7\nvalue = [1, 6]\nclass = Malicious"] ;
107 -> 135 ;
136 [label="gini = 0.0\nsamples = 6\nvalue = [0, 6]\nclass = Malicious"] ;
135 -> 136 ;
137 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
135 -> 137 ;
138 [label="literal-variable_stuff <= 0.5\ngini = 0.044\nsamples = 575\nvalue = [13, 562]\nclass = Malicious"] ;
106 -> 138 ;
139 [label="trystatement-expressionstatement <= 0.5\ngini = 0.142\nsamples = 13\nvalue = [12, 1]\nclass = Benign"] ;
138 -> 139 ;
140 [label="gini = 0.0\nsamples = 12\nvalue = [12, 0]\nclass = Benign"] ;
139 -> 140 ;
141 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
139 -> 141 ;
142 [label="literal-expressionstatement <= 0.5\ngini = 0.004\nsamples = 562\nvalue = [1, 561]\nclass = Malicious"] ;
138 -> 142 ;
143 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
142 -> 143 ;
144 [label="gini = 0.0\nsamples = 561\nvalue = [0, 561]\nclass = Malicious"] ;
142 -> 144 ;
145 [label="sourceElement_stuff-sourceElement_stuff <= 0.5\ngini = 0.375\nsamples = 8\nvalue = [2, 6]\nclass = Malicious"] ;
105 -> 145 ;
146 [label="gini = 0.0\nsamples = 6\nvalue = [0, 6]\nclass = Malicious"] ;
145 -> 146 ;
147 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
145 -> 147 ;
148 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
104 -> 148 ;
149 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
103 -> 149 ;
150 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
102 -> 150 ;
151 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
101 -> 151 ;
152 [label="expression_statement-sourceElement_stuff <= 0.5\ngini = 0.364\nsamples = 46\nvalue = [11, 35]\nclass = Malicious"] ;
100 -> 152 ;
153 [label="gini = 0.0\nsamples = 35\nvalue = [0, 35]\nclass = Malicious"] ;
152 -> 153 ;
154 [label="gini = 0.0\nsamples = 11\nvalue = [11, 0]\nclass = Benign"] ;
152 -> 154 ;
155 [label="literal-numericliteral <= 0.5\ngini = 0.428\nsamples = 29\nvalue = [9, 20]\nclass = Malicious"] ;
99 -> 155 ;
156 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
155 -> 156 ;
157 [label="gini = 0.0\nsamples = 20\nvalue = [0, 20]\nclass = Malicious"] ;
155 -> 157 ;
158 [label="numericliteral-continue_break_statement <= 0.5\ngini = 0.373\nsamples = 101\nvalue = [25, 76]\nclass = Malicious"] ;
98 -> 158 ;
159 [label="sourceElement_stuff-sourceElement_stuff <= 0.5\ngini = 0.074\nsamples = 26\nvalue = [25, 1]\nclass = Benign"] ;
158 -> 159 ;
160 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
159 -> 160 ;
161 [label="gini = 0.0\nsamples = 25\nvalue = [25, 0]\nclass = Benign"] ;
159 -> 161 ;
162 [label="gini = 0.0\nsamples = 75\nvalue = [0, 75]\nclass = Malicious"] ;
158 -> 162 ;
163 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
95 -> 163 ;
164 [label="expression_statement-sourceElement_stuff <= 0.5\ngini = 0.105\nsamples = 18\nvalue = [17, 1]\nclass = Benign"] ;
94 -> 164 ;
165 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
164 -> 165 ;
166 [label="gini = 0.0\nsamples = 17\nvalue = [17, 0]\nclass = Benign"] ;
164 -> 166 ;
167 [label="gini = 0.0\nsamples = 37\nvalue = [37, 0]\nclass = Benign"] ;
93 -> 167 ;
168 [label="gini = 0.0\nsamples = 54\nvalue = [54, 0]\nclass = Benign"] ;
84 -> 168 ;
169 [label="literal-trystatement <= 0.5\ngini = 0.176\nsamples = 1372\nvalue = [1238, 134]\nclass = Benign"] ;
1 -> 169 ;
170 [label="continue_break_statement-catchproduction <= 0.5\ngini = 0.008\nsamples = 1242\nvalue = [1237, 5]\nclass = Benign"] ;
169 -> 170 ;
171 [label="continue_break_statement-variable_stuff <= 0.5\ngini = 0.005\nsamples = 1240\nvalue = [1237, 3]\nclass = Benign"] ;
170 -> 171 ;
172 [label="expression_statement-assignmentoperator <= 0.5\ngini = 0.003\nsamples = 1239\nvalue = [1237, 2]\nclass = Benign"] ;
171 -> 172 ;
173 [label="argument_stuff-variable_stuff <= 0.5\ngini = 0.002\nsamples = 1235\nvalue = [1234, 1]\nclass = Benign"] ;
172 -> 173 ;
174 [label="gini = 0.0\nsamples = 1181\nvalue = [1181, 0]\nclass = Benign"] ;
173 -> 174 ;
175 [label="literal-expression_statement <= 0.5\ngini = 0.036\nsamples = 54\nvalue = [53, 1]\nclass = Benign"] ;
173 -> 175 ;
176 [label="identifiername-expressionstatement <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
175 -> 176 ;
177 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
176 -> 177 ;
178 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
176 -> 178 ;
179 [label="gini = 0.0\nsamples = 52\nvalue = [52, 0]\nclass = Benign"] ;
175 -> 179 ;
180 [label="identifiername-expressionstatement <= 0.5\ngini = 0.375\nsamples = 4\nvalue = [3, 1]\nclass = Benign"] ;
172 -> 180 ;
181 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
180 -> 181 ;
182 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
180 -> 182 ;
183 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
171 -> 183 ;
184 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
170 -> 184 ;
185 [label="argument_stuff-identifiername <= 0.5\ngini = 0.015\nsamples = 130\nvalue = [1, 129]\nclass = Malicious"] ;
169 -> 185 ;
186 [label="gini = 0.0\nsamples = 129\nvalue = [0, 129]\nclass = Malicious"] ;
185 -> 186 ;
187 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
185 -> 187 ;
188 [label="do_for_while_statement-expressionsequence <= 0.5\ngini = 0.254\nsamples = 10332\nvalue = [8790, 1542]\nclass = Benign"] ;
0 -> 188 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
189 [label="literal-finallyproduction <= 0.5\ngini = 0.007\nsamples = 8780\nvalue = [8751, 29]\nclass = Benign"] ;
188 -> 189 ;
190 [label="expression_statement-catchproduction <= 0.5\ngini = 0.0\nsamples = 8752\nvalue = [8751, 1]\nclass = Benign"] ;
189 -> 190 ;
191 [label="gini = 0.0\nsamples = 8744\nvalue = [8744, 0]\nclass = Benign"] ;
190 -> 191 ;
192 [label="literal-argument_stuff <= 0.5\ngini = 0.219\nsamples = 8\nvalue = [7, 1]\nclass = Benign"] ;
190 -> 192 ;
193 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
192 -> 193 ;
194 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
192 -> 194 ;
195 [label="gini = 0.0\nsamples = 28\nvalue = [0, 28]\nclass = Malicious"] ;
189 -> 195 ;
196 [label="numericliteral-property_rules <= 0.5\ngini = 0.049\nsamples = 1552\nvalue = [39, 1513]\nclass = Malicious"] ;
188 -> 196 ;
197 [label="variable_stuff-ifstatement <= 0.5\ngini = 0.008\nsamples = 1519\nvalue = [6, 1513]\nclass = Malicious"] ;
196 -> 197 ;
198 [label="expression_statement-catchproduction <= 0.5\ngini = 0.001\nsamples = 1514\nvalue = [1, 1513]\nclass = Malicious"] ;
197 -> 198 ;
199 [label="gini = 0.0\nsamples = 1513\nvalue = [0, 1513]\nclass = Malicious"] ;
198 -> 199 ;
200 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
198 -> 200 ;
201 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
197 -> 201 ;
202 [label="gini = 0.0\nsamples = 33\nvalue = [33, 0]\nclass = Benign"] ;
196 -> 202 ;
}
