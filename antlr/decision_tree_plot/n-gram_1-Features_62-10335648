digraph Tree {
node [shape=box] ;
0 [label="objectliteral <= 0.5\ngini = 0.5\nsamples = 27000\nvalue = [13524, 13476]\nclass = Benign"] ;
1 [label="numericliteral <= 0.5\ngini = 0.392\nsamples = 16263\nvalue = [4346, 11917]\nclass = Malicious"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="expressionstatement <= 0.5\ngini = 0.486\nsamples = 7324\nvalue = [3046, 4278]\nclass = Malicious"] ;
1 -> 2 ;
3 [label="arguments <= 0.5\ngini = 0.411\nsamples = 3958\nvalue = [1145, 2813]\nclass = Malicious"] ;
2 -> 3 ;
4 [label="expression_statement <= 0.5\ngini = 0.467\nsamples = 2987\nvalue = [1109, 1878]\nclass = Malicious"] ;
3 -> 4 ;
5 [label="gini = 0.395\nsamples = 2575\nvalue = [697, 1878]\nclass = Malicious"] ;
4 -> 5 ;
6 [label="gini = 0.0\nsamples = 412\nvalue = [412, 0]\nclass = Benign"] ;
4 -> 6 ;
7 [label="literal <= 0.5\ngini = 0.071\nsamples = 971\nvalue = [36, 935]\nclass = Malicious"] ;
3 -> 7 ;
8 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
7 -> 8 ;
9 [label="arrayliteral <= 0.5\ngini = 0.056\nsamples = 963\nvalue = [28, 935]\nclass = Malicious"] ;
7 -> 9 ;
10 [label="throwstatement <= 0.5\ngini = 0.049\nsamples = 959\nvalue = [24, 935]\nclass = Malicious"] ;
9 -> 10 ;
11 [label="expressionsequence <= 0.5\ngini = 0.047\nsamples = 958\nvalue = [23, 935]\nclass = Malicious"] ;
10 -> 11 ;
12 [label="identifiername <= 0.5\ngini = 0.092\nsamples = 478\nvalue = [23, 455]\nclass = Malicious"] ;
11 -> 12 ;
13 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
12 -> 13 ;
14 [label="gini = 0.088\nsamples = 477\nvalue = [22, 455]\nclass = Malicious"] ;
12 -> 14 ;
15 [label="gini = 0.0\nsamples = 480\nvalue = [0, 480]\nclass = Malicious"] ;
11 -> 15 ;
16 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
10 -> 16 ;
17 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
9 -> 17 ;
18 [label="variablestatement <= 0.5\ngini = 0.492\nsamples = 3366\nvalue = [1901, 1465]\nclass = Benign"] ;
2 -> 18 ;
19 [label="functionbody <= 0.5\ngini = 0.352\nsamples = 1891\nvalue = [1460, 431]\nclass = Benign"] ;
18 -> 19 ;
20 [label="identifiername <= 0.5\ngini = 0.421\nsamples = 1431\nvalue = [1000, 431]\nclass = Benign"] ;
19 -> 20 ;
21 [label="gini = 0.0\nsamples = 361\nvalue = [361, 0]\nclass = Benign"] ;
20 -> 21 ;
22 [label="arguments <= 0.5\ngini = 0.481\nsamples = 1070\nvalue = [639, 431]\nclass = Benign"] ;
20 -> 22 ;
23 [label="gini = 0.0\nsamples = 157\nvalue = [157, 0]\nclass = Benign"] ;
22 -> 23 ;
24 [label="ifstatement <= 0.5\ngini = 0.498\nsamples = 913\nvalue = [482, 431]\nclass = Benign"] ;
22 -> 24 ;
25 [label="arrayliteral <= 0.5\ngini = 0.5\nsamples = 851\nvalue = [420, 431]\nclass = Malicious"] ;
24 -> 25 ;
26 [label="literal <= 0.5\ngini = 0.496\nsamples = 794\nvalue = [363, 431]\nclass = Malicious"] ;
25 -> 26 ;
27 [label="gini = 0.0\nsamples = 23\nvalue = [23, 0]\nclass = Benign"] ;
26 -> 27 ;
28 [label="statementlist <= 0.5\ngini = 0.493\nsamples = 771\nvalue = [340, 431]\nclass = Malicious"] ;
26 -> 28 ;
29 [label="gini = 0.493\nsamples = 769\nvalue = [338, 431]\nclass = Malicious"] ;
28 -> 29 ;
30 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
28 -> 30 ;
31 [label="gini = 0.0\nsamples = 57\nvalue = [57, 0]\nclass = Benign"] ;
25 -> 31 ;
32 [label="gini = 0.0\nsamples = 62\nvalue = [62, 0]\nclass = Benign"] ;
24 -> 32 ;
33 [label="gini = 0.0\nsamples = 460\nvalue = [460, 0]\nclass = Benign"] ;
19 -> 33 ;
34 [label="identifiername <= 0.5\ngini = 0.419\nsamples = 1475\nvalue = [441, 1034]\nclass = Malicious"] ;
18 -> 34 ;
35 [label="arguments <= 0.5\ngini = 0.078\nsamples = 832\nvalue = [34, 798]\nclass = Malicious"] ;
34 -> 35 ;
36 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
35 -> 36 ;
37 [label="withstatement <= 0.5\ngini = 0.07\nsamples = 828\nvalue = [30, 798]\nclass = Malicious"] ;
35 -> 37 ;
38 [label="returnstatement <= 0.5\ngini = 0.065\nsamples = 826\nvalue = [28, 798]\nclass = Malicious"] ;
37 -> 38 ;
39 [label="assignmentoperator <= 0.5\ngini = 0.058\nsamples = 799\nvalue = [24, 775]\nclass = Malicious"] ;
38 -> 39 ;
40 [label="functionbody <= 0.5\ngini = 0.063\nsamples = 742\nvalue = [24, 718]\nclass = Malicious"] ;
39 -> 40 ;
41 [label="gini = 0.06\nsamples = 741\nvalue = [23, 718]\nclass = Malicious"] ;
40 -> 41 ;
42 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
40 -> 42 ;
43 [label="gini = 0.0\nsamples = 57\nvalue = [0, 57]\nclass = Malicious"] ;
39 -> 43 ;
44 [label="assignmentoperator <= 0.5\ngini = 0.252\nsamples = 27\nvalue = [4, 23]\nclass = Malicious"] ;
38 -> 44 ;
45 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
44 -> 45 ;
46 [label="gini = 0.147\nsamples = 25\nvalue = [2, 23]\nclass = Malicious"] ;
44 -> 46 ;
47 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
37 -> 47 ;
48 [label="returnstatement <= 0.5\ngini = 0.465\nsamples = 643\nvalue = [407, 236]\nclass = Benign"] ;
34 -> 48 ;
49 [label="elementlist <= 0.5\ngini = 0.015\nsamples = 391\nvalue = [388, 3]\nclass = Benign"] ;
48 -> 49 ;
50 [label="functionbody <= 0.5\ngini = 0.01\nsamples = 381\nvalue = [379, 2]\nclass = Benign"] ;
49 -> 50 ;
51 [label="assignmentoperator <= 0.5\ngini = 0.022\nsamples = 183\nvalue = [181, 2]\nclass = Benign"] ;
50 -> 51 ;
52 [label="arguments <= 0.5\ngini = 0.041\nsamples = 96\nvalue = [94, 2]\nclass = Benign"] ;
51 -> 52 ;
53 [label="gini = 0.0\nsamples = 25\nvalue = [25, 0]\nclass = Benign"] ;
52 -> 53 ;
54 [label="arrayliteral <= 0.5\ngini = 0.055\nsamples = 71\nvalue = [69, 2]\nclass = Benign"] ;
52 -> 54 ;
55 [label="trystatement <= 0.5\ngini = 0.058\nsamples = 67\nvalue = [65, 2]\nclass = Benign"] ;
54 -> 55 ;
56 [label="block <= 0.5\ngini = 0.06\nsamples = 65\nvalue = [63, 2]\nclass = Benign"] ;
55 -> 56 ;
57 [label="ifstatement <= 0.5\ngini = 0.056\nsamples = 35\nvalue = [34, 1]\nclass = Benign"] ;
56 -> 57 ;
58 [label="gini = 0.062\nsamples = 31\nvalue = [30, 1]\nclass = Benign"] ;
57 -> 58 ;
59 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
57 -> 59 ;
60 [label="gini = 0.064\nsamples = 30\nvalue = [29, 1]\nclass = Benign"] ;
56 -> 60 ;
61 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
55 -> 61 ;
62 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
54 -> 62 ;
63 [label="gini = 0.0\nsamples = 87\nvalue = [87, 0]\nclass = Benign"] ;
51 -> 63 ;
64 [label="gini = 0.0\nsamples = 198\nvalue = [198, 0]\nclass = Benign"] ;
50 -> 64 ;
65 [label="ifstatement <= 0.5\ngini = 0.18\nsamples = 10\nvalue = [9, 1]\nclass = Benign"] ;
49 -> 65 ;
66 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
65 -> 66 ;
67 [label="formalparameterlist <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
65 -> 67 ;
68 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
67 -> 68 ;
69 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
67 -> 69 ;
70 [label="ifstatement <= 0.5\ngini = 0.139\nsamples = 252\nvalue = [19, 233]\nclass = Malicious"] ;
48 -> 70 ;
71 [label="formalparameterarg <= 0.5\ngini = 0.086\nsamples = 244\nvalue = [11, 233]\nclass = Malicious"] ;
70 -> 71 ;
72 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
71 -> 72 ;
73 [label="gini = 0.072\nsamples = 242\nvalue = [9, 233]\nclass = Malicious"] ;
71 -> 73 ;
74 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
70 -> 74 ;
75 [label="expressionstatement <= 0.5\ngini = 0.249\nsamples = 8939\nvalue = [1300, 7639]\nclass = Malicious"] ;
1 -> 75 ;
76 [label="gini = 0.0\nsamples = 254\nvalue = [254, 0]\nclass = Benign"] ;
75 -> 76 ;
77 [label="variablestatement <= 0.5\ngini = 0.212\nsamples = 8685\nvalue = [1046, 7639]\nclass = Malicious"] ;
75 -> 77 ;
78 [label="returnstatement <= 0.5\ngini = 0.397\nsamples = 1455\nvalue = [398, 1057]\nclass = Malicious"] ;
77 -> 78 ;
79 [label="ifstatement <= 0.5\ngini = 0.485\nsamples = 944\nvalue = [390, 554]\nclass = Malicious"] ;
78 -> 79 ;
80 [label="arguments <= 0.5\ngini = 0.398\nsamples = 445\nvalue = [323, 122]\nclass = Benign"] ;
79 -> 80 ;
81 [label="gini = 0.0\nsamples = 96\nvalue = [96, 0]\nclass = Benign"] ;
80 -> 81 ;
82 [label="functionbody <= 0.5\ngini = 0.455\nsamples = 349\nvalue = [227, 122]\nclass = Benign"] ;
80 -> 82 ;
83 [label="identifiername <= 0.5\ngini = 0.499\nsamples = 255\nvalue = [133, 122]\nclass = Benign"] ;
82 -> 83 ;
84 [label="elementlist <= 0.5\ngini = 0.069\nsamples = 28\nvalue = [27, 1]\nclass = Benign"] ;
83 -> 84 ;
85 [label="gini = 0.0\nsamples = 27\nvalue = [27, 0]\nclass = Benign"] ;
84 -> 85 ;
86 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
84 -> 86 ;
87 [label="emptystatement <= 0.5\ngini = 0.498\nsamples = 227\nvalue = [106, 121]\nclass = Malicious"] ;
83 -> 87 ;
88 [label="arrayliteral <= 0.5\ngini = 0.489\nsamples = 211\nvalue = [90, 121]\nclass = Malicious"] ;
87 -> 88 ;
89 [label="assignmentoperator <= 0.5\ngini = 0.485\nsamples = 206\nvalue = [85, 121]\nclass = Malicious"] ;
88 -> 89 ;
90 [label="trystatement <= 0.5\ngini = 0.484\nsamples = 205\nvalue = [84, 121]\nclass = Malicious"] ;
89 -> 90 ;
91 [label="gini = 0.483\nsamples = 204\nvalue = [83, 121]\nclass = Malicious"] ;
90 -> 91 ;
92 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
90 -> 92 ;
93 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
89 -> 93 ;
94 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
88 -> 94 ;
95 [label="gini = 0.0\nsamples = 16\nvalue = [16, 0]\nclass = Benign"] ;
87 -> 95 ;
96 [label="gini = 0.0\nsamples = 94\nvalue = [94, 0]\nclass = Benign"] ;
82 -> 96 ;
97 [label="statementlist <= 0.5\ngini = 0.232\nsamples = 499\nvalue = [67, 432]\nclass = Malicious"] ;
79 -> 97 ;
98 [label="identifiername <= 0.5\ngini = 0.009\nsamples = 434\nvalue = [2, 432]\nclass = Malicious"] ;
97 -> 98 ;
99 [label="gini = 0.0\nsamples = 139\nvalue = [0, 139]\nclass = Malicious"] ;
98 -> 99 ;
100 [label="gini = 0.013\nsamples = 295\nvalue = [2, 293]\nclass = Malicious"] ;
98 -> 100 ;
101 [label="gini = 0.0\nsamples = 65\nvalue = [65, 0]\nclass = Benign"] ;
97 -> 101 ;
102 [label="identifiername <= 0.5\ngini = 0.031\nsamples = 511\nvalue = [8, 503]\nclass = Malicious"] ;
78 -> 102 ;
103 [label="gini = 0.0\nsamples = 503\nvalue = [0, 503]\nclass = Malicious"] ;
102 -> 103 ;
104 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
102 -> 104 ;
105 [label="arguments <= 0.5\ngini = 0.163\nsamples = 7230\nvalue = [648, 6582]\nclass = Malicious"] ;
77 -> 105 ;
106 [label="gini = 0.0\nsamples = 109\nvalue = [109, 0]\nclass = Benign"] ;
105 -> 106 ;
107 [label="elementlist <= 0.5\ngini = 0.14\nsamples = 7121\nvalue = [539, 6582]\nclass = Malicious"] ;
105 -> 107 ;
108 [label="do_for_while_statement <= 0.5\ngini = 0.239\nsamples = 3397\nvalue = [472, 2925]\nclass = Malicious"] ;
107 -> 108 ;
109 [label="returnstatement <= 0.5\ngini = 0.205\nsamples = 3133\nvalue = [363, 2770]\nclass = Malicious"] ;
108 -> 109 ;
110 [label="functionbody <= 0.5\ngini = 0.3\nsamples = 1304\nvalue = [240, 1064]\nclass = Malicious"] ;
109 -> 110 ;
111 [label="emptystatement <= 0.5\ngini = 0.14\nsamples = 1080\nvalue = [82, 998]\nclass = Malicious"] ;
110 -> 111 ;
112 [label="identifiername <= 0.5\ngini = 0.136\nsamples = 1077\nvalue = [79, 998]\nclass = Malicious"] ;
111 -> 112 ;
113 [label="gini = 0.081\nsamples = 449\nvalue = [19, 430]\nclass = Malicious"] ;
112 -> 113 ;
114 [label="catchproduction <= 0.5\ngini = 0.173\nsamples = 628\nvalue = [60, 568]\nclass = Malicious"] ;
112 -> 114 ;
115 [label="assignmentoperator <= 0.5\ngini = 0.169\nsamples = 624\nvalue = [58, 566]\nclass = Malicious"] ;
114 -> 115 ;
116 [label="block <= 0.5\ngini = 0.166\nsamples = 622\nvalue = [57, 565]\nclass = Malicious"] ;
115 -> 116 ;
117 [label="ifstatement <= 0.5\ngini = 0.18\nsamples = 429\nvalue = [43, 386]\nclass = Malicious"] ;
116 -> 117 ;
118 [label="gini = 0.163\nsamples = 424\nvalue = [38, 386]\nclass = Malicious"] ;
117 -> 118 ;
119 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
117 -> 119 ;
120 [label="gini = 0.135\nsamples = 193\nvalue = [14, 179]\nclass = Malicious"] ;
116 -> 120 ;
121 [label="ifstatement <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
115 -> 121 ;
122 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
121 -> 122 ;
123 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
121 -> 123 ;
124 [label="ifstatement <= 0.5\ngini = 0.5\nsamples = 4\nvalue = [2, 2]\nclass = Benign"] ;
114 -> 124 ;
125 [label="gini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
124 -> 125 ;
126 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
124 -> 126 ;
127 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
111 -> 127 ;
128 [label="emptystatement <= 0.5\ngini = 0.416\nsamples = 224\nvalue = [158, 66]\nclass = Benign"] ;
110 -> 128 ;
129 [label="formalparameterlist <= 0.5\ngini = 0.103\nsamples = 166\nvalue = [157, 9]\nclass = Benign"] ;
128 -> 129 ;
130 [label="gini = 0.0\nsamples = 131\nvalue = [131, 0]\nclass = Benign"] ;
129 -> 130 ;
131 [label="block <= 0.5\ngini = 0.382\nsamples = 35\nvalue = [26, 9]\nclass = Benign"] ;
129 -> 131 ;
132 [label="arrayliteral <= 0.5\ngini = 0.459\nsamples = 14\nvalue = [5, 9]\nclass = Malicious"] ;
131 -> 132 ;
133 [label="gini = 0.426\nsamples = 13\nvalue = [4, 9]\nclass = Malicious"] ;
132 -> 133 ;
134 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
132 -> 134 ;
135 [label="gini = 0.0\nsamples = 21\nvalue = [21, 0]\nclass = Benign"] ;
131 -> 135 ;
136 [label="block <= 0.5\ngini = 0.034\nsamples = 58\nvalue = [1, 57]\nclass = Malicious"] ;
128 -> 136 ;
137 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
136 -> 137 ;
138 [label="gini = 0.0\nsamples = 57\nvalue = [0, 57]\nclass = Malicious"] ;
136 -> 138 ;
139 [label="block <= 0.5\ngini = 0.125\nsamples = 1829\nvalue = [123, 1706]\nclass = Malicious"] ;
109 -> 139 ;
140 [label="formalparameterlist <= 0.5\ngini = 0.033\nsamples = 884\nvalue = [15, 869]\nclass = Malicious"] ;
139 -> 140 ;
141 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
140 -> 141 ;
142 [label="ifstatement <= 0.5\ngini = 0.031\nsamples = 883\nvalue = [14, 869]\nclass = Malicious"] ;
140 -> 142 ;
143 [label="gini = 0.0\nsamples = 13\nvalue = [0, 13]\nclass = Malicious"] ;
142 -> 143 ;
144 [label="gini = 0.032\nsamples = 870\nvalue = [14, 856]\nclass = Malicious"] ;
142 -> 144 ;
145 [label="identifiername <= 0.5\ngini = 0.202\nsamples = 945\nvalue = [108, 837]\nclass = Malicious"] ;
139 -> 145 ;
146 [label="gini = 0.0\nsamples = 221\nvalue = [0, 221]\nclass = Malicious"] ;
145 -> 146 ;
147 [label="formalparameterlist <= 0.5\ngini = 0.254\nsamples = 724\nvalue = [108, 616]\nclass = Malicious"] ;
145 -> 147 ;
148 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
147 -> 148 ;
149 [label="arrayliteral <= 0.5\ngini = 0.249\nsamples = 721\nvalue = [105, 616]\nclass = Malicious"] ;
147 -> 149 ;
150 [label="emptystatement <= 0.5\ngini = 0.247\nsamples = 720\nvalue = [104, 616]\nclass = Malicious"] ;
149 -> 150 ;
151 [label="gini = 0.246\nsamples = 718\nvalue = [103, 615]\nclass = Malicious"] ;
150 -> 151 ;
152 [label="trystatement <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
150 -> 152 ;
153 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
152 -> 153 ;
154 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
152 -> 154 ;
155 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
149 -> 155 ;
156 [label="assignmentoperator <= 0.5\ngini = 0.485\nsamples = 264\nvalue = [109, 155]\nclass = Malicious"] ;
108 -> 156 ;
157 [label="emptystatement <= 0.5\ngini = 0.238\nsamples = 123\nvalue = [106, 17]\nclass = Benign"] ;
156 -> 157 ;
158 [label="gini = 0.0\nsamples = 106\nvalue = [106, 0]\nclass = Benign"] ;
157 -> 158 ;
159 [label="gini = 0.0\nsamples = 17\nvalue = [0, 17]\nclass = Malicious"] ;
157 -> 159 ;
160 [label="ifstatement <= 0.5\ngini = 0.042\nsamples = 141\nvalue = [3, 138]\nclass = Malicious"] ;
156 -> 160 ;
161 [label="emptystatement <= 0.5\ngini = 0.015\nsamples = 134\nvalue = [1, 133]\nclass = Malicious"] ;
160 -> 161 ;
162 [label="statementlist <= 0.5\ngini = 0.074\nsamples = 26\nvalue = [1, 25]\nclass = Malicious"] ;
161 -> 162 ;
163 [label="gini = 0.0\nsamples = 10\nvalue = [0, 10]\nclass = Malicious"] ;
162 -> 163 ;
164 [label="formalparameterlist <= 0.5\ngini = 0.117\nsamples = 16\nvalue = [1, 15]\nclass = Malicious"] ;
162 -> 164 ;
165 [label="gini = 0.219\nsamples = 8\nvalue = [1, 7]\nclass = Malicious"] ;
164 -> 165 ;
166 [label="gini = 0.0\nsamples = 8\nvalue = [0, 8]\nclass = Malicious"] ;
164 -> 166 ;
167 [label="gini = 0.0\nsamples = 108\nvalue = [0, 108]\nclass = Malicious"] ;
161 -> 167 ;
168 [label="emptystatement <= 0.5\ngini = 0.408\nsamples = 7\nvalue = [2, 5]\nclass = Malicious"] ;
160 -> 168 ;
169 [label="formalparameterlist <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [2, 1]\nclass = Benign"] ;
168 -> 169 ;
170 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
169 -> 170 ;
171 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
169 -> 171 ;
172 [label="gini = 0.0\nsamples = 4\nvalue = [0, 4]\nclass = Malicious"] ;
168 -> 172 ;
173 [label="functionbody <= 0.5\ngini = 0.035\nsamples = 3724\nvalue = [67, 3657]\nclass = Malicious"] ;
107 -> 173 ;
174 [label="ifstatement <= 0.5\ngini = 0.002\nsamples = 2855\nvalue = [3, 2852]\nclass = Malicious"] ;
173 -> 174 ;
175 [label="do_for_while_statement <= 0.5\ngini = 0.009\nsamples = 433\nvalue = [2, 431]\nclass = Malicious"] ;
174 -> 175 ;
176 [label="identifiername <= 0.5\ngini = 0.231\nsamples = 15\nvalue = [2, 13]\nclass = Malicious"] ;
175 -> 176 ;
177 [label="gini = 0.0\nsamples = 13\nvalue = [0, 13]\nclass = Malicious"] ;
176 -> 177 ;
178 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
176 -> 178 ;
179 [label="gini = 0.0\nsamples = 418\nvalue = [0, 418]\nclass = Malicious"] ;
175 -> 179 ;
180 [label="emptystatement <= 0.5\ngini = 0.001\nsamples = 2422\nvalue = [1, 2421]\nclass = Malicious"] ;
174 -> 180 ;
181 [label="block <= 0.5\ngini = 0.002\nsamples = 992\nvalue = [1, 991]\nclass = Malicious"] ;
180 -> 181 ;
182 [label="gini = 0.0\nsamples = 750\nvalue = [0, 750]\nclass = Malicious"] ;
181 -> 182 ;
183 [label="identifiername <= 0.5\ngini = 0.008\nsamples = 242\nvalue = [1, 241]\nclass = Malicious"] ;
181 -> 183 ;
184 [label="gini = 0.0\nsamples = 25\nvalue = [0, 25]\nclass = Malicious"] ;
183 -> 184 ;
185 [label="caseclause <= 0.5\ngini = 0.009\nsamples = 217\nvalue = [1, 216]\nclass = Malicious"] ;
183 -> 185 ;
186 [label="gini = 0.009\nsamples = 213\nvalue = [1, 212]\nclass = Malicious"] ;
185 -> 186 ;
187 [label="gini = 0.0\nsamples = 4\nvalue = [0, 4]\nclass = Malicious"] ;
185 -> 187 ;
188 [label="gini = 0.0\nsamples = 1430\nvalue = [0, 1430]\nclass = Malicious"] ;
180 -> 188 ;
189 [label="returnstatement <= 0.5\ngini = 0.136\nsamples = 869\nvalue = [64, 805]\nclass = Malicious"] ;
173 -> 189 ;
190 [label="emptystatement <= 0.5\ngini = 0.486\nsamples = 139\nvalue = [58, 81]\nclass = Malicious"] ;
189 -> 190 ;
191 [label="gini = 0.0\nsamples = 58\nvalue = [58, 0]\nclass = Benign"] ;
190 -> 191 ;
192 [label="gini = 0.0\nsamples = 81\nvalue = [0, 81]\nclass = Malicious"] ;
190 -> 192 ;
193 [label="breakstatement <= 0.5\ngini = 0.016\nsamples = 730\nvalue = [6, 724]\nclass = Malicious"] ;
189 -> 193 ;
194 [label="identifiername <= 0.5\ngini = 0.011\nsamples = 728\nvalue = [4, 724]\nclass = Malicious"] ;
193 -> 194 ;
195 [label="gini = 0.0\nsamples = 526\nvalue = [0, 526]\nclass = Malicious"] ;
194 -> 195 ;
196 [label="assignmentoperator <= 0.5\ngini = 0.039\nsamples = 202\nvalue = [4, 198]\nclass = Malicious"] ;
194 -> 196 ;
197 [label="formalparameterarg <= 0.5\ngini = 0.49\nsamples = 7\nvalue = [3, 4]\nclass = Malicious"] ;
196 -> 197 ;
198 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
197 -> 198 ;
199 [label="block <= 0.5\ngini = 0.32\nsamples = 5\nvalue = [1, 4]\nclass = Malicious"] ;
197 -> 199 ;
200 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
199 -> 200 ;
201 [label="gini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
199 -> 201 ;
202 [label="formalparameterarg <= 0.5\ngini = 0.01\nsamples = 195\nvalue = [1, 194]\nclass = Malicious"] ;
196 -> 202 ;
203 [label="gini = 0.0\nsamples = 194\nvalue = [0, 194]\nclass = Malicious"] ;
202 -> 203 ;
204 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
202 -> 204 ;
205 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
193 -> 205 ;
206 [label="do_for_while_statement <= 0.5\ngini = 0.248\nsamples = 10737\nvalue = [9178, 1559]\nclass = Benign"] ;
0 -> 206 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
207 [label="catchproduction <= 0.5\ngini = 0.0\nsamples = 8964\nvalue = [8962, 2]\nclass = Benign"] ;
206 -> 207 ;
208 [label="gini = 0.0\nsamples = 8860\nvalue = [8860, 0]\nclass = Benign"] ;
207 -> 208 ;
209 [label="arrayliteral <= 0.5\ngini = 0.038\nsamples = 104\nvalue = [102, 2]\nclass = Benign"] ;
207 -> 209 ;
210 [label="functionbody <= 0.5\ngini = 0.077\nsamples = 50\nvalue = [48, 2]\nclass = Benign"] ;
209 -> 210 ;
211 [label="variablestatement <= 0.5\ngini = 0.278\nsamples = 12\nvalue = [10, 2]\nclass = Benign"] ;
210 -> 211 ;
212 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
211 -> 212 ;
213 [label="numericliteral <= 0.5\ngini = 0.5\nsamples = 4\nvalue = [2, 2]\nclass = Benign"] ;
211 -> 213 ;
214 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
213 -> 214 ;
215 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
213 -> 215 ;
216 [label="gini = 0.0\nsamples = 38\nvalue = [38, 0]\nclass = Benign"] ;
210 -> 216 ;
217 [label="gini = 0.0\nsamples = 54\nvalue = [54, 0]\nclass = Benign"] ;
209 -> 217 ;
218 [label="identifiername <= 0.5\ngini = 0.214\nsamples = 1773\nvalue = [216, 1557]\nclass = Malicious"] ;
206 -> 218 ;
219 [label="gini = 0.0\nsamples = 1497\nvalue = [0, 1497]\nclass = Malicious"] ;
218 -> 219 ;
220 [label="trystatement <= 0.5\ngini = 0.34\nsamples = 276\nvalue = [216, 60]\nclass = Benign"] ;
218 -> 220 ;
221 [label="propertyname <= 0.5\ngini = 0.01\nsamples = 194\nvalue = [193, 1]\nclass = Benign"] ;
220 -> 221 ;
222 [label="emptystatement <= 0.5\ngini = 0.111\nsamples = 17\nvalue = [16, 1]\nclass = Benign"] ;
221 -> 222 ;
223 [label="gini = 0.0\nsamples = 16\nvalue = [16, 0]\nclass = Benign"] ;
222 -> 223 ;
224 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
222 -> 224 ;
225 [label="gini = 0.0\nsamples = 177\nvalue = [177, 0]\nclass = Benign"] ;
221 -> 225 ;
226 [label="defaultclause <= 0.5\ngini = 0.404\nsamples = 82\nvalue = [23, 59]\nclass = Malicious"] ;
220 -> 226 ;
227 [label="breakstatement <= 0.5\ngini = 0.489\nsamples = 54\nvalue = [23, 31]\nclass = Malicious"] ;
226 -> 227 ;
228 [label="gini = 0.0\nsamples = 20\nvalue = [20, 0]\nclass = Benign"] ;
227 -> 228 ;
229 [label="emptystatement <= 0.5\ngini = 0.161\nsamples = 34\nvalue = [3, 31]\nclass = Malicious"] ;
227 -> 229 ;
230 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
229 -> 230 ;
231 [label="gini = 0.0\nsamples = 31\nvalue = [0, 31]\nclass = Malicious"] ;
229 -> 231 ;
232 [label="gini = 0.0\nsamples = 28\nvalue = [0, 28]\nclass = Malicious"] ;
226 -> 232 ;
}
