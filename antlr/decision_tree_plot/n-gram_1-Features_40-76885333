digraph Tree {
node [shape=box] ;
0 [label="property_rules <= 0.5\ngini = 0.5\nsamples = 27000\nvalue = [13540, 13460]\nclass = Benign"] ;
1 [label="numericliteral <= 0.5\ngini = 0.403\nsamples = 16591\nvalue = [4644, 11947]\nclass = Malicious"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="expressionstatement <= 0.5\ngini = 0.49\nsamples = 7521\nvalue = [3240, 4281]\nclass = Malicious"] ;
1 -> 2 ;
3 [label="argument_stuff <= 0.5\ngini = 0.41\nsamples = 3967\nvalue = [1142, 2825]\nclass = Malicious"] ;
2 -> 3 ;
4 [label="sourceElement_stuff <= 0.5\ngini = 0.467\nsamples = 2992\nvalue = [1109, 1883]\nclass = Malicious"] ;
3 -> 4 ;
5 [label="gini = 0.391\nsamples = 2566\nvalue = [683, 1883]\nclass = Malicious"] ;
4 -> 5 ;
6 [label="gini = 0.0\nsamples = 426\nvalue = [426, 0]\nclass = Benign"] ;
4 -> 6 ;
7 [label="literal <= 0.5\ngini = 0.065\nsamples = 975\nvalue = [33, 942]\nclass = Malicious"] ;
3 -> 7 ;
8 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
7 -> 8 ;
9 [label="litereral_stuff <= 0.5\ngini = 0.048\nsamples = 966\nvalue = [24, 942]\nclass = Malicious"] ;
7 -> 9 ;
10 [label="expressionsequence <= 0.5\ngini = 0.043\nsamples = 963\nvalue = [21, 942]\nclass = Malicious"] ;
9 -> 10 ;
11 [label="identifiername <= 0.5\ngini = 0.084\nsamples = 480\nvalue = [21, 459]\nclass = Malicious"] ;
10 -> 11 ;
12 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
11 -> 12 ;
13 [label="gini = 0.069\nsamples = 476\nvalue = [17, 459]\nclass = Malicious"] ;
11 -> 13 ;
14 [label="gini = 0.0\nsamples = 483\nvalue = [0, 483]\nclass = Malicious"] ;
10 -> 14 ;
15 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
9 -> 15 ;
16 [label="variable_stuff <= 0.5\ngini = 0.484\nsamples = 3554\nvalue = [2098, 1456]\nclass = Benign"] ;
2 -> 16 ;
17 [label="identifiername <= 0.5\ngini = 0.341\nsamples = 1998\nvalue = [1563, 435]\nclass = Benign"] ;
16 -> 17 ;
18 [label="gini = 0.0\nsamples = 352\nvalue = [352, 0]\nclass = Benign"] ;
17 -> 18 ;
19 [label="litereral_stuff <= 0.5\ngini = 0.389\nsamples = 1646\nvalue = [1211, 435]\nclass = Benign"] ;
17 -> 19 ;
20 [label="ifstatement <= 0.5\ngini = 0.441\nsamples = 1323\nvalue = [888, 435]\nclass = Benign"] ;
19 -> 20 ;
21 [label="argument_stuff <= 0.5\ngini = 0.461\nsamples = 1208\nvalue = [773, 435]\nclass = Benign"] ;
20 -> 21 ;
22 [label="gini = 0.0\nsamples = 85\nvalue = [85, 0]\nclass = Benign"] ;
21 -> 22 ;
23 [label="literal <= 0.5\ngini = 0.475\nsamples = 1123\nvalue = [688, 435]\nclass = Benign"] ;
21 -> 23 ;
24 [label="gini = 0.0\nsamples = 46\nvalue = [46, 0]\nclass = Benign"] ;
23 -> 24 ;
25 [label="formalparameterlist <= 0.5\ngini = 0.482\nsamples = 1077\nvalue = [642, 435]\nclass = Benign"] ;
23 -> 25 ;
26 [label="returnstatement <= 0.5\ngini = 0.484\nsamples = 1059\nvalue = [624, 435]\nclass = Benign"] ;
25 -> 26 ;
27 [label="trystatement <= 0.5\ngini = 0.484\nsamples = 1057\nvalue = [622, 435]\nclass = Benign"] ;
26 -> 27 ;
28 [label="assignmentoperator <= 0.5\ngini = 0.484\nsamples = 1056\nvalue = [621, 435]\nclass = Benign"] ;
27 -> 28 ;
29 [label="gini = 0.485\nsamples = 1055\nvalue = [620, 435]\nclass = Benign"] ;
28 -> 29 ;
30 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
28 -> 30 ;
31 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
27 -> 31 ;
32 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
26 -> 32 ;
33 [label="gini = 0.0\nsamples = 18\nvalue = [18, 0]\nclass = Benign"] ;
25 -> 33 ;
34 [label="gini = 0.0\nsamples = 115\nvalue = [115, 0]\nclass = Benign"] ;
20 -> 34 ;
35 [label="gini = 0.0\nsamples = 323\nvalue = [323, 0]\nclass = Benign"] ;
19 -> 35 ;
36 [label="identifiername <= 0.5\ngini = 0.451\nsamples = 1556\nvalue = [535, 1021]\nclass = Malicious"] ;
16 -> 36 ;
37 [label="argument_stuff <= 0.5\ngini = 0.09\nsamples = 828\nvalue = [39, 789]\nclass = Malicious"] ;
36 -> 37 ;
38 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = Benign"] ;
37 -> 38 ;
39 [label="withstatement <= 0.5\ngini = 0.077\nsamples = 822\nvalue = [33, 789]\nclass = Malicious"] ;
37 -> 39 ;
40 [label="element_stuff <= 0.5\ngini = 0.075\nsamples = 821\nvalue = [32, 789]\nclass = Malicious"] ;
39 -> 40 ;
41 [label="assignmentoperator <= 0.5\ngini = 0.073\nsamples = 820\nvalue = [31, 789]\nclass = Malicious"] ;
40 -> 41 ;
42 [label="gini = 0.078\nsamples = 734\nvalue = [30, 704]\nclass = Malicious"] ;
41 -> 42 ;
43 [label="returnstatement <= 0.5\ngini = 0.023\nsamples = 86\nvalue = [1, 85]\nclass = Malicious"] ;
41 -> 43 ;
44 [label="gini = 0.0\nsamples = 63\nvalue = [0, 63]\nclass = Malicious"] ;
43 -> 44 ;
45 [label="gini = 0.083\nsamples = 23\nvalue = [1, 22]\nclass = Malicious"] ;
43 -> 45 ;
46 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
40 -> 46 ;
47 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
39 -> 47 ;
48 [label="returnstatement <= 0.5\ngini = 0.434\nsamples = 728\nvalue = [496, 232]\nclass = Benign"] ;
36 -> 48 ;
49 [label="element_stuff <= 0.5\ngini = 0.013\nsamples = 472\nvalue = [469, 3]\nclass = Benign"] ;
48 -> 49 ;
50 [label="ifstatement <= 0.5\ngini = 0.009\nsamples = 459\nvalue = [457, 2]\nclass = Benign"] ;
49 -> 50 ;
51 [label="assignmentoperator <= 0.5\ngini = 0.006\nsamples = 361\nvalue = [360, 1]\nclass = Benign"] ;
50 -> 51 ;
52 [label="argument_stuff <= 0.5\ngini = 0.007\nsamples = 272\nvalue = [271, 1]\nclass = Benign"] ;
51 -> 52 ;
53 [label="gini = 0.0\nsamples = 66\nvalue = [66, 0]\nclass = Benign"] ;
52 -> 53 ;
54 [label="formalParameterArg_stuff <= 0.5\ngini = 0.01\nsamples = 206\nvalue = [205, 1]\nclass = Benign"] ;
52 -> 54 ;
55 [label="litereral_stuff <= 0.5\ngini = 0.011\nsamples = 188\nvalue = [187, 1]\nclass = Benign"] ;
54 -> 55 ;
56 [label="literal <= 0.5\ngini = 0.011\nsamples = 179\nvalue = [178, 1]\nclass = Benign"] ;
55 -> 56 ;
57 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
56 -> 57 ;
58 [label="trystatement <= 0.5\ngini = 0.011\nsamples = 176\nvalue = [175, 1]\nclass = Benign"] ;
56 -> 58 ;
59 [label="gini = 0.011\nsamples = 174\nvalue = [173, 1]\nclass = Benign"] ;
58 -> 59 ;
60 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
58 -> 60 ;
61 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
55 -> 61 ;
62 [label="gini = 0.0\nsamples = 18\nvalue = [18, 0]\nclass = Benign"] ;
54 -> 62 ;
63 [label="gini = 0.0\nsamples = 89\nvalue = [89, 0]\nclass = Benign"] ;
51 -> 63 ;
64 [label="formalparameterlist <= 0.5\ngini = 0.02\nsamples = 98\nvalue = [97, 1]\nclass = Benign"] ;
50 -> 64 ;
65 [label="litereral_stuff <= 0.5\ngini = 0.024\nsamples = 84\nvalue = [83, 1]\nclass = Benign"] ;
64 -> 65 ;
66 [label="assignmentoperator <= 0.5\ngini = 0.025\nsamples = 80\nvalue = [79, 1]\nclass = Benign"] ;
65 -> 66 ;
67 [label="argument_stuff <= 0.5\ngini = 0.025\nsamples = 78\nvalue = [77, 1]\nclass = Benign"] ;
66 -> 67 ;
68 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
67 -> 68 ;
69 [label="gini = 0.026\nsamples = 77\nvalue = [76, 1]\nclass = Benign"] ;
67 -> 69 ;
70 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
66 -> 70 ;
71 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = Benign"] ;
65 -> 71 ;
72 [label="gini = 0.0\nsamples = 14\nvalue = [14, 0]\nclass = Benign"] ;
64 -> 72 ;
73 [label="ifstatement <= 0.5\ngini = 0.142\nsamples = 13\nvalue = [12, 1]\nclass = Benign"] ;
49 -> 73 ;
74 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
73 -> 74 ;
75 [label="formalParameterArg_stuff <= 0.5\ngini = 0.32\nsamples = 5\nvalue = [4, 1]\nclass = Benign"] ;
73 -> 75 ;
76 [label="gini = 0.444\nsamples = 3\nvalue = [2, 1]\nclass = Benign"] ;
75 -> 76 ;
77 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
75 -> 77 ;
78 [label="ifstatement <= 0.5\ngini = 0.189\nsamples = 256\nvalue = [27, 229]\nclass = Malicious"] ;
48 -> 78 ;
79 [label="litereral_stuff <= 0.5\ngini = 0.135\nsamples = 247\nvalue = [18, 229]\nclass = Malicious"] ;
78 -> 79 ;
80 [label="formalparameterlist <= 0.5\ngini = 0.102\nsamples = 242\nvalue = [13, 229]\nclass = Malicious"] ;
79 -> 80 ;
81 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
80 -> 81 ;
82 [label="catchproduction <= 0.5\ngini = 0.08\nsamples = 239\nvalue = [10, 229]\nclass = Malicious"] ;
80 -> 82 ;
83 [label="gini = 0.073\nsamples = 238\nvalue = [9, 229]\nclass = Malicious"] ;
82 -> 83 ;
84 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
82 -> 84 ;
85 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
79 -> 85 ;
86 [label="gini = 0.0\nsamples = 9\nvalue = [9, 0]\nclass = Benign"] ;
78 -> 86 ;
87 [label="expressionstatement <= 0.5\ngini = 0.262\nsamples = 9070\nvalue = [1404, 7666]\nclass = Malicious"] ;
1 -> 87 ;
88 [label="gini = 0.0\nsamples = 255\nvalue = [255, 0]\nclass = Benign"] ;
87 -> 88 ;
89 [label="element_stuff <= 0.5\ngini = 0.227\nsamples = 8815\nvalue = [1149, 7666]\nclass = Malicious"] ;
87 -> 89 ;
90 [label="litereral_stuff <= 0.5\ngini = 0.317\nsamples = 4907\nvalue = [971, 3936]\nclass = Malicious"] ;
89 -> 90 ;
91 [label="returnstatement <= 0.5\ngini = 0.28\nsamples = 4722\nvalue = [794, 3928]\nclass = Malicious"] ;
90 -> 91 ;
92 [label="argument_stuff <= 0.5\ngini = 0.405\nsamples = 2379\nvalue = [671, 1708]\nclass = Malicious"] ;
91 -> 92 ;
93 [label="gini = 0.0\nsamples = 117\nvalue = [117, 0]\nclass = Benign"] ;
92 -> 93 ;
94 [label="formalParameterArg_stuff <= 0.5\ngini = 0.37\nsamples = 2262\nvalue = [554, 1708]\nclass = Malicious"] ;
92 -> 94 ;
95 [label="identifiername <= 0.5\ngini = 0.343\nsamples = 2176\nvalue = [479, 1697]\nclass = Malicious"] ;
94 -> 95 ;
96 [label="variable_stuff <= 0.5\ngini = 0.163\nsamples = 659\nvalue = [59, 600]\nclass = Malicious"] ;
95 -> 96 ;
97 [label="ifstatement <= 0.5\ngini = 0.311\nsamples = 166\nvalue = [32, 134]\nclass = Malicious"] ;
96 -> 97 ;
98 [label="gini = 0.0\nsamples = 32\nvalue = [32, 0]\nclass = Benign"] ;
97 -> 98 ;
99 [label="gini = 0.0\nsamples = 134\nvalue = [0, 134]\nclass = Malicious"] ;
97 -> 99 ;
100 [label="catchproduction <= 0.5\ngini = 0.104\nsamples = 493\nvalue = [27, 466]\nclass = Malicious"] ;
96 -> 100 ;
101 [label="ifstatement <= 0.5\ngini = 0.112\nsamples = 454\nvalue = [27, 427]\nclass = Malicious"] ;
100 -> 101 ;
102 [label="assignmentoperator <= 0.5\ngini = 0.108\nsamples = 453\nvalue = [26, 427]\nclass = Malicious"] ;
101 -> 102 ;
103 [label="gini = 0.108\nsamples = 452\nvalue = [26, 426]\nclass = Malicious"] ;
102 -> 103 ;
104 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
102 -> 104 ;
105 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
101 -> 105 ;
106 [label="gini = 0.0\nsamples = 39\nvalue = [0, 39]\nclass = Malicious"] ;
100 -> 106 ;
107 [label="catchproduction <= 0.5\ngini = 0.4\nsamples = 1517\nvalue = [420, 1097]\nclass = Malicious"] ;
95 -> 107 ;
108 [label="do_for_while_statement <= 0.5\ngini = 0.42\nsamples = 1385\nvalue = [415, 970]\nclass = Malicious"] ;
107 -> 108 ;
109 [label="ifstatement <= 0.5\ngini = 0.395\nsamples = 1305\nvalue = [354, 951]\nclass = Malicious"] ;
108 -> 109 ;
110 [label="varmodifier <= 0.5\ngini = 0.44\nsamples = 724\nvalue = [237, 487]\nclass = Malicious"] ;
109 -> 110 ;
111 [label="gini = 0.495\nsamples = 277\nvalue = [153, 124]\nclass = Benign"] ;
110 -> 111 ;
112 [label="assignmentoperator <= 0.5\ngini = 0.305\nsamples = 447\nvalue = [84, 363]\nclass = Malicious"] ;
110 -> 112 ;
113 [label="gini = 0.304\nsamples = 444\nvalue = [83, 361]\nclass = Malicious"] ;
112 -> 113 ;
114 [label="gini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
112 -> 114 ;
115 [label="assignmentoperator <= 0.5\ngini = 0.322\nsamples = 581\nvalue = [117, 464]\nclass = Malicious"] ;
109 -> 115 ;
116 [label="varmodifier <= 0.5\ngini = 0.31\nsamples = 574\nvalue = [110, 464]\nclass = Malicious"] ;
115 -> 116 ;
117 [label="gini = 0.254\nsamples = 348\nvalue = [52, 296]\nclass = Malicious"] ;
116 -> 117 ;
118 [label="continue_break_statement <= 0.5\ngini = 0.382\nsamples = 226\nvalue = [58, 168]\nclass = Malicious"] ;
116 -> 118 ;
119 [label="gini = 0.378\nsamples = 225\nvalue = [57, 168]\nclass = Malicious"] ;
118 -> 119 ;
120 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
118 -> 120 ;
121 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
115 -> 121 ;
122 [label="assignmentoperator <= 0.5\ngini = 0.362\nsamples = 80\nvalue = [61, 19]\nclass = Benign"] ;
108 -> 122 ;
123 [label="gini = 0.0\nsamples = 61\nvalue = [61, 0]\nclass = Benign"] ;
122 -> 123 ;
124 [label="gini = 0.0\nsamples = 19\nvalue = [0, 19]\nclass = Malicious"] ;
122 -> 124 ;
125 [label="varmodifier <= 0.5\ngini = 0.073\nsamples = 132\nvalue = [5, 127]\nclass = Malicious"] ;
107 -> 125 ;
126 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
125 -> 126 ;
127 [label="do_for_while_statement <= 0.5\ngini = 0.045\nsamples = 130\nvalue = [3, 127]\nclass = Malicious"] ;
125 -> 127 ;
128 [label="ifstatement <= 0.5\ngini = 0.278\nsamples = 12\nvalue = [2, 10]\nclass = Malicious"] ;
127 -> 128 ;
129 [label="gini = 0.5\nsamples = 4\nvalue = [2, 2]\nclass = Benign"] ;
128 -> 129 ;
130 [label="gini = 0.0\nsamples = 8\nvalue = [0, 8]\nclass = Malicious"] ;
128 -> 130 ;
131 [label="ifstatement <= 0.5\ngini = 0.017\nsamples = 118\nvalue = [1, 117]\nclass = Malicious"] ;
127 -> 131 ;
132 [label="gini = 0.0\nsamples = 101\nvalue = [0, 101]\nclass = Malicious"] ;
131 -> 132 ;
133 [label="assignmentoperator <= 0.5\ngini = 0.111\nsamples = 17\nvalue = [1, 16]\nclass = Malicious"] ;
131 -> 133 ;
134 [label="gini = 0.0\nsamples = 16\nvalue = [0, 16]\nclass = Malicious"] ;
133 -> 134 ;
135 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
133 -> 135 ;
136 [label="ifstatement <= 0.5\ngini = 0.223\nsamples = 86\nvalue = [75, 11]\nclass = Benign"] ;
94 -> 136 ;
137 [label="variable_stuff <= 0.5\ngini = 0.471\nsamples = 29\nvalue = [18, 11]\nclass = Benign"] ;
136 -> 137 ;
138 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
137 -> 138 ;
139 [label="do_for_while_statement <= 0.5\ngini = 0.499\nsamples = 21\nvalue = [10, 11]\nclass = Malicious"] ;
137 -> 139 ;
140 [label="gini = 0.495\nsamples = 20\nvalue = [9, 11]\nclass = Malicious"] ;
139 -> 140 ;
141 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
139 -> 141 ;
142 [label="gini = 0.0\nsamples = 57\nvalue = [57, 0]\nclass = Benign"] ;
136 -> 142 ;
143 [label="do_for_while_statement <= 0.5\ngini = 0.099\nsamples = 2343\nvalue = [123, 2220]\nclass = Malicious"] ;
91 -> 143 ;
144 [label="identifiername <= 0.5\ngini = 0.09\nsamples = 2302\nvalue = [109, 2193]\nclass = Malicious"] ;
143 -> 144 ;
145 [label="gini = 0.0\nsamples = 721\nvalue = [0, 721]\nclass = Malicious"] ;
144 -> 145 ;
146 [label="formalParameterArg_stuff <= 0.5\ngini = 0.128\nsamples = 1581\nvalue = [109, 1472]\nclass = Malicious"] ;
144 -> 146 ;
147 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = Benign"] ;
146 -> 147 ;
148 [label="variable_stuff <= 0.5\ngini = 0.123\nsamples = 1576\nvalue = [104, 1472]\nclass = Malicious"] ;
146 -> 148 ;
149 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
148 -> 149 ;
150 [label="assignmentoperator <= 0.5\ngini = 0.122\nsamples = 1575\nvalue = [103, 1472]\nclass = Malicious"] ;
148 -> 150 ;
151 [label="clause_stuff <= 0.5\ngini = 0.121\nsamples = 1574\nvalue = [102, 1472]\nclass = Malicious"] ;
150 -> 151 ;
152 [label="ifstatement <= 0.5\ngini = 0.12\nsamples = 1573\nvalue = [101, 1472]\nclass = Malicious"] ;
151 -> 152 ;
153 [label="gini = 0.0\nsamples = 14\nvalue = [0, 14]\nclass = Malicious"] ;
152 -> 153 ;
154 [label="gini = 0.121\nsamples = 1559\nvalue = [101, 1458]\nclass = Malicious"] ;
152 -> 154 ;
155 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
151 -> 155 ;
156 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
150 -> 156 ;
157 [label="identifiername <= 0.5\ngini = 0.45\nsamples = 41\nvalue = [14, 27]\nclass = Malicious"] ;
143 -> 157 ;
158 [label="gini = 0.0\nsamples = 24\nvalue = [0, 24]\nclass = Malicious"] ;
157 -> 158 ;
159 [label="catchproduction <= 0.5\ngini = 0.291\nsamples = 17\nvalue = [14, 3]\nclass = Benign"] ;
157 -> 159 ;
160 [label="assignmentoperator <= 0.5\ngini = 0.124\nsamples = 15\nvalue = [14, 1]\nclass = Benign"] ;
159 -> 160 ;
161 [label="gini = 0.0\nsamples = 11\nvalue = [11, 0]\nclass = Benign"] ;
160 -> 161 ;
162 [label="continue_break_statement <= 0.5\ngini = 0.375\nsamples = 4\nvalue = [3, 1]\nclass = Benign"] ;
160 -> 162 ;
163 [label="formalparameterlist <= 0.5\ngini = 0.444\nsamples = 3\nvalue = [2, 1]\nclass = Benign"] ;
162 -> 163 ;
164 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
163 -> 164 ;
165 [label="gini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
163 -> 165 ;
166 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
162 -> 166 ;
167 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
159 -> 167 ;
168 [label="trystatement <= 0.5\ngini = 0.083\nsamples = 185\nvalue = [177, 8]\nclass = Benign"] ;
90 -> 168 ;
169 [label="assignmentoperator <= 0.5\ngini = 0.025\nsamples = 160\nvalue = [158, 2]\nclass = Benign"] ;
168 -> 169 ;
170 [label="gini = 0.0\nsamples = 156\nvalue = [156, 0]\nclass = Benign"] ;
169 -> 170 ;
171 [label="ifstatement <= 0.5\ngini = 0.5\nsamples = 4\nvalue = [2, 2]\nclass = Benign"] ;
169 -> 171 ;
172 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
171 -> 172 ;
173 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
171 -> 173 ;
174 [label="identifiername <= 0.5\ngini = 0.365\nsamples = 25\nvalue = [19, 6]\nclass = Benign"] ;
168 -> 174 ;
175 [label="gini = 0.0\nsamples = 6\nvalue = [0, 6]\nclass = Malicious"] ;
174 -> 175 ;
176 [label="gini = 0.0\nsamples = 19\nvalue = [19, 0]\nclass = Benign"] ;
174 -> 176 ;
177 [label="argument_stuff <= 0.5\ngini = 0.087\nsamples = 3908\nvalue = [178, 3730]\nclass = Malicious"] ;
89 -> 177 ;
178 [label="gini = 0.0\nsamples = 82\nvalue = [82, 0]\nclass = Benign"] ;
177 -> 178 ;
179 [label="varmodifier <= 0.5\ngini = 0.049\nsamples = 3826\nvalue = [96, 3730]\nclass = Malicious"] ;
177 -> 179 ;
180 [label="identifiername <= 0.5\ngini = 0.165\nsamples = 22\nvalue = [20, 2]\nclass = Benign"] ;
179 -> 180 ;
181 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
180 -> 181 ;
182 [label="gini = 0.0\nsamples = 20\nvalue = [20, 0]\nclass = Benign"] ;
180 -> 182 ;
183 [label="do_for_while_statement <= 0.5\ngini = 0.039\nsamples = 3804\nvalue = [76, 3728]\nclass = Malicious"] ;
179 -> 183 ;
184 [label="ifstatement <= 0.5\ngini = 0.078\nsamples = 1733\nvalue = [70, 1663]\nclass = Malicious"] ;
183 -> 184 ;
185 [label="identifiername <= 0.5\ngini = 0.371\nsamples = 61\nvalue = [46, 15]\nclass = Benign"] ;
184 -> 185 ;
186 [label="gini = 0.133\nsamples = 14\nvalue = [1, 13]\nclass = Malicious"] ;
185 -> 186 ;
187 [label="formalparameterlist <= 0.5\ngini = 0.081\nsamples = 47\nvalue = [45, 2]\nclass = Benign"] ;
185 -> 187 ;
188 [label="gini = 0.0\nsamples = 45\nvalue = [45, 0]\nclass = Benign"] ;
187 -> 188 ;
189 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = Malicious"] ;
187 -> 189 ;
190 [label="identifiername <= 0.5\ngini = 0.028\nsamples = 1672\nvalue = [24, 1648]\nclass = Malicious"] ;
184 -> 190 ;
191 [label="gini = 0.0\nsamples = 833\nvalue = [0, 833]\nclass = Malicious"] ;
190 -> 191 ;
192 [label="formalParameterArg_stuff <= 0.5\ngini = 0.056\nsamples = 839\nvalue = [24, 815]\nclass = Malicious"] ;
190 -> 192 ;
193 [label="assignmentoperator <= 0.5\ngini = 0.047\nsamples = 833\nvalue = [20, 813]\nclass = Malicious"] ;
192 -> 193 ;
194 [label="returnstatement <= 0.5\ngini = 0.056\nsamples = 699\nvalue = [20, 679]\nclass = Malicious"] ;
193 -> 194 ;
195 [label="catchproduction <= 0.5\ngini = 0.053\nsamples = 698\nvalue = [19, 679]\nclass = Malicious"] ;
194 -> 195 ;
196 [label="continue_break_statement <= 0.5\ngini = 0.054\nsamples = 647\nvalue = [18, 629]\nclass = Malicious"] ;
195 -> 196 ;
197 [label="gini = 0.054\nsamples = 643\nvalue = [18, 625]\nclass = Malicious"] ;
196 -> 197 ;
198 [label="gini = 0.0\nsamples = 4\nvalue = [0, 4]\nclass = Malicious"] ;
196 -> 198 ;
199 [label="gini = 0.038\nsamples = 51\nvalue = [1, 50]\nclass = Malicious"] ;
195 -> 199 ;
200 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
194 -> 200 ;
201 [label="gini = 0.0\nsamples = 134\nvalue = [0, 134]\nclass = Malicious"] ;
193 -> 201 ;
202 [label="returnstatement <= 0.5\ngini = 0.444\nsamples = 6\nvalue = [4, 2]\nclass = Benign"] ;
192 -> 202 ;
203 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = Benign"] ;
202 -> 203 ;
204 [label="gini = 0.444\nsamples = 3\nvalue = [1, 2]\nclass = Malicious"] ;
202 -> 204 ;
205 [label="formalParameterArg_stuff <= 0.5\ngini = 0.006\nsamples = 2071\nvalue = [6, 2065]\nclass = Malicious"] ;
183 -> 205 ;
206 [label="assignmentoperator <= 0.5\ngini = 0.005\nsamples = 2069\nvalue = [5, 2064]\nclass = Malicious"] ;
205 -> 206 ;
207 [label="ifstatement <= 0.5\ngini = 0.008\nsamples = 1255\nvalue = [5, 1250]\nclass = Malicious"] ;
206 -> 207 ;
208 [label="gini = 0.0\nsamples = 792\nvalue = [0, 792]\nclass = Malicious"] ;
207 -> 208 ;
209 [label="catchproduction <= 0.5\ngini = 0.021\nsamples = 463\nvalue = [5, 458]\nclass = Malicious"] ;
207 -> 209 ;
210 [label="gini = 0.032\nsamples = 306\nvalue = [5, 301]\nclass = Malicious"] ;
209 -> 210 ;
211 [label="gini = 0.0\nsamples = 157\nvalue = [0, 157]\nclass = Malicious"] ;
209 -> 211 ;
212 [label="gini = 0.0\nsamples = 814\nvalue = [0, 814]\nclass = Malicious"] ;
206 -> 212 ;
213 [label="continue_break_statement <= 0.5\ngini = 0.5\nsamples = 2\nvalue = [1, 1]\nclass = Benign"] ;
205 -> 213 ;
214 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
213 -> 214 ;
215 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = Malicious"] ;
213 -> 215 ;
216 [label="do_for_while_statement <= 0.5\ngini = 0.248\nsamples = 10409\nvalue = [8896, 1513]\nclass = Benign"] ;
0 -> 216 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
217 [label="catchproduction <= 0.5\ngini = 0.001\nsamples = 8660\nvalue = [8657, 3]\nclass = Benign"] ;
216 -> 217 ;
218 [label="gini = 0.0\nsamples = 8570\nvalue = [8570, 0]\nclass = Benign"] ;
217 -> 218 ;
219 [label="ifstatement <= 0.5\ngini = 0.064\nsamples = 90\nvalue = [87, 3]\nclass = Benign"] ;
217 -> 219 ;
220 [label="gini = 0.0\nsamples = 42\nvalue = [42, 0]\nclass = Benign"] ;
219 -> 220 ;
221 [label="variable_stuff <= 0.5\ngini = 0.117\nsamples = 48\nvalue = [45, 3]\nclass = Benign"] ;
219 -> 221 ;
222 [label="gini = 0.0\nsamples = 13\nvalue = [13, 0]\nclass = Benign"] ;
221 -> 222 ;
223 [label="formalParameterArg_stuff <= 0.5\ngini = 0.157\nsamples = 35\nvalue = [32, 3]\nclass = Benign"] ;
221 -> 223 ;
224 [label="element_stuff <= 0.5\ngini = 0.198\nsamples = 27\nvalue = [24, 3]\nclass = Benign"] ;
223 -> 224 ;
225 [label="numericliteral <= 0.5\ngini = 0.298\nsamples = 11\nvalue = [9, 2]\nclass = Benign"] ;
224 -> 225 ;
226 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
225 -> 226 ;
227 [label="assignmentoperator <= 0.5\ngini = 0.32\nsamples = 10\nvalue = [8, 2]\nclass = Benign"] ;
225 -> 227 ;
228 [label="gini = 0.346\nsamples = 9\nvalue = [7, 2]\nclass = Benign"] ;
227 -> 228 ;
229 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
227 -> 229 ;
230 [label="numericliteral <= 0.5\ngini = 0.117\nsamples = 16\nvalue = [15, 1]\nclass = Benign"] ;
224 -> 230 ;
231 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = Benign"] ;
230 -> 231 ;
232 [label="gini = 0.133\nsamples = 14\nvalue = [13, 1]\nclass = Benign"] ;
230 -> 232 ;
233 [label="gini = 0.0\nsamples = 8\nvalue = [8, 0]\nclass = Benign"] ;
223 -> 233 ;
234 [label="identifiername <= 0.5\ngini = 0.236\nsamples = 1749\nvalue = [239, 1510]\nclass = Malicious"] ;
216 -> 234 ;
235 [label="gini = 0.0\nsamples = 1454\nvalue = [0, 1454]\nclass = Malicious"] ;
234 -> 235 ;
236 [label="catchproduction <= 0.5\ngini = 0.308\nsamples = 295\nvalue = [239, 56]\nclass = Benign"] ;
234 -> 236 ;
237 [label="gini = 0.0\nsamples = 216\nvalue = [216, 0]\nclass = Benign"] ;
236 -> 237 ;
238 [label="assignmentoperator <= 0.5\ngini = 0.413\nsamples = 79\nvalue = [23, 56]\nclass = Malicious"] ;
236 -> 238 ;
239 [label="continue_break_statement <= 0.5\ngini = 0.401\nsamples = 18\nvalue = [13, 5]\nclass = Benign"] ;
238 -> 239 ;
240 [label="gini = 0.0\nsamples = 12\nvalue = [12, 0]\nclass = Benign"] ;
239 -> 240 ;
241 [label="formalParameterArg_stuff <= 0.5\ngini = 0.278\nsamples = 6\nvalue = [1, 5]\nclass = Malicious"] ;
239 -> 241 ;
242 [label="gini = 0.0\nsamples = 5\nvalue = [0, 5]\nclass = Malicious"] ;
241 -> 242 ;
243 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
241 -> 243 ;
244 [label="finallyproduction <= 0.5\ngini = 0.274\nsamples = 61\nvalue = [10, 51]\nclass = Malicious"] ;
238 -> 244 ;
245 [label="continue_break_statement <= 0.5\ngini = 0.408\nsamples = 35\nvalue = [10, 25]\nclass = Malicious"] ;
244 -> 245 ;
246 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0]\nclass = Benign"] ;
245 -> 246 ;
247 [label="throwstatement <= 0.5\ngini = 0.191\nsamples = 28\nvalue = [3, 25]\nclass = Malicious"] ;
245 -> 247 ;
248 [label="gini = 0.137\nsamples = 27\nvalue = [2, 25]\nclass = Malicious"] ;
247 -> 248 ;
249 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0]\nclass = Benign"] ;
247 -> 249 ;
250 [label="gini = 0.0\nsamples = 26\nvalue = [0, 26]\nclass = Malicious"] ;
244 -> 250 ;
}
