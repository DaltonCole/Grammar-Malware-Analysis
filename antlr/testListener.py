# Generated from Python3.g4 by ANTLR 4.5.1
from antlr4 import *
if __name__ is not None and "." in __name__:
    from .Python3Parser import Python3Parser
else:
    from Python3Parser import Python3Parser

# This class defines a complete listener for a parse tree produced by Python3Parser.
class Python3Listener(ParseTreeListener):
    def __init__(self):
        super()
        self.rule_uses = {}
        self.rule_uses['Single_input'] = 0
        self.rule_uses['File_input'] = 0
        self.rule_uses['Eval_input'] = 0

    # Enter a parse tree produced by Python3Parser#single_input.
    def enterSingle_input(self, ctx:Python3Parser.Single_inputContext):
        self.rule_uses['Single_input'] += 1
        pass

    # Exit a parse tree produced by Python3Parser#single_input.
    def exitSingle_input(self, ctx:Python3Parser.Single_inputContext):
        pass


    # Enter a parse tree produced by Python3Parser#file_input.
    def enterFile_input(self, ctx:Python3Parser.File_inputContext):
        self.rule_uses['File_input'] += 1
        pass

    # Exit a parse tree produced by Python3Parser#file_input.
    def exitFile_input(self, ctx:Python3Parser.File_inputContext):
        pass


    # Enter a parse tree produced by Python3Parser#eval_input.
    def enterEval_input(self, ctx:Python3Parser.Eval_inputContext):
        self.rule_uses['Eval_input'] += 1
        pass

    # Exit a parse tree produced by Python3Parser#eval_input.
    def exitEval_input(self, ctx:Python3Parser.Eval_inputContext):
        pass